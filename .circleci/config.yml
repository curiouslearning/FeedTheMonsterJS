version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.2.0
  # aws-s3: circleci/aws-s3@4.1.1
  aws-s3: circleci/aws-s3@3.0
  node: circleci/node@7.0.0
  
commands:
  build-and-deploy:
    parameters:
      to:
        type: string
        default: 's3://feedthemonster-development'
    steps:
      - checkout
      - run: sudo npm install -g npm@latest
      - node/install-packages
      - run: npm run build
      # - aws-cli/setup:
      #     aws_access_key_id: AWS_ACCESS_KEY
      #     region: AWS_DEFAULT_REGION
      #     aws_secret_access_key: AWS_SECRET_ACCESS_KEY
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: AWS_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: ./build/
          to: << parameters.to >>
  invalidate-cloudfront-cache:
    parameters:
      distribution-id:
        type: string
        default: ''
      paths:
        type: string
        default: '/*'
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run: |
          aws cloudfront create-invalidation \
          --distribution-id << parameters.distribution-id >> \
          --paths << parameters.paths >>

jobs:
  build-and-deploy-dev:
    docker:
      - image: cimg/python:3.13.2-node
    steps:
      - build-and-deploy:
          to: 's3://feedthemonster-development'

  build-and-deploy-test:
    docker:
      - image: cimg/python:3.13.2-node
    steps:
      - build-and-deploy:
          to: 's3://globallit-aws-s3-static-webapp-test-us-east-2/feed-the-monster'
  
  build-and-deploy-prod:
    docker:
      - image: cimg/python:3.13.2-node
    steps:
      - build-and-deploy:
          to: 's3://feedthemonster-production'

  invalidate-cloudfront-cache-prod:
    docker:
      - image: cimg/python:3.13.2-node
    steps:
      - invalidate-cloudfront-cache:
          distribution-id: 'E2QD6IZIYBGTJK'
          paths: '"/src"'

# http://curious-reader-books-production.s3-website.ap-south-1.amazonaws.com/

workflows:
  test-invalidation:
    jobs:
      - invalidate-cloudfront-cache-prod

  s3-deploy-workflow:
    jobs:
      - node/test
      - build-and-deploy-dev:
          context:
            - aws-context
          filters:
            branches:
              only:
                - develop
      - build-and-deploy-test:
          context:
            - aws-context
          filters:
            branches:
              only:
                - test
      - build-and-deploy-prod:
          context:
            - aws-context
          filters:
            branches:
              only:
                - main
