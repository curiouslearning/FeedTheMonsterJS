/*! For license information please see feedTheMonster.js.LICENSE.txt */
(()=>{"use strict";var e={"./node_modules/@firebase/util/dist/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{CONSTANTS:()=>a,DecodeBase64StringError:()=>o,Deferred:()=>v,ErrorFactory:()=>z,FirebaseError:()=>M,MAX_VALUE_MILLIS:()=>pe,RANDOM_FACTOR:()=>ge,Sha1:()=>xe,areCookiesEnabled:()=>B,assert:()=>i,assertionError:()=>s,async:()=>se,base64:()=>n,base64Decode:()=>c,base64Encode:()=>r,base64urlEncodeWithoutPadding:()=>d,calculateBackoffMillis:()=>me,contains:()=>Y,createMockUserToken:()=>w,createSubscribe:()=>ae,decode:()=>U,deepCopy:()=>l,deepEqual:()=>q,deepExtend:()=>h,errorPrefix:()=>oe,extractQuerystring:()=>te,getDefaultAppConfig:()=>g,getDefaultEmulatorHost:()=>u,getDefaultEmulatorHostnameAndPort:()=>p,getDefaults:()=>f,getExperimentalSetting:()=>m,getGlobal:()=>b,getModularInstance:()=>we,getUA:()=>S,isAdmin:()=>W,isBrowser:()=>I,isBrowserExtension:()=>T,isElectron:()=>L,isEmpty:()=>$,isIE:()=>C,isIndexedDBAvailable:()=>D,isMobileCordova:()=>y,isNode:()=>E,isNodeSdk:()=>k,isReactNative:()=>P,isSafari:()=>N,isUWP:()=>A,isValidFormat:()=>V,isValidTimestamp:()=>H,issuedAtTime:()=>G,jsonEval:()=>F,map:()=>K,ordinal:()=>ve,promiseWithTimeout:()=>Q,querystring:()=>J,querystringDecode:()=>ee,safeGet:()=>X,stringLength:()=>he,stringToByteArray:()=>le,stringify:()=>R,uuidv4:()=>be,validateArgCount:()=>ne,validateCallback:()=>de,validateContextObject:()=>ce,validateIndexedDBOpenable:()=>O,validateNamespace:()=>re});const a={NODE_CLIENT:!1,NODE_ADMIN:!1,SDK_VERSION:"${JSCORE_VERSION}"},i=function(e,t){if(!e)throw s(t)},s=function(e){return new Error("Firebase Database ("+a.SDK_VERSION+") INTERNAL ASSERT FAILED: "+e)},_=function(e){const t=[];let x=0;for(let a=0;a<e.length;a++){let i=e.charCodeAt(a);i<128?t[x++]=i:i<2048?(t[x++]=i>>6|192,t[x++]=63&i|128):55296==(64512&i)&&a+1<e.length&&56320==(64512&e.charCodeAt(a+1))?(i=65536+((1023&i)<<10)+(1023&e.charCodeAt(++a)),t[x++]=i>>18|240,t[x++]=i>>12&63|128,t[x++]=i>>6&63|128,t[x++]=63&i|128):(t[x++]=i>>12|224,t[x++]=i>>6&63|128,t[x++]=63&i|128)}return t},n={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},HAS_NATIVE_SUPPORT:"function"==typeof atob,encodeByteArray(e,t){if(!Array.isArray(e))throw Error("encodeByteArray takes an array as a parameter");this.init_();const x=t?this.byteToCharMapWebSafe_:this.byteToCharMap_,a=[];for(let t=0;t<e.length;t+=3){const i=e[t],s=t+1<e.length,_=s?e[t+1]:0,n=t+2<e.length,o=n?e[t+2]:0,r=i>>2,d=(3&i)<<4|_>>4;let c=(15&_)<<2|o>>6,l=63&o;n||(l=64,s||(c=64)),a.push(x[r],x[d],x[c],x[l])}return a.join("")},encodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?btoa(e):this.encodeByteArray(_(e),t)},decodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?atob(e):function(e){const t=[];let x=0,a=0;for(;x<e.length;){const i=e[x++];if(i<128)t[a++]=String.fromCharCode(i);else if(i>191&&i<224){const s=e[x++];t[a++]=String.fromCharCode((31&i)<<6|63&s)}else if(i>239&&i<365){const s=((7&i)<<18|(63&e[x++])<<12|(63&e[x++])<<6|63&e[x++])-65536;t[a++]=String.fromCharCode(55296+(s>>10)),t[a++]=String.fromCharCode(56320+(1023&s))}else{const s=e[x++],_=e[x++];t[a++]=String.fromCharCode((15&i)<<12|(63&s)<<6|63&_)}}return t.join("")}(this.decodeStringToByteArray(e,t))},decodeStringToByteArray(e,t){this.init_();const x=t?this.charToByteMapWebSafe_:this.charToByteMap_,a=[];for(let t=0;t<e.length;){const i=x[e.charAt(t++)],s=t<e.length?x[e.charAt(t)]:0;++t;const _=t<e.length?x[e.charAt(t)]:64;++t;const n=t<e.length?x[e.charAt(t)]:64;if(++t,null==i||null==s||null==_||null==n)throw new o;const r=i<<2|s>>4;if(a.push(r),64!==_){const e=s<<4&240|_>>2;if(a.push(e),64!==n){const e=_<<6&192|n;a.push(e)}}}return a},init_(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(let e=0;e<this.ENCODED_VALS.length;e++)this.byteToCharMap_[e]=this.ENCODED_VALS.charAt(e),this.charToByteMap_[this.byteToCharMap_[e]]=e,this.byteToCharMapWebSafe_[e]=this.ENCODED_VALS_WEBSAFE.charAt(e),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[e]]=e,e>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(e)]=e,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(e)]=e)}}};class o extends Error{constructor(){super(...arguments),this.name="DecodeBase64StringError"}}const r=function(e){const t=_(e);return n.encodeByteArray(t,!0)},d=function(e){return r(e).replace(/\./g,"")},c=function(e){try{return n.decodeString(e,!0)}catch(e){console.error("base64Decode failed: ",e)}return null};function l(e){return h(void 0,e)}function h(e,t){if(!(t instanceof Object))return t;switch(t.constructor){case Date:return new Date(t.getTime());case Object:void 0===e&&(e={});break;case Array:e=[];break;default:return t}for(const x in t)t.hasOwnProperty(x)&&"__proto__"!==x&&(e[x]=h(e[x],t[x]));return e}function b(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==x.g)return x.g;throw new Error("Unable to locate global object.")}const f=()=>{try{return b().__FIREBASE_DEFAULTS__||(()=>{if("undefined"==typeof process||void 0===process.env)return;const e=process.env.__FIREBASE_DEFAULTS__;return e?JSON.parse(e):void 0})()||(()=>{if("undefined"==typeof document)return;let e;try{e=document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/)}catch(e){return}const t=e&&c(e[1]);return t&&JSON.parse(t)})()}catch(e){return void console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`)}},u=e=>{var t,x;return null===(x=null===(t=f())||void 0===t?void 0:t.emulatorHosts)||void 0===x?void 0:x[e]},p=e=>{const t=u(e);if(!t)return;const x=t.lastIndexOf(":");if(x<=0||x+1===t.length)throw new Error(`Invalid host ${t} with no separate hostname and port!`);const a=parseInt(t.substring(x+1),10);return"["===t[0]?[t.substring(1,x-1),a]:[t.substring(0,x),a]},g=()=>{var e;return null===(e=f())||void 0===e?void 0:e.config},m=e=>{var t;return null===(t=f())||void 0===t?void 0:t[`_${e}`]};class v{constructor(){this.reject=()=>{},this.resolve=()=>{},this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}wrapCallback(e){return(t,x)=>{t?this.reject(t):this.resolve(x),"function"==typeof e&&(this.promise.catch((()=>{})),1===e.length?e(t):e(t,x))}}}function w(e,t){if(e.uid)throw new Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');const x=t||"demo-project",a=e.iat||0,i=e.sub||e.user_id;if(!i)throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");const s=Object.assign({iss:`https://securetoken.google.com/${x}`,aud:x,iat:a,exp:a+3600,auth_time:a,sub:i,user_id:i,firebase:{sign_in_provider:"custom",identities:{}}},e);return[d(JSON.stringify({alg:"none",type:"JWT"})),d(JSON.stringify(s)),""].join(".")}function S(){return"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:""}function y(){return"undefined"!=typeof window&&!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(S())}function E(){var e;const t=null===(e=f())||void 0===e?void 0:e.forceEnvironment;if("node"===t)return!0;if("browser"===t)return!1;try{return"[object process]"===Object.prototype.toString.call(x.g.process)}catch(e){return!1}}function I(){return"object"==typeof self&&self.self===self}function T(){const e="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof e&&void 0!==e.id}function P(){return"object"==typeof navigator&&"ReactNative"===navigator.product}function L(){return S().indexOf("Electron/")>=0}function C(){const e=S();return e.indexOf("MSIE ")>=0||e.indexOf("Trident/")>=0}function A(){return S().indexOf("MSAppHost/")>=0}function k(){return!0===a.NODE_CLIENT||!0===a.NODE_ADMIN}function N(){return!E()&&navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome")}function D(){try{return"object"==typeof indexedDB}catch(e){return!1}}function O(){return new Promise(((e,t)=>{try{let x=!0;const a="validate-browser-context-for-indexeddb-analytics-module",i=self.indexedDB.open(a);i.onsuccess=()=>{i.result.close(),x||self.indexedDB.deleteDatabase(a),e(!0)},i.onupgradeneeded=()=>{x=!1},i.onerror=()=>{var e;t((null===(e=i.error)||void 0===e?void 0:e.message)||"")}}catch(e){t(e)}}))}function B(){return!("undefined"==typeof navigator||!navigator.cookieEnabled)}class M extends Error{constructor(e,t,x){super(t),this.code=e,this.customData=x,this.name="FirebaseError",Object.setPrototypeOf(this,M.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,z.prototype.create)}}class z{constructor(e,t,x){this.service=e,this.serviceName=t,this.errors=x}create(e,...t){const x=t[0]||{},a=`${this.service}/${e}`,i=this.errors[e],s=i?function(e,t){return e.replace(j,((e,x)=>{const a=t[x];return null!=a?String(a):`<${x}?>`}))}(i,x):"Error",_=`${this.serviceName}: ${s} (${a}).`;return new M(a,_,x)}}const j=/\{\$([^}]+)}/g;function F(e){return JSON.parse(e)}function R(e){return JSON.stringify(e)}const U=function(e){let t={},x={},a={},i="";try{const s=e.split(".");t=F(c(s[0])||""),x=F(c(s[1])||""),i=s[2],a=x.d||{},delete x.d}catch(e){}return{header:t,claims:x,data:a,signature:i}},H=function(e){const t=U(e).claims,x=Math.floor((new Date).getTime()/1e3);let a=0,i=0;return"object"==typeof t&&(t.hasOwnProperty("nbf")?a=t.nbf:t.hasOwnProperty("iat")&&(a=t.iat),i=t.hasOwnProperty("exp")?t.exp:a+86400),!!x&&!!a&&!!i&&x>=a&&x<=i},G=function(e){const t=U(e).claims;return"object"==typeof t&&t.hasOwnProperty("iat")?t.iat:null},V=function(e){const t=U(e).claims;return!!t&&"object"==typeof t&&t.hasOwnProperty("iat")},W=function(e){const t=U(e).claims;return"object"==typeof t&&!0===t.admin};function Y(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function X(e,t){return Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0}function $(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}function K(e,t,x){const a={};for(const i in e)Object.prototype.hasOwnProperty.call(e,i)&&(a[i]=t.call(x,e[i],i,e));return a}function q(e,t){if(e===t)return!0;const x=Object.keys(e),a=Object.keys(t);for(const i of x){if(!a.includes(i))return!1;const x=e[i],s=t[i];if(Z(x)&&Z(s)){if(!q(x,s))return!1}else if(x!==s)return!1}for(const e of a)if(!x.includes(e))return!1;return!0}function Z(e){return null!==e&&"object"==typeof e}function Q(e,t=2e3){const x=new v;return setTimeout((()=>x.reject("timeout!")),t),e.then(x.resolve,x.reject),x.promise}function J(e){const t=[];for(const[x,a]of Object.entries(e))Array.isArray(a)?a.forEach((e=>{t.push(encodeURIComponent(x)+"="+encodeURIComponent(e))})):t.push(encodeURIComponent(x)+"="+encodeURIComponent(a));return t.length?"&"+t.join("&"):""}function ee(e){const t={};return e.replace(/^\?/,"").split("&").forEach((e=>{if(e){const[x,a]=e.split("=");t[decodeURIComponent(x)]=decodeURIComponent(a)}})),t}function te(e){const t=e.indexOf("?");if(!t)return"";const x=e.indexOf("#",t);return e.substring(t,x>0?x:void 0)}class xe{constructor(){this.chain_=[],this.buf_=[],this.W_=[],this.pad_=[],this.inbuf_=0,this.total_=0,this.blockSize=64,this.pad_[0]=128;for(let e=1;e<this.blockSize;++e)this.pad_[e]=0;this.reset()}reset(){this.chain_[0]=1732584193,this.chain_[1]=4023233417,this.chain_[2]=2562383102,this.chain_[3]=271733878,this.chain_[4]=3285377520,this.inbuf_=0,this.total_=0}compress_(e,t){t||(t=0);const x=this.W_;if("string"==typeof e)for(let a=0;a<16;a++)x[a]=e.charCodeAt(t)<<24|e.charCodeAt(t+1)<<16|e.charCodeAt(t+2)<<8|e.charCodeAt(t+3),t+=4;else for(let a=0;a<16;a++)x[a]=e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3],t+=4;for(let e=16;e<80;e++){const t=x[e-3]^x[e-8]^x[e-14]^x[e-16];x[e]=4294967295&(t<<1|t>>>31)}let a,i,s=this.chain_[0],_=this.chain_[1],n=this.chain_[2],o=this.chain_[3],r=this.chain_[4];for(let e=0;e<80;e++){e<40?e<20?(a=o^_&(n^o),i=1518500249):(a=_^n^o,i=1859775393):e<60?(a=_&n|o&(_|n),i=2400959708):(a=_^n^o,i=3395469782);const t=(s<<5|s>>>27)+a+r+i+x[e]&4294967295;r=o,o=n,n=4294967295&(_<<30|_>>>2),_=s,s=t}this.chain_[0]=this.chain_[0]+s&4294967295,this.chain_[1]=this.chain_[1]+_&4294967295,this.chain_[2]=this.chain_[2]+n&4294967295,this.chain_[3]=this.chain_[3]+o&4294967295,this.chain_[4]=this.chain_[4]+r&4294967295}update(e,t){if(null==e)return;void 0===t&&(t=e.length);const x=t-this.blockSize;let a=0;const i=this.buf_;let s=this.inbuf_;for(;a<t;){if(0===s)for(;a<=x;)this.compress_(e,a),a+=this.blockSize;if("string"==typeof e){for(;a<t;)if(i[s]=e.charCodeAt(a),++s,++a,s===this.blockSize){this.compress_(i),s=0;break}}else for(;a<t;)if(i[s]=e[a],++s,++a,s===this.blockSize){this.compress_(i),s=0;break}}this.inbuf_=s,this.total_+=t}digest(){const e=[];let t=8*this.total_;this.inbuf_<56?this.update(this.pad_,56-this.inbuf_):this.update(this.pad_,this.blockSize-(this.inbuf_-56));for(let e=this.blockSize-1;e>=56;e--)this.buf_[e]=255&t,t/=256;this.compress_(this.buf_);let x=0;for(let t=0;t<5;t++)for(let a=24;a>=0;a-=8)e[x]=this.chain_[t]>>a&255,++x;return e}}function ae(e,t){const x=new ie(e,t);return x.subscribe.bind(x)}class ie{constructor(e,t){this.observers=[],this.unsubscribes=[],this.observerCount=0,this.task=Promise.resolve(),this.finalized=!1,this.onNoObservers=t,this.task.then((()=>{e(this)})).catch((e=>{this.error(e)}))}next(e){this.forEachObserver((t=>{t.next(e)}))}error(e){this.forEachObserver((t=>{t.error(e)})),this.close(e)}complete(){this.forEachObserver((e=>{e.complete()})),this.close()}subscribe(e,t,x){let a;if(void 0===e&&void 0===t&&void 0===x)throw new Error("Missing Observer.");a=function(e,t){if("object"!=typeof e||null===e)return!1;for(const x of t)if(x in e&&"function"==typeof e[x])return!0;return!1}(e,["next","error","complete"])?e:{next:e,error:t,complete:x},void 0===a.next&&(a.next=_e),void 0===a.error&&(a.error=_e),void 0===a.complete&&(a.complete=_e);const i=this.unsubscribeOne.bind(this,this.observers.length);return this.finalized&&this.task.then((()=>{try{this.finalError?a.error(this.finalError):a.complete()}catch(e){}})),this.observers.push(a),i}unsubscribeOne(e){void 0!==this.observers&&void 0!==this.observers[e]&&(delete this.observers[e],this.observerCount-=1,0===this.observerCount&&void 0!==this.onNoObservers&&this.onNoObservers(this))}forEachObserver(e){if(!this.finalized)for(let t=0;t<this.observers.length;t++)this.sendOne(t,e)}sendOne(e,t){this.task.then((()=>{if(void 0!==this.observers&&void 0!==this.observers[e])try{t(this.observers[e])}catch(e){"undefined"!=typeof console&&console.error&&console.error(e)}}))}close(e){this.finalized||(this.finalized=!0,void 0!==e&&(this.finalError=e),this.task.then((()=>{this.observers=void 0,this.onNoObservers=void 0})))}}function se(e,t){return(...x)=>{Promise.resolve(!0).then((()=>{e(...x)})).catch((e=>{t&&t(e)}))}}function _e(){}const ne=function(e,t,x,a){let i;if(a<t?i="at least "+t:a>x&&(i=0===x?"none":"no more than "+x),i){throw new Error(e+" failed: Was called with "+a+(1===a?" argument.":" arguments.")+" Expects "+i+".")}};function oe(e,t){return`${e} failed: ${t} argument `}function re(e,t,x){if((!x||t)&&"string"!=typeof t)throw new Error(oe(e,"namespace")+"must be a valid firebase namespace.")}function de(e,t,x,a){if((!a||x)&&"function"!=typeof x)throw new Error(oe(e,t)+"must be a valid function.")}function ce(e,t,x,a){if((!a||x)&&("object"!=typeof x||null===x))throw new Error(oe(e,t)+"must be a valid context object.")}const le=function(e){const t=[];let x=0;for(let a=0;a<e.length;a++){let s=e.charCodeAt(a);if(s>=55296&&s<=56319){const t=s-55296;a++,i(a<e.length,"Surrogate pair missing trail surrogate.");s=65536+(t<<10)+(e.charCodeAt(a)-56320)}s<128?t[x++]=s:s<2048?(t[x++]=s>>6|192,t[x++]=63&s|128):s<65536?(t[x++]=s>>12|224,t[x++]=s>>6&63|128,t[x++]=63&s|128):(t[x++]=s>>18|240,t[x++]=s>>12&63|128,t[x++]=s>>6&63|128,t[x++]=63&s|128)}return t},he=function(e){let t=0;for(let x=0;x<e.length;x++){const a=e.charCodeAt(x);a<128?t++:a<2048?t+=2:a>=55296&&a<=56319?(t+=4,x++):t+=3}return t},be=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))},fe=1e3,ue=2,pe=144e5,ge=.5;function me(e,t=fe,x=ue){const a=t*Math.pow(x,e),i=Math.round(ge*a*(Math.random()-.5)*2);return Math.min(pe,a+i)}function ve(e){return Number.isFinite(e)?e+function(e){e=Math.abs(e);const t=e%100;if(t>=10&&t<=20)return"th";const x=e%10;if(1===x)return"st";if(2===x)return"nd";if(3===x)return"rd";return"th"}(e):`${e}`}function we(e){return e&&e._delegate?e._delegate:e}},"./src/Firebase/base-firebase-integration.ts":(e,t,x)=>{x.r(t),x.d(t,{BaseFirebaseIntegration:()=>_});var a=x("./node_modules/firebase/app/dist/esm/index.esm.js"),i=x("./node_modules/firebase/analytics/dist/esm/index.esm.js"),s=x("./src/Firebase/firebase-config.ts");class _{firebaseApp;analytics;constructor(){this.initializeFirebase()}customEvents(e,t){try{(0,i.logEvent)(this.analytics,e,t)}catch(e){console.error(...o("1966754438_15_12_15_69_11","Error while logging custom event:",e))}}sessionEnd(){try{navigator.onLine&&void 0!==this.analytics&&(0,i.logEvent)(this.analytics,"session_end")}catch(e){console.error(...o("1966754438_24_12_24_74_11","Error while logging session_end event:",e))}}initializeFirebase(){try{this.firebaseApp=(0,a.initializeApp)(s.firebaseConfig),this.analytics=(0,i.getAnalytics)(this.firebaseApp)}catch(e){console.error(...o("1966754438_32_12_32_70_11","Error while initializing Firebase:",e))}}}function n(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729239314494','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function o(e,...t){try{n().consoleError(e,t)}catch(e){}return t}},"./src/Firebase/firebase-config.ts":(e,t,x)=>{x.r(t),x.d(t,{firebaseConfig:()=>a});const a={apiKey:"AIzaSyB8c2lBVi26u7YRL9sxOP97Uaq3yN8hTl4",authDomain:"ftm-b9d99.firebaseapp.com",databaseURL:"https://ftm-b9d99.firebaseio.com",projectId:"ftm-b9d99",storageBucket:"ftm-b9d99.appspot.com",messagingSenderId:"602402387941",appId:"1:602402387941:web:a63f4eaddc949f539de10c",measurementId:"G-FVLSN7D7NM"}},"./src/Firebase/firebase-integration.ts":(e,t,x)=>{x.r(t),x.d(t,{FirebaseIntegration:()=>i});var a=x("./src/Firebase/base-firebase-integration.ts");class i extends a.BaseFirebaseIntegration{static instance;constructor(){super()}static getInstance(){return i.instance||(i.instance=new i),i.instance}sendSessionStartEvent(e){this.customEvents("session_start",e)}sendSessionEndEvent(e){this.customEvents("session_end",e)}sendSelectedLevelEvent(e){this.customEvents("selected_level",e)}sendTappedStartEvent(e){this.customEvents("tapped_start",e)}sendPuzzleCompletedEvent(e){this.customEvents("puzzle_completed",e)}sendLevelCompletedEvent(e){this.customEvents("level_completed",e)}sendUserClickedOnPlayEvent(){this.customEvents("user_clicked",{click:"Click"})}sendDownloadCompletedEvent(e){this.customEvents("download_completed",e)}}},"./src/common/event-names.ts":(e,t,x)=>{x.r(t),x.d(t,{CLICK:()=>c,LOADPUZZLE:()=>a,MOUSEDOWN:()=>_,MOUSEMOVE:()=>s,MOUSEUP:()=>n,STONEDROP:()=>i,TOUCHEND:()=>d,TOUCHMOVE:()=>r,TOUCHSTART:()=>o,VISIBILITY_CHANGE:()=>l});const a="loadpuzzle",i="stonesdropped",s="mousemove",_="mousedown",n="mouseup",o="touchstart",r="touchmove",d="touchend",c="click",l="visibilitychange"},"./src/common/global-variables.ts":(e,t,x)=>{x.r(t),x.d(t,{Debugger:()=>r,font:()=>o,lang:()=>n,pseudoId:()=>_});var a=x("./src/constants/index.ts"),i=x("./src/common/index.ts");const s=new URLSearchParams(window.location.search);var _=s.get("cr_user_id"),n=null==s.get("cr_lang")?"english":s.get("cr_lang");const o=i.Utils.getLanguageSpecificFont(n),r={DevelopmentLink:!!window.location.href.includes(a.DevelopmentServer),DebugMode:!1}},"./src/common/index.ts":(e,t,x)=>{x.r(t),x.d(t,{CLICK:()=>_.CLICK,Debugger:()=>s.Debugger,LOADPUZZLE:()=>_.LOADPUZZLE,MOUSEDOWN:()=>_.MOUSEDOWN,MOUSEMOVE:()=>_.MOUSEMOVE,MOUSEUP:()=>_.MOUSEUP,STONEDROP:()=>_.STONEDROP,StoneConfig:()=>a.StoneConfig,TOUCHEND:()=>_.TOUCHEND,TOUCHMOVE:()=>_.TOUCHMOVE,TOUCHSTART:()=>_.TOUCHSTART,Utils:()=>i.Utils,VISIBILITY_CHANGE:()=>_.VISIBILITY_CHANGE,createRippleEffect:()=>i.createRippleEffect,font:()=>s.font,hideElement:()=>i.hideElement,isClickInsideButton:()=>i.isClickInsideButton,isDocumentVisible:()=>i.isDocumentVisible,lang:()=>s.lang,loadImages:()=>i.loadImages,pseudoId:()=>s.pseudoId,syncLoadingImages:()=>i.syncLoadingImages,toggleDebugMode:()=>i.toggleDebugMode});var a=x("./src/common/stone-config.ts"),i=x("./src/common/utils.ts"),s=x("./src/common/global-variables.ts"),_=x("./src/common/event-names.ts")},"./src/common/stone-config.ts":(e,t,x)=>{x.r(t),x.d(t,{StoneConfig:()=>i});var a=x("./src/common/index.ts");class i{x;y;origx;origy;text;img;imageSize;textFontSize;canvasWidth;canvasHeight;imageCenterOffsetX;imageCenterOffsetY;context;tutorialInstance;timerTickingInstance;frame=0;constructor(e,t,x,a,i,s,_,n,o){this.x=i,this.y=s,this.origx=i,this.origy=s,this.canvasWidth=t,this.canvasHeight=x,this.tutorialInstance=o,this.text=a,this.img=_,this.context=e,this.calculateImageAndFontSize(),this.imageCenterOffsetX=this.imageSize/2.3,this.imageCenterOffsetY=this.imageSize/1.5,this.timerTickingInstance=n}calculateImageAndFontSize(){1.4*this.context.measureText(this.text).width>this.canvasHeight/9.5?(this.imageSize=1.1*this.context.measureText(this.text).width,this.textFontSize=this.canvasHeight/25,this.text.length>=3&&this.origx<50&&this.origx<this.canvasWidth/2&&(this.x=this.origx+21)):(this.imageSize=this.canvasHeight/9.5,this.textFontSize=this.canvasHeight/20)}getEase=(e,t,x,a)=>-x/2*(Math.cos(Math.PI*e/a)-1)+t;getX=()=>this.frame>=100?this.x:this.getEase(this.frame,0,this.x,100);getY=()=>this.frame>=100?this.y:this.getEase(this.frame,0,this.y,100);adjustSize(e,t){return e?1.25*t:t}draw(e,t=!1){const x=this.getX()-this.adjustSize(t,this.imageCenterOffsetX),i=this.getY()-this.adjustSize(t,this.imageCenterOffsetY);this.context.fillStyle="red",this.context.shadowColor="rgba(255, 255, 255, 1)",this.context.shadowBlur=12,this.context.shadowOffsetX=0,this.context.shadowOffsetY=0,this.context.drawImage(this.img,x,i,this.adjustSize(t,this.imageSize),this.adjustSize(t,this.imageSize)),this.context.fillStyle="white",this.context.font=this.textFontSize+`px ${a.font}, monospace`,this.context.textAlign="center",this.context.shadowOffsetX=0,this.context.shadowOffsetY=0,this.context.shadowBlur=0,this.context.shadowColor="transparent ",this.context.fillText(this.text,this.getX(),this.getY()),this.frame<100?this.frame=this.frame+1:null==this.tutorialInstance&&null==this.tutorialInstance||this.tutorialInstance.draw(e,this.img,this.imageSize)}}},"./src/common/utils.ts":(e,t,x)=>{x.r(t),x.d(t,{Utils:()=>s,createRippleEffect:()=>_,hideElement:()=>l,isClickInsideButton:()=>r,isDocumentVisible:()=>d,loadImages:()=>n,syncLoadingImages:()=>o,toggleDebugMode:()=>c});var a=x("./src/common/index.ts"),i=x("./src/data/i18-font-mapping.ts");class s{static UrlSubstring="/feedthemonster";static getConvertedDevProdURL(e){return a.Debugger.DevelopmentLink?e.slice(0,e.indexOf(this.UrlSubstring)+this.UrlSubstring.length)+"dev"+e.slice(e.indexOf(this.UrlSubstring)+this.UrlSubstring.length):e}static getLanguageSpecificFont(e){const t=e.toLowerCase();for(const e in i.languageFontMapping)if(e.toLowerCase()===t)return i.languageFontMapping[e];return console.log(...b("2724076817_26_4_26_59_4",`Font not found for language: ${e}`)),"NotoSans-Regular"}static getRandomNumber(e,t){return Math.floor(Math.random()*(t-e+1))+e}static getExcludedCoordinates(e,t){return{excludeX:e.width*(t/100),excludeY:e.height*(t/100)}}}function _(e){const t=e;if(!t)throw new Error("Canvas context is null");let x=0,a=0;let i=10,s=10;return function(e,_,n){n&&(i=0,s=0),x=e,a=_,t.beginPath(),t.arc(x,a,i,0,2*Math.PI),t.strokeStyle="white",t.lineWidth=2,t.stroke(),t.closePath(),t.beginPath(),t.arc(x,a,s,0,2*Math.PI),t.strokeStyle="white",t.lineWidth=2,t.stroke(),t.closePath(),i+=.5,s+=.5,(i>=60||s>=60)&&(i=10,s=10)}}function n(e,t){const x={};let a=0;const i=Object.keys(e).length;for(let s in e)x[s]=new Image,x[s].onload=function(){++a>=i&&t(x)},x[s].src=e[s]}const o=async e=>{const t=Object.keys(e).map((async t=>{const x=await(async e=>{const t=new Image;return new Promise((x=>{t.onload=()=>x(t),t.src=e}))})(e[t]);return{[t]:x}}));return(await Promise.all(t)).reduce(((e,t)=>({...e,...t})),{})};function r(e,t,x,a,i,s,_=!1){if(_){return Math.sqrt((e-(x+i/2))**2+(t-(a+s/2))**2)<i/2}return e>=x&&e<=x+i&&t>=a&&t<=a+s}const d=()=>"visible"===document.visibilityState,c=e=>{e.classList.toggle("on");const t=e.classList.contains("on");a.Debugger.DebugMode=t,e.innerText="Dev"},l=(e=!1,t)=>{e?t.classList.remove("show"):t.classList.add("show")};function h(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729239314494','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function b(e,...t){try{h().consoleLog(e,t)}catch(e){}return t}},"./src/components/audio-player.ts":(e,t,x)=>{x.r(t),x.d(t,{AudioPlayer:()=>i});var a=x("./src/constants/index.ts");class i{audioContext;sourceNode;audioQueue;promptAudioBuffer;clickSoundBuffer;static audioBuffers=new Map;audioSourcs=[];isClickSoundLoaded;constructor(){this.audioContext=s.getAudioContext(),this.sourceNode=null,this.audioQueue=[],this.clickSoundBuffer=null,this.isClickSoundLoaded=!1}async playButtonClickSound(){const e=a.AUDIO_PATH_BTN_CLICK;if(!this.isClickSoundLoaded)try{this.clickSoundBuffer=await this.loadAndDecodeAudio(e),i.audioBuffers.set(e,this.clickSoundBuffer),this.isClickSoundLoaded=!0}catch(e){return void console.error(...n("2928562115_33_8_33_70_11","Error loading or decoding click sound:",e))}if(this.clickSoundBuffer){const e=this.audioContext.createBufferSource();e.buffer=this.clickSoundBuffer,e.connect(this.audioContext.destination),e.start()}else console.error(...n("2928562115_45_6_45_59_11","Click sound buffer is not available."))}async loadAndDecodeAudio(e){return new Promise((async(t,x)=>{try{const x=await fetch(e),a=await x.arrayBuffer();t(await this.audioContext.decodeAudioData(a))}catch(e){console.error(...n("2928562115_59_8_59_64_11","Error loading or decoding audio:",e)),x(e)}}))}async preloadPromptAudio(e){const t=await this.loadAndDecodeAudio(e);t&&(this.promptAudioBuffer=t)}async preloadGameAudio(e){if(i.audioBuffers.has(e))return;const t=await this.loadAndDecodeAudio(e);t&&i.audioBuffers.set(e,t)}playAudio(e){const t=i.audioBuffers.get(e);if(t){const e=this.audioContext.createBufferSource();e.buffer=t,e.connect(this.audioContext.destination),this.audioSourcs.push(e),e.start()}}playFeedbackAudios=(e=!1,...t)=>{t.length>0&&(this.audioQueue=t,this.playFetch(0,e))};playPromptAudio=e=>{if(this.promptAudioBuffer){const e=this.audioContext.createBufferSource();e.buffer=this.promptAudioBuffer,e.connect(this.audioContext.destination),this.audioSourcs.push(e),e.start()}};stopFeedbackAudio=()=>{this.sourceNode&&(this.sourceNode.stop(),this.sourceNode=null),this.audioQueue=[]};stopAllAudios=()=>{this.sourceNode&&(this.sourceNode.stop(),this.sourceNode=null),this.audioQueue=[],this.audioSourcs.forEach((e=>{e.stop()})),this.audioSourcs=[]};playFetch=(e,t)=>{e>=this.audioQueue.length?this.stopFeedbackAudio():this.audioQueue[e]&&fetch(this.audioQueue[e]).then((e=>e.arrayBuffer())).then((x=>{this.audioContext?.decodeAudioData(x,(x=>{this.sourceNode=this.audioContext?.createBufferSource(),this.sourceNode.buffer=x,this.sourceNode.connect(this.audioContext?.destination),this.sourceNode.loop=t,this.sourceNode.onended=()=>this.handleAudioEnded(e,t),this.sourceNode.start()}))}))};handleAudioEnded=(e,t)=>{this.sourceNode&&(this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.disconnect(),this.sourceNode=null),this.playFetch(e+1,t)}}class s{static instance=null;static getAudioContext(){return s.instance||(s.instance=new(window.AudioContext||window.webkitAudioContext)),s.instance}}function _(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729239314494','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function n(e,...t){try{_().consoleError(e,t)}catch(e){}return t}},"./src/components/background-component.ts":(e,t,x)=>{x.r(t),x.d(t,{BackgroundComponent:()=>i});var a=x("./src/compositions/background.ts");class i{width;height;context;levelNumber;background;constructor(e,t,x,a){this.width=t,this.height=x,this.context=e,this.levelNumber=a,this.setupBg()}setupBg=async()=>{const{BG_GROUP_IMGS:e,draw:t}=(0,a.loadDynamicBgAssets)(this.levelNumber,a.BACKGROUND_ASSET_LIST);return{...await(0,a.createBackground)(this.context,this.width,this.height,e,t)}}}},"./src/components/buttons/cancel-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;cancel_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t){this.posX=.1*t.width+.15*t.width/2,this.posY=.2*t.height,this.context=e,this.canvas=t,(0,a.loadImages)({cancel_button_image:i.CANCEL_BTN_IMG},(e=>{this.cancel_button_image=e.cancel_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.15,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.cancel_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.15?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.14,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/close-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;close_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({close_button_image:i.MAP_BTN_IMG},(e=>{this.close_button_image=e.close_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x,y:s}}draw(){this.imagesLoaded&&(this.context.drawImage(this.close_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/index.ts":(e,t,x)=>{x.r(t),x.d(t,{CancelButton:()=>i.default,CloseButton:()=>a.default,LevelBloonButton:()=>c.default,NextButton:()=>s.default,NoButton:()=>_.default,PauseButton:()=>n.default,PlayButton:()=>d.default,RetryButton:()=>o.default,YesButton:()=>r.default});var a=x("./src/components/buttons/close-button.ts"),i=x("./src/components/buttons/cancel-button.ts"),s=x("./src/components/buttons/next-button.ts"),_=x("./src/components/buttons/no-button.ts"),n=x("./src/components/buttons/pause-button.ts"),o=x("./src/components/buttons/retry-button.ts"),r=x("./src/components/buttons/yes-button.ts"),d=x("./src/components/buttons/play-button.ts"),c=x("./src/components/buttons/level-button.ts")},"./src/components/buttons/level-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{context;levelData;posX;posY;originalPosX;originalPosY;size;radiusOffSet;bloonSize;btnSize;lockSize;textFontSize;constructor(e,t,x){this.context=t,this.levelData=x,this.posX=this.levelData.x,this.posY=this.levelData.y,this.originalPosX=this.posX,this.originalPosY=this.posY,this.size=e.height/5,this.radiusOffSet=e.height/20,this.bloonSize=this.isLevelSpecial(this.size),this.btnSize=this.bloonSize,this.lockSize=e.height/13,this.textFontSize=this.size/6}isSpecialLevel(e){return i.SPECIAL_LEVELS.includes(e)}isLevelSpecial(e){return this.levelData?.isSpecial?.9*e:e}draw(e,t,x,i){this.context.drawImage(this.levelData?.balloonImg,this.posX,this.posY,this.btnSize,this.btnSize),this.context.fillStyle="white",this.context.font=this.textFontSize+`px ${a.font}, monospace`,this.context.textAlign="center",this.context.fillText(`${this.levelData.index+e}`,this.levelData.x+this.size/3.5,this.levelData.y+this.size/3),this.context.font=this.textFontSize-this.size/30+`px ${a.font}, monospace`,this.btnSize<this.bloonSize?this.btnSize=this.btnSize+.5:(this.btnSize=this.bloonSize,this.posX=this.levelData.x,this.posY=this.levelData.y),this.drawIcons(e,t,x,i)}applyPulseEffect(){const e=.7,t=Date.now()%1500/1500,x=t<=e,a=x?t/e:(t-e)/(x?e:.30000000000000004),i=x?15*a:15+45*a,s=x?.5*(1-a):0;if(s<=0)return;const{x:_,y:n,radius:o}=this.levelData?.isSpecial?{x:3,y:2.5,radius:2.2}:{x:3.4,y:3.8,radius:3.2},r=this.posX+this.btnSize/_,d=this.posY+this.btnSize/n,c=this.btnSize/o+i;this.context.save(),this.context.beginPath(),this.context.arc(r,d,c,0,2*Math.PI),this.context.fillStyle=`rgba(255, 255, 255, ${s})`,this.context.fill(),this.context.restore()}drawIcons(e,t,x,i){const s=this.levelData.index;if(a.Debugger.DebugMode||s+e-1>t+1&&this.drawLock(),x.length&&s+e<=i)for(let t=0;t<x.length;t++)if(s-1+e===parseInt(x[t].levelNumber)){this.checkStars(x[t].starCount);break}}drawLock(){this.context.drawImage(this.levelData?.lockImg,this.levelData.x,this.levelData.y,this.lockSize,this.lockSize)}checkStars(e){const t=this.levelData.x,x=this.levelData.y,a=this.size;e>=1&&this.drawStar(t,x-.01*a),e>1&&this.drawStar(t+a/2.5,x-.01*a),3===e&&this.drawStar(t+a/5,x-.1*a)}drawStar(e,t){this.context.drawImage(this.levelData?.starImg,e,t,this.size/5,this.size/5)}onClick(e,t,x,i,s){Math.sqrt((e-this.levelData.x-this.radiusOffSet)*(e-this.levelData.x-this.radiusOffSet)+(t-this.levelData.y-this.radiusOffSet)*(t-this.levelData.y-this.radiusOffSet))<45&&(a.Debugger.DebugMode||this.levelData.index+x<=i)&&(this.btnSize=this.bloonSize-4,this.posX=this.originalPosX+.5,this.posY=this.originalPosY+1,s(this.levelData.index))}}},"./src/components/buttons/next-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;width;height;imagesLoaded=!1;next_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s,_){this.posX=s,this.posY=_,this.context=e,this.width=t,this.height=x,(0,a.loadImages)({next_button_image:i.NEXT_BTN_IMG},(e=>{this.next_button_image=e.next_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.next_button_image,this.posX,this.posY,this.width*this.btnSizeAnimation,this.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.width*this.btnOriginalSize,this.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/no-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;no_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x+5,this.posY=s+10,this.context=e,this.canvas=t,(0,a.loadImages)({no_button_image:i.CANCEL_BTN_IMG},(e=>{this.no_button_image=e.no_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.18,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.no_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.18?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.17,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/pause-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;pause_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t){this.posX=t.width-.09*t.height,this.posY=0,this.context=e,this.canvas=t,(0,a.loadImages)({pause_button_image:i.PAUSE_BTN_IMG},(e=>{this.pause_button_image=e.pause_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.09,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.pause_button_image,this.posX,this.posY,this.canvas.height*this.btnSizeAnimation,this.canvas.height*this.btnSizeAnimation),this.btnSizeAnimation<.09?this.btnSizeAnimation=this.btnSizeAnimation+25e-5:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.height*this.btnOriginalSize,this.canvas.height*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.085,this.posX=this.posX+.9,this.posY=this.posY+.9),x}}},"./src/components/buttons/play-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>n});var a=x("./src/constants/index.ts"),i=x("./src/Firebase/firebase-integration.ts"),s=x("./src/common/index.ts"),_=x("./src/data/index.ts");class n{posX;posY;context;canvas;images;loadedImages;imagesLoaded=!1;majVersion;minVersion;firebaseIntegration;constructor(e,t,x,_){this.posX=x,this.posY=_,this.context=e,this.canvas=t,this.firebaseIntegration=new i.FirebaseIntegration,this.init(),this.images={pause_button_image:a.PLAY_BTN_IMG},(0,s.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}async init(){const e=await(0,_.getData)();this.majVersion=e.majversion,this.minVersion=e.minversion}draw(){this.imagesLoaded&&this.context.drawImage(this.loadedImages.pause_button_image,this.posX,this.posY,this.canvas.width/3,this.canvas.width/3)}onClick(e,t){const x=Math.sqrt((e-this.posX-this.canvas.width/6)*(e-this.posX-this.canvas.width/6)+(t-this.posY-this.canvas.width/6)*(t-this.posY-this.canvas.width/6));if(this.logTappedStartFirebaseEvent(),x<this.canvas.width/8)return!0}logTappedStartFirebaseEvent(){Date.now();const e={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():""};this.firebaseIntegration.sendTappedStartEvent(e)}}},"./src/components/buttons/retry-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;retry_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({retry_button_image:i.RETRY_BTN_IMG},(e=>{this.retry_button_image=e.retry_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x,y:s}}draw(){this.imagesLoaded&&(this.context.drawImage(this.retry_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/yes-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;yes_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x-5,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({yes_button_image:i.YES_BTN_IMG},(e=>{this.yes_button_image=e.yes_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.205,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.yes_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.205?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.19,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/feedback-text/index.ts":(e,t,x)=>{x.r(t),x.d(t,{FeedbackTextEffects:()=>i});var a=x("./src/common/index.ts");class i{feedbackTextElement;hideTimeoutId;constructor(){this.feedbackTextElement=document.getElementById("feedback-text"),this.hideTimeoutId=null,this.initialize()}initialize(){this.isFeedbackElementAvailable()}isFeedbackElementAvailable(){return!!this.feedbackTextElement}wrapText(e){this.isFeedbackElementAvailable()&&(this.feedbackTextElement.textContent=e,(0,a.hideElement)(!1,this.feedbackTextElement),this.setHideTimeout())}setHideTimeout(){this.hideTimeoutId&&clearTimeout(this.hideTimeoutId),this.hideTimeoutId=window.setTimeout((()=>{(0,a.hideElement)(!0,this.feedbackTextElement),this.hideTimeoutId=null}),4e3)}}},"./src/components/index.ts":(e,t,x)=>{x.r(t),x.d(t,{AudioPlayer:()=>l.AudioPlayer,BackgroundComponent:()=>d.BackgroundComponent,FeedbackTextEffects:()=>c.FeedbackTextEffects,LevelIndicators:()=>i.LevelIndicators,Monster:()=>o.Monster,PauseButton:()=>a.default,PromptText:()=>s.PromptText,StoneHandler:()=>_.default,TimerTicking:()=>r.TimerTicking,TrailEffect:()=>h.default,Tutorial:()=>n.Tutorial});var a=x("./src/components/buttons/pause-button.ts"),i=x("./src/components/level-indicator.ts"),s=x("./src/components/prompt-text.ts"),_=x("./src/components/stone-handler.ts"),n=x("./src/components/tutorial.ts"),o=x("./src/components/monster.ts"),r=x("./src/components/timer-ticking.ts"),d=x("./src/components/background-component.ts"),c=x("./src/components/feedback-text/index.ts"),l=x("./src/components/audio-player.ts"),h=x("./src/components/trail-particles.ts")},"./src/components/level-indicator.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelIndicators:()=>_});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts"),s=x("./src/events/index.ts");class _ extends s.EventManager{context;canvas;activeIndicators;images;loadedImages;imagesLoaded=!1;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.context=e,this.canvas=t,this.activeIndicators=x,this.images={level_indicator:i.LEVEL_INDICATOR,bar_empty:i.BAR_EMPTY,bar_full:i.BAR_FULL},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}setIndicators(e){this.activeIndicators=e}addDropStoneEvent(){document.addEventListener("dropstone",(e=>{this.setIndicators(2)}))}draw(){if(this.imagesLoaded){this.context.drawImage(this.loadedImages.level_indicator,.15*this.canvas.width,0,.35*this.canvas.width,.09*this.canvas.height);for(var e=0;e<5;e++)this.context.drawImage(this.loadedImages.bar_empty,.35*this.canvas.width/7*(e+1)+.15*this.canvas.width,.09*this.canvas.height/2-.09*this.canvas.height/6,.35*this.canvas.width/10,.09*this.canvas.height/3);for(e=0;e<this.activeIndicators;e++)this.context.drawImage(this.loadedImages.bar_full,.35*this.canvas.width/7*(e+1)+.15*this.canvas.width,.09*this.canvas.height/2-.09*this.canvas.height/6,.35*this.canvas.width/10,.09*this.canvas.height/3)}}dispose(){this.unregisterEventListener()}handleStoneDrop(e){}handleLoadPuzzle(e){this.setIndicators(e.detail.counter)}}},"./src/components/monster.ts":(e,t,x)=>{x.r(t),x.d(t,{Monster:()=>s});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts");class s extends i.EventManager{zindex;width;height;image;frameX;frameY;maxFrame;x;y;fps;countFrame;frameInterval;frameTimer;canvasStack;canavsElement;context;game;images;loadedImages;imagesLoaded=!1;monsterPhase;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.game=e,this.monsterPhase=t,this.width=this.game.width,this.height=this.game.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.image=document.getElementById("monster"),this.frameX=0,this.frameY=0,this.maxFrame=6,this.x=this.game.width/2-.243*this.game.width,this.y=this.game.width/3,this.fps=10,this.countFrame=0,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.images={eatImg:"./assets/images/eat1"+this.monsterPhase+".png",idleImg:"./assets/images/idle1"+this.monsterPhase+".png",spitImg:"./assets/images/spit1"+this.monsterPhase+".png",dragImg:"./assets/images/drag1"+this.monsterPhase+".png"},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.changeToIdleAnimation(),this.imagesLoaded=!0,x&&x()}))}update(e){this.frameTimer>=this.frameInterval?(this.frameTimer=0,this.frameX<this.maxFrame?this.frameX++:this.frameX=0):this.frameTimer+=e,this.draw()}draw(){this.imagesLoaded&&this.context.drawImage(this.image,770*this.frameX,1386*this.frameY,768,1386,.5*this.x,.1*this.y,this.width/2*1.5,this.height/1.5*1.5)}changeImage(e){this.image.src=e}changeToDragAnimation(){this.maxFrame=6,this.image=this.loadedImages.dragImg}changeToEatAnimation(){this.maxFrame=12,this.image=this.loadedImages.eatImg}changeToIdleAnimation(){this.maxFrame=6,this.image=this.loadedImages.idleImg}changeToSpitAnimation(){this.maxFrame=12,this.image=this.loadedImages.spitImg}handleStoneDrop(e){e.detail.isCorrect?this.changeToEatAnimation():this.changeToSpitAnimation()}handleLoadPuzzle(e){this.changeToIdleAnimation()}dispose(){this.unregisterEventListener()}onClick(e,t){if(Math.sqrt((e-this.x-this.width/4)*(e-this.x-this.width/4)+(t-this.y-this.height/2.2)*(t-this.y-this.height/2.2))<=100)return!0}}},"./src/components/popups/pause-popup.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>o});var a=x("./src/components/buttons/index.ts"),i=x("./src/common/index.ts"),s=x("./src/components/index.ts"),_=x("./src/components/popups/sure-popup.ts"),n=x("./src/constants/index.ts");class o{canvas;context;cancelButton;retryButton;closeButton;imagesLoaded=!1;pop_up_image;callback;switchToLevelSelection;reloadScene;gameplayData;audioPlayer;retrySurePopup;CloseSurePopup;isRetryButtonClicked=!1;isCloseButtonClicked=!1;constructor(e,t,x,o,r){this.canvas=e,this.callback=t,this.gameplayData=r,this.switchToLevelSelection=x,this.reloadScene=o;const d=document.getElementById("canvas");this.context=d.getContext("2d"),this.audioPlayer=new s.AudioPlayer,this.cancelButton=new a.CancelButton(this.context,this.canvas),this.retryButton=new a.RetryButton(this.context,this.canvas,.55*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.19*this.canvas.width/2),this.closeButton=new a.CloseButton(this.context,this.canvas,.25*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.19*this.canvas.width/2),(0,i.loadImages)({pop_up_image:n.POPUP_BG_IMG},(e=>{this.pop_up_image=e.pop_up_image,this.imagesLoaded=!0})),this.retrySurePopup=new _.default(this.canvas,this.yesRetryCallback,this.noRetryCallback),this.CloseSurePopup=new _.default(this.canvas,this.switchToLevelSelection,this.noCloseCallback)}yesRetryCallback=()=>{this.playClickSound(),this.reloadScene(this.gameplayData,"GamePlay")};noRetryCallback=()=>{this.isRetryButtonClicked&&(this.isRetryButtonClicked=!1,this.callback())};noCloseCallback=()=>{this.isCloseButtonClicked&&(this.isCloseButtonClicked=!1,this.callback())};addListner=()=>{document.getElementById("canvas").addEventListener(i.CLICK,this.handleMouseClick,!1)};handleMouseClick=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,s=e.clientY-x.top;this.cancelButton.onClick(a,s)&&(this.playClickSound(),this.callback()),this.retryButton.onClick(a,s)&&("english"==i.lang?(this.playClickSound(),this.dispose(),this.isRetryButtonClicked=!0,this.retrySurePopup.addListner(),this.playAreYouSureSound()):(this.playClickSound(),this.dispose(),this.reloadScene(this.gameplayData,"GamePlay"))),this.closeButton.onClick(a,s)&&("english"==i.lang?(this.playClickSound(),this.dispose(),this.isCloseButtonClicked=!0,this.CloseSurePopup.addListner(),this.playAreYouSureSound()):(this.playClickSound(),this.dispose(),this.switchToLevelSelection("GamePlay")))};draw(){this.imagesLoaded&&(this.context.fillStyle="rgba(0,0,0,0.5)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.drawImage(this.pop_up_image,.1*this.canvas.width,.2*this.canvas.height,.8*this.canvas.width,.8*this.canvas.width),this.cancelButton.draw(),this.retryButton.draw(),this.closeButton.draw(),1==this.isRetryButtonClicked&&"english"==i.lang&&this.retrySurePopup.draw(),1==this.isCloseButtonClicked&&"english"==i.lang&&this.CloseSurePopup.draw())}playClickSound=()=>{this.audioPlayer.playButtonClickSound()};playAreYouSureSound=()=>{this.audioPlayer.playAudio(n.AUDIO_ARE_YOU_SURE)};dispose=()=>{document.getElementById("canvas").removeEventListener(i.CLICK,this.handleMouseClick,!1)}}},"./src/components/popups/sure-popup.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>n});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/constants/index.ts");class n{canvas;context;yesButton;noButton;imagesLoaded=!1;pop_up_image;yesCallback;noCallback;audioPlayer;constructor(e,t,x){this.canvas=e,this.yesCallback=t,this.noCallback=x,this.context=this.canvas.getContext("2d"),this.audioPlayer=new i.AudioPlayer,this.yesButton=new s.YesButton(this.context,this.canvas,.55*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.15*this.canvas.width/2),this.noButton=new s.NoButton(this.context,this.canvas,.25*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.15*this.canvas.width/2),(0,a.loadImages)({pop_up_image:_.POPUP_BG_IMG},(e=>{this.pop_up_image=e.pop_up_image,this.imagesLoaded=!0}))}addListner=()=>{this.canvas.addEventListener(a.CLICK,this.handleMouseClick,!1)};handleMouseClick=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;this.yesButton.onClick(a,i)&&(this.playClickSound(),this.dispose(),this.yesCallback()),this.noButton.onClick(a,i)&&(this.playClickSound(),this.dispose(),this.noCallback())};draw(){if(this.imagesLoaded){this.context.fillStyle="rgba(0,0,0,0.5)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.drawImage(this.pop_up_image,.1*this.canvas.width,.2*this.canvas.height,.8*this.canvas.width,.8*this.canvas.width);this.canvas.height;this.context.fillStyle="white",this.context.font="24px Arial",this.context.fillText("Are you sure?",this.canvas.width/2,this.canvas.height/2.8),this.yesButton.draw(),this.noButton.draw()}}playClickSound=()=>{this.audioPlayer.playButtonClickSound()};dispose=()=>{this.canvas.removeEventListener(a.CLICK,this.handleMouseClick,!1)}}},"./src/components/prompt-text.ts":(e,t,x)=>{x.r(t),x.d(t,{PromptText:()=>n});var a=x("./src/events/index.ts"),i=x("./src/common/index.ts"),s=x("./src/components/index.ts"),_=x("./src/constants/index.ts");class n extends a.EventManager{width;height;levelData;currentPromptText;currentPuzzleData;canavsElement;context;prompt_image;targetStones;rightToLeft;imagesLoaded=!1;audioPlayer;isStoneDropped=!1;droppedStones=0;time=0;promptImageWidth=0;isAppForeground=!0;scale=1;isScalingUp=!0;scaleFactor=5e-4;promptImageHeight=0;promptPlayButton;constructor(e,t,x,a,_){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.width=e,this.height=t,this.levelData=a,this.rightToLeft=_,this.currentPromptText=x.prompt.promptText,this.currentPuzzleData=x,this.targetStones=this.currentPuzzleData.targetStones,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.audioPlayer=new s.AudioPlayer,this.audioPlayer.preloadPromptAudio(this.getPromptAudioUrl()),this.prompt_image=new Image,this.promptPlayButton=new Image,this.loadImages(),this.time=0,this.promptImageWidth=.65*this.width,this.promptImageHeight=.3*this.height,document.addEventListener(i.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}handleMouseDown=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;this.onClick(a,i)&&this.playSound()};getPromptAudioUrl=()=>i.Utils.getConvertedDevProdURL(this.currentPuzzleData.prompt.promptAudio);playSound=()=>{this.isAppForeground&&this.audioPlayer.playPromptAudio(i.Utils.getConvertedDevProdURL(this.currentPuzzleData.prompt.promptAudio))};onClick(e,t){return Math.sqrt(e-this.width/3)<12&&Math.sqrt(t-this.height/5.5)<10}setCurrrentPuzzleData(e){this.currentPuzzleData=e,this.currentPromptText=e.prompt.promptText,this.targetStones=this.currentPuzzleData.targetStones}drawRTLLang(){var e=this.width/2;const t=.26*this.height;this.context.textAlign="center";var x=this.calculateFont();const a=this.promptImageWidth,s=this.promptImageHeight;if(this.context.font=`${x}px ${i.font}, monospace`,"LetterInWord"==this.levelData.levelMeta.levelType)if("Visible"==this.levelData.levelMeta.protoType){var _=this.currentPromptText.replace(new RegExp(this.currentPuzzleData.targetStones[0],"g"),"");this.context.fillStyle="red",this.context.fillText(this.targetStones[0],e+this.context.measureText(_).width/2,t),this.context.fillStyle="black",this.context.fillText(_,e-this.context.measureText(this.targetStones[0]).width/2,t)}else this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4);else if("Word"==this.levelData.levelMeta.levelType)if("Visible"==this.levelData.levelMeta.protoType){e-=.5*this.context.measureText(this.currentPromptText).width;for(let x=this.targetStones.length-1;x>=0;x--)this.droppedStones>x||null==this.droppedStones?(this.context.fillStyle="black",this.context.fillText(this.targetStones[x],e,t)):(this.context.fillStyle="red",this.context.fillText(this.targetStones[x],e,t)),e=e+this.context.measureText(this.targetStones[x]).width+5}else this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4);else if("audioPlayerWord"==this.levelData.levelMeta.levelType){const e=1.25*(this.width-a),t=.33*(this.height-s);this.context.drawImage(this.promptPlayButton,e,t,a/4,s/4)}else"Visible"==this.levelData.levelMeta.protoType?(this.context.fillStyle="black",this.context.fillText(this.currentPromptText,e,t)):this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4)}drawOthers(){const e=this.currentPromptText.split(""),t=(this.width,.28*this.height),x=this.promptImageWidth,a=this.promptImageHeight;var s=this.calculateFont();this.context.font=`${s}px ${i.font}, monospace`;let _=this.width/2-this.context.measureText(this.currentPromptText).width/2,n=0;var o=this.currentPuzzleData.targetStones[0].split("");for(let i=0;i<e.length;i++){switch(this.levelData.levelMeta.levelType){case"LetterInWord":if("Visible"==this.levelData.levelMeta.protoType){o.includes(e[i])?(o=o.slice(1,o.length),this.context.fillStyle="red",this.context.fillText(e[i],_,t)):(this.context.fillStyle="black",this.context.fillText(e[i],_,t));break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);case"Word":if("Visible"==this.levelData.levelMeta.protoType){this.droppedStones>i||null==this.droppedStones?(this.context.fillStyle="black",this.context.fillText(e[i],_,t)):(this.context.fillStyle="red",this.context.fillText(e[i],_,t));break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);case"SoundWord":this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);break;default:if("Visible"==this.levelData.levelMeta.protoType){this.context.fillStyle="black",this.context.fillText(this.currentPromptText,this.width/2.1,t);break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4)}n=(this.context.measureText(e[i]).width+this.context.measureText(e[i+1]).width)/2,_+=n}}draw(e){if(this.updateScaling(),this.time=e<17?this.time+Math.floor(e):this.time+16,Math.floor(this.time)>=1910&&Math.floor(this.time)<=1926&&this.playSound(),!this.isStoneDropped){const e=this.promptImageWidth*this.scale,t=this.promptImageHeight*this.scale,x=(this.width-e)/2,a=(this.height-t)/5;this.context.drawImage(this.prompt_image,x,a,e,t),this.context.fillStyle="black",this.rightToLeft?this.drawRTLLang():this.drawOthers()}}handleStoneDrop(e){this.isStoneDropped=!0}handleLoadPuzzle(e){this.droppedStones=0,this.currentPuzzleData=this.levelData.puzzles[e.detail.counter],this.currentPromptText=this.currentPuzzleData.prompt.promptText,this.targetStones=this.currentPuzzleData.targetStones,this.audioPlayer.preloadPromptAudio(this.getPromptAudioUrl()),this.isStoneDropped=!1,this.time=0}dispose(){document.removeEventListener(i.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.unregisterEventListener()}droppedStoneIndex(e){this.droppedStones=e}calculateFont(){return this.promptImageWidth/this.currentPromptText.length>35?35:.65*this.width/this.currentPromptText.length}updateScaling(){this.isScalingUp?(this.scale+=this.scaleFactor,this.scale>=1.05&&(this.isScalingUp=!1)):(this.scale-=this.scaleFactor,this.scale<=1&&(this.scale=1,this.isScalingUp=!0))}handleVisibilityChange=()=>{"hidden"==document.visibilityState&&(this.audioPlayer.stopAllAudios(),this.isAppForeground=!1),"visible"==document.visibilityState&&(this.isAppForeground=!0)};async loadImages(){const e=this.loadImage(this.prompt_image,_.PROMPT_TEXT_BG),t=this.loadImage(this.promptPlayButton,_.PROMPT_PLAY_BUTTON);await Promise.all([e,t]),this.imagesLoaded=!0}loadImage(e,t){return new Promise(((x,a)=>{e.onload=()=>{x()},e.src=t,e.onerror=e=>{a(e)}}))}}},"./src/components/stone-handler.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>o});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts"),s=x("./src/components/index.ts"),_=x("./src/data/index.ts"),n=x("./src/constants/index.ts");class o extends i.EventManager{context;canvas;currentPuzzleData;targetStones;stonePos;pickedStone;foilStones=new Array;answer="";puzzleNumber;levelData;correctAnswer;puzzleStartTime;showTutorial=null==_.GameScore.getDatafromStorage().length;correctStoneAudio;tutorial;correctTargetStone;stonebg;audioPlayer;feedbackAudios;timerTickingInstance;isGamePaused=!1;constructor(e,t,x,i,_,o){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.context=e,this.canvas=t,this.puzzleNumber=x,this.levelData=i,this.setTargetStone(this.puzzleNumber),this.initializeStonePos(),this.correctStoneAudio=new Audio(n.AUDIO_PATH_CORRECT_STONE),this.correctStoneAudio.loop=!1,this.feedbackAudios=this.convertFeedBackAudiosToList(_),this.puzzleStartTime=new Date,this.tutorial=new s.Tutorial(e,t.width,t.height,x),this.stonebg=new Image,this.stonebg.src=n.ASSETS_PATH_STONE_PINK_BG,this.audioPlayer=new s.AudioPlayer,this.stonebg.onload=e=>{this.createStones(this.stonebg)},this.audioPlayer=new s.AudioPlayer,this.timerTickingInstance=o,document.addEventListener(a.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}createStones(e){const t=this.getFoilStones();for(let x=0;x<t.length;x++)t[x]==this.correctTargetStone&&this.tutorial.updateTargetStonePositions(this.stonePos[x]),this.foilStones.push(new a.StoneConfig(this.context,this.canvas.width,this.canvas.height,t[x],this.stonePos[x][0],this.stonePos[x][1],e,this.timerTickingInstance,x==t.length-1?this.tutorial:null))}draw(e){for(let t=0;t<this.foilStones.length;t++)this.foilStones[t].draw(e);this.foilStones[this.foilStones.length-1].frame>=100&&!this.isGamePaused&&this.timerTickingInstance.update(e)}drawWordPuzzleLetters(e,t,x){for(let a=0;a<this.foilStones.length;a++)t(a)&&this.foilStones[a].draw(e,Object.keys(x).length>1&&void 0!==x[a]);this.foilStones[this.foilStones.length-1].frame>=100&&!this.isGamePaused&&this.timerTickingInstance.update(e)}initializeStonePos(){let e=32;this.stonePos=[[this.canvas.width/5-e,this.canvas.height/1.9-e],[this.canvas.width/2-e,this.canvas.height/1.15-e],[this.canvas.width/3.5+this.canvas.width/2-e,this.canvas.height/1.2-e],[this.canvas.width/4-e,this.canvas.height/1.28-e],[this.canvas.width/7-e,this.canvas.height/1.5-e],[this.canvas.width/2.3+this.canvas.width/2.1-e,this.canvas.height/1.9-e],[this.canvas.width/2.3+this.canvas.width/2.1-e,this.canvas.height/1.42-e],[this.canvas.width/6-e,this.canvas.height/1.1-e]],this.stonePos=this.stonePos.sort((()=>Math.random()-.5))}setTargetStone(e){this.currentPuzzleData=this.levelData.puzzles[e],this.targetStones=[...this.currentPuzzleData.targetStones],this.correctTargetStone=this.targetStones.join("")}handleStoneDrop(e){this.foilStones=[]}handleLoadPuzzle(e){this.foilStones=[],this.tutorial.setPuzzleNumber(e.detail.counter),this.puzzleNumber=e.detail.counter,this.setTargetStone(this.puzzleNumber),this.initializeStonePos(),this.createStones(this.stonebg)}dispose(){document.removeEventListener(a.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.unregisterEventListener()}isStoneLetterDropCorrect(e,t,x=!1){const a=x?e==this.correctTargetStone.substring(0,e.length):e==this.correctTargetStone;return this.processLetterDropFeedbackAudio(t,a,x,e),a}processLetterDropFeedbackAudio(e,t,x,a){if(t){(x?a===this.getCorrectTargetStone():t)?this.playCorrectAnswerFeedbackSound(e):this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,(0,n.AUDIO_PATH_CHEERING_FUNC)(2))}else this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,n.AUDIO_PATH_MONSTER_SPIT,Math.round(Math.random())>0?n.AUDIO_PATH_MONSTER_DISSAPOINTED:null)}getCorrectTargetStone(){return this.correctTargetStone}getFoilStones(){this.currentPuzzleData.targetStones.forEach((e=>{const t=this.currentPuzzleData.foilStones.indexOf(e);-1!==t&&this.currentPuzzleData.foilStones.splice(t,1)}));const e=this.currentPuzzleData.targetStones.length+this.currentPuzzleData.foilStones.length;if(e>8){const t=e-8;this.currentPuzzleData.foilStones.splice(0,t)}return this.currentPuzzleData.targetStones.forEach((e=>{this.currentPuzzleData.foilStones.push(e)})),this.currentPuzzleData.foilStones.sort((()=>Math.random()-.5))}handleVisibilityChange=()=>{this.audioPlayer.stopAllAudios(),this.correctStoneAudio.pause()};convertFeedBackAudiosToList(e){return[e.fantastic,e.great,e.amazing]}setGamePause(e){this.isGamePaused=e}playCorrectAnswerFeedbackSound(e){const t=a.Utils.getRandomNumber(1,3).toString();this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,(0,n.AUDIO_PATH_CHEERING_FUNC)(t),n.AUDIO_PATH_POINTS_ADD,a.Utils.getConvertedDevProdURL(this.feedbackAudios[e])),this.correctStoneAudio.play()}resetStonePosition(e,t,x){const a=t,i=x;if(a&&i&&a.text&&"number"==typeof i.origx&&"number"==typeof i.origy){const t=50,x=e/2;a.x=a.text.length<=3&&i.origx<t&&i.origx<x?i.origx+25:i.origx,a.y=i.origy}return a}computeCursorDistance(e,t,x){return Math.sqrt((e-x.x)**2+(t-x.y)**2)}handlePickStoneUp(e,t){let x=null,a=0;for(let i of this.foilStones){if(this.computeCursorDistance(e,t,i)<=40){x=i,x.foilStoneIndex=a;break}a++}return x}handleHoveringToAnotherStone(e,t,x){let a=null,i=0;for(let s of this.foilStones){if(this.computeCursorDistance(e,t,s)<=40&&x(s.text,i)){a=s,a.foilStoneIndex=i;break}i++}return a}handleMovingStoneLetter(e,t,x){const a=e,i=this.canvas.getBoundingClientRect();return a.x=t-i.left,a.y=x-i.top,a}}},"./src/components/timer-ticking.ts":(e,t,x)=>{x.r(t),x.d(t,{TimerTicking:()=>n});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts"),s=x("./src/components/index.ts"),_=x("./src/constants/index.ts");class n extends i.EventManager{width;height;timerWidth;timerHeight;widthToClear;timer;isTimerStarted;isTimerEnded;isTimerRunningOut;canavsElement;context;timer_full;pauseButtonClicked;images;loadedImages;callback;imagesLoaded=!1;startMyTimer=!0;isMyTimerOver=!1;isStoneDropped=!1;audioPlayer;playLevelEndAudioOnce=!0;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.width=e,this.height=t,this.widthToClear=this.width/3.4,this.timerHeight=112,this.timerWidth=888,this.callback=x,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.timer=0,this.isTimerStarted=!1,this.isTimerEnded=!1,this.isTimerRunningOut=!1,this.audioPlayer=new s.AudioPlayer,this.playLevelEndAudioOnce=!0,this.images={timer_empty:_.TIMER_EMPTY,rotating_clock:_.ROTATING_CLOCK,timer_full:_.TIMER_FULL},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}startTimer(){this.readyTimer(),this.startMyTimer=!0,this.isMyTimerOver=!1}readyTimer(){this.timer=0}update(e){this.startMyTimer&&!this.isStoneDropped&&(this.timer+=.008*e),40!=Math.floor(.87*this.width-.87*this.width*this.timer*.01)||this.isMyTimerOver||(this.playLevelEndAudioOnce&&this.audioPlayer.playAudio(_.AUDIO_TIMEOUT),this.playLevelEndAudioOnce=!1),.87*this.width-.87*this.width*this.timer*.01<0&&!this.isMyTimerOver&&(this.isMyTimerOver=!0,this.callback(!0))}draw(){this.imagesLoaded&&(this.context.drawImage(this.loadedImages.timer_empty,0,.1*this.height,this.width,.05*this.height),this.context.drawImage(this.loadedImages.rotating_clock,0,.09*this.height,.14*this.width,.065*this.height),this.context.drawImage(this.loadedImages.timer_full,0,0,this.timerWidth-this.timerWidth*this.timer*.01,this.timerHeight,.14*this.width,.099*this.height,.87*this.width-.87*this.width*this.timer*.01,.05*this.height))}handleStoneDrop(e){this.isStoneDropped=!0}handleLoadPuzzle(e){this.playLevelEndAudioOnce=!0,this.isStoneDropped=!1,this.startTimer()}dispose(){this.unregisterEventListener()}}},"./src/components/trail-particles.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>a});class a{ctx;particles;mouse;isDiamond;constructor(e){this.ctx=e.getContext("2d"),this.particles=[],this.mouse={x:void 0,y:void 0},this.isDiamond=!1}init(){this.draw()}draw(){this.drawTrail();let e=[];for(let t=0;t<this.particles.length;t++)this.particles[t].time<=this.particles[t].ttl&&e.push(this.particles[t]);this.particles=e}drawTrail(){for(let e=0;e<this.particles.length;e++)this.particles[e].update(),this.isDiamond=!this.isDiamond,this.particles[e].draw(this.isDiamond)}addTrailParticlesOnMove(e,t){this.mouse.x=e,this.mouse.y=t,this.particles.push(new i(this.ctx,this.mouse))}resetParticles(){this.mouse.x=void 0,this.mouse.y=void 0}}class i{ctx;start;end;size;style;time;ttl;x;y;rgb;hyp;starX;starY;starAngle;constructor(e,t){const x=this.determineValueByScreenWidth(30,15),a=this.determineValueByScreenWidth(30,15),i=this.determineValueByScreenWidth(3,.5),s=this.determineValueByScreenWidth(2,.5);this.ctx=e,this.rgb=["rgb(255,255,255)","rgb(249,217,170)","rgb(244,182,81)","rgb(244,159,34)"],this.start={x:t.x+this.getRandomInt(-x,x),y:t.y+this.getRandomInt(-a,a),size:this.determineValueByScreenWidth(3,2)},this.end={x:this.start.x+this.getRandomInt(-i,i),y:this.start.y+this.getRandomInt(-s,s)},this.x=this.start.x,this.y=this.start.y,this.size=this.start.size,this.style=this.rgb[this.getRandomInt(0,this.rgb.length-1)],this.time=0,this.ttl=75,this.hyp=0,this.starX=0,this.starY=0,this.starAngle=0}determineValueByScreenWidth(e,t){return window.screen.width>768?e:t}update(){if(this.time<=this.ttl){const e=1-(this.ttl-this.time)/this.ttl;this.size=this.start.size*(1-this.easeOutQuart(e)),this.x=this.x+.01*(this.end.x-this.x),this.y=this.y+.01*(this.end.y-this.y)}this.time++}draw(e){e?this.starParticle():this.circleParticle()}circleParticle(){this.ctx.fillStyle=this.style,this.ctx.beginPath(),this.ctx.arc(this.x,this.y,this.size,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill()}starParticle(){this.ctx.fillStyle=this.style,this.ctx.beginPath(),this.ctx.moveTo(this.x,this.y-this.size),this.ctx.lineTo(this.x+this.size,this.y),this.ctx.lineTo(this.x,this.y+this.size),this.ctx.lineTo(this.x-this.size,this.y),this.ctx.closePath(),this.ctx.fill()}getRandomInt(e,t){return Math.round(Math.random()*(t-e))+e}easeOutQuart(e){return 1-Math.pow(1-e,4)}}},"./src/components/tutorial.ts":(e,t,x)=>{x.r(t),x.d(t,{Tutorial:()=>_});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts"),s=x("./src/data/index.ts");class _{width;height;context;tutorialImg;imagesLoaded=!1;targetStonePositions;startx;starty;endx;endy;endTutorial=!1;puzzleNumber;playMnstrClkTtrlAnim=!0;totalTime=0;monsterStoneDifference=0;x;y;dx;dy;absdx;absdy;startRipple=!1;drawRipple;constructor(e,t,x,s){this.width=t,this.height=x,this.context=e,this.startx=0,this.starty=0,this.endx=this.width/2,this.endy=this.height/2,this.puzzleNumber=s>=0?s:null,this.tutorialImg=new Image,this.tutorialImg.src=i.TUTORIAL_HAND,this.drawRipple=(0,a.createRippleEffect)(this.context),this.tutorialImg.onload=()=>{this.imagesLoaded=!0}}updateTargetStonePositions(e){this.startx=e[0]-22,this.starty=e[1]-50,this.monsterStoneDifference=Math.sqrt((this.startx-this.endx)*(this.startx-this.endx)+(this.starty-this.endy)*(this.starty-this.endy)),this.animateImage()}isMobile(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}setTutorialEnd(e){this.endTutorial=e}animateImage(){this.x=this.startx,this.y=this.starty,this.dx=(this.endx-this.startx)/5e3,this.dy=(this.endy-this.starty)/5e3,this.absdx=this.isMobile()?3*Math.abs(this.dx):Math.abs(this.dx),this.absdy=this.isMobile()?3*Math.abs(this.dy):Math.abs(this.dy),this.setTutorialEnd(!1)}draw(e,t,x){if(this.imagesLoaded&&!this.endTutorial&&this.shouldPlayTutorial()){this.x=this.dx>=0?this.x+this.absdx*e:this.x-this.absdx*e,this.y=this.dy>=0?this.y+this.absdy*e:this.y-this.absdy*e;const a=this.x-this.endx+this.absdx,i=this.y-this.endy+this.absdy;let s=100*Math.sqrt(a*a+i*i)/this.monsterStoneDifference;if(s<15)s>1?this.createHandScaleAnimation(e,this.endx,this.endy+30,!0):(this.x=this.startx,this.y=this.starty);else if(s>80)this.createHandScaleAnimation(e,this.startx+15,this.starty+10,!1);else{let e=this.context.globalAlpha;this.context.globalAlpha=.4,this.context.drawImage(t,this.x,this.y+20,x,x),this.context.globalAlpha=e,this.context.drawImage(this.tutorialImg,this.x+15,this.y+10)}}}createHandScaleAnimation(e,t,x,a){this.totalTime+=Math.floor(e);const i=this.sinusoidalInterpolation(this.totalTime,1,1.5,500),s=this.tutorialImg.width*i,_=this.tutorialImg.height*i;this.context.drawImage(this.tutorialImg,t,x,s,_),!a&&this.drawRipple(t+.02*this.width,x+this.tutorialImg.height/2,!1)}sinusoidalInterpolation(e,t,x,a){const i=(x-t)/2,s=Math.PI/a;return t+i*Math.sin(s*e)}clickOnMonsterTutorial(e){if(this.shouldPlayMonsterClickTutorialAnimation()){const t=2e3,x=this.height/1.9+this.tutorialImg.height/.8,a=this.height/1.9+this.tutorialImg.height/.8-this.tutorialImg.height;let i;const s=this.endx;this.totalTime<t/2?(i=a+this.totalTime/(t/2)*(x-a),this.drawRipple(s,this.height/1.9+this.tutorialImg.height/1.5,!0)):(i=x-(this.totalTime-t/2)/(t/2)*(x-a),this.drawRipple(s,this.height/1.9+this.tutorialImg.height/1.2+this.tutorialImg.height)),this.context.drawImage(this.tutorialImg,s,i,this.tutorialImg.width,this.tutorialImg.height),i<=a&&(this.totalTime=0),this.totalTime+=e}}shouldPlayTutorial(){return s.GameScore.getAllGameLevelInfo().length<=0&&0==this.puzzleNumber}shouldPlayMonsterClickTutorialAnimation(){return s.GameScore.getAllGameLevelInfo().length<=0&&this.playMnstrClkTtrlAnim}setPuzzleNumber(e){this.puzzleNumber=e}setPlayMonsterClickAnimation(e){this.playMnstrClkTtrlAnim=e}}},"./src/compositions/background.ts":(e,t,x)=>{x.r(t),x.d(t,{BACKGROUND_ASSET_LIST:()=>_,autumBgDrawing:()=>d,createBackground:()=>n,defaultBgDrawing:()=>r,levelSelectBgDrawing:()=>l,loadDynamicBgAssets:()=>o,winterBgDrawing:()=>c});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");const s=document.getElementById("background"),_={summer:{BG_GROUP_IMGS:i.DEFAULT_BG_GROUP_IMGS,draw:r},autumn:{BG_GROUP_IMGS:i.AUTUMN_BG_GROUP_IMGS,draw:d},winter:{BG_GROUP_IMGS:i.WINTER_BG_GROUP_IMGS,draw:c}};async function n(e,t,x,i,s){return{...{...s(e,t,x,{...await(0,a.syncLoadingImages)(i)})}}}const o=(e,t)=>{const x=Object.keys(t);let a=Math.floor(e/10)%x.length;return e>=30&&(a%=3),{...t[x[a]]}};function r(e,t,x,a){return{draw:()=>{s.className="",s.classList.add("summer-bg"),e.drawImage(a?.ASSETS_PATH_TOTEM,.6*t,x/6,t,x/2),e.drawImage(a?.ASSETS_PATH_FENCE,.4*-t,x/3,t,x/3),e.drawImage(a?.ASSETS_PATH_HILL,.25*-t,x/2,1.5*t,x/2)}}}function d(e,t,x,a){return{draw:()=>{s.className="",s.classList.add("autumn-bg"),e.drawImage(a.AUTUMN_PILLAR_1,.38*t,x/6,t/1.2,x/2),e.drawImage(a.AUTUMN_FENCE_1,.4*-t,x/4,t,x/2),e.drawImage(a.AUTUMN_HILL_1,.25*-t,x/2,1.5*t,x/2)}}}function c(e,t,x,a){return{draw:()=>{s.className="",s.classList.add("winter-bg"),e.drawImage(a.WINTER_PILLAR_1,.38*t,x/6,t/1.2,x/2),e.drawImage(a.WINTER_FENCE_1,.4*-t,x/4,t,x/2),e.drawImage(a.WINTER_HILL_1,.25*-t,x/2,1.5*t,x/2)}}}function l(e,t,x,a){return{draw:()=>{e.drawImage(a?.LEVEL_SELECTION_BACKGROUND,0,0,t,x)}}}},"./src/compositions/index.ts":(e,t,x)=>{x.r(t),x.d(t,{BACKGROUND_ASSET_LIST:()=>a.BACKGROUND_ASSET_LIST,autumBgDrawing:()=>a.autumBgDrawing,createBackground:()=>a.createBackground,createLevelObject:()=>i.createLevelObject,defaultBgDrawing:()=>a.defaultBgDrawing,getdefaultCloudBtnsPos:()=>i.getdefaultCloudBtnsPos,levelSelectBgDrawing:()=>a.levelSelectBgDrawing,loadDynamicBgAssets:()=>a.loadDynamicBgAssets,loadLevelImages:()=>i.loadLevelImages,winterBgDrawing:()=>a.winterBgDrawing});var a=x("./src/compositions/background.ts"),i=x("./src/compositions/level-config.ts")},"./src/compositions/level-config.ts":(e,t,x)=>{x.r(t),x.d(t,{createLevelObject:()=>o,getdefaultCloudBtnsPos:()=>_,loadLevelImages:()=>n});var a=x("./src/constants/index.ts"),i=x("./src/common/index.ts");const s=e=>a.SPECIAL_LEVELS.includes(e),_=e=>[[[e.width/10,e.height/10],[e.width/2.5,e.height/10],[e.width/3+e.width/2.8,e.height/10],[e.width/10,e.height/3],[e.width/2.5,e.height/3],[e.width/3+e.width/2.8,e.height/3],[e.width/10,e.height/1.8],[e.width/2.5,e.height/1.8],[e.width/3+e.width/2.8,e.height/1.8],[e.width/2.5,e.height/1.3]]],n=()=>(0,i.syncLoadingImages)({balloonImg:a.MAP_ICON_IMG,specialBloonImg:a.MAP_ICON_SPECIAL_IMG,lockImg:a.MAP_LOCK_IMG,starImg:a.STAR_IMG});async function o(e,t,x,a){const i=s(x);return{...{x:e,y:t,index:x,isSpecial:i,...a,balloonImg:i?a?.specialBloonImg:a?.balloonImg}}}},"./src/constants/index.ts":(e,t,x)=>{x.r(t),x.d(t,{ASSETS_PATH_BG_01:()=>G,ASSETS_PATH_FENCE:()=>W,ASSETS_PATH_HILL:()=>V,ASSETS_PATH_MONSTER_IDLE:()=>Y,ASSETS_PATH_STONE_PINK_BG:()=>U,ASSETS_PATH_TOTEM:()=>H,AUDIO_ARE_YOU_SURE:()=>B,AUDIO_INTRO:()=>z,AUDIO_LEVEL_LOSE:()=>j,AUDIO_LEVEL_WIN:()=>F,AUDIO_PATH_BTN_CLICK:()=>D,AUDIO_PATH_CHEERING_FUNC:()=>N,AUDIO_PATH_CORRECT_STONE:()=>k,AUDIO_PATH_EATS:()=>P,AUDIO_PATH_MONSTER_DISSAPOINTED:()=>C,AUDIO_PATH_MONSTER_SPIT:()=>L,AUDIO_PATH_ON_DRAG:()=>O,AUDIO_PATH_POINTS_ADD:()=>A,AUDIO_TIMEOUT:()=>M,AUDIO_URL_PRELOAD:()=>R,AUTUMN_BACKGROUND_1:()=>$,AUTUMN_BG_GROUP_IMGS:()=>Me,AUTUMN_FENCE_1:()=>Q,AUTUMN_HILL_1:()=>K,AUTUMN_PILLAR_1:()=>q,AUTUMN_SIGN_1:()=>Z,BACK_BTN_IMG:()=>Ce,BAR_EMPTY:()=>oe,BAR_FULL:()=>re,ButtonClick:()=>f,CANCEL_BTN_IMG:()=>ke,CLOUD_6:()=>ge,CLOUD_7:()=>me,CLOUD_8:()=>ve,DEFAULT_BACKGROUND_1:()=>X,DEFAULT_BG_GROUP_IMGS:()=>Be,DevelopmentServer:()=>w,EndScene1:()=>I,FONT_BASE_PATH:()=>T,FeedbackAudio:()=>l,FirebaseUserClicked:()=>a,FirebaseUserInstall:()=>i,GAMEPLAY_BG_GROUP_IMGS:()=>Oe,GameScene1:()=>E,IntroMusic:()=>h,IsCached:()=>d,LEVEL_INDICATOR:()=>ne,LEVEL_SELECTION_BACKGROUND:()=>ie,LevelEndAudio:()=>m,LevelSelection1:()=>y,MAP_BTN_IMG:()=>ye,MAP_ICON_IMG:()=>Ee,MAP_ICON_SPECIAL_IMG:()=>Ie,MAP_LOCK_IMG:()=>Te,MonsterAudio:()=>c,NEXT_BTN_IMG:()=>Le,NativePlayButton:()=>n,PAUSE_BTN_IMG:()=>Se,PIN_STAR_1:()=>fe,PIN_STAR_2:()=>ue,PIN_STAR_3:()=>pe,PLAY_BTN_IMG:()=>we,POPUP_BG_IMG:()=>De,PROMPT_PLAY_BUTTON:()=>_e,PROMPT_TEXT_BG:()=>se,PWAInstallStatus:()=>s,PhraseAudio:()=>g,PreviousPlayedLevel:()=>o,PromptAudio:()=>b,RETRY_BTN_IMG:()=>Ae,ROTATING_CLOCK:()=>ce,SCENE_NAME_GAME_PLAY:()=>Re,SCENE_NAME_LEVEL_END:()=>Ue,SCENE_NAME_LEVEL_SELECT:()=>Fe,SCENE_NAME_START:()=>je,SPECIAL_LEVELS:()=>He,STAR_IMG:()=>Pe,StartScene1:()=>S,StoneMusic:()=>p,StoreMonsterPhaseNumber:()=>r,TIMER_EMPTY:()=>de,TIMER_FULL:()=>le,TUTORIAL_HAND:()=>he,TimeOver:()=>u,UrlSubstring:()=>v,UserCancelled:()=>_,WINTER_BACKGROUND_1:()=>J,WINTER_BG_GROUP_IMGS:()=>ze,WINTER_FENCE_1:()=>xe,WINTER_HILL_1:()=>ee,WINTER_PILLAR_1:()=>ae,WINTER_SIGN_1:()=>te,WIN_BG:()=>be,YES_BTN_IMG:()=>Ne});const a="user_clicked",i="user_installed",s="pwa_installed_status",_="user_cancel_installation",n="native_playbutton_clicked",o="storePreviousPlayedLevel",r="storeMonsterPhaseNumber",d="is_cached",c="monster_audio",l="feedback_audio",h="intro_music",b="prompt_audio",f="button_click",u="time_over",p="stone_music",g="phrase_audio",m="level_end_audio",v="/feedthemonster",w="https://feedthemonsterdev.curiouscontent.org",S="StartScene1",y="LevelSelection1",E="GameScene1",I="EndScene1",T="./assets/fonts/",P="./assets/audios/Eat.mp3",L="./assets/audios/MonsterSpit.mp3",C="./assets/audios/Disapointed-05.mp3",A="assets/audios/PointsAdd.wav",k="assets/audios/CorrectStoneFinal.mp3",N=e=>`./assets/audios/Cheering-0${e}.mp3`,D="./assets/audios/ButtonClick.mp3",O="./assets/audios/onDrag.mp3",B="./assets/audios/are-you-sure.mp3",M="./assets/audios/timeout.mp3",z="./assets/audios/intro.mp3",j="./assets/audios/LevelLoseFanfare.mp3",F="./assets/audios/LevelWinFanfare.mp3",R=["./assets/audios/intro.mp3","./assets/audios/Cheering-02.mp3","./assets/audios/Cheering-03.mp3","./assets/audios/Cheering-01.mp3","./assets/audios/onDrag.mp3","./assets/audios/timeout.mp3","./assets/audios/LevelWinFanfare.mp3","./assets/audios/LevelLoseFanfare.mp3","./assets/audios/ButtonClick.mp3","./assets/audios/Monster Spits wrong stones-01.mp3","./assets/audios/Disapointed-05.mp3","./assets/audios/MonsterSpit.mp3","./assets/audios/Eat.mp3","./assets/audios/PointsAdd.wav","./assets/audios/are-you-sure.mp3"],U="./assets/images/stone_pink.webp",H="./assets/images/Totem_v02_v01.webp",G="./assets/images/bg_v01.webp",V="./assets/images/hill_v01.webp",W="./assets/images/fence_v01.webp",Y="./assets/images/idle4.png",X="./assets/images/bg_v01.webp",$="./assets/images/Autumn_bg_v01.webp",K="./assets/images/Autumn_hill_v01.webp",q="./assets/images/Autumn_sign_v01.webp",Z="./assets/images/Autumn_sign_v01.webp",Q="./assets/images/Autumn_fence_v01.webp",J="./assets/images/Winter_bg_01.webp",ee="./assets/images/Winter_hill_v01.webp",te="./assets/images/Winter_sign_v01.webp",xe="./assets/images/Winter_fence_v01.webp",ae="./assets/images/Winter_sign_v01.webp",ie="./assets/images/map.webp",se="./assets/images/promptTextBg.webp",_e="./assets/images/promptPlayButton.webp",ne="./assets/images/levels_v01.webp",oe="./assets/images/bar_empty_v01.webp",re="./assets/images/bar_full_v01.webp",de="./assets/images/timer_empty.webp",ce="./assets/images/timer.webp",le="./assets/images/timer_full.png",he="./assets/images/tutorial_hand.webp",be="./assets/images/WIN_screen_bg.webp",fe="./assets/images/pinStar1.webp",ue="./assets/images/pinStar2.webp",pe="./assets/images/pinStar3.webp",ge="./assets/images/cloud_01.png",me="./assets/images/cloud_02.png",ve="./assets/images/cloud_03.png",we="./assets/images/Play_button.webp",Se="./assets/images/pause_v01.webp",ye="./assets/images/map_btn.webp",Ee="./assets/images/mapIcon.webp",Ie="./assets/images/map_icon_monster_level_v01.webp",Te="./assets/images/mapLock.webp",Pe="./assets/images/star.webp",Le="./assets/images/next_btn.webp",Ce="./assets/images/back_btn.webp",Ae="./assets/images/retry_btn.webp",ke="./assets/images/close_btn.webp",Ne="./assets/images/confirm_btn.webp",De="./assets/images/popup_bg_v01.webp",Oe={ASSETS_PATH_TOTEM:H,DEFAULT_BACKGROUND_1:X,ASSETS_PATH_HILL:V,ASSETS_PATH_FENCE:W,ASSETS_PATH_MONSTER_IDLE:Y},Be={DEFAULT_BACKGROUND_1:X,ASSETS_PATH_HILL:V,ASSETS_PATH_TOTEM:H,ASSETS_PATH_FENCE:W},Me={AUTUMN_BACKGROUND_1:$,AUTUMN_HILL_1:K,AUTUMN_PILLAR_1:q,AUTUMN_SIGN_1:Z,AUTUMN_FENCE_1:Q},ze={WINTER_BACKGROUND_1:J,WINTER_HILL_1:ee,WINTER_SIGN_1:te,WINTER_FENCE_1:xe,WINTER_PILLAR_1:ae},je="StartScene",Fe="LevelSelection",Re="GamePlay",Ue="LevelEnd",He=[5,13,20,30,42]},"./src/data/api-data.ts":(e,t,x)=>{x.r(t),x.d(t,{URL:()=>i,getData:()=>_,getFtmData:()=>s});var a=x("./src/common/index.ts");const i="./lang/"+a.lang+"/ftm_"+a.lang+".json";function s(){return fetch(i,{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>e.json().then((e=>e))))}async function _(){return await s()}},"./src/data/custom-fonts.ts":(e,t,x)=>{x.r(t),x.d(t,{customFonts:()=>a});const a={default:"Atma-SemiBold",english:"Atma-SemiBold",swahili:"Atma-SemiBold",wolof:"Atma-SemiBold",tajik:"Atma-SemiBold",marathi:"Atma-SemiBold",amharic:"Atma-SemiBold",punjabi:"Atma-SemiBold",tamil:"Atma-SemiBold",sepedi:"Atma-SemiBold",gujarati:"Atma-SemiBold",telugu:"Atma-SemiBold",tsonga:"Atma-SemiBold",malay:"Atma-SemiBold",ndebele:"Atma-SemiBold",venda:"Atma-SemiBold",siswati:"Atma-SemiBold",tswana:"Atma-SemiBold",thai:"Atma-SemiBold",fula:"Atma-SemiBold",farsi:"Atma-SemiBold",burmese:"Atma-SemiBold",bengali:"Atma-SemiBold",Azerbaijani:"Atma-SemiBold",Sesotho:"Atma-SemiBold",Georgian:"Atma-SemiBold",BrazilianPortuguese:"Atma-SemiBold",Somali:"Atma-SemiBold",Hausa:"Atma-SemiBold",Igbo:"Atma-SemiBold",HatianCreole:"Atma-SemiBold",Oromo:"Atma-SemiBold",Luganda:"Atma-SemiBold",Yoruba:"Atma-SemiBold",Khmer:"Atma-SemiBold",Javanese:"Atma-SemiBold",Urdu:"Atma-SemiBold",Kinyarwanda:"Atma-SemiBold",Shona:"Atma-SemiBold",Kurdish:"Atma-SemiBold",French:"Atma-SemiBold",isiXhosa:"Atma-SemiBold",Afrikaans:"Atma-SemiBold",Nepali:"Atma-SemiBold",Ukrainian:"Atma-SemiBold",Hindi:"Atma-SemiBold",Tagalog:"Atma-SemiBold",Vietnamese:"Atma-SemiBold",Pashto:"Atma-SemiBold",Twi:"Atma-SemiBold",Arabic:"Atma-SemiBold"}},"./src/data/data-modal.ts":(e,t,x)=>{x.r(t),x.d(t,{DataModal:()=>a,FeedbackAudios:()=>_,FeedbackTexts:()=>s,FoilStone:()=>r,LevelMeta:()=>l,Levels:()=>n,OtherAudios:()=>i,Prompt:()=>c,Puzzles:()=>o,TargetStone:()=>d});class a{title;otherAudios;levels;FeedbackTexts;FeedbackAudios;rightToLeft;majVersion;minVersion;version;constructor(e,t,x,a,n,o,r,d,c){this.title=e,this.otherAudios=new i(t),this.levels=this.getLevels(x),this.FeedbackTexts=new s(a),this.FeedbackAudios=new _(o),this.rightToLeft=n,this.majVersion=r,this.minVersion=d,this.version=c}getLevels(e){let t=[];for(let x=0;x<e.length;x++)t.push(new n(e[x]));return t}}class i{selctYourPlayer;watchMeGrow;areYouSure;constructor(e){this.selctYourPlayer=e["Select your player"],this.watchMeGrow=e["Watch me grow"],this.areYouSure=e["Are you sure"]}}class s{fantastic;great;amazing;constructor(e){e.length>=1&&(this.fantastic=e[0]),e.length>=2&&(this.great=e[1]),e.length>=3&&(this.amazing=e[2])}}class _{fantastic;great;amazing;constructor(e){e.length>=1&&(this.fantastic=e[0]),e.length>=2&&(this.great=e[1]),e.length>=3&&(this.amazing=e[2])}}class n{puzzles;levelMeta;levelNumber;constructor(e){this.puzzles=this.getPuzzleData(e),this.levelMeta=new l(e.LevelMeta),this.levelNumber=e.LevelNumber}getPuzzleData(e){let t=[];return e.Puzzles.map(((e,x)=>{t.push(new o(e))})),t}}class o{segmentNumber;prompt;foilStones;targetStones;constructor(e){this.segmentNumber=e.SegmentNumber,this.prompt=new c(e.prompt),this.foilStones=this.getFoilStones(e),this.targetStones=this.getTargetStones(e)}getFoilStones(e){let t=[];return e.foilstones.map(((e,x)=>{t.push(e.StoneText)})),t}getTargetStones(e){let t=[];return e.targetstones.map(((e,x)=>{t.push(e.StoneText)})),t}}class r{stoneText;constructor(e){this.stoneText=e}}class d{stoneText;constructor(){this.stoneText}}class c{promptText;promptAudio;constructor(e){this.promptText=e.PromptText,this.promptAudio=e.PromptAudio}}class l{promptFadeOut;letterGroup;levelNumber;protoType;levelType;constructor(e){this.promptFadeOut=e.PromptFadeout,this.letterGroup=e.LetterGroup,this.levelNumber=e.LevelNumber,this.protoType=e.PromptType,this.levelType=e.LevelType}}},"./src/data/game-score.ts":(e,t,x)=>{x.r(t),x.d(t,{GameScore:()=>i});var a=x("./src/common/index.ts");class i{static currentlanguage=a.lang;static setGameLevelScore(e,t){let x=this.calculateStarCount(t),a={levelName:e.levelMeta.levelType,levelNumber:e.levelMeta.levelNumber,score:t,starCount:x};this.setTotalStarCount(x);let i=this.getAllGameLevelInfo(),s=-1;for(let e=0;e<i.length;e++)if(i[e].levelNumber===a.levelNumber){s=e;break}-1!==s&&a.score>i[s].score?i[s]=a:i.push(a),localStorage.setItem(this.currentlanguage+"gamePlayedInfo",JSON.stringify(i))}static getAllGameLevelInfo(){const e=localStorage.getItem(this.currentlanguage+"gamePlayedInfo");return null==e?[]:JSON.parse(e)}static setTotalStarCount(e){let t=this.getTotalStarCount()+e;localStorage.setItem(this.currentlanguage+"totalStarCount",t)}static getTotalStarCount(){const e=localStorage.getItem(this.currentlanguage+"totalStarCount");return null==e?0:parseInt(e)}static calculateStarCount(e){return 200==e?1:300==e||400==e?2:500==e?3:0}static getDatafromStorage(){return a.Debugger.DebugMode?JSON.parse(localStorage.getItem(a.lang+"ProfileDebug")||"{}"):JSON.parse(localStorage.getItem(a.lang+"Profile")||"{}")}}},"./src/data/i18-font-mapping.ts":(e,t,x)=>{x.r(t),x.d(t,{languageFontMapping:()=>a});const a={english:"Consolas",swahili:"Consolas",wolof:"Consolas",tajik:"Consolas",marathi:"Consolas",amharic:"Consolas",punjabi:"Consolas",tamil:"Consolas",sepedi:"Consolas",gujarati:"Consolas",telugu:"Consolas",tsonga:"Consolas",malay:"Consolas",ndebele:"Consolas",venda:"NotoSans-Regular",siswati:"Consolas",tswana:"Consolas",thai:"Consolas",fula:"Consolas",farsi:"Consolas",burmese:"Consolas",bengali:"Consolas",Azerbaijani:"NotoSans-Regular",Sesotho:"Consolas",Georgian:"Consolas",BrazilianPortuguese:"Consolas",Somali:"Consolas",Hausa:"NotoSans-Regular",Igbo:"Consolas",HatianCreole:"Consolas",Oromo:"Consolas",Luganda:"Consolas",Yoruba:"Consolas",Khmer:"Consolas",Javanese:"Consolas",Urdu:"Consolas",Kinyarwanda:"Consolas",Shona:"Consolas",Kurdish:"Consolas",French:"Consolas",isiXhosa:"Consolas",Afrikaans:"Consolas",Nepali:"Consolas",Ukrainian:"Consolas",Hindi:"Consolas",Tagalog:"Consolas",Vietnamese:"NotoSans-Regular",Pashto:"Consolas",Twi:"NotoSans-Regular",Arabic:"Adobe-Arabic-Bold"}},"./src/data/index.ts":(e,t,x)=>{x.r(t),x.d(t,{DataModal:()=>i.DataModal,FeedbackAudios:()=>i.FeedbackAudios,FeedbackTexts:()=>i.FeedbackTexts,FoilStone:()=>i.FoilStone,GameScore:()=>s.GameScore,LevelMeta:()=>i.LevelMeta,Levels:()=>i.Levels,OtherAudios:()=>i.OtherAudios,Prompt:()=>i.Prompt,Puzzles:()=>i.Puzzles,TargetStone:()=>i.TargetStone,URL:()=>a.URL,customFonts:()=>n.customFonts,getData:()=>a.getData,getFtmData:()=>a.getFtmData,languageFontMapping:()=>_.languageFontMapping});var a=x("./src/data/api-data.ts"),i=x("./src/data/data-modal.ts"),s=x("./src/data/game-score.ts"),_=x("./src/data/i18-font-mapping.ts"),n=x("./src/data/custom-fonts.ts")},"./src/events/index.ts":(e,t,x)=>{x.r(t),x.d(t,{EventManager:()=>i});var a=x("./src/common/index.ts");class i{handler;stoneDropCallbackHandler;loadPuzzleCallbackHandler;constructor(e){this.handler=e,this.stoneDropCallbackHandler=e.stoneDropCallbackHandler,this.loadPuzzleCallbackHandler=e.loadPuzzleCallbackHandler,document.addEventListener(a.STONEDROP,this.handleStoneDroppedEvent,!1),document.addEventListener(a.LOADPUZZLE,this.handleLoadPuzzleEvent,!1)}handleStoneDroppedEvent=e=>{this.stoneDropCallbackHandler(e)};handleLoadPuzzleEvent=e=>{this.loadPuzzleCallbackHandler(e)};unregisterEventListener=()=>{document.removeEventListener(a.STONEDROP,this.handleStoneDroppedEvent,!1),document.removeEventListener(a.LOADPUZZLE,this.handleLoadPuzzleEvent,!1)}}},"./src/gamepuzzles/index.ts":(e,t,x)=>{x.r(t),x.d(t,{WordPuzzleLogic:()=>a.default});var a=x("./src/gamepuzzles/wordPuzzleLogic.ts")},"./src/gamepuzzles/wordPuzzleLogic.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>a});class a{levelData;puzzleNumber;groupedLetters;droppedLetters;groupedObj;droppedHistory;hideListObj;constructor(e,t){this.levelData=e,this.puzzleNumber=t,this.groupedLetters="",this.droppedLetters="",this.groupedObj={},this.droppedHistory={},this.hideListObj={}}getTargetWord(){return this.levelData.puzzles[this.puzzleNumber]?.prompt?.promptText}getValues(){return{groupedLetters:this.groupedLetters,droppedLetters:this.droppedLetters,groupedObj:{...this.groupedObj},droppedHistory:{...this.droppedHistory},hideListObj:{...this.hideListObj}}}checkIsWordPuzzle(){return"Word"===this.levelData?.levelMeta?.levelType}updatePuzzleLevel(e){this.clearAllValues(),this.puzzleNumber=e}clearPickedUp(){this.groupedLetters="",this.groupedObj={},this.hideListObj={...this.droppedHistory}}clearAllValues(){this.groupedLetters="",this.droppedLetters="",this.groupedObj={},this.droppedHistory={},this.hideListObj={},this.puzzleNumber=0}validateShouldHideLetter(e){return!this.hideListObj[e]}handleCheckHoveredStone(e,t){const x=this.groupedLetters,a=this.getTargetWord();if(!this.droppedLetters.length&&a[0]!==x[0])return!1;const i=!x.includes(e),s=!this.groupedObj[t];return a.includes(`${this.droppedLetters}${x}${e}`)&&(i||s)}validateFedLetters(){const e=this.getTargetWord();return this.droppedLetters===e.substring(0,this.droppedLetters.length)}validateWordPuzzle(){const e=this.getTargetWord();return this.droppedLetters===e}setGroupToDropped(){this.droppedLetters=`${this.droppedLetters}${this.groupedLetters}`,this.droppedHistory={...this.droppedHistory,...this.groupedObj}}setPickUpLetter(e,t){this.hideListObj={...this.hideListObj,...this.groupedObj},this.groupedLetters=`${this.groupedLetters}${e}`,this.groupedObj[t]=e}}},"./src/sceneHandler/index.ts":(e,t,x)=>{x.r(t),x.d(t,{SceneHandler:()=>n});var a=x("./src/scenes/index.ts"),i=x("./src/data/index.ts"),s=x("./src/common/index.ts"),_=x("./src/constants/index.ts");class n{canvas;data;width;height;startScene;levelSelectionScene;gameplayScene;levelEndScene;canavsElement;context;static SceneName;loadingScreen;loading=!1;lastTime=0;toggleBtn;titleTextElement;constructor(e,t){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.toggleBtn=document.getElementById("toggle-btn"),this.titleTextElement=document.getElementById("title"),window.addEventListener("beforeinstallprompt",this.handleInstallPrompt),this.context=this.canavsElement.getContext("2d"),this.startScene=new a.StartScene(e,t,this.switchSceneToLevelSelection),n.SceneName=_.StartScene1,this.loadingScreen=new a.LoadingScene(this.width,this.height,this.removeLoading),this.startAnimationLoop()}startAnimationLoop(){const e=t=>{this.animation(t),requestAnimationFrame(e)};requestAnimationFrame(e)}devToggle(){this.toggleBtn.addEventListener("click",(()=>{this.toggleBtn.classList.toggle("on"),this.toggleBtn.classList.contains("on")?(s.Debugger.DebugMode=!0,this.toggleBtn.innerText="Dev"):(s.Debugger.DebugMode=!1,this.toggleBtn.innerText="Dev")}))}checkMonsterPhaseUpdation(){let e=i.GameScore.getTotalStarCount(),t=Math.floor(e/12)+1||1;return t<=4?t:4}animation=e=>{let t=e-this.lastTime;this.lastTime=e,this.context.clearRect(0,0,this.width,this.height),this.loading&&this.loadingScreen.draw(t),n.SceneName===_.StartScene1?this.startScene.animation(t):n.SceneName===_.LevelSelection1?this.levelSelectionScene.drawLevelSelection():n.SceneName===_.GameScene1?this.gameplayScene.draw(t):n.SceneName===_.EndScene1&&this.levelEndScene.draw(t)};switchSceneToGameplay=(e,t)=>{this.showLoading(),this.dispose(t);let x=this.data.majVersion&&this.data.minVersion?this.data.majVersion.toString()+"."+this.data.minVersion.toString():"";setTimeout((()=>{this.gameplayScene=new a.GameplayScene(this.canvas,e.currentLevelData,this.checkMonsterPhaseUpdation(),this.data.FeedbackTexts,this.data.rightToLeft,this.switchSceneToEndLevel,e.selectedLevelNumber,(()=>{this.switchSceneToLevelSelection(_.SCENE_NAME_GAME_PLAY)}),this.switchSceneToGameplay,x,this.data.FeedbackAudios),n.SceneName=_.GameScene1}),800)};switchSceneToEndLevel=(e,t,x,i)=>{this.loadingScreen.initCloud(),setTimeout((()=>{this.dispose(_.SCENE_NAME_GAME_PLAY),this.levelEndScene=new a.LevelEndScene(this.canvas,this.height,this.width,this.context,e,x,this.switchSceneToGameplay,this.switchSceneToLevelSelection,this.data,t),n.SceneName=_.EndScene1}),i?0:4e3)};switchSceneToLevelSelection=e=>{this.showLoading(),this.dispose(e),setTimeout((()=>{this.levelSelectionScene=new a.LevelSelectionScreen(this.canvas,this.data,this.switchSceneToGameplay),n.SceneName=_.LevelSelection1,this.titleTextElement.style.display="none"}),800)};dispose=e=>{e==_.SCENE_NAME_LEVEL_SELECT?this.levelSelectionScene.dispose():e===_.SCENE_NAME_GAME_PLAY?this.gameplayScene.dispose():e===_.SCENE_NAME_START?this.startScene.dispose():e==_.SCENE_NAME_LEVEL_END&&this.levelEndScene.dispose()};showLoading=()=>{this.loadingScreen.initCloud(),this.loading=!0,document.getElementById("loading").style.zIndex="3"};removeLoading=()=>{document.getElementById("loading").style.zIndex="-1",this.loading=!1};handleInstallPrompt=e=>{e.preventDefault(),localStorage.setItem(_.PWAInstallStatus,"false")}}},"./src/scenes/gameplay-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{GameplayScene:()=>d});var a=x("./src/components/index.ts"),i=x("./src/components/popups/pause-popup.ts"),s=x("./src/common/index.ts"),_=x("./src/data/index.ts"),n=x("./src/Firebase/firebase-integration.ts"),o=x("./src/constants/index.ts"),r=x("./src/gamepuzzles/index.ts");class d{width;height;monster;jsonVersionNumber;canvas;levelData;timerTicking;promptText;pauseButton;tutorial;puzzleData;id;context;levelIndicators;stonesCount=1;monsterPhaseNumber;pickedStone;puzzleStartTime;showTutorial;feedBackTexts;isPuzzleCompleted;rightToLeft;imagesLoaded=!1;switchSceneToEnd;levelNumber;loadedImages;stoneHandler;counter=0;images;handler;pickedStoneObject;pausePopup;isPauseButtonClicked=!1;background;feedBackTextCanavsElement;feedbackTextEffects;isGameStarted=!1;time=0;score=0;switchToLevelSelection;reloadScene;audioPlayer;firebaseIntegration;startTime;puzzleTime;isDisposing;resetAnimationID;trailParticles;clickTrailToggle;hasFed;wordPuzzleLogic;constructor(e,t,x,_,d,c,l,h,b,f,u){this.width=e.width,this.height=e.height,this.rightToLeft=d,this.canvas=e,this.context=this.canvas.getContext("2d",{willReadFrequently:!0}),this.trailParticles=new a.TrailEffect(e),this.monsterPhaseNumber=x||1,this.levelData=t,this.switchSceneToEnd=c,this.levelNumber=l,this.switchToLevelSelection=h,this.reloadScene=b,this.jsonVersionNumber=f,this.startGameTime(),this.startPuzzleTime(),this.isDisposing=!1,this.pauseButton=new a.PauseButton(this.context,this.canvas),this.timerTicking=new a.TimerTicking(this.width,this.height,this.loadPuzzle),this.stoneHandler=new a.StoneHandler(this.context,this.canvas,this.counter,this.levelData,u,this.timerTicking),this.tutorial=new a.Tutorial(this.context,e.width,e.height),this.promptText=new a.PromptText(this.width,this.height,this.levelData.puzzles[this.counter],this.levelData,this.rightToLeft),this.levelIndicators=new a.LevelIndicators(this.context,this.canvas,0),this.levelIndicators.setIndicators(this.counter),this.monster=new a.Monster(this.canvas,this.monsterPhaseNumber),this.pausePopup=new i.default(this.canvas,this.resumeGame,this.switchToLevelSelection,this.reloadScene,{currentLevelData:t,selectedLevelNumber:l}),this.firebaseIntegration=new n.FirebaseIntegration,this.feedbackTextEffects=new a.FeedbackTextEffects,this.audioPlayer=new a.AudioPlayer,this.handler=document.getElementById("canvas"),this.puzzleData=t.puzzles,this.feedBackTexts=_,this.images={profileMonster:o.ASSETS_PATH_MONSTER_IDLE},(0,s.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}));var p=this.levelData.levelMeta.levelNumber;s.Debugger.DebugMode?localStorage.setItem(o.PreviousPlayedLevel+s.lang+"Debug",p):localStorage.setItem(o.PreviousPlayedLevel+s.lang,p),this.addEventListeners(),this.resetAnimationID=0,this.setupBg(),this.trailParticles?.init(),this.clickTrailToggle=!1,this.hasFed=!1,this.wordPuzzleLogic=new r.WordPuzzleLogic(t,this.counter)}setupBg=async()=>{this.background=new a.BackgroundComponent(this.context,this.width,this.height,this.levelData.levelMeta.levelNumber),this.background=await this.background.setupBg(),this.background?.draw()};resumeGame=()=>{this.addEventListeners(),this.isPauseButtonClicked=!1,this.stoneHandler.setGamePause(!1),this.pausePopup.dispose()};getRandomFeedBackText(e){const t=Object.keys(this.feedBackTexts)[e];return this.feedBackTexts[t]}getRandomInt(e,t){const x=Object.values(this.feedBackTexts).filter((e=>null!=e)).length-1;return Math.floor(Math.random()*(x-e+1))+e}handleMouseUp=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(Math.sqrt((x-this.monster.x-this.canvas.width/4)**2+(a-this.monster.y-this.canvas.height/2.2)**2)<=100&&this.pickedStone){const{text:e}=this.pickedStone;switch(this.levelData.levelMeta.levelType){case"LetterOnly":case"LetterInWord":this.letterPuzzle(e);break;case"Word":case"SoundWord":this.wordPuzzle(this.pickedStone)}}else if(this.pickedStone&&this.pickedStoneObject&&this.pickedStone.text&&"number"==typeof this.pickedStoneObject.origx&&"number"==typeof this.pickedStoneObject.origy){const e=50,t=this.width/2;this.pickedStone.x=this.pickedStone.text.length<=3&&this.pickedStoneObject.origx<e&&this.pickedStoneObject.origx<t?this.pickedStoneObject.origx+25:this.pickedStoneObject.origx,this.pickedStone.y=this.pickedStoneObject.origy}this.pickedStone=null,this.wordPuzzleLogic.clearPickedUp(),this.clickTrailToggle=!1};handleMouseDown=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(this.wordPuzzleLogic.checkIsWordPuzzle())this.setPickedUp(x,a);else for(let e of this.stoneHandler.foilStones){if(Math.sqrt((x-e.x)**2+(a-e.y)**2)<=40){this.pickedStoneObject=e,this.pickedStone=e,this.audioPlayer.playAudio(o.AUDIO_PATH_ON_DRAG);break}}this.clickTrailToggle=!0};setPickedUp(e,t){const x=this.stoneHandler.handlePickStoneUp(e,t);x&&(this.pickedStoneObject=x,this.pickedStone=x,this.audioPlayer.playAudio(o.AUDIO_PATH_ON_DRAG),"Word"===this.levelData?.levelMeta?.levelType&&this.wordPuzzleLogic.setPickUpLetter(x?.text,x?.foilStoneIndex))}handleMouseMove=e=>{let t=e.clientX,x=e.clientY;if(this.pickedStone){if(this.wordPuzzleLogic.checkIsWordPuzzle()){const a=this.stoneHandler.handleMovingStoneLetter(this.pickedStone,e.clientX,e.clientY);if(this.pickedStone=a,t=a.x,x=a.y,this.wordPuzzleLogic.checkIsWordPuzzle()){const e=this.stoneHandler.handleHoveringToAnotherStone(t,x,((e,t)=>this.wordPuzzleLogic.handleCheckHoveredStone(e,t)));e&&(this.wordPuzzleLogic.setPickUpLetter(e?.text,e?.foilStoneIndex),this.pickedStone=this.stoneHandler.resetStonePosition(this.width,this.pickedStone,this.pickedStoneObject),this.pickedStoneObject=e,this.pickedStone=e)}}else{let a=this.canvas.getBoundingClientRect();const i=e.clientX-a.left,s=e.clientY-a.top;this.monster.changeToDragAnimation(),this.pickedStone.x=i,this.pickedStone.y=s,t=i,x=s}this.monster.changeToDragAnimation()}this.clickTrailToggle&&this.trailParticles?.addTrailParticlesOnMove(t,x)};handleMouseClick=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;this.monster.onClick(x,a)&&(this.isGameStarted=!0,this.time=0,this.tutorial.setPlayMonsterClickAnimation(!1)),this.pauseButton.onClick(x,a)&&(this.audioPlayer.playButtonClickSound(),this.pauseGamePlay()),this.promptText.onClick(x,a)&&this.promptText.playSound()};handleTouchStart=e=>{const t=e.touches[0];this.handleMouseDown({clientX:t.clientX,clientY:t.clientY}),this.trailParticles?.resetParticles()};handleTouchMove=e=>{const t=e.touches[0];this.handleMouseMove({clientX:t.clientX,clientY:t.clientY}),this.trailParticles?.addTrailParticlesOnMove(t.clientX,t.clientY)};handleTouchEnd=e=>{const t=e.changedTouches[0];this.handleMouseUp({clientX:t.clientX,clientY:t.clientY}),this.hasFed||this.monster.changeToIdleAnimation(),this.trailParticles?.resetParticles()};draw(e){this.isGameStarted||this.isPauseButtonClicked||(this.time=this.time+e,this.time>=5e3&&(this.isGameStarted=!0,this.time=0,this.tutorial.setPlayMonsterClickAnimation(!1))),this.pauseButton.draw(),this.levelIndicators.draw(),this.promptText.draw(e),this.monster.update(e),this.timerTicking.draw(),this.trailParticles?.draw(),this.isPauseButtonClicked&&this.isGameStarted&&(this.handleStoneLetterDrawing(e),this.pausePopup.draw()),this.isPauseButtonClicked||this.isGameStarted||0==this.counter&&this.tutorial.clickOnMonsterTutorial(e),this.isPauseButtonClicked&&!this.isGameStarted&&this.pausePopup.draw(),!this.isPauseButtonClicked&&this.isGameStarted&&this.handleStoneLetterDrawing(e)}handleStoneLetterDrawing(e){if(this.wordPuzzleLogic.checkIsWordPuzzle()){const{groupedObj:t}=this.wordPuzzleLogic.getValues();this.stoneHandler.drawWordPuzzleLetters(e,(e=>this.wordPuzzleLogic.validateShouldHideLetter(e)),t)}else this.stoneHandler.draw(e)}addEventListeners(){this.handler.addEventListener(s.MOUSEUP,this.handleMouseUp,!1),this.handler.addEventListener(s.MOUSEMOVE,this.handleMouseMove,!1),this.handler.addEventListener(s.MOUSEDOWN,this.handleMouseDown,!1),this.handler.addEventListener(s.TOUCHSTART,this.handleTouchStart,!1),this.handler.addEventListener(s.TOUCHMOVE,this.handleTouchMove,!1),this.handler.addEventListener(s.TOUCHEND,this.handleTouchEnd,!1),this.handler.addEventListener(s.CLICK,this.handleMouseClick,!1),document.addEventListener(s.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}removeEventListeners(){this.handler.removeEventListener(s.CLICK,this.handleMouseClick,!1),this.handler.removeEventListener("mouseup",this.handleMouseUp,!1),this.handler.removeEventListener("mousemove",this.handleMouseMove,!1),this.handler.removeEventListener("mousedown",this.handleMouseDown,!1),this.handler.removeEventListener("touchstart",this.handleTouchStart,!1),this.handler.removeEventListener("touchmove",this.handleTouchMove,!1),this.handler.removeEventListener("touchend",this.handleTouchEnd,!1)}loadPuzzle=e=>{this.removeEventListeners(),this.stonesCount=1;const t=Boolean(e);if(t&&this.logPuzzleEndFirebaseEvent(!1),this.counter+=1,this.isGameStarted=!1,this.counter===this.levelData.puzzles.length)this.levelIndicators.setIndicators(this.counter),this.logLevelEndFirebaseEvent(),_.GameScore.setGameLevelScore(this.levelData,this.score),this.switchSceneToEnd(_.GameScore.calculateStarCount(this.score),this.monsterPhaseNumber,this.levelNumber,t);else{const e=new CustomEvent(s.LOADPUZZLE,{detail:{counter:this.counter}});setTimeout((()=>{this.isDisposing||this.initNewPuzzle(e)}),t?0:4500)}};dispose=()=>{this.isDisposing=!0,this.audioPlayer.stopAllAudios(),this.monster.dispose(),this.timerTicking.dispose(),this.levelIndicators.dispose(),this.stoneHandler.dispose(),this.promptText.dispose(),document.removeEventListener(s.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.removeEventListeners()};checkStoneDropped(e,t,x=!1){return this.hasFed=!0,this.stoneHandler.isStoneLetterDropCorrect(e,t,x)}letterPuzzle(e){const t=this.getRandomInt(0,1),x=this.checkStoneDropped(e,t);x&&this.handleCorrectStoneDrop(t),this.handleStoneDropEnd(x)}wordPuzzle(e){this.audioPlayer.stopFeedbackAudio(),e.x=-999,e.y=-999;const t=this.getRandomInt(0,1);this.hasFed=!0,this.wordPuzzleLogic.setGroupToDropped();const{droppedLetters:x}=this.wordPuzzleLogic.getValues(),a=this.wordPuzzleLogic.validateFedLetters();if(this.stoneHandler.processLetterDropFeedbackAudio(t,a,!0,x),a){if(this.wordPuzzleLogic.validateWordPuzzle())return this.handleCorrectStoneDrop(t),this.handleStoneDropEnd(a,"Word"),void(this.stonesCount=1);this.timerTicking.startTimer(),this.monster.changeToEatAnimation(),this.promptText.droppedStoneIndex("arabic"==s.lang?this.stonesCount:x.length),this.stonesCount++,this.resetToIdleAnimation((()=>{this.monster.changeToIdleAnimation(),this.hasFed=!1}),2e3)}else this.handleStoneDropEnd(a,"Word"),this.stonesCount=1}resetToIdleAnimation(e,t){void 0!==this.resetAnimationID&&clearTimeout(this.resetAnimationID),this.resetAnimationID=setTimeout(e,t)}handleStoneDropEnd(e,t=null){this.logPuzzleEndFirebaseEvent(e,t),this.dispatchStoneDropEvent(e),this.loadPuzzle()}handleCorrectStoneDrop=e=>{this.score+=100,this.feedbackTextEffects.wrapText(this.getRandomFeedBackText(e))};dispatchStoneDropEvent(e){const t=new CustomEvent(s.STONEDROP,{detail:{isCorrect:e}});document.dispatchEvent(t)}initNewPuzzle(e){this.removeEventListeners(),this.isGameStarted=!1,this.time=0,this.wordPuzzleLogic.updatePuzzleLevel(e?.detail?.counter),this.pickedStone=null,document.dispatchEvent(e),this.addEventListeners(),this.audioPlayer.stopAllAudios(),this.startPuzzleTime(),this.hasFed=!1}logPuzzleEndFirebaseEvent(e,t){let x=Date.now();const{droppedLetters:a}=this.wordPuzzleLogic.getValues(),i={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.jsonVersionNumber,success_or_failure:e?"success":"failure",level_number:this.levelData.levelMeta.levelNumber,puzzle_number:this.counter,item_selected:"Word"==t?null==a||null==a?"TIMEOUT":a:null==this.pickedStone||null==this.pickedStone?"TIMEOUT":this.pickedStone?.text,target:this.stoneHandler.getCorrectTargetStone(),foils:this.stoneHandler.getFoilStones(),response_time:(x-this.puzzleTime)/1e3};this.firebaseIntegration.sendPuzzleCompletedEvent(i)}logLevelEndFirebaseEvent(){let e=Date.now();const t={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.jsonVersionNumber,success_or_failure:_.GameScore.calculateStarCount(this.score)>=3?"success":"failure",number_of_successful_puzzles:this.score/100,level_number:this.levelData.levelMeta.levelNumber,duration:(e-this.startTime)/1e3};this.firebaseIntegration.sendLevelCompletedEvent(t)}startGameTime(){this.startTime=Date.now()}startPuzzleTime(){this.puzzleTime=Date.now()}pauseGamePlay=()=>{this.removeEventListeners(),this.isPauseButtonClicked=!0,this.stoneHandler.setGamePause(!0),this.pausePopup.addListner(),this.audioPlayer.stopAllAudios()};handleVisibilityChange=()=>{this.audioPlayer.stopAllAudios(),this.pauseGamePlay()}}},"./src/scenes/index.ts":(e,t,x)=>{x.r(t),x.d(t,{GameplayScene:()=>a.GameplayScene,LevelEndScene:()=>s.LevelEndScene,LevelSelectionScreen:()=>i.LevelSelectionScreen,LoadingScene:()=>_.LoadingScene,StartScene:()=>n.StartScene,TestGameplayScene:()=>o.TestGameplayScene});var a=x("./src/scenes/gameplay-scene.ts"),i=x("./src/scenes/level-selection-scene.ts"),s=x("./src/scenes/levelend-scene.ts"),_=x("./src/scenes/loading-scene.ts"),n=x("./src/scenes/start-scene.ts"),o=x("./src/scenes/test-gameplay-scene.ts")},"./src/scenes/level-selection-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelSelectionScreen:()=>d});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/data/index.ts"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/compositions/index.ts"),o=x("./src/constants/index.ts"),r=x("./src/components/buttons/index.ts");class d{canvas;data;width;height;canvasElement;context;levels;gameLevelData;callBack;audioPlayer;images;loadedImages;imagesLoaded=!1;xDown;yDown;previousPlayedLevelNumber;levelSelectionPageIndex=0;levelNumber;levelsSectionCount;unlockLevelIndex;majVersion;minVersion;firebaseIntegration;background;rightBtnSize;rightBtnX;rightBtnY;leftBtnSize;leftBtnX;leftBtnY;levelButtons;constructor(e,t,x){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height;let n=this;this.callBack=x,this.levelsSectionCount=n.data.levels.length/10>Math.floor(n.data.levels.length/10)?Math.floor(n.data.levels.length/10)+1:Math.floor(n.data.levels.length/10),this.levels=[],this.firebaseIntegration=new _.FirebaseIntegration,this.init(),this.canvasElement=document.getElementById("canvas"),this.context=this.canvasElement.getContext("2d"),this.createLevelButtons(),this.gameLevelData=s.GameScore.getAllGameLevelInfo(),this.audioPlayer=new i.AudioPlayer,this.unlockLevelIndex=-1,this.previousPlayedLevelNumber=0|parseInt(a.Debugger.DebugMode?localStorage.getItem(o.PreviousPlayedLevel+a.lang+"Debug"):localStorage.getItem(o.PreviousPlayedLevel+a.lang)),null!=this.previousPlayedLevelNumber&&(this.levelSelectionPageIndex=10*Math.floor(this.previousPlayedLevelNumber/10)),this.setupBg(),this.images={nextbtn:o.NEXT_BTN_IMG,backbtn:o.BACK_BTN_IMG},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0,"visible"===document.visibilityState&&this.audioPlayer.playAudio(o.AUDIO_INTRO)})),this.addListeners(),this.rightBtnSize=10,this.rightBtnX=.73,this.rightBtnY=1.3,this.leftBtnSize=10,this.leftBtnX=10,this.leftBtnY=1.3}async init(){const e=await(0,s.getData)();this.majVersion=e.majversion,this.minVersion=e.minversion}setupBg=async()=>{this.background=await(0,n.createBackground)(this.context,this.width,this.height,{LEVEL_SELECTION_BACKGROUND:o.LEVEL_SELECTION_BACKGROUND},n.levelSelectBgDrawing)};async createLevelButtons(){const e=await(0,n.loadLevelImages)(),t=(0,n.getdefaultCloudBtnsPos)(this.canvas)[0].map(((t,x)=>(0,n.createLevelObject)(t[0],t[1],x+1,e)));this.levels=await Promise.all(t),this.levelButtons=this.levels.map((e=>new r.LevelBloonButton(this.canvas,this.context,{...e})))}addListeners(){document.getElementById("canvas").addEventListener("mousedown",this.handleMouseDown,!1),document.addEventListener("visibilitychange",this.pausePlayAudios,!1),document.getElementById("canvas").addEventListener("touchstart",this.handleTouchStart,!1),document.getElementById("canvas").addEventListener("touchmove",this.handleTouchMove,!1)}pausePlayAudios=()=>{"visible"===document.visibilityState?this.audioPlayer.playAudio(o.AUDIO_INTRO):this.audioPlayer.stopAllAudios()};getTouches(e){return e.touches||e.originalEvent.touches}handleTouchStart=e=>{const t=this.getTouches(e)[0];this.xDown=t.clientX,this.yDown=t.clientY};handleTouchMove=e=>{if(!this.xDown||!this.yDown)return;let t=e.touches[0].clientX,x=e.touches[0].clientY,a=this.xDown-t,i=this.yDown-x;Math.abs(a)>Math.abs(i)&&(a>0?this.levelSelectionPageIndex!=10*this.levelsSectionCount-10&&(this.levelSelectionPageIndex=this.levelSelectionPageIndex+10,this.downButton(this.levelSelectionPageIndex)):(0!=this.levelSelectionPageIndex&&(this.levelSelectionPageIndex=this.levelSelectionPageIndex-10),this.downButton(this.levelSelectionPageIndex))),this.xDown=null,this.yDown=null};handleMouseDown=e=>{e.preventDefault();let t=document.getElementById("canvas").getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top,i=(e,t=1.3)=>x>=e&&x<e+this.canvas.height/10&&a>this.canvas.height/t&&a<this.canvas.height/t+this.canvas.height/10,s=i(.7*this.canvas.width),_=i(this.canvas.width/10);if(_||s){const e=this.levelSelectionPageIndex;s&&e!=10*this.levelsSectionCount-10?(this.audioPlayer.playButtonClickSound(),this.levelSelectionPageIndex=e+10,this.rightBtnSize=10.5,this.rightBtnY=1.299):_&&0!=e&&(this.audioPlayer.playButtonClickSound(),this.levelSelectionPageIndex=e-10,this.leftBtnSize=10.3,this.leftBtnY=1.299),this.downButton(this.levelSelectionPageIndex)}for(let e of this.levelButtons)e.onClick(x,a,this.levelSelectionPageIndex-1,this.unlockLevelIndex+1,(e=>{this.audioPlayer.playButtonClickSound(),this.levelNumber=e+this.levelSelectionPageIndex-1,this.startGame(this.levelNumber)}))};drawLevel(e,t){const x=e.levelData.index+this.levelSelectionPageIndex,i=x-1;this.unlockLevelIndex+1===i&&e.applyPulseEffect(),x<=this.data.levels.length&&(this.checkUnlockedLevel(t),e.draw(this.levelSelectionPageIndex,this.unlockLevelIndex,t,this.data.levels.length),a.Debugger.DebugMode&&this.context.fillText(this.data.levels[x-1].levelMeta.levelType,e.levelData.x+e.btnSize/3.5,e.levelData.y+e.btnSize/1.3))}draw(){for(let e of this.levelButtons)this.drawLevel(e,this.gameLevelData)}downButton(e){e!=10*this.levelsSectionCount-10?(this.context.drawImage(this.loadedImages.nextbtn,this.canvas.width*this.rightBtnX,this.canvas.height/this.rightBtnY,this.canvas.height/this.rightBtnSize,this.canvas.height/this.rightBtnSize),this.rightBtnSize>10&&(this.rightBtnSize=this.rightBtnSize-.025),this.rightBtnY=this.rightBtnSize>10?1.299:1.3):(this.rightBtnSize=10,this.rightBtnX=.7,this.rightBtnY=1.3),0!=e?(this.context.drawImage(this.loadedImages.backbtn,this.canvas.width/this.leftBtnX,this.canvas.height/this.leftBtnY,this.canvas.height/this.leftBtnSize,this.canvas.height/this.leftBtnSize),this.leftBtnSize>10&&(this.leftBtnSize=this.leftBtnSize-.025),this.leftBtnY=this.leftBtnSize>10?1.299:1.3):(this.leftBtnSize=10,this.leftBtnX=10,this.leftBtnY=1.3)}checkUnlockedLevel(e){if(null!=e.length)for(let t of e)this.unlockLevelIndex<parseInt(t.levelNumber)&&t.starCount>=2&&(this.unlockLevelIndex=parseInt(t.levelNumber))}startGame(e){this.dispose(),this.audioPlayer.stopAllAudios();const t={currentLevelData:{...this.data.levels[e],levelNumber:e},selectedLevelNumber:e};this.logSelectedLevelEvent(),this.callBack(t,"LevelSelection")}logSelectedLevelEvent(){const e={cr_user_id:a.pseudoId,ftm_language:a.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",level_selected:this.levelNumber};this.firebaseIntegration.sendSelectedLevelEvent(e)}drawLevelSelection(){this.imagesLoaded&&(this.background?.draw(),this.draw(),this.downButton(this.levelSelectionPageIndex))}dispose(){this.audioPlayer.stopAllAudios(),document.getElementById("canvas").removeEventListener("mousedown",this.handleMouseDown,!1),document.removeEventListener("visibilitychange",this.pausePlayAudios,!1),document.getElementById("canvas").removeEventListener("touchstart",this.handleTouchStart,!1),document.getElementById("canvas").removeEventListener("touchmove",this.handleTouchMove,!1)}}},"./src/scenes/levelend-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelEndScene:()=>o});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/compositions/index.ts"),n=x("./src/constants/index.ts");class o{canvas;height;width;images;loadedImages;imagesLoaded;id;context;monster;closeButton;retryButton;nextButton;starCount;currentLevel;switchToGameplayCB;switchToLevelSelectionCB;data;background;audioPlayer;timeouts;starDrawnCount;isLastLevel;constructor(e,t,x,_,o,r,d,c,l,h){this.canvas=e,this.height=t,this.width=x,this.context=_,this.monster=new i.Monster(this.canvas,h,this.switchToReactionAnimation),this.switchToGameplayCB=d,this.switchToLevelSelectionCB=c,this.data=l,this.starDrawnCount=0,this.closeButton=new s.CloseButton(_,e,.2*this.width-.19*this.width/2,this.height/1.25),this.retryButton=new s.RetryButton(this.context,this.canvas,.5*this.width-.19*this.width/2,this.height/1.25),this.nextButton=new s.NextButton(this.context,this.width,this.height,.8*this.width-.19*this.width/2,this.height/1.25),this.audioPlayer=new i.AudioPlayer,this.starCount=o,this.currentLevel=r,this.images={backgroundImg:n.WIN_BG,star1Img:n.PIN_STAR_1,star2Img:n.PIN_STAR_2,star3Img:n.PIN_STAR_3,winBackgroundImg:n.DEFAULT_BACKGROUND_1},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0,this.starAnimation()})),this.addEventListener(),this.audioPlayer=new i.AudioPlayer,this.setupBg(),this.isLastLevel=this.currentLevel!==this.data.levels[this.data.levels.length-1].levelMeta.levelNumber&&this.starCount>=2}setupBg=async()=>{const{BG_GROUP_IMGS:e,draw:t}=(0,_.loadDynamicBgAssets)(this.currentLevel,_.BACKGROUND_ASSET_LIST);this.background=await(0,_.createBackground)(this.context,this.width,this.height,e,t)};switchToReactionAnimation=()=>{this.starCount<=1?((0,a.isDocumentVisible)()&&this.audioPlayer.playAudio(n.AUDIO_LEVEL_LOSE),this.monster.changeToSpitAnimation()):((0,a.isDocumentVisible)()&&(this.audioPlayer.playAudio(n.AUDIO_LEVEL_WIN),this.audioPlayer.playAudio(n.AUDIO_INTRO)),this.monster.changeToEatAnimation())};draw(e){this.background?.draw(),this.imagesLoaded&&(this.context.drawImage(this.loadedImages.backgroundImg,0,0,this.width,this.height+.12*this.height),this.drawStars(),this.monster.update(e),this.closeButton.draw(),this.retryButton.draw(),this.isLastLevel&&this.nextButton.draw())}starAnimation(){this.timeouts=[{delay:500,count:1},{delay:1e3,count:2},{delay:1500,count:3}].map((e=>setTimeout((()=>{this.starDrawnCount=e.count}),e.delay)))}drawStars(){this.starCount>=1&&this.starDrawnCount>=1&&(this.context.drawImage(this.loadedImages.star1Img,.2*this.width-.19*this.width/2,.2*this.height,.19*this.width,.19*this.width),this.starCount<=3&&this.starCount>1&&this.starDrawnCount<=3&&this.starDrawnCount>1&&(this.context.drawImage(this.loadedImages.star2Img,.5*this.width-.19*this.width/2,.15*this.height,.19*this.width,.19*this.width),this.starCount>=3&&this.starDrawnCount>=3&&this.context.drawImage(this.loadedImages.star3Img,.82*this.width-.19*this.width/2,.2*this.height,.19*this.width,.19*this.width)))}addEventListener(){document.getElementById("canvas").addEventListener(a.CLICK,this.handleMouseClick,!1),document.addEventListener("visibilitychange",this.pauseAudios,!1)}handleMouseClick=e=>{var t=document.getElementById("canvas").getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(this.closeButton.onClick(x,a)&&(this.audioPlayer.playButtonClickSound(),this.switchToLevelSelectionCB("LevelEnd")),this.retryButton.onClick(x,a)){this.audioPlayer.playButtonClickSound();let e={currentLevelData:{...this.data.levels[this.currentLevel],levelNumber:this.currentLevel},selectedLevelNumber:this.currentLevel};this.switchToGameplayCB(e,"LevelEnd")}if(this.isLastLevel&&this.nextButton.onClick(x,a)){this.audioPlayer.playButtonClickSound();let e=Number(this.currentLevel)+1,t={currentLevelData:{...this.data.levels[e],levelNumber:e},selectedLevelNumber:e};this.switchToGameplayCB(t,"LevelEnd")}};pauseAudios=()=>{(0,a.isDocumentVisible)()?this.starCount>=2&&this.audioPlayer.playAudio(n.AUDIO_INTRO):this.audioPlayer.stopAllAudios()};dispose=()=>{this.monster.dispose(),this.audioPlayer.stopAllAudios(),this.timeouts.forEach((e=>clearTimeout(e))),document.getElementById("canvas").removeEventListener(a.CLICK,this.handleMouseClick,!1),document.removeEventListener("visibilitychange",this.pauseAudios,!1)}}},"./src/scenes/loading-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LoadingScene:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{canvas;height;width;context;images;loadedImages;imagesLoaded;cloudXPosition=-500;stopCloudMoving=!1;cloudMovingTimeOut=0;removeLoading;constructor(e,t,x){this.canvas=document.getElementById("loading"),this.canvas.height=t,this.canvas.width=e,this.height=t,this.width=e,this.removeLoading=x,this.context=this.canvas.getContext("2d"),this.images={cloud6:i.CLOUD_6,cloud7:i.CLOUD_7,cloud8:i.CLOUD_8},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}draw(e){this.context.clearRect(0,0,this.width,this.height),this.cloudXPosition+=.75*e,this.cloudMovingTimeOut+=e,this.cloudMovingTimeOut>2983&&this.removeLoading(),this.cloudXPosition>=.5*this.width&&!this.stopCloudMoving&&(this.cloudMovingTimeOut+=e,this.cloudMovingTimeOut>2e3&&(this.stopCloudMoving=!0,this.cloudXPosition=0)),this.imagesLoaded&&(this.stopCloudMoving?(this.context.drawImage(this.loadedImages.cloud6,0+this.cloudXPosition,.6*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,.4*this.width+this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,0+this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*-this.width+this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*this.width+this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.05*this.width+this.cloudXPosition,.2*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.6*-this.width+this.cloudXPosition,.3*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,.5*this.width+this.cloudXPosition,.4*this.height,this.width,.4*this.height),this.context.drawImage(this.loadedImages.cloud7,.4*-this.width+this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*this.width+this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,.2*-this.width+this.cloudXPosition,.2*this.height,this.width,.5*this.height)):(this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=0?0:this.cloudXPosition,.6*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=0?0:this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*-this.width?.4*-this.width:this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.05*this.width?.05*this.width:this.cloudXPosition,.2*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.6*-this.width?.6*-this.width:this.cloudXPosition,.3*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=.5*this.width?.5*this.width:this.cloudXPosition,.4*this.height,this.width,.4*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=.4*-this.width?.4*-this.width:this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=.2*-this.width?.2*-this.width:this.cloudXPosition,.2*this.height,this.width,.5*this.height)))}initCloud=()=>{this.cloudXPosition=-500,this.stopCloudMoving=!1,this.cloudMovingTimeOut=0}}},"./src/scenes/start-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{StartScene:()=>r});var a=x("./src/components/index.ts"),i=x("./src/components/buttons/index.ts"),s=x("./src/common/index.ts"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/compositions/index.ts"),o=x("./src/constants/index.ts");class r{canvas;data;width;height;monster;pickedStone;pwa_status;firebase_analytics;id;canavsElement;context;buttonContext;playButton;images;loadedImages;imagesLoaded=!1;handler;static SceneName;switchSceneToLevelSelection;background;audioPlayer;toggleBtn;pwa_install_status;titleTextElement;constructor(e,t,x){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.toggleBtn=document.getElementById("toggle-btn"),this.monster=new a.Monster(this.canvas,4),this.switchSceneToLevelSelection=x,this.audioPlayer=new a.AudioPlayer,this.pwa_status=localStorage.getItem(o.PWAInstallStatus),this.handler=document.getElementById("canvas"),this.devToggle(),this.createPlayButton(),window.addEventListener("beforeinstallprompt",this.handlerInstallPrompt),this.setupBg(),this.titleTextElement=document.getElementById("title"),this.generateGameTitle()}setupBg=async()=>{this.background=await(0,n.createBackground)(this.context,this.width,this.height,o.DEFAULT_BG_GROUP_IMGS,n.defaultBgDrawing),this.background?.draw()};devToggle=()=>{this.toggleBtn.addEventListener("click",(()=>(0,s.toggleDebugMode)(this.toggleBtn)))};generateGameTitle=()=>{this.titleTextElement.textContent=this.data.title};animation=e=>{this.context.clearRect(0,0,this.width,this.height),this.monster.update(e),this.playButton.draw()};createPlayButton(){this.playButton=new i.PlayButton(this.context,this.canvas,.35*this.canvas.width,this.canvas.height/7),document.addEventListener("selectstart",(function(e){e.preventDefault()})),this.handler.addEventListener("click",this.handleMouseClick,!1)}handleMouseClick=e=>{let t=this;const x=document.getElementById("canvas");e.preventDefault();var a=x.getBoundingClientRect();const i=e.clientX-a.left,n=e.clientY-a.top,{excludeX:r,excludeY:d}=s.Utils.getExcludedCoordinates(x,15);i<r&&n<d||(_.FirebaseIntegration.getInstance().sendUserClickedOnPlayEvent(),fbq("trackCustom",o.FirebaseUserClicked,{event:"click"}),this.toggleBtn.style.display="none",this.audioPlayer.playButtonClickSound(),t.switchSceneToLevelSelection("StartScene"))};dispose(){this.monster.dispose(),this.audioPlayer.stopAllAudios(),this.handler.removeEventListener("click",this.handleMouseClick,!1),window.removeEventListener("beforeinstallprompt",this.handlerInstallPrompt,!1)}handlerInstallPrompt=e=>{e.preventDefault(),this.pwa_install_status=e,localStorage.setItem(o.PWAInstallStatus,"false")}}},"./src/scenes/test-gameplay-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{TestGameplayScene:()=>o});var a=x("./src/constants/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/common/index.ts");const n=document.getElementById("toggle-btn");window.addEventListener("beforeinstallprompt",(e=>{e.preventDefault(),localStorage.setItem(a.PWAInstallStatus,"false")}));class o{canvas;data;width;height;monster;levelIndicator;promptText;timerTicking;stoneHandler;pickedStone;pwa_status;firebase_analytics;id;canavsElement;context;buttonContext;outcome;playButton;levelSelectionScene;images;loadedImages;imagesLoaded=!1;handler;static SceneName;switchSceneToLevelSelection;counter=0;tutorial;constructor(e,t,x,s){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.monster=new i.Monster(this.canvas,0),console.log(...d("2510688200_69_4_69_51_4",Date.now," ::: ",performance.now)),this.switchSceneToLevelSelection=s,this.stoneHandler=new i.StoneHandler(this.context,this.canvas,2,this.data.levels[92],this.data.feedbackAudios,this.timerTicking),this.promptText=new i.PromptText(this.width,this.height,this.data.levels[92].puzzles[2],this.data.levels[92],!1),this.timerTicking=new i.TimerTicking(this.width,this.height,this.timeOverCallback),this.levelIndicator=new i.LevelIndicators(this.context,this.canvas,0),this.levelIndicator.setIndicators(3),this.tutorial.updateTargetStonePositions([100,100]),this.pwa_status=localStorage.getItem(a.PWAInstallStatus),this.handler=document.getElementById("canvas"),this.devToggle(),this.createPlayButton(),this.firebase_analytics=x,this.animation(0),this.images={pillerImg:a.ASSETS_PATH_TOTEM,bgImg:a.DEFAULT_BACKGROUND_1,hillImg:a.ASSETS_PATH_HILL,fenchImg:a.ASSETS_PATH_FENCE,profileMonster:a.ASSETS_PATH_MONSTER_IDLE},(0,_.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}timeOverCallback=()=>{this.timerTicking.readyTimer(),this.timerTicking.startTimer(),this.timerTicking.isMyTimerOver=!1,5==this.counter&&(this.counter=0),this.levelIndicator.setIndicators(this.counter++)};devToggle=()=>{n.addEventListener("click",(()=>(0,_.toggleDebugMode)(n)))};handleMouseUp=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;Math.sqrt((a-t.monster.x-t.canvas.width/4)*(a-t.monster.x-t.canvas.width/4)+(i-t.monster.y-t.canvas.height/2.7)*(i-t.monster.y-t.canvas.height/2.7))<=60||t.monster.changeToIdleAnimation(),t.pickedStone=null};handleMouseDown=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;for(let e of t.stoneHandler.foilStones)Math.sqrt((a-e.x)*(a-e.x)+(i-e.y)*(i-e.y))<=40&&(this.pickedStone=e)};handleMouseMove=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;t.pickedStone&&(t.monster.changeToDragAnimation(),t.pickedStone.x=a,t.pickedStone.y=i)};animation=e=>{this.imagesLoaded&&(this.context.drawImage(this.loadedImages.bgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.pillerImg,.6*this.width,this.height/6,this.width,this.height/2),this.context.drawImage(this.loadedImages.fenchImg,.4*-this.width,this.height/3,this.width,this.height/3),this.context.drawImage(this.loadedImages.hillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2),this.context.font="bold 40px Arial",this.context.fillStyle="white",this.context.textAlign="center",this.context.fillText("Testing Gameplay",.5*this.width,this.height/10),this.monster.update(e),this.promptText.draw(e),this.stoneHandler.draw(e),this.levelIndicator.draw(),this.timerTicking.update(e))};draw(){}createPlayButton=()=>{this.playButton=new s.PlayButton(this.context,this.canvas,.35*this.canvas.width,this.canvas.height/7),this.handler.addEventListener("mouseup",this.handleMouseUp,!1),this.handler.addEventListener("mousemove",this.handleMouseMove,!1),this.handler.addEventListener("mousedown",this.handleMouseDown,!1),this.handler.addEventListener("touchstart",(function(e){var t=e.touches[0],x=new MouseEvent("mousedown",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1),this.handler.addEventListener("touchmove",(function(e){var t=e.touches[0],x=new MouseEvent("mousemove",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1),this.handler.addEventListener("touchend",(function(e){var t=e.changedTouches[0],x=new MouseEvent("mouseup",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1)};handleMouseClick=e=>{let t=this;const x=document.getElementById("canvas");e.preventDefault();var i=x.getBoundingClientRect();const s=e.clientX-i.left,_=e.clientY-i.top;t.playButton.onClick(s,_)&&(t.firebase_analytics&&t.firebase_analytics.logEvent(a.FirebaseUserClicked,"click"),fbq("trackCustom",a.FirebaseUserClicked,{event:"click"}),n.style.display="none",t.switchSceneToLevelSelection())};dispose(){this.handler.removeEventListener("click",this.handleMouseClick,!1)}}function r(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729239314494','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function d(e,...t){try{r().consoleLog(e,t)}catch(e){}return t}},"./node_modules/@firebase/analytics/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{getAnalytics:()=>H,getGoogleAnalyticsClientId:()=>Y,initializeAnalytics:()=>G,isSupported:()=>V,logEvent:()=>Z,setAnalyticsCollectionEnabled:()=>K,setConsent:()=>Q,setCurrentScreen:()=>W,setDefaultEventParameters:()=>q,setUserId:()=>X,setUserProperties:()=>$,settings:()=>R});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/logger/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js");x("./node_modules/@firebase/installations/dist/esm/index.esm2017.js");const n="analytics",o="firebase_id",r="origin",d=6e4,c="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",l="https://www.googletagmanager.com/gtag/js",h=new i.Logger("@firebase/analytics"),b={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},f=new s.ErrorFactory("analytics","Analytics",b);function u(e){if(!e.startsWith(l)){const t=f.create("invalid-gtag-resource",{gtagURL:e});return h.warn(t.message),""}return e}function p(e){return Promise.all(e.map((e=>e.catch((e=>e)))))}function g(e,t){const x=function(e,t){let x;return window.trustedTypes&&(x=window.trustedTypes.createPolicy(e,t)),x}("firebase-js-sdk-policy",{createScriptURL:u}),a=document.createElement("script"),i=`${l}?l=${e}&id=${t}`;a.src=x?null==x?void 0:x.createScriptURL(i):i,a.async=!0,document.head.appendChild(a)}function m(e,t,x,a){return async function(i,...s){try{if("event"===i){const[a,i]=s;await async function(e,t,x,a,i){try{let s=[];if(i&&i.send_to){let e=i.send_to;Array.isArray(e)||(e=[e]);const a=await p(x);for(const x of e){const e=a.find((e=>e.measurementId===x)),i=e&&t[e.appId];if(!i){s=[];break}s.push(i)}}0===s.length&&(s=Object.values(t)),await Promise.all(s),e("event",a,i||{})}catch(e){h.error(e)}}(e,t,x,a,i)}else if("config"===i){const[i,_]=s;await async function(e,t,x,a,i,s){const _=a[i];try{if(_)await t[_];else{const e=(await p(x)).find((e=>e.measurementId===i));e&&await t[e.appId]}}catch(e){h.error(e)}e("config",i,s)}(e,t,x,a,i,_)}else if("consent"===i){const[t]=s;e("consent","update",t)}else if("get"===i){const[t,x,a]=s;e("get",t,x,a)}else if("set"===i){const[t]=s;e("set",t)}else e(i,...s)}catch(e){h.error(e)}}}const v=30;const w=new class{constructor(e={},t=1e3){this.throttleMetadata=e,this.intervalMillis=t}getThrottleMetadata(e){return this.throttleMetadata[e]}setThrottleMetadata(e,t){this.throttleMetadata[e]=t}deleteThrottleMetadata(e){delete this.throttleMetadata[e]}};function S(e){return new Headers({Accept:"application/json","x-goog-api-key":e})}async function y(e,t=w,x){const{appId:a,apiKey:i,measurementId:s}=e.options;if(!a)throw f.create("no-app-id");if(!i){if(s)return{measurementId:s,appId:a};throw f.create("no-api-key")}const _=t.getThrottleMetadata(a)||{backoffCount:0,throttleEndTimeMillis:Date.now()},n=new I;return setTimeout((async()=>{n.abort()}),void 0!==x?x:d),E({appId:a,apiKey:i,measurementId:s},_,n,t)}async function E(e,{throttleEndTimeMillis:t,backoffCount:x},a,i=w){var _;const{appId:n,measurementId:o}=e;try{await function(e,t){return new Promise(((x,a)=>{const i=Math.max(t-Date.now(),0),s=setTimeout(x,i);e.addEventListener((()=>{clearTimeout(s),a(f.create("fetch-throttle",{throttleEndTimeMillis:t}))}))}))}(a,t)}catch(e){if(o)return h.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${null==e?void 0:e.message}]`),{appId:n,measurementId:o};throw e}try{const t=await async function(e){var t;const{appId:x,apiKey:a}=e,i={method:"GET",headers:S(a)},s=c.replace("{app-id}",x),_=await fetch(s,i);if(200!==_.status&&304!==_.status){let e="";try{const x=await _.json();(null===(t=x.error)||void 0===t?void 0:t.message)&&(e=x.error.message)}catch(e){}throw f.create("config-fetch-failed",{httpStatus:_.status,responseMessage:e})}return _.json()}(e);return i.deleteThrottleMetadata(n),t}catch(t){const r=t;if(!function(e){if(!(e instanceof s.FirebaseError&&e.customData))return!1;const t=Number(e.customData.httpStatus);return 429===t||500===t||503===t||504===t}(r)){if(i.deleteThrottleMetadata(n),o)return h.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${null==r?void 0:r.message}]`),{appId:n,measurementId:o};throw t}const d=503===Number(null===(_=null==r?void 0:r.customData)||void 0===_?void 0:_.httpStatus)?(0,s.calculateBackoffMillis)(x,i.intervalMillis,v):(0,s.calculateBackoffMillis)(x,i.intervalMillis),c={throttleEndTimeMillis:Date.now()+d,backoffCount:x+1};return i.setThrottleMetadata(n,c),h.debug(`Calling attemptFetch again in ${d} millis`),E(e,c,a,i)}}class I{constructor(){this.listeners=[]}addEventListener(e){this.listeners.push(e)}abort(){this.listeners.forEach((e=>e()))}}let T,P;function L(e){P=e}function C(e){T=e}async function A(e,t,x,a,i,_,n){var d;const c=y(e);c.then((t=>{x[t.measurementId]=t.appId,e.options.measurementId&&t.measurementId!==e.options.measurementId&&h.warn(`The measurement ID in the local Firebase config (${e.options.measurementId}) does not match the measurement ID fetched from the server (${t.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((e=>h.error(e))),t.push(c);const b=async function(){if(!(0,s.isIndexedDBAvailable)())return h.warn(f.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,s.validateIndexedDBOpenable)()}catch(e){return h.warn(f.create("indexeddb-unavailable",{errorInfo:null==e?void 0:e.toString()}).message),!1}return!0}().then((e=>e?a.getId():void 0)),[u,p]=await Promise.all([c,b]);(function(e){const t=window.document.getElementsByTagName("script");for(const x of Object.values(t))if(x.src&&x.src.includes(l)&&x.src.includes(e))return x;return null})(_)||g(_,u.measurementId),P&&(i("consent","default",P),L(void 0)),i("js",new Date);const m=null!==(d=null==n?void 0:n.config)&&void 0!==d?d:{};return m[r]="firebase",m.update=!0,null!=p&&(m[o]=p),i("config",u.measurementId,m),T&&(i("set",T),C(void 0)),u.measurementId}class k{constructor(e){this.app=e}_delete(){return delete N[this.app.options.appId],Promise.resolve()}}let N={},D=[];const O={};let B,M,z="dataLayer",j="gtag",F=!1;function R(e){if(F)throw f.create("already-initialized");e.dataLayerName&&(z=e.dataLayerName),e.gtagName&&(j=e.gtagName)}function U(e,t,x){!function(){const e=[];if((0,s.isBrowserExtension)()&&e.push("This is a browser extension environment."),(0,s.areCookiesEnabled)()||e.push("Cookies are not available."),e.length>0){const t=e.map(((e,t)=>`(${t+1}) ${e}`)).join(" "),x=f.create("invalid-analytics-context",{errorInfo:t});h.warn(x.message)}}();const a=e.options.appId;if(!a)throw f.create("no-app-id");if(!e.options.apiKey){if(!e.options.measurementId)throw f.create("no-api-key");h.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=N[a])throw f.create("already-exists",{id:a});if(!F){!function(e){let t=[];Array.isArray(window[e])?t=window[e]:window[e]=t}(z);const{wrappedGtag:e,gtagCore:t}=function(e,t,x,a,i){let s=function(...e){window[a].push(arguments)};return window[i]&&"function"==typeof window[i]&&(s=window[i]),window[i]=m(s,e,t,x),{gtagCore:s,wrappedGtag:window[i]}}(N,D,O,z,j);M=e,B=t,F=!0}N[a]=A(e,D,O,t,B,z,x);return new k(e)}function H(e=(0,a.getApp)()){e=(0,s.getModularInstance)(e);const t=(0,a._getProvider)(e,n);return t.isInitialized()?t.getImmediate():G(e)}function G(e,t={}){const x=(0,a._getProvider)(e,n);if(x.isInitialized()){const e=x.getImmediate();if((0,s.deepEqual)(t,x.getOptions()))return e;throw f.create("already-initialized")}return x.initialize({options:t})}async function V(){if((0,s.isBrowserExtension)())return!1;if(!(0,s.areCookiesEnabled)())return!1;if(!(0,s.isIndexedDBAvailable)())return!1;try{return await(0,s.validateIndexedDBOpenable)()}catch(e){return!1}}function W(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global)return e("set",{screen_name:x}),Promise.resolve();e("config",await t,{update:!0,screen_name:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}async function Y(e){return e=(0,s.getModularInstance)(e),async function(e,t){const x=await t;return new Promise(((t,a)=>{e("get",x,"client_id",(e=>{e||a(f.create("no-client-id")),t(e)}))}))}(M,N[e.app.options.appId])}function X(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global)return e("set",{user_id:x}),Promise.resolve();e("config",await t,{update:!0,user_id:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}function $(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global){const t={};for(const e of Object.keys(x))t[`user_properties.${e}`]=x[e];return e("set",t),Promise.resolve()}e("config",await t,{update:!0,user_properties:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}function K(e,t){e=(0,s.getModularInstance)(e),async function(e,t){const x=await e;window[`ga-disable-${x}`]=!t}(N[e.app.options.appId],t).catch((e=>h.error(e)))}function q(e){M?M("set",e):C(e)}function Z(e,t,x,a){e=(0,s.getModularInstance)(e),async function(e,t,x,a,i){if(i&&i.global)e("event",x,a);else{const i=await t;e("event",x,Object.assign(Object.assign({},a),{send_to:i}))}}(M,N[e.app.options.appId],t,x,a).catch((e=>h.error(e)))}function Q(e){M?M("consent","update",e):L(e)}const J="@firebase/analytics",ee="0.10.0";(0,a._registerComponent)(new _.Component(n,((e,{options:t})=>U(e.getProvider("app").getImmediate(),e.getProvider("installations-internal").getImmediate(),t)),"PUBLIC")),(0,a._registerComponent)(new _.Component("analytics-internal",(function(e){try{const t=e.getProvider(n).getImmediate();return{logEvent:(e,x,a)=>Z(t,e,x,a)}}catch(e){throw f.create("interop-component-reg-failed",{reason:e})}}),"PRIVATE")),(0,a.registerVersion)(J,ee),(0,a.registerVersion)(J,ee,"esm2017")},"./node_modules/@firebase/app/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{FirebaseError:()=>s.FirebaseError,SDK_VERSION:()=>$,_DEFAULT_ENTRY_NAME:()=>B,_addComponent:()=>F,_addOrOverwriteComponent:()=>R,_apps:()=>z,_clearComponents:()=>V,_components:()=>j,_getProvider:()=>H,_registerComponent:()=>U,_removeServiceInstance:()=>G,deleteApp:()=>Q,getApp:()=>q,getApps:()=>Z,initializeApp:()=>K,onLog:()=>ee,registerVersion:()=>J,setLogLevel:()=>te});var a=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/logger/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/idb/build/index.js");class n{constructor(e){this.container=e}getPlatformInfoString(){return this.container.getProviders().map((e=>{if(function(e){const t=e.getComponent();return"VERSION"===(null==t?void 0:t.type)}(e)){const t=e.getImmediate();return`${t.library}/${t.version}`}return null})).filter((e=>e)).join(" ")}}const o="@firebase/app",r="0.9.15",d=new i.Logger("@firebase/app"),c="@firebase/app-compat",l="@firebase/analytics-compat",h="@firebase/analytics",b="@firebase/app-check-compat",f="@firebase/app-check",u="@firebase/auth",p="@firebase/auth-compat",g="@firebase/database",m="@firebase/database-compat",v="@firebase/functions",w="@firebase/functions-compat",S="@firebase/installations",y="@firebase/installations-compat",E="@firebase/messaging",I="@firebase/messaging-compat",T="@firebase/performance",P="@firebase/performance-compat",L="@firebase/remote-config",C="@firebase/remote-config-compat",A="@firebase/storage",k="@firebase/storage-compat",N="@firebase/firestore",D="@firebase/firestore-compat",O="firebase",B="[DEFAULT]",M={[o]:"fire-core",[c]:"fire-core-compat",[h]:"fire-analytics",[l]:"fire-analytics-compat",[f]:"fire-app-check",[b]:"fire-app-check-compat",[u]:"fire-auth",[p]:"fire-auth-compat",[g]:"fire-rtdb",[m]:"fire-rtdb-compat",[v]:"fire-fn",[w]:"fire-fn-compat",[S]:"fire-iid",[y]:"fire-iid-compat",[E]:"fire-fcm",[I]:"fire-fcm-compat",[T]:"fire-perf",[P]:"fire-perf-compat",[L]:"fire-rc",[C]:"fire-rc-compat",[A]:"fire-gcs",[k]:"fire-gcs-compat",[N]:"fire-fst",[D]:"fire-fst-compat","fire-js":"fire-js",[O]:"fire-js-all"},z=new Map,j=new Map;function F(e,t){try{e.container.addComponent(t)}catch(x){d.debug(`Component ${t.name} failed to register with FirebaseApp ${e.name}`,x)}}function R(e,t){e.container.addOrOverwriteComponent(t)}function U(e){const t=e.name;if(j.has(t))return d.debug(`There were multiple attempts to register component ${t}.`),!1;j.set(t,e);for(const t of z.values())F(t,e);return!0}function H(e,t){const x=e.container.getProvider("heartbeat").getImmediate({optional:!0});return x&&x.triggerHeartbeat(),e.container.getProvider(t)}function G(e,t,x=B){H(e,t).clearInstance(x)}function V(){j.clear()}const W={"no-app":"No Firebase App '{$appName}' has been created - call initializeApp() first","bad-app-name":"Illegal App name: '{$appName}","duplicate-app":"Firebase App named '{$appName}' already exists with different options or config","app-deleted":"Firebase App named '{$appName}' already deleted","no-options":"Need to provide options, when not being deployed to hosting via source.","invalid-app-argument":"firebase.{$appName}() takes either no argument or a Firebase App instance.","invalid-log-argument":"First argument to `onLog` must be null or a function.","idb-open":"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.","idb-get":"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.","idb-set":"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.","idb-delete":"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}."},Y=new s.ErrorFactory("app","Firebase",W);class X{constructor(e,t,x){this._isDeleted=!1,this._options=Object.assign({},e),this._config=Object.assign({},t),this._name=t.name,this._automaticDataCollectionEnabled=t.automaticDataCollectionEnabled,this._container=x,this.container.addComponent(new a.Component("app",(()=>this),"PUBLIC"))}get automaticDataCollectionEnabled(){return this.checkDestroyed(),this._automaticDataCollectionEnabled}set automaticDataCollectionEnabled(e){this.checkDestroyed(),this._automaticDataCollectionEnabled=e}get name(){return this.checkDestroyed(),this._name}get options(){return this.checkDestroyed(),this._options}get config(){return this.checkDestroyed(),this._config}get container(){return this._container}get isDeleted(){return this._isDeleted}set isDeleted(e){this._isDeleted=e}checkDestroyed(){if(this.isDeleted)throw Y.create("app-deleted",{appName:this._name})}}const $="10.1.0";function K(e,t={}){let x=e;if("object"!=typeof t){t={name:t}}const i=Object.assign({name:B,automaticDataCollectionEnabled:!1},t),_=i.name;if("string"!=typeof _||!_)throw Y.create("bad-app-name",{appName:String(_)});if(x||(x=(0,s.getDefaultAppConfig)()),!x)throw Y.create("no-options");const n=z.get(_);if(n){if((0,s.deepEqual)(x,n.options)&&(0,s.deepEqual)(i,n.config))return n;throw Y.create("duplicate-app",{appName:_})}const o=new a.ComponentContainer(_);for(const e of j.values())o.addComponent(e);const r=new X(x,i,o);return z.set(_,r),r}function q(e=B){const t=z.get(e);if(!t&&e===B&&(0,s.getDefaultAppConfig)())return K();if(!t)throw Y.create("no-app",{appName:e});return t}function Z(){return Array.from(z.values())}async function Q(e){const t=e.name;z.has(t)&&(z.delete(t),await Promise.all(e.container.getProviders().map((e=>e.delete()))),e.isDeleted=!0)}function J(e,t,x){var i;let s=null!==(i=M[e])&&void 0!==i?i:e;x&&(s+=`-${x}`);const _=s.match(/\s|\//),n=t.match(/\s|\//);if(_||n){const e=[`Unable to register library "${s}" with version "${t}":`];return _&&e.push(`library name "${s}" contains illegal characters (whitespace or "/")`),_&&n&&e.push("and"),n&&e.push(`version name "${t}" contains illegal characters (whitespace or "/")`),void d.warn(e.join(" "))}U(new a.Component(`${s}-version`,(()=>({library:s,version:t})),"VERSION"))}function ee(e,t){if(null!==e&&"function"!=typeof e)throw Y.create("invalid-log-argument");(0,i.setUserLogHandler)(e,t)}function te(e){(0,i.setLogLevel)(e)}const xe="firebase-heartbeat-database",ae=1,ie="firebase-heartbeat-store";let se=null;function _e(){return se||(se=(0,_.openDB)(xe,ae,{upgrade:(e,t)=>{if(0===t)e.createObjectStore(ie)}}).catch((e=>{throw Y.create("idb-open",{originalErrorMessage:e.message})}))),se}async function ne(e,t){try{const x=(await _e()).transaction(ie,"readwrite"),a=x.objectStore(ie);await a.put(t,oe(e)),await x.done}catch(e){if(e instanceof s.FirebaseError)d.warn(e.message);else{const t=Y.create("idb-set",{originalErrorMessage:null==e?void 0:e.message});d.warn(t.message)}}}function oe(e){return`${e.name}!${e.options.appId}`}class re{constructor(e){this.container=e,this._heartbeatsCache=null;const t=this.container.getProvider("app").getImmediate();this._storage=new ce(t),this._heartbeatsCachePromise=this._storage.read().then((e=>(this._heartbeatsCache=e,e)))}async triggerHeartbeat(){const e=this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(),t=de();if(null===this._heartbeatsCache&&(this._heartbeatsCache=await this._heartbeatsCachePromise),this._heartbeatsCache.lastSentHeartbeatDate!==t&&!this._heartbeatsCache.heartbeats.some((e=>e.date===t)))return this._heartbeatsCache.heartbeats.push({date:t,agent:e}),this._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter((e=>{const t=new Date(e.date).valueOf();return Date.now()-t<=2592e6})),this._storage.overwrite(this._heartbeatsCache)}async getHeartbeatsHeader(){if(null===this._heartbeatsCache&&await this._heartbeatsCachePromise,null===this._heartbeatsCache||0===this._heartbeatsCache.heartbeats.length)return"";const e=de(),{heartbeatsToSend:t,unsentEntries:x}=function(e,t=1024){const x=[];let a=e.slice();for(const i of e){const e=x.find((e=>e.agent===i.agent));if(e){if(e.dates.push(i.date),le(x)>t){e.dates.pop();break}}else if(x.push({agent:i.agent,dates:[i.date]}),le(x)>t){x.pop();break}a=a.slice(1)}return{heartbeatsToSend:x,unsentEntries:a}}(this._heartbeatsCache.heartbeats),a=(0,s.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:t}));return this._heartbeatsCache.lastSentHeartbeatDate=e,x.length>0?(this._heartbeatsCache.heartbeats=x,await this._storage.overwrite(this._heartbeatsCache)):(this._heartbeatsCache.heartbeats=[],this._storage.overwrite(this._heartbeatsCache)),a}}function de(){return(new Date).toISOString().substring(0,10)}class ce{constructor(e){this.app=e,this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}async runIndexedDBEnvironmentCheck(){return!!(0,s.isIndexedDBAvailable)()&&(0,s.validateIndexedDBOpenable)().then((()=>!0)).catch((()=>!1))}async read(){if(await this._canUseIndexedDBPromise){return await async function(e){try{const t=await _e();return await t.transaction(ie).objectStore(ie).get(oe(e))}catch(e){if(e instanceof s.FirebaseError)d.warn(e.message);else{const t=Y.create("idb-get",{originalErrorMessage:null==e?void 0:e.message});d.warn(t.message)}}}(this.app)||{heartbeats:[]}}return{heartbeats:[]}}async overwrite(e){var t;if(await this._canUseIndexedDBPromise){const x=await this.read();return ne(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:x.lastSentHeartbeatDate,heartbeats:e.heartbeats})}}async add(e){var t;if(await this._canUseIndexedDBPromise){const x=await this.read();return ne(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:x.lastSentHeartbeatDate,heartbeats:[...x.heartbeats,...e.heartbeats]})}}}function le(e){return(0,s.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:e})).length}var he;he="",U(new a.Component("platform-logger",(e=>new n(e)),"PRIVATE")),U(new a.Component("heartbeat",(e=>new re(e)),"PRIVATE")),J(o,r,he),J(o,r,"esm2017"),J("fire-js","")},"./node_modules/@firebase/component/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{Component:()=>i,ComponentContainer:()=>n,Provider:()=>_});var a=x("./node_modules/@firebase/util/dist/index.esm2017.js");class i{constructor(e,t,x){this.name=e,this.instanceFactory=t,this.type=x,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(e){return this.instantiationMode=e,this}setMultipleInstances(e){return this.multipleInstances=e,this}setServiceProps(e){return this.serviceProps=e,this}setInstanceCreatedCallback(e){return this.onInstanceCreated=e,this}}const s="[DEFAULT]";class _{constructor(e,t){this.name=e,this.container=t,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}get(e){const t=this.normalizeInstanceIdentifier(e);if(!this.instancesDeferred.has(t)){const e=new a.Deferred;if(this.instancesDeferred.set(t,e),this.isInitialized(t)||this.shouldAutoInitialize())try{const x=this.getOrInitializeService({instanceIdentifier:t});x&&e.resolve(x)}catch(e){}}return this.instancesDeferred.get(t).promise}getImmediate(e){var t;const x=this.normalizeInstanceIdentifier(null==e?void 0:e.identifier),a=null!==(t=null==e?void 0:e.optional)&&void 0!==t&&t;if(!this.isInitialized(x)&&!this.shouldAutoInitialize()){if(a)return null;throw Error(`Service ${this.name} is not available`)}try{return this.getOrInitializeService({instanceIdentifier:x})}catch(e){if(a)return null;throw e}}getComponent(){return this.component}setComponent(e){if(e.name!==this.name)throw Error(`Mismatching Component ${e.name} for Provider ${this.name}.`);if(this.component)throw Error(`Component for ${this.name} has already been provided`);if(this.component=e,this.shouldAutoInitialize()){if(function(e){return"EAGER"===e.instantiationMode}(e))try{this.getOrInitializeService({instanceIdentifier:s})}catch(e){}for(const[e,t]of this.instancesDeferred.entries()){const x=this.normalizeInstanceIdentifier(e);try{const e=this.getOrInitializeService({instanceIdentifier:x});t.resolve(e)}catch(e){}}}}clearInstance(e=s){this.instancesDeferred.delete(e),this.instancesOptions.delete(e),this.instances.delete(e)}async delete(){const e=Array.from(this.instances.values());await Promise.all([...e.filter((e=>"INTERNAL"in e)).map((e=>e.INTERNAL.delete())),...e.filter((e=>"_delete"in e)).map((e=>e._delete()))])}isComponentSet(){return null!=this.component}isInitialized(e=s){return this.instances.has(e)}getOptions(e=s){return this.instancesOptions.get(e)||{}}initialize(e={}){const{options:t={}}=e,x=this.normalizeInstanceIdentifier(e.instanceIdentifier);if(this.isInitialized(x))throw Error(`${this.name}(${x}) has already been initialized`);if(!this.isComponentSet())throw Error(`Component ${this.name} has not been registered yet`);const a=this.getOrInitializeService({instanceIdentifier:x,options:t});for(const[e,t]of this.instancesDeferred.entries()){x===this.normalizeInstanceIdentifier(e)&&t.resolve(a)}return a}onInit(e,t){var x;const a=this.normalizeInstanceIdentifier(t),i=null!==(x=this.onInitCallbacks.get(a))&&void 0!==x?x:new Set;i.add(e),this.onInitCallbacks.set(a,i);const s=this.instances.get(a);return s&&e(s,a),()=>{i.delete(e)}}invokeOnInitCallbacks(e,t){const x=this.onInitCallbacks.get(t);if(x)for(const a of x)try{a(e,t)}catch(e){}}getOrInitializeService({instanceIdentifier:e,options:t={}}){let x=this.instances.get(e);if(!x&&this.component&&(x=this.component.instanceFactory(this.container,{instanceIdentifier:(a=e,a===s?void 0:a),options:t}),this.instances.set(e,x),this.instancesOptions.set(e,t),this.invokeOnInitCallbacks(x,e),this.component.onInstanceCreated))try{this.component.onInstanceCreated(this.container,e,x)}catch(e){}var a;return x||null}normalizeInstanceIdentifier(e=s){return this.component?this.component.multipleInstances?e:s:e}shouldAutoInitialize(){return!!this.component&&"EXPLICIT"!==this.component.instantiationMode}}class n{constructor(e){this.name=e,this.providers=new Map}addComponent(e){const t=this.getProvider(e.name);if(t.isComponentSet())throw new Error(`Component ${e.name} has already been registered with ${this.name}`);t.setComponent(e)}addOrOverwriteComponent(e){this.getProvider(e.name).isComponentSet()&&this.providers.delete(e.name),this.addComponent(e)}getProvider(e){if(this.providers.has(e))return this.providers.get(e);const t=new _(e,this);return this.providers.set(e,t),t}getProviders(){return Array.from(this.providers.values())}}},"./node_modules/@firebase/installations/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{deleteInstallations:()=>J,getId:()=>q,getInstallations:()=>te,getToken:()=>Z,onIdChange:()=>ee});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/@firebase/installations/node_modules/idb/build/index.js");const n="@firebase/installations",o="0.6.4",r=1e4,d=`w:${o}`,c="FIS_v2",l="https://firebaseinstallations.googleapis.com/v1",h=36e5,b={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},f=new s.ErrorFactory("installations","Installations",b);function u(e){return e instanceof s.FirebaseError&&e.code.includes("request-failed")}function p({projectId:e}){return`${l}/projects/${e}/installations`}function g(e){return{token:e.token,requestStatus:2,expiresIn:(t=e.expiresIn,Number(t.replace("s","000"))),creationTime:Date.now()};var t}async function m(e,t){const x=(await t.json()).error;return f.create("request-failed",{requestName:e,serverCode:x.code,serverMessage:x.message,serverStatus:x.status})}function v({apiKey:e}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}function w(e,{refreshToken:t}){const x=v(e);return x.append("Authorization",function(e){return`${c} ${e}`}(t)),x}async function S(e){const t=await e();return t.status>=500&&t.status<600?e():t}function y(e){return new Promise((t=>{setTimeout(t,e)}))}const E=/^[cdef][\w-]{21}$/,I="";function T(){try{const e=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(e),e[0]=112+e[0]%16;const t=function(e){const t=(x=e,btoa(String.fromCharCode(...x)).replace(/\+/g,"-").replace(/\//g,"_"));var x;return t.substr(0,22)}(e);return E.test(t)?t:I}catch(e){return I}}function P(e){return`${e.appName}!${e.appId}`}const L=new Map;function C(e,t){const x=P(e);A(x,t),function(e,t){const x=N();x&&x.postMessage({key:e,fid:t});D()}(x,t)}function A(e,t){const x=L.get(e);if(x)for(const e of x)e(t)}let k=null;function N(){return!k&&"BroadcastChannel"in self&&(k=new BroadcastChannel("[Firebase] FID Change"),k.onmessage=e=>{A(e.data.key,e.data.fid)}),k}function D(){0===L.size&&k&&(k.close(),k=null)}const O="firebase-installations-database",B=1,M="firebase-installations-store";let z=null;function j(){return z||(z=(0,_.openDB)(O,B,{upgrade:(e,t)=>{if(0===t)e.createObjectStore(M)}})),z}async function F(e,t){const x=P(e),a=(await j()).transaction(M,"readwrite"),i=a.objectStore(M),s=await i.get(x);return await i.put(t,x),await a.done,s&&s.fid===t.fid||C(e,t.fid),t}async function R(e){const t=P(e),x=(await j()).transaction(M,"readwrite");await x.objectStore(M).delete(t),await x.done}async function U(e,t){const x=P(e),a=(await j()).transaction(M,"readwrite"),i=a.objectStore(M),s=await i.get(x),_=t(s);return void 0===_?await i.delete(x):await i.put(_,x),await a.done,!_||s&&s.fid===_.fid||C(e,_.fid),_}async function H(e){let t;const x=await U(e.appConfig,(x=>{const a=function(e){const t=e||{fid:T(),registrationStatus:0};return W(t)}(x),i=function(e,t){if(0===t.registrationStatus){if(!navigator.onLine){return{installationEntry:t,registrationPromise:Promise.reject(f.create("app-offline"))}}const x={fid:t.fid,registrationStatus:1,registrationTime:Date.now()},a=async function(e,t){try{const x=await async function({appConfig:e,heartbeatServiceProvider:t},{fid:x}){const a=p(e),i=v(e),s=t.getImmediate({optional:!0});if(s){const e=await s.getHeartbeatsHeader();e&&i.append("x-firebase-client",e)}const _={fid:x,authVersion:c,appId:e.appId,sdkVersion:d},n={method:"POST",headers:i,body:JSON.stringify(_)},o=await S((()=>fetch(a,n)));if(o.ok){const e=await o.json();return{fid:e.fid||x,registrationStatus:2,refreshToken:e.refreshToken,authToken:g(e.authToken)}}throw await m("Create Installation",o)}(e,t);return F(e.appConfig,x)}catch(x){throw u(x)&&409===x.customData.serverCode?await R(e.appConfig):await F(e.appConfig,{fid:t.fid,registrationStatus:0}),x}}(e,x);return{installationEntry:x,registrationPromise:a}}return 1===t.registrationStatus?{installationEntry:t,registrationPromise:G(e)}:{installationEntry:t}}(e,a);return t=i.registrationPromise,i.installationEntry}));return x.fid===I?{installationEntry:await t}:{installationEntry:x,registrationPromise:t}}async function G(e){let t=await V(e.appConfig);for(;1===t.registrationStatus;)await y(100),t=await V(e.appConfig);if(0===t.registrationStatus){const{installationEntry:t,registrationPromise:x}=await H(e);return x||t}return t}function V(e){return U(e,(e=>{if(!e)throw f.create("installation-not-found");return W(e)}))}function W(e){return 1===(t=e).registrationStatus&&t.registrationTime+r<Date.now()?{fid:e.fid,registrationStatus:0}:e;var t}async function Y({appConfig:e,heartbeatServiceProvider:t},x){const a=function(e,{fid:t}){return`${p(e)}/${t}/authTokens:generate`}(e,x),i=w(e,x),s=t.getImmediate({optional:!0});if(s){const e=await s.getHeartbeatsHeader();e&&i.append("x-firebase-client",e)}const _={installation:{sdkVersion:d,appId:e.appId}},n={method:"POST",headers:i,body:JSON.stringify(_)},o=await S((()=>fetch(a,n)));if(o.ok){return g(await o.json())}throw await m("Generate Auth Token",o)}async function X(e,t=!1){let x;const a=await U(e.appConfig,(a=>{if(!K(a))throw f.create("not-registered");const i=a.authToken;if(!t&&function(e){return 2===e.requestStatus&&!function(e){const t=Date.now();return t<e.creationTime||e.creationTime+e.expiresIn<t+h}(e)}(i))return a;if(1===i.requestStatus)return x=async function(e,t){let x=await $(e.appConfig);for(;1===x.authToken.requestStatus;)await y(100),x=await $(e.appConfig);const a=x.authToken;return 0===a.requestStatus?X(e,t):a}(e,t),a;{if(!navigator.onLine)throw f.create("app-offline");const t=function(e){const t={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},e),{authToken:t})}(a);return x=async function(e,t){try{const x=await Y(e,t),a=Object.assign(Object.assign({},t),{authToken:x});return await F(e.appConfig,a),x}catch(x){if(!u(x)||401!==x.customData.serverCode&&404!==x.customData.serverCode){const x=Object.assign(Object.assign({},t),{authToken:{requestStatus:0}});await F(e.appConfig,x)}else await R(e.appConfig);throw x}}(e,t),t}}));return x?await x:a.authToken}function $(e){return U(e,(e=>{if(!K(e))throw f.create("not-registered");const t=e.authToken;return 1===(x=t).requestStatus&&x.requestTime+r<Date.now()?Object.assign(Object.assign({},e),{authToken:{requestStatus:0}}):e;var x}))}function K(e){return void 0!==e&&2===e.registrationStatus}async function q(e){const t=e,{installationEntry:x,registrationPromise:a}=await H(t);return a?a.catch(console.error):X(t).catch(console.error),x.fid}async function Z(e,t=!1){const x=e;await async function(e){const{registrationPromise:t}=await H(e);t&&await t}(x);return(await X(x,t)).token}async function Q(e,t){const x=function(e,{fid:t}){return`${p(e)}/${t}`}(e,t),a={method:"DELETE",headers:w(e,t)},i=await S((()=>fetch(x,a)));if(!i.ok)throw await m("Delete Installation",i)}async function J(e){const{appConfig:t}=e,x=await U(t,(e=>{if(!e||0!==e.registrationStatus)return e}));if(x){if(1===x.registrationStatus)throw f.create("delete-pending-registration");if(2===x.registrationStatus){if(!navigator.onLine)throw f.create("app-offline");await Q(t,x),await R(t)}}}function ee(e,t){const{appConfig:x}=e;return function(e,t){N();const x=P(e);let a=L.get(x);a||(a=new Set,L.set(x,a)),a.add(t)}(x,t),()=>{!function(e,t){const x=P(e),a=L.get(x);a&&(a.delete(t),0===a.size&&L.delete(x),D())}(x,t)}}function te(e=(0,a.getApp)()){return(0,a._getProvider)(e,"installations").getImmediate()}function xe(e){return f.create("missing-app-config-values",{valueName:e})}const ae="installations",ie=e=>{const t=e.getProvider("app").getImmediate(),x=function(e){if(!e||!e.options)throw xe("App Configuration");if(!e.name)throw xe("App Name");const t=["projectId","apiKey","appId"];for(const x of t)if(!e.options[x])throw xe(x);return{appName:e.name,projectId:e.options.projectId,apiKey:e.options.apiKey,appId:e.options.appId}}(t);return{app:t,appConfig:x,heartbeatServiceProvider:(0,a._getProvider)(t,"heartbeat"),_delete:()=>Promise.resolve()}},se=e=>{const t=e.getProvider("app").getImmediate(),x=(0,a._getProvider)(t,ae).getImmediate();return{getId:()=>q(x),getToken:e=>Z(x,e)}};(0,a._registerComponent)(new i.Component(ae,ie,"PUBLIC")),(0,a._registerComponent)(new i.Component("installations-internal",se,"PRIVATE")),(0,a.registerVersion)(n,o),(0,a.registerVersion)(n,o,"esm2017")},"./node_modules/@firebase/installations/node_modules/idb/build/index.js":(e,t,x)=>{x.r(t),x.d(t,{deleteDB:()=>s,openDB:()=>i,unwrap:()=>a.u,wrap:()=>a.w});var a=x("./node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js");function i(e,t,{blocked:x,upgrade:i,blocking:s,terminated:_}={}){const n=indexedDB.open(e,t),o=(0,a.w)(n);return i&&n.addEventListener("upgradeneeded",(e=>{i((0,a.w)(n.result),e.oldVersion,e.newVersion,(0,a.w)(n.transaction))})),x&&n.addEventListener("blocked",(()=>x())),o.then((e=>{_&&e.addEventListener("close",(()=>_())),s&&e.addEventListener("versionchange",(()=>s()))})).catch((()=>{})),o}function s(e,{blocked:t}={}){const x=indexedDB.deleteDatabase(e);return t&&x.addEventListener("blocked",(()=>t())),(0,a.w)(x).then((()=>{}))}const _=["get","getKey","getAll","getAllKeys","count"],n=["put","add","delete","clear"],o=new Map;function r(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(o.get(t))return o.get(t);const x=t.replace(/FromIndex$/,""),a=t!==x,i=n.includes(x);if(!(x in(a?IDBIndex:IDBObjectStore).prototype)||!i&&!_.includes(x))return;const s=async function(e,...t){const s=this.transaction(e,i?"readwrite":"readonly");let _=s.store;return a&&(_=_.index(t.shift())),(await Promise.all([_[x](...t),i&&s.done]))[0]};return o.set(t,s),s}(0,a.r)((e=>({...e,get:(t,x,a)=>r(t,x)||e.get(t,x,a),has:(t,x)=>!!r(t,x)||e.has(t,x)})))},"./node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js":(e,t,x)=>{x.r(t),x.d(t,{a:()=>d,i:()=>a,r:()=>l,u:()=>u,w:()=>f});const a=(e,t)=>t.some((t=>e instanceof t));let i,s;const _=new WeakMap,n=new WeakMap,o=new WeakMap,r=new WeakMap,d=new WeakMap;let c={get(e,t,x){if(e instanceof IDBTransaction){if("done"===t)return n.get(e);if("objectStoreNames"===t)return e.objectStoreNames||o.get(e);if("store"===t)return x.objectStoreNames[1]?void 0:x.objectStore(x.objectStoreNames[0])}return f(e[t])},set:(e,t,x)=>(e[t]=x,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function l(e){c=e(c)}function h(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(s||(s=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(u(this),t),f(_.get(this))}:function(...t){return f(e.apply(u(this),t))}:function(t,...x){const a=e.call(u(this),t,...x);return o.set(a,t.sort?t.sort():[t]),f(a)}}function b(e){return"function"==typeof e?h(e):(e instanceof IDBTransaction&&function(e){if(n.has(e))return;const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",s),e.removeEventListener("abort",s)},i=()=>{t(),a()},s=()=>{x(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",i),e.addEventListener("error",s),e.addEventListener("abort",s)}));n.set(e,t)}(e),a(e,i||(i=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,c):e)}function f(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("success",i),e.removeEventListener("error",s)},i=()=>{t(f(e.result)),a()},s=()=>{x(e.error),a()};e.addEventListener("success",i),e.addEventListener("error",s)}));return t.then((t=>{t instanceof IDBCursor&&_.set(t,e)})).catch((()=>{})),d.set(t,e),t}(e);if(r.has(e))return r.get(e);const t=b(e);return t!==e&&(r.set(e,t),d.set(t,e)),t}const u=e=>d.get(e)},"./node_modules/@firebase/logger/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{LogLevel:()=>i,Logger:()=>r,setLogLevel:()=>d,setUserLogHandler:()=>c});const a=[];var i;!function(e){e[e.DEBUG=0]="DEBUG",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.SILENT=5]="SILENT"}(i||(i={}));const s={debug:i.DEBUG,verbose:i.VERBOSE,info:i.INFO,warn:i.WARN,error:i.ERROR,silent:i.SILENT},_=i.INFO,n={[i.DEBUG]:"log",[i.VERBOSE]:"log",[i.INFO]:"info",[i.WARN]:"warn",[i.ERROR]:"error"},o=(e,t,...x)=>{if(t<e.logLevel)return;const a=(new Date).toISOString(),i=n[t];if(!i)throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`);console[i](`[${a}]  ${e.name}:`,...x)};class r{constructor(e){this.name=e,this._logLevel=_,this._logHandler=o,this._userLogHandler=null,a.push(this)}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in i))throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);this._logLevel=e}setLogLevel(e){this._logLevel="string"==typeof e?s[e]:e}get logHandler(){return this._logHandler}set logHandler(e){if("function"!=typeof e)throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=e}get userLogHandler(){return this._userLogHandler}set userLogHandler(e){this._userLogHandler=e}debug(...e){this._userLogHandler&&this._userLogHandler(this,i.DEBUG,...e),this._logHandler(this,i.DEBUG,...e)}log(...e){this._userLogHandler&&this._userLogHandler(this,i.VERBOSE,...e),this._logHandler(this,i.VERBOSE,...e)}info(...e){this._userLogHandler&&this._userLogHandler(this,i.INFO,...e),this._logHandler(this,i.INFO,...e)}warn(...e){this._userLogHandler&&this._userLogHandler(this,i.WARN,...e),this._logHandler(this,i.WARN,...e)}error(...e){this._userLogHandler&&this._userLogHandler(this,i.ERROR,...e),this._logHandler(this,i.ERROR,...e)}}function d(e){a.forEach((t=>{t.setLogLevel(e)}))}function c(e,t){for(const x of a){let a=null;t&&t.level&&(a=s[t.level]),x.userLogHandler=null===e?null:(t,x,...s)=>{const _=s.map((e=>{if(null==e)return null;if("string"==typeof e)return e;if("number"==typeof e||"boolean"==typeof e)return e.toString();if(e instanceof Error)return e.message;try{return JSON.stringify(e)}catch(e){return null}})).filter((e=>e)).join(" ");x>=(null!=a?a:t.logLevel)&&e({level:i[x].toLowerCase(),message:_,args:s,type:t.name})}}}},"./node_modules/firebase/analytics/dist/esm/index.esm.js":(e,t,x)=>{x.r(t),x.d(t,{getAnalytics:()=>a.getAnalytics,getGoogleAnalyticsClientId:()=>a.getGoogleAnalyticsClientId,initializeAnalytics:()=>a.initializeAnalytics,isSupported:()=>a.isSupported,logEvent:()=>a.logEvent,setAnalyticsCollectionEnabled:()=>a.setAnalyticsCollectionEnabled,setConsent:()=>a.setConsent,setCurrentScreen:()=>a.setCurrentScreen,setDefaultEventParameters:()=>a.setDefaultEventParameters,setUserId:()=>a.setUserId,setUserProperties:()=>a.setUserProperties,settings:()=>a.settings});var a=x("./node_modules/@firebase/analytics/dist/esm/index.esm2017.js")},"./node_modules/firebase/app/dist/esm/index.esm.js":(e,t,x)=>{x.r(t),x.d(t,{FirebaseError:()=>a.FirebaseError,SDK_VERSION:()=>a.SDK_VERSION,_DEFAULT_ENTRY_NAME:()=>a._DEFAULT_ENTRY_NAME,_addComponent:()=>a._addComponent,_addOrOverwriteComponent:()=>a._addOrOverwriteComponent,_apps:()=>a._apps,_clearComponents:()=>a._clearComponents,_components:()=>a._components,_getProvider:()=>a._getProvider,_registerComponent:()=>a._registerComponent,_removeServiceInstance:()=>a._removeServiceInstance,deleteApp:()=>a.deleteApp,getApp:()=>a.getApp,getApps:()=>a.getApps,initializeApp:()=>a.initializeApp,onLog:()=>a.onLog,registerVersion:()=>a.registerVersion,setLogLevel:()=>a.setLogLevel});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js");(0,a.registerVersion)("firebase","10.1.0","app")},"./node_modules/idb/build/index.js":(e,t,x)=>{x.r(t),x.d(t,{deleteDB:()=>s,openDB:()=>i,unwrap:()=>a.u,wrap:()=>a.w});var a=x("./node_modules/idb/build/wrap-idb-value.js");function i(e,t,{blocked:x,upgrade:i,blocking:s,terminated:_}={}){const n=indexedDB.open(e,t),o=(0,a.w)(n);return i&&n.addEventListener("upgradeneeded",(e=>{i((0,a.w)(n.result),e.oldVersion,e.newVersion,(0,a.w)(n.transaction),e)})),x&&n.addEventListener("blocked",(e=>x(e.oldVersion,e.newVersion,e))),o.then((e=>{_&&e.addEventListener("close",(()=>_())),s&&e.addEventListener("versionchange",(e=>s(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}function s(e,{blocked:t}={}){const x=indexedDB.deleteDatabase(e);return t&&x.addEventListener("blocked",(e=>t(e.oldVersion,e))),(0,a.w)(x).then((()=>{}))}const _=["get","getKey","getAll","getAllKeys","count"],n=["put","add","delete","clear"],o=new Map;function r(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(o.get(t))return o.get(t);const x=t.replace(/FromIndex$/,""),a=t!==x,i=n.includes(x);if(!(x in(a?IDBIndex:IDBObjectStore).prototype)||!i&&!_.includes(x))return;const s=async function(e,...t){const s=this.transaction(e,i?"readwrite":"readonly");let _=s.store;return a&&(_=_.index(t.shift())),(await Promise.all([_[x](...t),i&&s.done]))[0]};return o.set(t,s),s}(0,a.r)((e=>({...e,get:(t,x,a)=>r(t,x)||e.get(t,x,a),has:(t,x)=>!!r(t,x)||e.has(t,x)})))},"./node_modules/idb/build/wrap-idb-value.js":(e,t,x)=>{x.r(t),x.d(t,{a:()=>d,i:()=>a,r:()=>l,u:()=>u,w:()=>f});const a=(e,t)=>t.some((t=>e instanceof t));let i,s;const _=new WeakMap,n=new WeakMap,o=new WeakMap,r=new WeakMap,d=new WeakMap;let c={get(e,t,x){if(e instanceof IDBTransaction){if("done"===t)return n.get(e);if("objectStoreNames"===t)return e.objectStoreNames||o.get(e);if("store"===t)return x.objectStoreNames[1]?void 0:x.objectStore(x.objectStoreNames[0])}return f(e[t])},set:(e,t,x)=>(e[t]=x,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function l(e){c=e(c)}function h(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(s||(s=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(u(this),t),f(_.get(this))}:function(...t){return f(e.apply(u(this),t))}:function(t,...x){const a=e.call(u(this),t,...x);return o.set(a,t.sort?t.sort():[t]),f(a)}}function b(e){return"function"==typeof e?h(e):(e instanceof IDBTransaction&&function(e){if(n.has(e))return;const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",s),e.removeEventListener("abort",s)},i=()=>{t(),a()},s=()=>{x(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",i),e.addEventListener("error",s),e.addEventListener("abort",s)}));n.set(e,t)}(e),a(e,i||(i=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,c):e)}function f(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("success",i),e.removeEventListener("error",s)},i=()=>{t(f(e.result)),a()},s=()=>{x(e.error),a()};e.addEventListener("success",i),e.addEventListener("error",s)}));return t.then((t=>{t instanceof IDBCursor&&_.set(t,e)})).catch((()=>{})),d.set(t,e),t}(e);if(r.has(e))return r.get(e);const t=b(e);return t!==e&&(r.set(e,t),d.set(t,e)),t}const u=e=>d.get(e)},"./node_modules/workbox-window/build/workbox-window.prod.es5.mjs":(e,t,x)=>{x.r(t),x.d(t,{Workbox:()=>h,messageSW:()=>a});try{self["workbox:window:4.3.1"]&&_()}catch(a){}var a=function(e,t){return new Promise((function(x){var a=new MessageChannel;a.port1.onmessage=function(e){return x(e.data)},e.postMessage(t,[a.port2])}))};function i(e,t){for(var x=0;x<t.length;x++){var a=t[x];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}try{self["workbox:core:4.3.1"]&&_()}catch(a){}var n=function(){var e=this;this.promise=new Promise((function(t,x){e.resolve=t,e.reject=x}))},o=function(e,t){return new URL(e,location).href===new URL(t,location).href},r=function(e,t){Object.assign(this,t,{type:e})};function d(e){return function(){for(var t=[],x=0;x<arguments.length;x++)t[x]=arguments[x];try{return Promise.resolve(e.apply(this,t))}catch(e){return Promise.reject(e)}}}function c(e,t,x){return x?t?t(e):e:(e&&e.then||(e=Promise.resolve(e)),t?e.then(t):e)}function l(){}var h=function(e){var t,x;function _(t,x){var a;return void 0===x&&(x={}),(a=e.call(this)||this).t=t,a.i=x,a.o=0,a.u=new n,a.s=new n,a.h=new n,a.v=a.v.bind(s(s(a))),a.l=a.l.bind(s(s(a))),a.g=a.g.bind(s(s(a))),a.m=a.m.bind(s(s(a))),a}x=e,(t=_).prototype=Object.create(x.prototype),t.prototype.constructor=t,t.__proto__=x;var h,b,f=_.prototype;return f.register=d((function(e){var t,x,a=this,i=(void 0===e?{}:e).immediate,s=void 0!==i&&i;return t=function(){return a.p=Boolean(navigator.serviceWorker.controller),a.P=a.R(),c(a.k(),(function(e){a.B=e,a.P&&(a.O=a.P,a.s.resolve(a.P),a.h.resolve(a.P),a.j(a.P),a.P.addEventListener("statechange",a.l,{once:!0}));var t=a.B.waiting;return t&&o(t.scriptURL,a.t)&&(a.O=t,Promise.resolve().then((function(){a.dispatchEvent(new r("waiting",{sw:t,wasWaitingBeforeRegister:!0}))}))),a.O&&a.u.resolve(a.O),a.B.addEventListener("updatefound",a.g),navigator.serviceWorker.addEventListener("controllerchange",a.m,{once:!0}),"BroadcastChannel"in self&&(a.C=new BroadcastChannel("workbox"),a.C.addEventListener("message",a.v)),navigator.serviceWorker.addEventListener("message",a.v),a.B}))},(x=function(){if(!s&&"complete"!==document.readyState)return function(e,t){return e&&e.then?e.then(l):Promise.resolve()}(new Promise((function(e){return addEventListener("load",e)})))}())&&x.then?x.then(t):t()})),f.getSW=d((function(){return this.O||this.u.promise})),f.messageSW=d((function(e){return c(this.getSW(),(function(t){return a(t,e)}))})),f.R=function(){var e=navigator.serviceWorker.controller;if(e&&o(e.scriptURL,this.t))return e},f.k=d((function(){var e=this;return function(e,t){try{var x=e()}catch(e){return t(e)}return x&&x.then?x.then(void 0,t):x}((function(){return c(navigator.serviceWorker.register(e.t,e.i),(function(t){return e.L=performance.now(),t}))}),(function(e){throw e}))})),f.j=function(e){a(e,{type:"WINDOW_READY",meta:"workbox-window"})},f.g=function(){var e=this.B.installing;this.o>0||!o(e.scriptURL,this.t)||performance.now()>this.L+6e4?(this.W=e,this.B.removeEventListener("updatefound",this.g)):(this.O=e,this.u.resolve(e)),++this.o,e.addEventListener("statechange",this.l)},f.l=function(e){var t=this,x=e.target,a=x.state,i=x===this.W,s=i?"external":"",_={sw:x,originalEvent:e};!i&&this.p&&(_.isUpdate=!0),this.dispatchEvent(new r(s+a,_)),"installed"===a?this._=setTimeout((function(){"installed"===a&&t.B.waiting===x&&t.dispatchEvent(new r(s+"waiting",_))}),200):"activating"===a&&(clearTimeout(this._),i||this.s.resolve(x))},f.m=function(e){var t=this.O;t===navigator.serviceWorker.controller&&(this.dispatchEvent(new r("controlling",{sw:t,originalEvent:e})),this.h.resolve(t))},f.v=function(e){var t=e.data;this.dispatchEvent(new r("message",{data:t,originalEvent:e}))},h=_,(b=[{key:"active",get:function(){return this.s.promise}},{key:"controlling",get:function(){return this.h.promise}}])&&i(h.prototype,b),_}(function(){function e(){this.D={}}var t=e.prototype;return t.addEventListener=function(e,t){this.T(e).add(t)},t.removeEventListener=function(e,t){this.T(e).delete(t)},t.dispatchEvent=function(e){e.target=this,this.T(e.type).forEach((function(t){return t(e)}))},t.T=function(e){return this.D[e]=this.D[e]||new Set},e}())}},t={};function x(a){var i=t[a];if(void 0!==i)return i.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,x),s.exports}x.d=(e,t)=>{for(var a in t)x.o(t,a)&&!x.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},x.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),x.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),x.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};(()=>{x.r(a);var e=x("./src/data/index.ts"),t=x("./src/sceneHandler/index.ts"),i=x("./src/constants/index.ts"),s=x("./node_modules/workbox-window/build/workbox-window.prod.es5.mjs"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/common/index.ts"),o=x("./src/components/index.ts");new class{canvas;versionInfoElement;lang;is_cached;progressBar;progressBarContainer;channel;sceneHandler;loadingElement;majVersion;minVersion;dataModal;startSessionTime;titleTextElement;feedBackTextElement;currentProgress;firebaseIntegration;constructor(e){this.lang=e,this.currentProgress=10,this.canvas=document.getElementById("canvas"),this.channel=new BroadcastChannel("my-channel"),this.progressBar=document.getElementById("progress-bar"),this.titleTextElement=document.getElementById("title"),this.feedBackTextElement=document.getElementById("feedback-text"),this.progressBarContainer=document.getElementById("progress-bar-container"),this.versionInfoElement=document.getElementById("version-info-id"),this.loadingElement=document.getElementById("loading-screen"),this.is_cached=this.initializeCachedData(),this.firebaseIntegration=new _.FirebaseIntegration,this.startSessionTime=0,this.init(),this.channel.addEventListener("message",this.handleServiceWorkerMessage),window.addEventListener("beforeunload",this.handleBeforeUnload),document.addEventListener(n.VISIBILITY_CHANGE,this.handleVisibilityChange),window.addEventListener("resize",this.handleResize.bind(this))}async init(){const t=await n.Utils.getLanguageSpecificFont(this.lang);await this.loadAndCacheFont(t,`./assets/fonts/${t}.ttf`),await this.loadTitleFeedbackCustomFont(),await this.preloadGameAudios(),this.handleLoadingScreen(),this.setupCanvas();const x=await(0,e.getData)();this.majVersion=x.majversion,this.minVersion=x.minversion,this.dataModal=this.createDataModal(x),this.globalInitialization(x),this.logSessionStartFirebaseEvent(),window.addEventListener("resize",(async()=>{this.handleResize(this.dataModal)}));const a=localStorage.getItem(this.lang+"gamePlayedInfo"),s=a?JSON.parse(a).length-1:0,_=n.Debugger.DebugMode?i.PreviousPlayedLevel+this.lang+"Debug":i.PreviousPlayedLevel+this.lang;localStorage.setItem(_,s.toString()),this.is_cached.has(this.lang)&&this.handleCachedScenario(this.dataModal),this.registerWorkbox()}async loadTitleFeedbackCustomFont(){const t=e.customFonts[this.lang]||e.customFonts.default,x=`'${t}', sans-serif`;await this.loadAndCacheFont(t,`./assets/fonts/${t}.ttf`),[this.titleTextElement,this.feedBackTextElement].forEach((e=>{e&&(e.style.fontFamily=x)}))}logSessionStartFirebaseEvent(){let e=localStorage.getItem("lastSessionEndTime"),t=0;if(this.startSessionTime=(new Date).getTime(),e){let x=parseInt(e);isNaN(x)||(t=Math.abs((new Date).getTime()-x))}const x=parseFloat((t?t/864e5:0).toFixed(3)),a={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",days_since_last:x};this.firebaseIntegration.sendSessionStartEvent(a)}logSessionEndFirebaseEvent(){const e={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",duration:((new Date).getTime()-this.startSessionTime)/1e3};localStorage.setItem("lastSessionEndTime",(new Date).getTime().toString()),this.firebaseIntegration.sendSessionEndEvent(e)}initializeCachedData(){const e=localStorage.getItem(i.IsCached);return e?new Map(JSON.parse(e)):new Map}async loadAndCacheFont(e,t){try{const x=await caches.open("fontCache");if(!await x.match(t)){const e=await fetch(t),a=await e.blob();await x.put(t,new Response(a))}const a=new FontFace(e,`url(${t}) format('truetype')`);await a.load(),document.fonts.add(a)}catch(e){console.error(...c("1603038447_175_6_175_62_11",`Failed to load and cache font: ${e}`))}}handleLoadingScreen=()=>{this.is_cached.get(n.lang)?(this.loadingElement.style.zIndex="-1",this.loadingElement.style.display="none",this.progressBarContainer.style.display="none",this.progressBar.style.display="none"):(this.progressBarContainer.style.display="flex",this.progressBar.style.display="flex",this.progressBar.style.width="10%")};async registerWorkbox(){if("serviceWorker"in navigator)try{const t=new s.Workbox("./sw.js",{});await t.register(),await navigator.serviceWorker.ready,this.is_cached.has(this.lang)?fetch(e.URL+"?cache-bust="+(new Date).getTime(),{method:"GET",headers:{"Content-Type":"application/json","Cache-Control":"no-store"},cache:"no-store"}).then((async e=>{if(!e.ok)return void console.error(...c("1603038447_212_16_214_17_11","Failed to fetch the content file from the server!"));const t=await e.json(),x=t.majversion+"."+t.minversion,a=localStorage.getItem("version"+n.lang.toLowerCase());if(x&&a!=x){console.log(...d("1603038447_229_16_229_69_4","Content version mismatch! Reloading..."));var s=JSON.parse(localStorage.getItem("is_cached"));console.log(...d("1603038447_231_16_231_52_4","current lang  "+n.lang));var _=s.filter((e=>!e.toString().includes(n.lang)));localStorage.setItem(i.IsCached,JSON.stringify(_)),localStorage.removeItem("version"+n.lang.toLowerCase()),caches.delete(n.lang),this.handleUpdateFoundMessage()}})).catch((e=>{console.error(...c("1603038447_243_14_243_72_11","Error fetching the content file: "+e))})):this.channel.postMessage({command:"Cache",data:this.lang}),navigator.serviceWorker.addEventListener("message",this.handleServiceWorkerMessage)}catch(e){console.error(...c("1603038447_251_8_251_68_11",`Failed to register service worker: ${e}`))}}setupCanvas(){this.canvas.height=window.innerHeight,this.canvas.width=window.screen.width>1080?768:window.innerWidth}createDataModal(t){return new e.DataModal(t.title,t.OtherAudios,t.Levels,t.FeedbackTexts,t.RightToLeft,t.FeedbackAudios,t.majversion,t.minversion,t.version)}globalInitialization(e){globalThis.aboutCompany=e.aboutCompany,globalThis.descriptionText=e.descriptionText}handleResize(e){this.is_cached.has(this.lang)&&(this.updateVersionInfoElement(e),this.setupCanvas(),this.reinitializeSceneHandler(e))}updateVersionInfoElement(e){this.is_cached.has(this.lang)&&n.Debugger.DevelopmentLink&&(e.majVersion&&e.minVersion?this.versionInfoElement.innerHTML+=`/j.v${e.majVersion}.${e.minVersion}`:e.version&&(this.versionInfoElement.innerHTML+=`/j.v${e.version}`),document.getElementById("toggle-btn").style.display="block")}reinitializeSceneHandler(e){delete this.sceneHandler,this.sceneHandler=new t.SceneHandler(this.canvas,e),this.passingDataToContainer()}handleCachedScenario(e){this.updateVersionInfoElement(e),this.sceneHandler=new t.SceneHandler(this.canvas,e),this.passingDataToContainer()}passingDataToContainer=()=>{window.Android&&window.Android.cachedStatus(1==this.is_cached.get(this.lang))};setContainerAppOrientation(){window.Android&&window.Android.setContainerAppOrientation("portrait")}handleUpdateFoundMessage(){confirm("Update Found\nPress ok to update")&&window.location.reload()}handleLoadingMessage=e=>{if(this.progressBarContainer&&this.progressBar){this.showProgressBar();const t=Math.min(100,Math.max(0,e.data));t>this.currentProgress&&(this.currentProgress=t,this.progressBar.style.width=`${this.currentProgress}%`),this.isDownloadCompleted(this.currentProgress)&&(this.cacheLanguage(),this.sendCompletionEvent(),this.hideLoadingScreen())}};showProgressBar(){this.progressBarContainer.classList.add("visible"),this.progressBar.classList.add("visible")}isDownloadCompleted(e){return 100===e&&!this.is_cached.get(this.lang)}cacheLanguage(){try{this.is_cached.set(this.lang,!0),localStorage.setItem(i.IsCached,JSON.stringify(Array.from(this.is_cached.entries())))}catch(e){console.error(...c("1603038447_371_6_371_53_11","Error caching language:",e))}}sendCompletionEvent(){const e={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.getJsonVersionNumber()};this.firebaseIntegration.sendDownloadCompletedEvent(e)}getJsonVersionNumber(){return this.majVersion&&this.minVersion?this.majVersion+"."+this.minVersion:""}hideLoadingScreen(){try{localStorage.setItem("version"+this.lang,this.getJsonVersionNumber()),this.loadingElement.style.display="none",this.handleResize(this.dataModal)}catch(e){console.error(...c("1603038447_398_6_398_58_11","Error hiding loading screen:",e))}}handleServiceWorkerMessage=e=>{"Loading"===e.data.msg?this.handleLoadingMessage(e.data):"Update Found"===e.data.msg&&this.handleUpdateFoundMessage()};handleVisibilityChange=()=>{(0,n.isDocumentVisible)()?this.logSessionStartFirebaseEvent():this.logSessionEndFirebaseEvent()};handleBeforeUnload=async e=>{this.logSessionEndFirebaseEvent(),this.dispose()};preloadGameAudios=async()=>{let e=i.AUDIO_URL_PRELOAD;return new Promise(((t,x)=>{const a=e.map((e=>(new o.AudioPlayer).preloadGameAudio(e)));Promise.all(a).then((()=>t())).catch((e=>{console.error(...c("1603038447_435_10_435_57_11","Error preloading audio:",e)),x(e)}))}))};dispose(){this.channel.removeEventListener("message",this.handleServiceWorkerMessage),window.removeEventListener("beforeunload",this.handleBeforeUnload),document.removeEventListener(n.VISIBILITY_CHANGE,this.handleVisibilityChange),window.removeEventListener("resize",this.handleResize),navigator.serviceWorker&&navigator.serviceWorker.removeEventListener("message",this.handleServiceWorkerMessage)}}(n.lang);function r(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729239314494','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function d(e,...t){try{r().consoleLog(e,t)}catch(e){}return t}function c(e,...t){try{r().consoleError(e,t)}catch(e){}return t}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUlvdUQsRUFBWSxFQUFBeGdDLGtCQUNoQixPQUFPLElBQUlwNUIsU0FBUSxDQUFDRixFQUFTRCxLQUN6QixNQUFNZzZELEVBQWtCRCxFQUFVdHpELEtBQUs4VCxJQUFhLElBQUksRUFBQVosYUFBYzJCLGlCQUFpQmYsS0FDdkZwYSxRQUFRNlgsSUFBSWdpRCxHQUNQcHlELE1BQUssSUFBTTNILE1BQ1hLLE9BQU9wRCxJQUNhRCxRQUFRQyxTQUFTK1IsRUFBTSw4QkFBK0IsMEJBQTJCL1IsSUFDdEc4QyxFQUFPOUMsRUFBTSxHQUNmLEdBQ0osRUFHTixPQUFBOG1CLEdBQ0lqcUIsS0FBS2l1RCxRQUFRbmdDLG9CQUFvQixVQUFXOXRCLEtBQUt1N0QsNEJBQ2pEdDNELE9BQU82cEIsb0JBQW9CLGVBQWdCOXRCLEtBQUt3N0Qsb0JBQ2hENzJELFNBQVNtcEIsb0JBQW9CLEVBQUFyVyxrQkFBbUJ6WCxLQUFLdXZCLHdCQUNyRHRyQixPQUFPNnBCLG9CQUFvQixTQUFVOXRCLEtBQUt5N0QsY0FDdEM1ekQsVUFBVTh3RCxlQUNWOXdELFVBQVU4d0QsY0FBYzdxQyxvQkFBb0IsVUFBVzl0QixLQUFLdTdELDJCQUdwRSxHQUVnQixFQUFBdmpELE1BRXBCLFNBQVN4QyxJQUFVLElBQ2YsT0FBTyxFQUFJQyxNQUFNLCtCQUFnQyxFQUFJQSxNQUFNLHFpdUNBQy9ELENBQ0EsTUFBT3hTLEdBQUssQ0FBRSxDQUVkLFNBQVM0WSxFQUFNeGMsS0FBTXFXLEdBQUssSUFDdEJGLElBQVFtSyxXQUFXdGdCLEVBQUdxVyxFQUMxQixDQUNBLE1BQU96UyxHQUFLLENBQUUsT0FBT3lTLENBQUcsQ0FTeEIsU0FBU1IsRUFBTTdWLEtBQU1xVyxHQUFLLElBQ3RCRixJQUFRRyxhQUFhdFcsRUFBR3FXLEVBQzVCLENBQ0EsTUFBT3pTLEdBQUssQ0FBRSxPQUFPeVMsQ0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9ub2RlX21vZHVsZXMvQGZpcmViYXNlL3V0aWwvZGlzdC9pbmRleC5lc20yMDE3LmpzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvRmlyZWJhc2UvYmFzZS1maXJlYmFzZS1pbnRlZ3JhdGlvbi50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL0ZpcmViYXNlL2ZpcmViYXNlLWNvbmZpZy50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL0ZpcmViYXNlL2ZpcmViYXNlLWludGVncmF0aW9uLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tbW9uL2V2ZW50LW5hbWVzLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tbW9uL2dsb2JhbC12YXJpYWJsZXMudHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21tb24vc3RvbmUtY29uZmlnLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tbW9uL3V0aWxzLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy9hdWRpby1wbGF5ZXIudHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21wb25lbnRzL2JhY2tncm91bmQtY29tcG9uZW50LnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy9idXR0b25zL2NhbmNlbC1idXR0b24udHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21wb25lbnRzL2J1dHRvbnMvY2xvc2UtYnV0dG9uLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy9idXR0b25zL2xldmVsLWJ1dHRvbi50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL2NvbXBvbmVudHMvYnV0dG9ucy9uZXh0LWJ1dHRvbi50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL2NvbXBvbmVudHMvYnV0dG9ucy9uby1idXR0b24udHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21wb25lbnRzL2J1dHRvbnMvcGF1c2UtYnV0dG9uLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy9idXR0b25zL3BsYXktYnV0dG9uLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy9idXR0b25zL3JldHJ5LWJ1dHRvbi50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL2NvbXBvbmVudHMvYnV0dG9ucy95ZXMtYnV0dG9uLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy9mZWVkYmFjay10ZXh0L2luZGV4LnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy9sZXZlbC1pbmRpY2F0b3IudHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21wb25lbnRzL21vbnN0ZXIudHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21wb25lbnRzL3BvcHVwcy9wYXVzZS1wb3B1cC50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL2NvbXBvbmVudHMvcG9wdXBzL3N1cmUtcG9wdXAudHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21wb25lbnRzL3Byb21wdC10ZXh0LnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy9zdG9uZS1oYW5kbGVyLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy90aW1lci10aWNraW5nLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9uZW50cy90cmFpbC1wYXJ0aWNsZXMudHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21wb25lbnRzL3R1dG9yaWFsLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29tcG9zaXRpb25zL2JhY2tncm91bmQudHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL3NyYy9jb21wb3NpdGlvbnMvbGV2ZWwtY29uZmlnLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvY29uc3RhbnRzL2luZGV4LnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvZGF0YS9hcGktZGF0YS50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL2RhdGEvY3VzdG9tLWZvbnRzLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvZGF0YS9kYXRhLW1vZGFsLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvZGF0YS9nYW1lLXNjb3JlLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvZGF0YS9pMTgtZm9udC1tYXBwaW5nLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvZXZlbnRzL2luZGV4LnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvZ2FtZXB1enpsZXMvd29yZFB1enpsZUxvZ2ljLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvc2NlbmVIYW5kbGVyL2luZGV4LnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvc2NlbmVzL2dhbWVwbGF5LXNjZW5lLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvc2NlbmVzL2xldmVsLXNlbGVjdGlvbi1zY2VuZS50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL3NjZW5lcy9sZXZlbGVuZC1zY2VuZS50cyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vc3JjL3NjZW5lcy9sb2FkaW5nLXNjZW5lLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvc2NlbmVzL3N0YXJ0LXNjZW5lLnRzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9zcmMvc2NlbmVzL3Rlc3QtZ2FtZXBsYXktc2NlbmUudHMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL25vZGVfbW9kdWxlcy9AZmlyZWJhc2UvYW5hbHl0aWNzL2Rpc3QvZXNtL2luZGV4LmVzbTIwMTcuanMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL25vZGVfbW9kdWxlcy9AZmlyZWJhc2UvYXBwL2Rpc3QvZXNtL2luZGV4LmVzbTIwMTcuanMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL25vZGVfbW9kdWxlcy9AZmlyZWJhc2UvY29tcG9uZW50L2Rpc3QvZXNtL2luZGV4LmVzbTIwMTcuanMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL25vZGVfbW9kdWxlcy9AZmlyZWJhc2UvaW5zdGFsbGF0aW9ucy9kaXN0L2VzbS9pbmRleC5lc20yMDE3LmpzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9ub2RlX21vZHVsZXMvQGZpcmViYXNlL2luc3RhbGxhdGlvbnMvbm9kZV9tb2R1bGVzL2lkYi9idWlsZC9pbmRleC5qcyIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzLy4vbm9kZV9tb2R1bGVzL0BmaXJlYmFzZS9pbnN0YWxsYXRpb25zL25vZGVfbW9kdWxlcy9pZGIvYnVpbGQvd3JhcC1pZGItdmFsdWUuanMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL25vZGVfbW9kdWxlcy9AZmlyZWJhc2UvbG9nZ2VyL2Rpc3QvZXNtL2luZGV4LmVzbTIwMTcuanMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL25vZGVfbW9kdWxlcy9maXJlYmFzZS9hcHAvZGlzdC9lc20vaW5kZXguZXNtLmpzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9ub2RlX21vZHVsZXMvaWRiL2J1aWxkL2luZGV4LmpzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9ub2RlX21vZHVsZXMvaWRiL2J1aWxkL3dyYXAtaWRiLXZhbHVlLmpzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvLi9ub2RlX21vZHVsZXMvd29ya2JveC13aW5kb3cvYnVpbGQvd29ya2JveC13aW5kb3cucHJvZC5lczUubWpzIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2ZlZWR0aGVtb25zdGVyanMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9mZWVkdGhlbW9uc3RlcmpzL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vZmVlZHRoZW1vbnN0ZXJqcy8uL2ZlZWRUaGVNb25zdGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3IEZpcmViYXNlIGNvbnN0YW50cy4gIFNvbWUgb2YgdGhlc2UgKEBkZWZpbmVzKSBjYW4gYmUgb3ZlcnJpZGRlbiBhdCBjb21waWxlLXRpbWUuXHJcbiAqL1xyXG5jb25zdCBDT05TVEFOVFMgPSB7XHJcbiAgICAvKipcclxuICAgICAqIEBkZWZpbmUge2Jvb2xlYW59IFdoZXRoZXIgdGhpcyBpcyB0aGUgY2xpZW50IE5vZGUuanMgU0RLLlxyXG4gICAgICovXHJcbiAgICBOT0RFX0NMSUVOVDogZmFsc2UsXHJcbiAgICAvKipcclxuICAgICAqIEBkZWZpbmUge2Jvb2xlYW59IFdoZXRoZXIgdGhpcyBpcyB0aGUgQWRtaW4gTm9kZS5qcyBTREsuXHJcbiAgICAgKi9cclxuICAgIE5PREVfQURNSU46IGZhbHNlLFxyXG4gICAgLyoqXHJcbiAgICAgKiBGaXJlYmFzZSBTREsgVmVyc2lvblxyXG4gICAgICovXHJcbiAgICBTREtfVkVSU0lPTjogJyR7SlNDT1JFX1ZFUlNJT059J1xyXG59O1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogVGhyb3dzIGFuIGVycm9yIGlmIHRoZSBwcm92aWRlZCBhc3NlcnRpb24gaXMgZmFsc3lcclxuICovXHJcbmNvbnN0IGFzc2VydCA9IGZ1bmN0aW9uIChhc3NlcnRpb24sIG1lc3NhZ2UpIHtcclxuICAgIGlmICghYXNzZXJ0aW9uKSB7XHJcbiAgICAgICAgdGhyb3cgYXNzZXJ0aW9uRXJyb3IobWVzc2FnZSk7XHJcbiAgICB9XHJcbn07XHJcbi8qKlxyXG4gKiBSZXR1cm5zIGFuIEVycm9yIG9iamVjdCBzdWl0YWJsZSBmb3IgdGhyb3dpbmcuXHJcbiAqL1xyXG5jb25zdCBhc3NlcnRpb25FcnJvciA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XHJcbiAgICByZXR1cm4gbmV3IEVycm9yKCdGaXJlYmFzZSBEYXRhYmFzZSAoJyArXHJcbiAgICAgICAgQ09OU1RBTlRTLlNES19WRVJTSU9OICtcclxuICAgICAgICAnKSBJTlRFUk5BTCBBU1NFUlQgRkFJTEVEOiAnICtcclxuICAgICAgICBtZXNzYWdlKTtcclxufTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3Qgc3RyaW5nVG9CeXRlQXJyYXkkMSA9IGZ1bmN0aW9uIChzdHIpIHtcclxuICAgIC8vIFRPRE8odXNlcik6IFVzZSBuYXRpdmUgaW1wbGVtZW50YXRpb25zIGlmL3doZW4gYXZhaWxhYmxlXHJcbiAgICBjb25zdCBvdXQgPSBbXTtcclxuICAgIGxldCBwID0gMDtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IGMgPSBzdHIuY2hhckNvZGVBdChpKTtcclxuICAgICAgICBpZiAoYyA8IDEyOCkge1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IGM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGMgPCAyMDQ4KSB7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgPj4gNikgfCAxOTI7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgJiA2MykgfCAxMjg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKChjICYgMHhmYzAwKSA9PT0gMHhkODAwICYmXHJcbiAgICAgICAgICAgIGkgKyAxIDwgc3RyLmxlbmd0aCAmJlxyXG4gICAgICAgICAgICAoc3RyLmNoYXJDb2RlQXQoaSArIDEpICYgMHhmYzAwKSA9PT0gMHhkYzAwKSB7XHJcbiAgICAgICAgICAgIC8vIFN1cnJvZ2F0ZSBQYWlyXHJcbiAgICAgICAgICAgIGMgPSAweDEwMDAwICsgKChjICYgMHgwM2ZmKSA8PCAxMCkgKyAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4MDNmZik7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgPj4gMTgpIHwgMjQwO1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9ICgoYyA+PiAxMikgJiA2MykgfCAxMjg7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKChjID4+IDYpICYgNjMpIHwgMTI4O1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSAoYyA+PiAxMikgfCAyMjQ7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKChjID4+IDYpICYgNjMpIHwgMTI4O1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBvdXQ7XHJcbn07XHJcbi8qKlxyXG4gKiBUdXJucyBhbiBhcnJheSBvZiBudW1iZXJzIGludG8gdGhlIHN0cmluZyBnaXZlbiBieSB0aGUgY29uY2F0ZW5hdGlvbiBvZiB0aGVcclxuICogY2hhcmFjdGVycyB0byB3aGljaCB0aGUgbnVtYmVycyBjb3JyZXNwb25kLlxyXG4gKiBAcGFyYW0gYnl0ZXMgQXJyYXkgb2YgbnVtYmVycyByZXByZXNlbnRpbmcgY2hhcmFjdGVycy5cclxuICogQHJldHVybiBTdHJpbmdpZmljYXRpb24gb2YgdGhlIGFycmF5LlxyXG4gKi9cclxuY29uc3QgYnl0ZUFycmF5VG9TdHJpbmcgPSBmdW5jdGlvbiAoYnl0ZXMpIHtcclxuICAgIC8vIFRPRE8odXNlcik6IFVzZSBuYXRpdmUgaW1wbGVtZW50YXRpb25zIGlmL3doZW4gYXZhaWxhYmxlXHJcbiAgICBjb25zdCBvdXQgPSBbXTtcclxuICAgIGxldCBwb3MgPSAwLCBjID0gMDtcclxuICAgIHdoaWxlIChwb3MgPCBieXRlcy5sZW5ndGgpIHtcclxuICAgICAgICBjb25zdCBjMSA9IGJ5dGVzW3BvcysrXTtcclxuICAgICAgICBpZiAoYzEgPCAxMjgpIHtcclxuICAgICAgICAgICAgb3V0W2MrK10gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGMxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYzEgPiAxOTEgJiYgYzEgPCAyMjQpIHtcclxuICAgICAgICAgICAgY29uc3QgYzIgPSBieXRlc1twb3MrK107XHJcbiAgICAgICAgICAgIG91dFtjKytdID0gU3RyaW5nLmZyb21DaGFyQ29kZSgoKGMxICYgMzEpIDw8IDYpIHwgKGMyICYgNjMpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYzEgPiAyMzkgJiYgYzEgPCAzNjUpIHtcclxuICAgICAgICAgICAgLy8gU3Vycm9nYXRlIFBhaXJcclxuICAgICAgICAgICAgY29uc3QgYzIgPSBieXRlc1twb3MrK107XHJcbiAgICAgICAgICAgIGNvbnN0IGMzID0gYnl0ZXNbcG9zKytdO1xyXG4gICAgICAgICAgICBjb25zdCBjNCA9IGJ5dGVzW3BvcysrXTtcclxuICAgICAgICAgICAgY29uc3QgdSA9ICgoKGMxICYgNykgPDwgMTgpIHwgKChjMiAmIDYzKSA8PCAxMikgfCAoKGMzICYgNjMpIDw8IDYpIHwgKGM0ICYgNjMpKSAtXHJcbiAgICAgICAgICAgICAgICAweDEwMDAwO1xyXG4gICAgICAgICAgICBvdXRbYysrXSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoMHhkODAwICsgKHUgPj4gMTApKTtcclxuICAgICAgICAgICAgb3V0W2MrK10gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKDB4ZGMwMCArICh1ICYgMTAyMykpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3QgYzIgPSBieXRlc1twb3MrK107XHJcbiAgICAgICAgICAgIGNvbnN0IGMzID0gYnl0ZXNbcG9zKytdO1xyXG4gICAgICAgICAgICBvdXRbYysrXSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoKChjMSAmIDE1KSA8PCAxMikgfCAoKGMyICYgNjMpIDw8IDYpIHwgKGMzICYgNjMpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gb3V0LmpvaW4oJycpO1xyXG59O1xyXG4vLyBXZSBkZWZpbmUgaXQgYXMgYW4gb2JqZWN0IGxpdGVyYWwgaW5zdGVhZCBvZiBhIGNsYXNzIGJlY2F1c2UgYSBjbGFzcyBjb21waWxlZCBkb3duIHRvIGVzNSBjYW4ndFxyXG4vLyBiZSB0cmVlc2hha2VkLiBodHRwczovL2dpdGh1Yi5jb20vcm9sbHVwL3JvbGx1cC9pc3N1ZXMvMTY5MVxyXG4vLyBTdGF0aWMgbG9va3VwIG1hcHMsIGxhemlseSBwb3B1bGF0ZWQgYnkgaW5pdF8oKVxyXG5jb25zdCBiYXNlNjQgPSB7XHJcbiAgICAvKipcclxuICAgICAqIE1hcHMgYnl0ZXMgdG8gY2hhcmFjdGVycy5cclxuICAgICAqL1xyXG4gICAgYnl0ZVRvQ2hhck1hcF86IG51bGwsXHJcbiAgICAvKipcclxuICAgICAqIE1hcHMgY2hhcmFjdGVycyB0byBieXRlcy5cclxuICAgICAqL1xyXG4gICAgY2hhclRvQnl0ZU1hcF86IG51bGwsXHJcbiAgICAvKipcclxuICAgICAqIE1hcHMgYnl0ZXMgdG8gd2Vic2FmZSBjaGFyYWN0ZXJzLlxyXG4gICAgICogQHByaXZhdGVcclxuICAgICAqL1xyXG4gICAgYnl0ZVRvQ2hhck1hcFdlYlNhZmVfOiBudWxsLFxyXG4gICAgLyoqXHJcbiAgICAgKiBNYXBzIHdlYnNhZmUgY2hhcmFjdGVycyB0byBieXRlcy5cclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKi9cclxuICAgIGNoYXJUb0J5dGVNYXBXZWJTYWZlXzogbnVsbCxcclxuICAgIC8qKlxyXG4gICAgICogT3VyIGRlZmF1bHQgYWxwaGFiZXQsIHNoYXJlZCBiZXR3ZWVuXHJcbiAgICAgKiBFTkNPREVEX1ZBTFMgYW5kIEVOQ09ERURfVkFMU19XRUJTQUZFXHJcbiAgICAgKi9cclxuICAgIEVOQ09ERURfVkFMU19CQVNFOiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVonICsgJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6JyArICcwMTIzNDU2Nzg5JyxcclxuICAgIC8qKlxyXG4gICAgICogT3VyIGRlZmF1bHQgYWxwaGFiZXQuIFZhbHVlIDY0ICg9KSBpcyBzcGVjaWFsOyBpdCBtZWFucyBcIm5vdGhpbmcuXCJcclxuICAgICAqL1xyXG4gICAgZ2V0IEVOQ09ERURfVkFMUygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5FTkNPREVEX1ZBTFNfQkFTRSArICcrLz0nO1xyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICogT3VyIHdlYnNhZmUgYWxwaGFiZXQuXHJcbiAgICAgKi9cclxuICAgIGdldCBFTkNPREVEX1ZBTFNfV0VCU0FGRSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5FTkNPREVEX1ZBTFNfQkFTRSArICctXy4nO1xyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICogV2hldGhlciB0aGlzIGJyb3dzZXIgc3VwcG9ydHMgdGhlIGF0b2IgYW5kIGJ0b2EgZnVuY3Rpb25zLiBUaGlzIGV4dGVuc2lvblxyXG4gICAgICogc3RhcnRlZCBhdCBNb3ppbGxhIGJ1dCBpcyBub3cgaW1wbGVtZW50ZWQgYnkgbWFueSBicm93c2Vycy4gV2UgdXNlIHRoZVxyXG4gICAgICogQVNTVU1FXyogdmFyaWFibGVzIHRvIGF2b2lkIHB1bGxpbmcgaW4gdGhlIGZ1bGwgdXNlcmFnZW50IGRldGVjdGlvbiBsaWJyYXJ5XHJcbiAgICAgKiBidXQgc3RpbGwgYWxsb3dpbmcgdGhlIHN0YW5kYXJkIHBlci1icm93c2VyIGNvbXBpbGF0aW9ucy5cclxuICAgICAqXHJcbiAgICAgKi9cclxuICAgIEhBU19OQVRJVkVfU1VQUE9SVDogdHlwZW9mIGF0b2IgPT09ICdmdW5jdGlvbicsXHJcbiAgICAvKipcclxuICAgICAqIEJhc2U2NC1lbmNvZGUgYW4gYXJyYXkgb2YgYnl0ZXMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGlucHV0IEFuIGFycmF5IG9mIGJ5dGVzIChudW1iZXJzIHdpdGhcclxuICAgICAqICAgICB2YWx1ZSBpbiBbMCwgMjU1XSkgdG8gZW5jb2RlLlxyXG4gICAgICogQHBhcmFtIHdlYlNhZmUgQm9vbGVhbiBpbmRpY2F0aW5nIHdlIHNob3VsZCB1c2UgdGhlXHJcbiAgICAgKiAgICAgYWx0ZXJuYXRpdmUgYWxwaGFiZXQuXHJcbiAgICAgKiBAcmV0dXJuIFRoZSBiYXNlNjQgZW5jb2RlZCBzdHJpbmcuXHJcbiAgICAgKi9cclxuICAgIGVuY29kZUJ5dGVBcnJheShpbnB1dCwgd2ViU2FmZSkge1xyXG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ2VuY29kZUJ5dGVBcnJheSB0YWtlcyBhbiBhcnJheSBhcyBhIHBhcmFtZXRlcicpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmluaXRfKCk7XHJcbiAgICAgICAgY29uc3QgYnl0ZVRvQ2hhck1hcCA9IHdlYlNhZmVcclxuICAgICAgICAgICAgPyB0aGlzLmJ5dGVUb0NoYXJNYXBXZWJTYWZlX1xyXG4gICAgICAgICAgICA6IHRoaXMuYnl0ZVRvQ2hhck1hcF87XHJcbiAgICAgICAgY29uc3Qgb3V0cHV0ID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkgKz0gMykge1xyXG4gICAgICAgICAgICBjb25zdCBieXRlMSA9IGlucHV0W2ldO1xyXG4gICAgICAgICAgICBjb25zdCBoYXZlQnl0ZTIgPSBpICsgMSA8IGlucHV0Lmxlbmd0aDtcclxuICAgICAgICAgICAgY29uc3QgYnl0ZTIgPSBoYXZlQnl0ZTIgPyBpbnB1dFtpICsgMV0gOiAwO1xyXG4gICAgICAgICAgICBjb25zdCBoYXZlQnl0ZTMgPSBpICsgMiA8IGlucHV0Lmxlbmd0aDtcclxuICAgICAgICAgICAgY29uc3QgYnl0ZTMgPSBoYXZlQnl0ZTMgPyBpbnB1dFtpICsgMl0gOiAwO1xyXG4gICAgICAgICAgICBjb25zdCBvdXRCeXRlMSA9IGJ5dGUxID4+IDI7XHJcbiAgICAgICAgICAgIGNvbnN0IG91dEJ5dGUyID0gKChieXRlMSAmIDB4MDMpIDw8IDQpIHwgKGJ5dGUyID4+IDQpO1xyXG4gICAgICAgICAgICBsZXQgb3V0Qnl0ZTMgPSAoKGJ5dGUyICYgMHgwZikgPDwgMikgfCAoYnl0ZTMgPj4gNik7XHJcbiAgICAgICAgICAgIGxldCBvdXRCeXRlNCA9IGJ5dGUzICYgMHgzZjtcclxuICAgICAgICAgICAgaWYgKCFoYXZlQnl0ZTMpIHtcclxuICAgICAgICAgICAgICAgIG91dEJ5dGU0ID0gNjQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWhhdmVCeXRlMikge1xyXG4gICAgICAgICAgICAgICAgICAgIG91dEJ5dGUzID0gNjQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb3V0cHV0LnB1c2goYnl0ZVRvQ2hhck1hcFtvdXRCeXRlMV0sIGJ5dGVUb0NoYXJNYXBbb3V0Qnl0ZTJdLCBieXRlVG9DaGFyTWFwW291dEJ5dGUzXSwgYnl0ZVRvQ2hhck1hcFtvdXRCeXRlNF0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb3V0cHV0LmpvaW4oJycpO1xyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICogQmFzZTY0LWVuY29kZSBhIHN0cmluZy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gaW5wdXQgQSBzdHJpbmcgdG8gZW5jb2RlLlxyXG4gICAgICogQHBhcmFtIHdlYlNhZmUgSWYgdHJ1ZSwgd2Ugc2hvdWxkIHVzZSB0aGVcclxuICAgICAqICAgICBhbHRlcm5hdGl2ZSBhbHBoYWJldC5cclxuICAgICAqIEByZXR1cm4gVGhlIGJhc2U2NCBlbmNvZGVkIHN0cmluZy5cclxuICAgICAqL1xyXG4gICAgZW5jb2RlU3RyaW5nKGlucHV0LCB3ZWJTYWZlKSB7XHJcbiAgICAgICAgLy8gU2hvcnRjdXQgZm9yIE1vemlsbGEgYnJvd3NlcnMgdGhhdCBpbXBsZW1lbnRcclxuICAgICAgICAvLyBhIG5hdGl2ZSBiYXNlNjQgZW5jb2RlciBpbiB0aGUgZm9ybSBvZiBcImJ0b2EvYXRvYlwiXHJcbiAgICAgICAgaWYgKHRoaXMuSEFTX05BVElWRV9TVVBQT1JUICYmICF3ZWJTYWZlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBidG9hKGlucHV0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5jb2RlQnl0ZUFycmF5KHN0cmluZ1RvQnl0ZUFycmF5JDEoaW5wdXQpLCB3ZWJTYWZlKTtcclxuICAgIH0sXHJcbiAgICAvKipcclxuICAgICAqIEJhc2U2NC1kZWNvZGUgYSBzdHJpbmcuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGlucHV0IHRvIGRlY29kZS5cclxuICAgICAqIEBwYXJhbSB3ZWJTYWZlIFRydWUgaWYgd2Ugc2hvdWxkIHVzZSB0aGVcclxuICAgICAqICAgICBhbHRlcm5hdGl2ZSBhbHBoYWJldC5cclxuICAgICAqIEByZXR1cm4gc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgZGVjb2RlZCB2YWx1ZS5cclxuICAgICAqL1xyXG4gICAgZGVjb2RlU3RyaW5nKGlucHV0LCB3ZWJTYWZlKSB7XHJcbiAgICAgICAgLy8gU2hvcnRjdXQgZm9yIE1vemlsbGEgYnJvd3NlcnMgdGhhdCBpbXBsZW1lbnRcclxuICAgICAgICAvLyBhIG5hdGl2ZSBiYXNlNjQgZW5jb2RlciBpbiB0aGUgZm9ybSBvZiBcImJ0b2EvYXRvYlwiXHJcbiAgICAgICAgaWYgKHRoaXMuSEFTX05BVElWRV9TVVBQT1JUICYmICF3ZWJTYWZlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBhdG9iKGlucHV0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGJ5dGVBcnJheVRvU3RyaW5nKHRoaXMuZGVjb2RlU3RyaW5nVG9CeXRlQXJyYXkoaW5wdXQsIHdlYlNhZmUpKTtcclxuICAgIH0sXHJcbiAgICAvKipcclxuICAgICAqIEJhc2U2NC1kZWNvZGUgYSBzdHJpbmcuXHJcbiAgICAgKlxyXG4gICAgICogSW4gYmFzZS02NCBkZWNvZGluZywgZ3JvdXBzIG9mIGZvdXIgY2hhcmFjdGVycyBhcmUgY29udmVydGVkIGludG8gdGhyZWVcclxuICAgICAqIGJ5dGVzLiAgSWYgdGhlIGVuY29kZXIgZGlkIG5vdCBhcHBseSBwYWRkaW5nLCB0aGUgaW5wdXQgbGVuZ3RoIG1heSBub3RcclxuICAgICAqIGJlIGEgbXVsdGlwbGUgb2YgNC5cclxuICAgICAqXHJcbiAgICAgKiBJbiB0aGlzIGNhc2UsIHRoZSBsYXN0IGdyb3VwIHdpbGwgaGF2ZSBmZXdlciB0aGFuIDQgY2hhcmFjdGVycywgYW5kXHJcbiAgICAgKiBwYWRkaW5nIHdpbGwgYmUgaW5mZXJyZWQuICBJZiB0aGUgZ3JvdXAgaGFzIG9uZSBvciB0d28gY2hhcmFjdGVycywgaXQgZGVjb2Rlc1xyXG4gICAgICogdG8gb25lIGJ5dGUuICBJZiB0aGUgZ3JvdXAgaGFzIHRocmVlIGNoYXJhY3RlcnMsIGl0IGRlY29kZXMgdG8gdHdvIGJ5dGVzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBpbnB1dCBJbnB1dCB0byBkZWNvZGUuXHJcbiAgICAgKiBAcGFyYW0gd2ViU2FmZSBUcnVlIGlmIHdlIHNob3VsZCB1c2UgdGhlIHdlYi1zYWZlIGFscGhhYmV0LlxyXG4gICAgICogQHJldHVybiBieXRlcyByZXByZXNlbnRpbmcgdGhlIGRlY29kZWQgdmFsdWUuXHJcbiAgICAgKi9cclxuICAgIGRlY29kZVN0cmluZ1RvQnl0ZUFycmF5KGlucHV0LCB3ZWJTYWZlKSB7XHJcbiAgICAgICAgdGhpcy5pbml0XygpO1xyXG4gICAgICAgIGNvbnN0IGNoYXJUb0J5dGVNYXAgPSB3ZWJTYWZlXHJcbiAgICAgICAgICAgID8gdGhpcy5jaGFyVG9CeXRlTWFwV2ViU2FmZV9cclxuICAgICAgICAgICAgOiB0aGlzLmNoYXJUb0J5dGVNYXBfO1xyXG4gICAgICAgIGNvbnN0IG91dHB1dCA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOykge1xyXG4gICAgICAgICAgICBjb25zdCBieXRlMSA9IGNoYXJUb0J5dGVNYXBbaW5wdXQuY2hhckF0KGkrKyldO1xyXG4gICAgICAgICAgICBjb25zdCBoYXZlQnl0ZTIgPSBpIDwgaW5wdXQubGVuZ3RoO1xyXG4gICAgICAgICAgICBjb25zdCBieXRlMiA9IGhhdmVCeXRlMiA/IGNoYXJUb0J5dGVNYXBbaW5wdXQuY2hhckF0KGkpXSA6IDA7XHJcbiAgICAgICAgICAgICsraTtcclxuICAgICAgICAgICAgY29uc3QgaGF2ZUJ5dGUzID0gaSA8IGlucHV0Lmxlbmd0aDtcclxuICAgICAgICAgICAgY29uc3QgYnl0ZTMgPSBoYXZlQnl0ZTMgPyBjaGFyVG9CeXRlTWFwW2lucHV0LmNoYXJBdChpKV0gOiA2NDtcclxuICAgICAgICAgICAgKytpO1xyXG4gICAgICAgICAgICBjb25zdCBoYXZlQnl0ZTQgPSBpIDwgaW5wdXQubGVuZ3RoO1xyXG4gICAgICAgICAgICBjb25zdCBieXRlNCA9IGhhdmVCeXRlNCA/IGNoYXJUb0J5dGVNYXBbaW5wdXQuY2hhckF0KGkpXSA6IDY0O1xyXG4gICAgICAgICAgICArK2k7XHJcbiAgICAgICAgICAgIGlmIChieXRlMSA9PSBudWxsIHx8IGJ5dGUyID09IG51bGwgfHwgYnl0ZTMgPT0gbnVsbCB8fCBieXRlNCA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRGVjb2RlQmFzZTY0U3RyaW5nRXJyb3IoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBvdXRCeXRlMSA9IChieXRlMSA8PCAyKSB8IChieXRlMiA+PiA0KTtcclxuICAgICAgICAgICAgb3V0cHV0LnB1c2gob3V0Qnl0ZTEpO1xyXG4gICAgICAgICAgICBpZiAoYnl0ZTMgIT09IDY0KSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBvdXRCeXRlMiA9ICgoYnl0ZTIgPDwgNCkgJiAweGYwKSB8IChieXRlMyA+PiAyKTtcclxuICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKG91dEJ5dGUyKTtcclxuICAgICAgICAgICAgICAgIGlmIChieXRlNCAhPT0gNjQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBvdXRCeXRlMyA9ICgoYnl0ZTMgPDwgNikgJiAweGMwKSB8IGJ5dGU0O1xyXG4gICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKG91dEJ5dGUzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb3V0cHV0O1xyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICogTGF6eSBzdGF0aWMgaW5pdGlhbGl6YXRpb24gZnVuY3Rpb24uIENhbGxlZCBiZWZvcmVcclxuICAgICAqIGFjY2Vzc2luZyBhbnkgb2YgdGhlIHN0YXRpYyBtYXAgdmFyaWFibGVzLlxyXG4gICAgICogQHByaXZhdGVcclxuICAgICAqL1xyXG4gICAgaW5pdF8oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmJ5dGVUb0NoYXJNYXBfKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnl0ZVRvQ2hhck1hcF8gPSB7fTtcclxuICAgICAgICAgICAgdGhpcy5jaGFyVG9CeXRlTWFwXyA9IHt9O1xyXG4gICAgICAgICAgICB0aGlzLmJ5dGVUb0NoYXJNYXBXZWJTYWZlXyA9IHt9O1xyXG4gICAgICAgICAgICB0aGlzLmNoYXJUb0J5dGVNYXBXZWJTYWZlXyA9IHt9O1xyXG4gICAgICAgICAgICAvLyBXZSB3YW50IHF1aWNrIG1hcHBpbmdzIGJhY2sgYW5kIGZvcnRoLCBzbyB3ZSBwcmVjb21wdXRlIHR3byBtYXBzLlxyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRU5DT0RFRF9WQUxTLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVUb0NoYXJNYXBfW2ldID0gdGhpcy5FTkNPREVEX1ZBTFMuY2hhckF0KGkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGFyVG9CeXRlTWFwX1t0aGlzLmJ5dGVUb0NoYXJNYXBfW2ldXSA9IGk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVUb0NoYXJNYXBXZWJTYWZlX1tpXSA9IHRoaXMuRU5DT0RFRF9WQUxTX1dFQlNBRkUuY2hhckF0KGkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGFyVG9CeXRlTWFwV2ViU2FmZV9bdGhpcy5ieXRlVG9DaGFyTWFwV2ViU2FmZV9baV1dID0gaTtcclxuICAgICAgICAgICAgICAgIC8vIEJlIGZvcmdpdmluZyB3aGVuIGRlY29kaW5nIGFuZCBjb3JyZWN0bHkgZGVjb2RlIGJvdGggZW5jb2RpbmdzLlxyXG4gICAgICAgICAgICAgICAgaWYgKGkgPj0gdGhpcy5FTkNPREVEX1ZBTFNfQkFTRS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYXJUb0J5dGVNYXBfW3RoaXMuRU5DT0RFRF9WQUxTX1dFQlNBRkUuY2hhckF0KGkpXSA9IGk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFyVG9CeXRlTWFwV2ViU2FmZV9bdGhpcy5FTkNPREVEX1ZBTFMuY2hhckF0KGkpXSA9IGk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcbi8qKlxyXG4gKiBBbiBlcnJvciBlbmNvdW50ZXJlZCB3aGlsZSBkZWNvZGluZyBiYXNlNjQgc3RyaW5nLlxyXG4gKi9cclxuY2xhc3MgRGVjb2RlQmFzZTY0U3RyaW5nRXJyb3IgZXh0ZW5kcyBFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICdEZWNvZGVCYXNlNjRTdHJpbmdFcnJvcic7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIFVSTC1zYWZlIGJhc2U2NCBlbmNvZGluZ1xyXG4gKi9cclxuY29uc3QgYmFzZTY0RW5jb2RlID0gZnVuY3Rpb24gKHN0cikge1xyXG4gICAgY29uc3QgdXRmOEJ5dGVzID0gc3RyaW5nVG9CeXRlQXJyYXkkMShzdHIpO1xyXG4gICAgcmV0dXJuIGJhc2U2NC5lbmNvZGVCeXRlQXJyYXkodXRmOEJ5dGVzLCB0cnVlKTtcclxufTtcclxuLyoqXHJcbiAqIFVSTC1zYWZlIGJhc2U2NCBlbmNvZGluZyAod2l0aG91dCBcIi5cIiBwYWRkaW5nIGluIHRoZSBlbmQpLlxyXG4gKiBlLmcuIFVzZWQgaW4gSlNPTiBXZWIgVG9rZW4gKEpXVCkgcGFydHMuXHJcbiAqL1xyXG5jb25zdCBiYXNlNjR1cmxFbmNvZGVXaXRob3V0UGFkZGluZyA9IGZ1bmN0aW9uIChzdHIpIHtcclxuICAgIC8vIFVzZSBiYXNlNjR1cmwgZW5jb2RpbmcgYW5kIHJlbW92ZSBwYWRkaW5nIGluIHRoZSBlbmQgKGRvdCBjaGFyYWN0ZXJzKS5cclxuICAgIHJldHVybiBiYXNlNjRFbmNvZGUoc3RyKS5yZXBsYWNlKC9cXC4vZywgJycpO1xyXG59O1xyXG4vKipcclxuICogVVJMLXNhZmUgYmFzZTY0IGRlY29kaW5nXHJcbiAqXHJcbiAqIE5PVEU6IERPIE5PVCB1c2UgdGhlIGdsb2JhbCBhdG9iKCkgZnVuY3Rpb24gLSBpdCBkb2VzIE5PVCBzdXBwb3J0IHRoZVxyXG4gKiBiYXNlNjRVcmwgdmFyaWFudCBlbmNvZGluZy5cclxuICpcclxuICogQHBhcmFtIHN0ciBUbyBiZSBkZWNvZGVkXHJcbiAqIEByZXR1cm4gRGVjb2RlZCByZXN1bHQsIGlmIHBvc3NpYmxlXHJcbiAqL1xyXG5jb25zdCBiYXNlNjREZWNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBiYXNlNjQuZGVjb2RlU3RyaW5nKHN0ciwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ2Jhc2U2NERlY29kZSBmYWlsZWQ6ICcsIGUpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn07XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBEbyBhIGRlZXAtY29weSBvZiBiYXNpYyBKYXZhU2NyaXB0IE9iamVjdHMgb3IgQXJyYXlzLlxyXG4gKi9cclxuZnVuY3Rpb24gZGVlcENvcHkodmFsdWUpIHtcclxuICAgIHJldHVybiBkZWVwRXh0ZW5kKHVuZGVmaW5lZCwgdmFsdWUpO1xyXG59XHJcbi8qKlxyXG4gKiBDb3B5IHByb3BlcnRpZXMgZnJvbSBzb3VyY2UgdG8gdGFyZ2V0IChyZWN1cnNpdmVseSBhbGxvd3MgZXh0ZW5zaW9uXHJcbiAqIG9mIE9iamVjdHMgYW5kIEFycmF5cykuICBTY2FsYXIgdmFsdWVzIGluIHRoZSB0YXJnZXQgYXJlIG92ZXItd3JpdHRlbi5cclxuICogSWYgdGFyZ2V0IGlzIHVuZGVmaW5lZCwgYW4gb2JqZWN0IG9mIHRoZSBhcHByb3ByaWF0ZSB0eXBlIHdpbGwgYmUgY3JlYXRlZFxyXG4gKiAoYW5kIHJldHVybmVkKS5cclxuICpcclxuICogV2UgcmVjdXJzaXZlbHkgY29weSBhbGwgY2hpbGQgcHJvcGVydGllcyBvZiBwbGFpbiBPYmplY3RzIGluIHRoZSBzb3VyY2UtIHNvXHJcbiAqIHRoYXQgbmFtZXNwYWNlLSBsaWtlIGRpY3Rpb25hcmllcyBhcmUgbWVyZ2VkLlxyXG4gKlxyXG4gKiBOb3RlIHRoYXQgdGhlIHRhcmdldCBjYW4gYmUgYSBmdW5jdGlvbiwgaW4gd2hpY2ggY2FzZSB0aGUgcHJvcGVydGllcyBpblxyXG4gKiB0aGUgc291cmNlIE9iamVjdCBhcmUgY29waWVkIG9udG8gaXQgYXMgc3RhdGljIHByb3BlcnRpZXMgb2YgdGhlIEZ1bmN0aW9uLlxyXG4gKlxyXG4gKiBOb3RlOiB3ZSBkb24ndCBtZXJnZSBfX3Byb3RvX18gdG8gcHJldmVudCBwcm90b3R5cGUgcG9sbHV0aW9uXHJcbiAqL1xyXG5mdW5jdGlvbiBkZWVwRXh0ZW5kKHRhcmdldCwgc291cmNlKSB7XHJcbiAgICBpZiAoIShzb3VyY2UgaW5zdGFuY2VvZiBPYmplY3QpKSB7XHJcbiAgICAgICAgcmV0dXJuIHNvdXJjZTtcclxuICAgIH1cclxuICAgIHN3aXRjaCAoc291cmNlLmNvbnN0cnVjdG9yKSB7XHJcbiAgICAgICAgY2FzZSBEYXRlOlxyXG4gICAgICAgICAgICAvLyBUcmVhdCBEYXRlcyBsaWtlIHNjYWxhcnM7IGlmIHRoZSB0YXJnZXQgZGF0ZSBvYmplY3QgaGFkIGFueSBjaGlsZFxyXG4gICAgICAgICAgICAvLyBwcm9wZXJ0aWVzIC0gdGhleSB3aWxsIGJlIGxvc3QhXHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGVWYWx1ZSA9IHNvdXJjZTtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGVWYWx1ZS5nZXRUaW1lKCkpO1xyXG4gICAgICAgIGNhc2UgT2JqZWN0OlxyXG4gICAgICAgICAgICBpZiAodGFyZ2V0ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIHRhcmdldCA9IHt9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgQXJyYXk6XHJcbiAgICAgICAgICAgIC8vIEFsd2F5cyBjb3B5IHRoZSBhcnJheSBzb3VyY2UgYW5kIG92ZXJ3cml0ZSB0aGUgdGFyZ2V0LlxyXG4gICAgICAgICAgICB0YXJnZXQgPSBbXTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgLy8gTm90IGEgcGxhaW4gT2JqZWN0IC0gdHJlYXQgaXQgYXMgYSBzY2FsYXIuXHJcbiAgICAgICAgICAgIHJldHVybiBzb3VyY2U7XHJcbiAgICB9XHJcbiAgICBmb3IgKGNvbnN0IHByb3AgaW4gc291cmNlKSB7XHJcbiAgICAgICAgLy8gdXNlIGlzVmFsaWRLZXkgdG8gZ3VhcmQgYWdhaW5zdCBwcm90b3R5cGUgcG9sbHV0aW9uLiBTZWUgaHR0cHM6Ly9zbnlrLmlvL3Z1bG4vU05ZSy1KUy1MT0RBU0gtNDUwMjAyXHJcbiAgICAgICAgaWYgKCFzb3VyY2UuaGFzT3duUHJvcGVydHkocHJvcCkgfHwgIWlzVmFsaWRLZXkocHJvcCkpIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRhcmdldFtwcm9wXSA9IGRlZXBFeHRlbmQodGFyZ2V0W3Byb3BdLCBzb3VyY2VbcHJvcF0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRhcmdldDtcclxufVxyXG5mdW5jdGlvbiBpc1ZhbGlkS2V5KGtleSkge1xyXG4gICAgcmV0dXJuIGtleSAhPT0gJ19fcHJvdG9fXyc7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFBvbHlmaWxsIGZvciBgZ2xvYmFsVGhpc2Agb2JqZWN0LlxyXG4gKiBAcmV0dXJucyB0aGUgYGdsb2JhbFRoaXNgIG9iamVjdCBmb3IgdGhlIGdpdmVuIGVudmlyb25tZW50LlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRHbG9iYWwoKSB7XHJcbiAgICBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIHNlbGY7XHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICByZXR1cm4gd2luZG93O1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIGdsb2JhbDtcclxuICAgIH1cclxuICAgIHRocm93IG5ldyBFcnJvcignVW5hYmxlIHRvIGxvY2F0ZSBnbG9iYWwgb2JqZWN0LicpO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IGdldERlZmF1bHRzRnJvbUdsb2JhbCA9ICgpID0+IGdldEdsb2JhbCgpLl9fRklSRUJBU0VfREVGQVVMVFNfXztcclxuLyoqXHJcbiAqIEF0dGVtcHQgdG8gcmVhZCBkZWZhdWx0cyBmcm9tIGEgSlNPTiBzdHJpbmcgcHJvdmlkZWQgdG9cclxuICogcHJvY2VzcyguKWVudiguKV9fRklSRUJBU0VfREVGQVVMVFNfXyBvciBhIEpTT04gZmlsZSB3aG9zZSBwYXRoIGlzIGluXHJcbiAqIHByb2Nlc3MoLillbnYoLilfX0ZJUkVCQVNFX0RFRkFVTFRTX1BBVEhfX1xyXG4gKiBUaGUgZG90cyBhcmUgaW4gcGFyZW5zIGJlY2F1c2UgY2VydGFpbiBjb21waWxlcnMgKFZpdGU/KSBjYW5ub3RcclxuICogaGFuZGxlIHNlZWluZyB0aGF0IHZhcmlhYmxlIGluIGNvbW1lbnRzLlxyXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZpcmViYXNlL2ZpcmViYXNlLWpzLXNkay9pc3N1ZXMvNjgzOFxyXG4gKi9cclxuY29uc3QgZ2V0RGVmYXVsdHNGcm9tRW52VmFyaWFibGUgPSAoKSA9PiB7XHJcbiAgICBpZiAodHlwZW9mIHByb2Nlc3MgPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBwcm9jZXNzLmVudiA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBkZWZhdWx0c0pzb25TdHJpbmcgPSBwcm9jZXNzLmVudi5fX0ZJUkVCQVNFX0RFRkFVTFRTX187XHJcbiAgICBpZiAoZGVmYXVsdHNKc29uU3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGVmYXVsdHNKc29uU3RyaW5nKTtcclxuICAgIH1cclxufTtcclxuY29uc3QgZ2V0RGVmYXVsdHNGcm9tQ29va2llID0gKCkgPT4ge1xyXG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBsZXQgbWF0Y2g7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIG1hdGNoID0gZG9jdW1lbnQuY29va2llLm1hdGNoKC9fX0ZJUkVCQVNFX0RFRkFVTFRTX189KFteO10rKS8pO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAvLyBTb21lIGVudmlyb25tZW50cyBzdWNoIGFzIEFuZ3VsYXIgVW5pdmVyc2FsIFNTUiBoYXZlIGFcclxuICAgICAgICAvLyBgZG9jdW1lbnRgIG9iamVjdCBidXQgZXJyb3Igb24gYWNjZXNzaW5nIGBkb2N1bWVudC5jb29raWVgLlxyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IGRlY29kZWQgPSBtYXRjaCAmJiBiYXNlNjREZWNvZGUobWF0Y2hbMV0pO1xyXG4gICAgcmV0dXJuIGRlY29kZWQgJiYgSlNPTi5wYXJzZShkZWNvZGVkKTtcclxufTtcclxuLyoqXHJcbiAqIEdldCB0aGUgX19GSVJFQkFTRV9ERUZBVUxUU19fIG9iamVjdC4gSXQgY2hlY2tzIGluIG9yZGVyOlxyXG4gKiAoMSkgaWYgc3VjaCBhbiBvYmplY3QgZXhpc3RzIGFzIGEgcHJvcGVydHkgb2YgYGdsb2JhbFRoaXNgXHJcbiAqICgyKSBpZiBzdWNoIGFuIG9iamVjdCB3YXMgcHJvdmlkZWQgb24gYSBzaGVsbCBlbnZpcm9ubWVudCB2YXJpYWJsZVxyXG4gKiAoMykgaWYgc3VjaCBhbiBvYmplY3QgZXhpc3RzIGluIGEgY29va2llXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmNvbnN0IGdldERlZmF1bHRzID0gKCkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gKGdldERlZmF1bHRzRnJvbUdsb2JhbCgpIHx8XHJcbiAgICAgICAgICAgIGdldERlZmF1bHRzRnJvbUVudlZhcmlhYmxlKCkgfHxcclxuICAgICAgICAgICAgZ2V0RGVmYXVsdHNGcm9tQ29va2llKCkpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDYXRjaC1hbGwgZm9yIGJlaW5nIHVuYWJsZSB0byBnZXQgX19GSVJFQkFTRV9ERUZBVUxUU19fIGR1ZVxyXG4gICAgICAgICAqIHRvIGFueSBlbnZpcm9ubWVudCBjYXNlIHdlIGhhdmUgbm90IGFjY291bnRlZCBmb3IuIExvZyB0b1xyXG4gICAgICAgICAqIGluZm8gaW5zdGVhZCBvZiBzd2FsbG93aW5nIHNvIHdlIGNhbiBmaW5kIHRoZXNlIHVua25vd24gY2FzZXNcclxuICAgICAgICAgKiBhbmQgYWRkIHBhdGhzIGZvciB0aGVtIGlmIG5lZWRlZC5cclxuICAgICAgICAgKi9cclxuICAgICAgICBjb25zb2xlLmluZm8oYFVuYWJsZSB0byBnZXQgX19GSVJFQkFTRV9ERUZBVUxUU19fIGR1ZSB0bzogJHtlfWApO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxufTtcclxuLyoqXHJcbiAqIFJldHVybnMgZW11bGF0b3IgaG9zdCBzdG9yZWQgaW4gdGhlIF9fRklSRUJBU0VfREVGQVVMVFNfXyBvYmplY3RcclxuICogZm9yIHRoZSBnaXZlbiBwcm9kdWN0LlxyXG4gKiBAcmV0dXJucyBhIFVSTCBob3N0IGZvcm1hdHRlZCBsaWtlIGAxMjcuMC4wLjE6OTk5OWAgb3IgYFs6OjFdOjQwMDBgIGlmIGF2YWlsYWJsZVxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5jb25zdCBnZXREZWZhdWx0RW11bGF0b3JIb3N0ID0gKHByb2R1Y3ROYW1lKSA9PiB7IHZhciBfYSwgX2I7IHJldHVybiAoX2IgPSAoX2EgPSBnZXREZWZhdWx0cygpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW11bGF0b3JIb3N0cykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iW3Byb2R1Y3ROYW1lXTsgfTtcclxuLyoqXHJcbiAqIFJldHVybnMgZW11bGF0b3IgaG9zdG5hbWUgYW5kIHBvcnQgc3RvcmVkIGluIHRoZSBfX0ZJUkVCQVNFX0RFRkFVTFRTX18gb2JqZWN0XHJcbiAqIGZvciB0aGUgZ2l2ZW4gcHJvZHVjdC5cclxuICogQHJldHVybnMgYSBwYWlyIG9mIGhvc3RuYW1lIGFuZCBwb3J0IGxpa2UgYFtcIjo6MVwiLCA0MDAwXWAgaWYgYXZhaWxhYmxlXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmNvbnN0IGdldERlZmF1bHRFbXVsYXRvckhvc3RuYW1lQW5kUG9ydCA9IChwcm9kdWN0TmFtZSkgPT4ge1xyXG4gICAgY29uc3QgaG9zdCA9IGdldERlZmF1bHRFbXVsYXRvckhvc3QocHJvZHVjdE5hbWUpO1xyXG4gICAgaWYgKCFob3N0KSB7XHJcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcclxuICAgIH1cclxuICAgIGNvbnN0IHNlcGFyYXRvckluZGV4ID0gaG9zdC5sYXN0SW5kZXhPZignOicpOyAvLyBGaW5kaW5nIHRoZSBsYXN0IHNpbmNlIElQdjYgYWRkciBhbHNvIGhhcyBjb2xvbnMuXHJcbiAgICBpZiAoc2VwYXJhdG9ySW5kZXggPD0gMCB8fCBzZXBhcmF0b3JJbmRleCArIDEgPT09IGhvc3QubGVuZ3RoKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGhvc3QgJHtob3N0fSB3aXRoIG5vIHNlcGFyYXRlIGhvc3RuYW1lIGFuZCBwb3J0IWApO1xyXG4gICAgfVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xyXG4gICAgY29uc3QgcG9ydCA9IHBhcnNlSW50KGhvc3Quc3Vic3RyaW5nKHNlcGFyYXRvckluZGV4ICsgMSksIDEwKTtcclxuICAgIGlmIChob3N0WzBdID09PSAnWycpIHtcclxuICAgICAgICAvLyBCcmFja2V0LXF1b3RlZCBgW2lwdjZhZGRyXTpwb3J0YCA9PiByZXR1cm4gXCJpcHY2YWRkclwiICh3aXRob3V0IGJyYWNrZXRzKS5cclxuICAgICAgICByZXR1cm4gW2hvc3Quc3Vic3RyaW5nKDEsIHNlcGFyYXRvckluZGV4IC0gMSksIHBvcnRdO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIFtob3N0LnN1YnN0cmluZygwLCBzZXBhcmF0b3JJbmRleCksIHBvcnRdO1xyXG4gICAgfVxyXG59O1xyXG4vKipcclxuICogUmV0dXJucyBGaXJlYmFzZSBhcHAgY29uZmlnIHN0b3JlZCBpbiB0aGUgX19GSVJFQkFTRV9ERUZBVUxUU19fIG9iamVjdC5cclxuICogQHB1YmxpY1xyXG4gKi9cclxuY29uc3QgZ2V0RGVmYXVsdEFwcENvbmZpZyA9ICgpID0+IHsgdmFyIF9hOyByZXR1cm4gKF9hID0gZ2V0RGVmYXVsdHMoKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNvbmZpZzsgfTtcclxuLyoqXHJcbiAqIFJldHVybnMgYW4gZXhwZXJpbWVudGFsIHNldHRpbmcgb24gdGhlIF9fRklSRUJBU0VfREVGQVVMVFNfXyBvYmplY3QgKHByb3BlcnRpZXNcclxuICogcHJlZml4ZWQgYnkgXCJfXCIpXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmNvbnN0IGdldEV4cGVyaW1lbnRhbFNldHRpbmcgPSAobmFtZSkgPT4geyB2YXIgX2E7IHJldHVybiAoX2EgPSBnZXREZWZhdWx0cygpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbYF8ke25hbWV9YF07IH07XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIERlZmVycmVkIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMucmVqZWN0ID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMucmVzb2x2ZSA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucmVzb2x2ZSA9IHJlc29sdmU7XHJcbiAgICAgICAgICAgIHRoaXMucmVqZWN0ID0gcmVqZWN0O1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBPdXIgQVBJIGludGVybmFscyBhcmUgbm90IHByb21pc2VpZmllZCBhbmQgY2Fubm90IGJlY2F1c2Ugb3VyIGNhbGxiYWNrIEFQSXMgaGF2ZSBzdWJ0bGUgZXhwZWN0YXRpb25zIGFyb3VuZFxyXG4gICAgICogaW52b2tpbmcgcHJvbWlzZXMgaW5saW5lLCB3aGljaCBQcm9taXNlcyBhcmUgZm9yYmlkZGVuIHRvIGRvLiBUaGlzIG1ldGhvZCBhY2NlcHRzIGFuIG9wdGlvbmFsIG5vZGUtc3R5bGUgY2FsbGJhY2tcclxuICAgICAqIGFuZCByZXR1cm5zIGEgbm9kZS1zdHlsZSBjYWxsYmFjayB3aGljaCB3aWxsIHJlc29sdmUgb3IgcmVqZWN0IHRoZSBEZWZlcnJlZCdzIHByb21pc2UuXHJcbiAgICAgKi9cclxuICAgIHdyYXBDYWxsYmFjayhjYWxsYmFjaykge1xyXG4gICAgICAgIHJldHVybiAoZXJyb3IsIHZhbHVlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZWplY3QoZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZXNvbHZlKHZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBBdHRhY2hpbmcgbm9vcCBoYW5kbGVyIGp1c3QgaW4gY2FzZSBkZXZlbG9wZXIgd2Fzbid0IGV4cGVjdGluZ1xyXG4gICAgICAgICAgICAgICAgLy8gcHJvbWlzZXNcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvbWlzZS5jYXRjaCgoKSA9PiB7IH0pO1xyXG4gICAgICAgICAgICAgICAgLy8gU29tZSBvZiBvdXIgY2FsbGJhY2tzIGRvbid0IGV4cGVjdCBhIHZhbHVlIGFuZCBvdXIgb3duIHRlc3RzXHJcbiAgICAgICAgICAgICAgICAvLyBhc3NlcnQgdGhhdCB0aGUgcGFyYW1ldGVyIGxlbmd0aCBpcyAxXHJcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2subGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyb3IsIHZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlTW9ja1VzZXJUb2tlbih0b2tlbiwgcHJvamVjdElkKSB7XHJcbiAgICBpZiAodG9rZW4udWlkKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgXCJ1aWRcIiBmaWVsZCBpcyBubyBsb25nZXIgc3VwcG9ydGVkIGJ5IG1vY2tVc2VyVG9rZW4uIFBsZWFzZSB1c2UgXCJzdWJcIiBpbnN0ZWFkIGZvciBGaXJlYmFzZSBBdXRoIFVzZXIgSUQuJyk7XHJcbiAgICB9XHJcbiAgICAvLyBVbnNlY3VyZWQgSldUcyB1c2UgXCJub25lXCIgYXMgdGhlIGFsZ29yaXRobS5cclxuICAgIGNvbnN0IGhlYWRlciA9IHtcclxuICAgICAgICBhbGc6ICdub25lJyxcclxuICAgICAgICB0eXBlOiAnSldUJ1xyXG4gICAgfTtcclxuICAgIGNvbnN0IHByb2plY3QgPSBwcm9qZWN0SWQgfHwgJ2RlbW8tcHJvamVjdCc7XHJcbiAgICBjb25zdCBpYXQgPSB0b2tlbi5pYXQgfHwgMDtcclxuICAgIGNvbnN0IHN1YiA9IHRva2VuLnN1YiB8fCB0b2tlbi51c2VyX2lkO1xyXG4gICAgaWYgKCFzdWIpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJtb2NrVXNlclRva2VuIG11c3QgY29udGFpbiAnc3ViJyBvciAndXNlcl9pZCcgZmllbGQhXCIpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgcGF5bG9hZCA9IE9iamVjdC5hc3NpZ24oeyBcclxuICAgICAgICAvLyBTZXQgYWxsIHJlcXVpcmVkIGZpZWxkcyB0byBkZWNlbnQgZGVmYXVsdHNcclxuICAgICAgICBpc3M6IGBodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vJHtwcm9qZWN0fWAsIGF1ZDogcHJvamVjdCwgaWF0LCBleHA6IGlhdCArIDM2MDAsIGF1dGhfdGltZTogaWF0LCBzdWIsIHVzZXJfaWQ6IHN1YiwgZmlyZWJhc2U6IHtcclxuICAgICAgICAgICAgc2lnbl9pbl9wcm92aWRlcjogJ2N1c3RvbScsXHJcbiAgICAgICAgICAgIGlkZW50aXRpZXM6IHt9XHJcbiAgICAgICAgfSB9LCB0b2tlbik7XHJcbiAgICAvLyBVbnNlY3VyZWQgSldUcyB1c2UgdGhlIGVtcHR5IHN0cmluZyBhcyBhIHNpZ25hdHVyZS5cclxuICAgIGNvbnN0IHNpZ25hdHVyZSA9ICcnO1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAgICBiYXNlNjR1cmxFbmNvZGVXaXRob3V0UGFkZGluZyhKU09OLnN0cmluZ2lmeShoZWFkZXIpKSxcclxuICAgICAgICBiYXNlNjR1cmxFbmNvZGVXaXRob3V0UGFkZGluZyhKU09OLnN0cmluZ2lmeShwYXlsb2FkKSksXHJcbiAgICAgICAgc2lnbmF0dXJlXHJcbiAgICBdLmpvaW4oJy4nKTtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUmV0dXJucyBuYXZpZ2F0b3IudXNlckFnZW50IHN0cmluZyBvciAnJyBpZiBpdCdzIG5vdCBkZWZpbmVkLlxyXG4gKiBAcmV0dXJuIHVzZXIgYWdlbnQgc3RyaW5nXHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRVQSgpIHtcclxuICAgIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJlxyXG4gICAgICAgIHR5cGVvZiBuYXZpZ2F0b3JbJ3VzZXJBZ2VudCddID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIHJldHVybiBuYXZpZ2F0b3JbJ3VzZXJBZ2VudCddO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBEZXRlY3QgQ29yZG92YSAvIFBob25lR2FwIC8gSW9uaWMgZnJhbWV3b3JrcyBvbiBhIG1vYmlsZSBkZXZpY2UuXHJcbiAqXHJcbiAqIERlbGliZXJhdGVseSBkb2VzIG5vdCByZWx5IG9uIGNoZWNraW5nIGBmaWxlOi8vYCBVUkxzIChhcyB0aGlzIGZhaWxzIFBob25lR2FwXHJcbiAqIGluIHRoZSBSaXBwbGUgZW11bGF0b3IpIG5vciBDb3Jkb3ZhIGBvbkRldmljZVJlYWR5YCwgd2hpY2ggd291bGQgbm9ybWFsbHlcclxuICogd2FpdCBmb3IgYSBjYWxsYmFjay5cclxuICovXHJcbmZ1bmN0aW9uIGlzTW9iaWxlQ29yZG92YSgpIHtcclxuICAgIHJldHVybiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcclxuICAgICAgICAvLyBAdHMtaWdub3JlIFNldHRpbmcgdXAgYW4gYnJvYWRseSBhcHBsaWNhYmxlIGluZGV4IHNpZ25hdHVyZSBmb3IgV2luZG93XHJcbiAgICAgICAgLy8ganVzdCB0byBkZWFsIHdpdGggdGhpcyBjYXNlIHdvdWxkIHByb2JhYmx5IGJlIGEgYmFkIGlkZWEuXHJcbiAgICAgICAgISEod2luZG93Wydjb3Jkb3ZhJ10gfHwgd2luZG93WydwaG9uZWdhcCddIHx8IHdpbmRvd1snUGhvbmVHYXAnXSkgJiZcclxuICAgICAgICAvaW9zfGlwaG9uZXxpcG9kfGlwYWR8YW5kcm9pZHxibGFja2JlcnJ5fGllbW9iaWxlL2kudGVzdChnZXRVQSgpKSk7XHJcbn1cclxuLyoqXHJcbiAqIERldGVjdCBOb2RlLmpzLlxyXG4gKlxyXG4gKiBAcmV0dXJuIHRydWUgaWYgTm9kZS5qcyBlbnZpcm9ubWVudCBpcyBkZXRlY3RlZCBvciBzcGVjaWZpZWQuXHJcbiAqL1xyXG4vLyBOb2RlIGRldGVjdGlvbiBsb2dpYyBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vaWxpYWthbi9kZXRlY3Qtbm9kZS9cclxuZnVuY3Rpb24gaXNOb2RlKCkge1xyXG4gICAgdmFyIF9hO1xyXG4gICAgY29uc3QgZm9yY2VFbnZpcm9ubWVudCA9IChfYSA9IGdldERlZmF1bHRzKCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5mb3JjZUVudmlyb25tZW50O1xyXG4gICAgaWYgKGZvcmNlRW52aXJvbm1lbnQgPT09ICdub2RlJykge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoZm9yY2VFbnZpcm9ubWVudCA9PT0gJ2Jyb3dzZXInKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChnbG9iYWwucHJvY2VzcykgPT09ICdbb2JqZWN0IHByb2Nlc3NdJyk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogRGV0ZWN0IEJyb3dzZXIgRW52aXJvbm1lbnRcclxuICovXHJcbmZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcclxuICAgIHJldHVybiB0eXBlb2Ygc2VsZiA9PT0gJ29iamVjdCcgJiYgc2VsZi5zZWxmID09PSBzZWxmO1xyXG59XHJcbmZ1bmN0aW9uIGlzQnJvd3NlckV4dGVuc2lvbigpIHtcclxuICAgIGNvbnN0IHJ1bnRpbWUgPSB0eXBlb2YgY2hyb21lID09PSAnb2JqZWN0J1xyXG4gICAgICAgID8gY2hyb21lLnJ1bnRpbWVcclxuICAgICAgICA6IHR5cGVvZiBicm93c2VyID09PSAnb2JqZWN0J1xyXG4gICAgICAgICAgICA/IGJyb3dzZXIucnVudGltZVxyXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcclxuICAgIHJldHVybiB0eXBlb2YgcnVudGltZSA9PT0gJ29iamVjdCcgJiYgcnVudGltZS5pZCAhPT0gdW5kZWZpbmVkO1xyXG59XHJcbi8qKlxyXG4gKiBEZXRlY3QgUmVhY3QgTmF0aXZlLlxyXG4gKlxyXG4gKiBAcmV0dXJuIHRydWUgaWYgUmVhY3ROYXRpdmUgZW52aXJvbm1lbnQgaXMgZGV0ZWN0ZWQuXHJcbiAqL1xyXG5mdW5jdGlvbiBpc1JlYWN0TmF0aXZlKCkge1xyXG4gICAgcmV0dXJuICh0eXBlb2YgbmF2aWdhdG9yID09PSAnb2JqZWN0JyAmJiBuYXZpZ2F0b3JbJ3Byb2R1Y3QnXSA9PT0gJ1JlYWN0TmF0aXZlJyk7XHJcbn1cclxuLyoqIERldGVjdHMgRWxlY3Ryb24gYXBwcy4gKi9cclxuZnVuY3Rpb24gaXNFbGVjdHJvbigpIHtcclxuICAgIHJldHVybiBnZXRVQSgpLmluZGV4T2YoJ0VsZWN0cm9uLycpID49IDA7XHJcbn1cclxuLyoqIERldGVjdHMgSW50ZXJuZXQgRXhwbG9yZXIuICovXHJcbmZ1bmN0aW9uIGlzSUUoKSB7XHJcbiAgICBjb25zdCB1YSA9IGdldFVBKCk7XHJcbiAgICByZXR1cm4gdWEuaW5kZXhPZignTVNJRSAnKSA+PSAwIHx8IHVhLmluZGV4T2YoJ1RyaWRlbnQvJykgPj0gMDtcclxufVxyXG4vKiogRGV0ZWN0cyBVbml2ZXJzYWwgV2luZG93cyBQbGF0Zm9ybSBhcHBzLiAqL1xyXG5mdW5jdGlvbiBpc1VXUCgpIHtcclxuICAgIHJldHVybiBnZXRVQSgpLmluZGV4T2YoJ01TQXBwSG9zdC8nKSA+PSAwO1xyXG59XHJcbi8qKlxyXG4gKiBEZXRlY3Qgd2hldGhlciB0aGUgY3VycmVudCBTREsgYnVpbGQgaXMgdGhlIE5vZGUgdmVyc2lvbi5cclxuICpcclxuICogQHJldHVybiB0cnVlIGlmIGl0J3MgdGhlIE5vZGUgU0RLIGJ1aWxkLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNOb2RlU2RrKCkge1xyXG4gICAgcmV0dXJuIENPTlNUQU5UUy5OT0RFX0NMSUVOVCA9PT0gdHJ1ZSB8fCBDT05TVEFOVFMuTk9ERV9BRE1JTiA9PT0gdHJ1ZTtcclxufVxyXG4vKiogUmV0dXJucyB0cnVlIGlmIHdlIGFyZSBydW5uaW5nIGluIFNhZmFyaS4gKi9cclxuZnVuY3Rpb24gaXNTYWZhcmkoKSB7XHJcbiAgICByZXR1cm4gKCFpc05vZGUoKSAmJlxyXG4gICAgICAgIG5hdmlnYXRvci51c2VyQWdlbnQuaW5jbHVkZXMoJ1NhZmFyaScpICYmXHJcbiAgICAgICAgIW5hdmlnYXRvci51c2VyQWdlbnQuaW5jbHVkZXMoJ0Nocm9tZScpKTtcclxufVxyXG4vKipcclxuICogVGhpcyBtZXRob2QgY2hlY2tzIGlmIGluZGV4ZWREQiBpcyBzdXBwb3J0ZWQgYnkgY3VycmVudCBicm93c2VyL3NlcnZpY2Ugd29ya2VyIGNvbnRleHRcclxuICogQHJldHVybiB0cnVlIGlmIGluZGV4ZWREQiBpcyBzdXBwb3J0ZWQgYnkgY3VycmVudCBicm93c2VyL3NlcnZpY2Ugd29ya2VyIGNvbnRleHRcclxuICovXHJcbmZ1bmN0aW9uIGlzSW5kZXhlZERCQXZhaWxhYmxlKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gdHlwZW9mIGluZGV4ZWREQiA9PT0gJ29iamVjdCc7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogVGhpcyBtZXRob2QgdmFsaWRhdGVzIGJyb3dzZXIvc3cgY29udGV4dCBmb3IgaW5kZXhlZERCIGJ5IG9wZW5pbmcgYSBkdW1teSBpbmRleGVkREIgZGF0YWJhc2UgYW5kIHJlamVjdFxyXG4gKiBpZiBlcnJvcnMgb2NjdXIgZHVyaW5nIHRoZSBkYXRhYmFzZSBvcGVuIG9wZXJhdGlvbi5cclxuICpcclxuICogQHRocm93cyBleGNlcHRpb24gaWYgY3VycmVudCBicm93c2VyL3N3IGNvbnRleHQgY2FuJ3QgcnVuIGlkYi5vcGVuIChleDogU2FmYXJpIGlmcmFtZSwgRmlyZWZveFxyXG4gKiBwcml2YXRlIGJyb3dzaW5nKVxyXG4gKi9cclxuZnVuY3Rpb24gdmFsaWRhdGVJbmRleGVkREJPcGVuYWJsZSgpIHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgbGV0IHByZUV4aXN0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgY29uc3QgREJfQ0hFQ0tfTkFNRSA9ICd2YWxpZGF0ZS1icm93c2VyLWNvbnRleHQtZm9yLWluZGV4ZWRkYi1hbmFseXRpY3MtbW9kdWxlJztcclxuICAgICAgICAgICAgY29uc3QgcmVxdWVzdCA9IHNlbGYuaW5kZXhlZERCLm9wZW4oREJfQ0hFQ0tfTkFNRSk7XHJcbiAgICAgICAgICAgIHJlcXVlc3Qub25zdWNjZXNzID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdC5yZXN1bHQuY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgIC8vIGRlbGV0ZSBkYXRhYmFzZSBvbmx5IHdoZW4gaXQgZG9lc24ndCBwcmUtZXhpc3RcclxuICAgICAgICAgICAgICAgIGlmICghcHJlRXhpc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxmLmluZGV4ZWREQi5kZWxldGVEYXRhYmFzZShEQl9DSEVDS19OQU1FKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHJlcXVlc3Qub251cGdyYWRlbmVlZGVkID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcHJlRXhpc3QgPSBmYWxzZTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgcmVxdWVzdC5vbmVycm9yID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KCgoX2EgPSByZXF1ZXN0LmVycm9yKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubWVzc2FnZSkgfHwgJycpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG4vKipcclxuICpcclxuICogVGhpcyBtZXRob2QgY2hlY2tzIHdoZXRoZXIgY29va2llIGlzIGVuYWJsZWQgd2l0aGluIGN1cnJlbnQgYnJvd3NlclxyXG4gKiBAcmV0dXJuIHRydWUgaWYgY29va2llIGlzIGVuYWJsZWQgd2l0aGluIGN1cnJlbnQgYnJvd3NlclxyXG4gKi9cclxuZnVuY3Rpb24gYXJlQ29va2llc0VuYWJsZWQoKSB7XHJcbiAgICBpZiAodHlwZW9mIG5hdmlnYXRvciA9PT0gJ3VuZGVmaW5lZCcgfHwgIW5hdmlnYXRvci5jb29raWVFbmFibGVkKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEBmaWxlb3ZlcnZpZXcgU3RhbmRhcmRpemVkIEZpcmViYXNlIEVycm9yLlxyXG4gKlxyXG4gKiBVc2FnZTpcclxuICpcclxuICogICAvLyBUeXBlc2NyaXB0IHN0cmluZyBsaXRlcmFscyBmb3IgdHlwZS1zYWZlIGNvZGVzXHJcbiAqICAgdHlwZSBFcnIgPVxyXG4gKiAgICAgJ3Vua25vd24nIHxcclxuICogICAgICdvYmplY3Qtbm90LWZvdW5kJ1xyXG4gKiAgICAgO1xyXG4gKlxyXG4gKiAgIC8vIENsb3N1cmUgZW51bSBmb3IgdHlwZS1zYWZlIGVycm9yIGNvZGVzXHJcbiAqICAgLy8gYXQtZW51bSB7c3RyaW5nfVxyXG4gKiAgIHZhciBFcnIgPSB7XHJcbiAqICAgICBVTktOT1dOOiAndW5rbm93bicsXHJcbiAqICAgICBPQkpFQ1RfTk9UX0ZPVU5EOiAnb2JqZWN0LW5vdC1mb3VuZCcsXHJcbiAqICAgfVxyXG4gKlxyXG4gKiAgIGxldCBlcnJvcnM6IE1hcDxFcnIsIHN0cmluZz4gPSB7XHJcbiAqICAgICAnZ2VuZXJpYy1lcnJvcic6IFwiVW5rbm93biBlcnJvclwiLFxyXG4gKiAgICAgJ2ZpbGUtbm90LWZvdW5kJzogXCJDb3VsZCBub3QgZmluZCBmaWxlOiB7JGZpbGV9XCIsXHJcbiAqICAgfTtcclxuICpcclxuICogICAvLyBUeXBlLXNhZmUgZnVuY3Rpb24gLSBtdXN0IHBhc3MgYSB2YWxpZCBlcnJvciBjb2RlIGFzIHBhcmFtLlxyXG4gKiAgIGxldCBlcnJvciA9IG5ldyBFcnJvckZhY3Rvcnk8RXJyPignc2VydmljZScsICdTZXJ2aWNlJywgZXJyb3JzKTtcclxuICpcclxuICogICAuLi5cclxuICogICB0aHJvdyBlcnJvci5jcmVhdGUoRXJyLkdFTkVSSUMpO1xyXG4gKiAgIC4uLlxyXG4gKiAgIHRocm93IGVycm9yLmNyZWF0ZShFcnIuRklMRV9OT1RfRk9VTkQsIHsnZmlsZSc6IGZpbGVOYW1lfSk7XHJcbiAqICAgLi4uXHJcbiAqICAgLy8gU2VydmljZTogQ291bGQgbm90IGZpbGUgZmlsZTogZm9vLnR4dCAoc2VydmljZS9maWxlLW5vdC1mb3VuZCkuXHJcbiAqXHJcbiAqICAgY2F0Y2ggKGUpIHtcclxuICogICAgIGFzc2VydChlLm1lc3NhZ2UgPT09IFwiQ291bGQgbm90IGZpbmQgZmlsZTogZm9vLnR4dC5cIik7XHJcbiAqICAgICBpZiAoKGUgYXMgRmlyZWJhc2VFcnJvcik/LmNvZGUgPT09ICdzZXJ2aWNlL2ZpbGUtbm90LWZvdW5kJykge1xyXG4gKiAgICAgICBjb25zb2xlLmxvZyhcIkNvdWxkIG5vdCByZWFkIGZpbGU6IFwiICsgZVsnZmlsZSddKTtcclxuICogICAgIH1cclxuICogICB9XHJcbiAqL1xyXG5jb25zdCBFUlJPUl9OQU1FID0gJ0ZpcmViYXNlRXJyb3InO1xyXG4vLyBCYXNlZCBvbiBjb2RlIGZyb206XHJcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0Vycm9yI0N1c3RvbV9FcnJvcl9UeXBlc1xyXG5jbGFzcyBGaXJlYmFzZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAvKiogVGhlIGVycm9yIGNvZGUgZm9yIHRoaXMgZXJyb3IuICovXHJcbiAgICBjb2RlLCBtZXNzYWdlLCBcclxuICAgIC8qKiBDdXN0b20gZGF0YSBmb3IgdGhpcyBlcnJvci4gKi9cclxuICAgIGN1c3RvbURhdGEpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlKTtcclxuICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgICAgIHRoaXMuY3VzdG9tRGF0YSA9IGN1c3RvbURhdGE7XHJcbiAgICAgICAgLyoqIFRoZSBjdXN0b20gbmFtZSBmb3IgYWxsIEZpcmViYXNlRXJyb3JzLiAqL1xyXG4gICAgICAgIHRoaXMubmFtZSA9IEVSUk9SX05BTUU7XHJcbiAgICAgICAgLy8gRml4IEZvciBFUzVcclxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1R5cGVTY3JpcHQtd2lraS9ibG9iL21hc3Rlci9CcmVha2luZy1DaGFuZ2VzLm1kI2V4dGVuZGluZy1idWlsdC1pbnMtbGlrZS1lcnJvci1hcnJheS1hbmQtbWFwLW1heS1uby1sb25nZXItd29ya1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBGaXJlYmFzZUVycm9yLnByb3RvdHlwZSk7XHJcbiAgICAgICAgLy8gTWFpbnRhaW5zIHByb3BlciBzdGFjayB0cmFjZSBmb3Igd2hlcmUgb3VyIGVycm9yIHdhcyB0aHJvd24uXHJcbiAgICAgICAgLy8gT25seSBhdmFpbGFibGUgb24gVjguXHJcbiAgICAgICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XHJcbiAgICAgICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEVycm9yRmFjdG9yeS5wcm90b3R5cGUuY3JlYXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuY2xhc3MgRXJyb3JGYWN0b3J5IHtcclxuICAgIGNvbnN0cnVjdG9yKHNlcnZpY2UsIHNlcnZpY2VOYW1lLCBlcnJvcnMpIHtcclxuICAgICAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2aWNlO1xyXG4gICAgICAgIHRoaXMuc2VydmljZU5hbWUgPSBzZXJ2aWNlTmFtZTtcclxuICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9ycztcclxuICAgIH1cclxuICAgIGNyZWF0ZShjb2RlLCAuLi5kYXRhKSB7XHJcbiAgICAgICAgY29uc3QgY3VzdG9tRGF0YSA9IGRhdGFbMF0gfHwge307XHJcbiAgICAgICAgY29uc3QgZnVsbENvZGUgPSBgJHt0aGlzLnNlcnZpY2V9LyR7Y29kZX1gO1xyXG4gICAgICAgIGNvbnN0IHRlbXBsYXRlID0gdGhpcy5lcnJvcnNbY29kZV07XHJcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IHRlbXBsYXRlID8gcmVwbGFjZVRlbXBsYXRlKHRlbXBsYXRlLCBjdXN0b21EYXRhKSA6ICdFcnJvcic7XHJcbiAgICAgICAgLy8gU2VydmljZSBOYW1lOiBFcnJvciBtZXNzYWdlIChzZXJ2aWNlL2NvZGUpLlxyXG4gICAgICAgIGNvbnN0IGZ1bGxNZXNzYWdlID0gYCR7dGhpcy5zZXJ2aWNlTmFtZX06ICR7bWVzc2FnZX0gKCR7ZnVsbENvZGV9KS5gO1xyXG4gICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEZpcmViYXNlRXJyb3IoZnVsbENvZGUsIGZ1bGxNZXNzYWdlLCBjdXN0b21EYXRhKTtcclxuICAgICAgICByZXR1cm4gZXJyb3I7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gcmVwbGFjZVRlbXBsYXRlKHRlbXBsYXRlLCBkYXRhKSB7XHJcbiAgICByZXR1cm4gdGVtcGxhdGUucmVwbGFjZShQQVRURVJOLCAoXywga2V5KSA9PiB7XHJcbiAgICAgICAgY29uc3QgdmFsdWUgPSBkYXRhW2tleV07XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlICE9IG51bGwgPyBTdHJpbmcodmFsdWUpIDogYDwke2tleX0/PmA7XHJcbiAgICB9KTtcclxufVxyXG5jb25zdCBQQVRURVJOID0gL1xce1xcJChbXn1dKyl9L2c7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBFdmFsdWF0ZXMgYSBKU09OIHN0cmluZyBpbnRvIGEgamF2YXNjcmlwdCBvYmplY3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgQSBzdHJpbmcgY29udGFpbmluZyBKU09OLlxyXG4gKiBAcmV0dXJuIHsqfSBUaGUgamF2YXNjcmlwdCBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBzcGVjaWZpZWQgSlNPTi5cclxuICovXHJcbmZ1bmN0aW9uIGpzb25FdmFsKHN0cikge1xyXG4gICAgcmV0dXJuIEpTT04ucGFyc2Uoc3RyKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBKU09OIHJlcHJlc2VudGluZyBhIGphdmFzY3JpcHQgb2JqZWN0LlxyXG4gKiBAcGFyYW0geyp9IGRhdGEgSmF2YXNjcmlwdCBvYmplY3QgdG8gYmUgc3RyaW5naWZpZWQuXHJcbiAqIEByZXR1cm4ge3N0cmluZ30gVGhlIEpTT04gY29udGVudHMgb2YgdGhlIG9iamVjdC5cclxuICovXHJcbmZ1bmN0aW9uIHN0cmluZ2lmeShkYXRhKSB7XHJcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIERlY29kZXMgYSBGaXJlYmFzZSBhdXRoLiB0b2tlbiBpbnRvIGNvbnN0aXR1ZW50IHBhcnRzLlxyXG4gKlxyXG4gKiBOb3RlczpcclxuICogLSBNYXkgcmV0dXJuIHdpdGggaW52YWxpZCAvIGluY29tcGxldGUgY2xhaW1zIGlmIHRoZXJlJ3Mgbm8gbmF0aXZlIGJhc2U2NCBkZWNvZGluZyBzdXBwb3J0LlxyXG4gKiAtIERvZXNuJ3QgY2hlY2sgaWYgdGhlIHRva2VuIGlzIGFjdHVhbGx5IHZhbGlkLlxyXG4gKi9cclxuY29uc3QgZGVjb2RlID0gZnVuY3Rpb24gKHRva2VuKSB7XHJcbiAgICBsZXQgaGVhZGVyID0ge30sIGNsYWltcyA9IHt9LCBkYXRhID0ge30sIHNpZ25hdHVyZSA9ICcnO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBwYXJ0cyA9IHRva2VuLnNwbGl0KCcuJyk7XHJcbiAgICAgICAgaGVhZGVyID0ganNvbkV2YWwoYmFzZTY0RGVjb2RlKHBhcnRzWzBdKSB8fCAnJyk7XHJcbiAgICAgICAgY2xhaW1zID0ganNvbkV2YWwoYmFzZTY0RGVjb2RlKHBhcnRzWzFdKSB8fCAnJyk7XHJcbiAgICAgICAgc2lnbmF0dXJlID0gcGFydHNbMl07XHJcbiAgICAgICAgZGF0YSA9IGNsYWltc1snZCddIHx8IHt9O1xyXG4gICAgICAgIGRlbGV0ZSBjbGFpbXNbJ2QnXTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7IH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaGVhZGVyLFxyXG4gICAgICAgIGNsYWltcyxcclxuICAgICAgICBkYXRhLFxyXG4gICAgICAgIHNpZ25hdHVyZVxyXG4gICAgfTtcclxufTtcclxuLyoqXHJcbiAqIERlY29kZXMgYSBGaXJlYmFzZSBhdXRoLiB0b2tlbiBhbmQgY2hlY2tzIHRoZSB2YWxpZGl0eSBvZiBpdHMgdGltZS1iYXNlZCBjbGFpbXMuIFdpbGwgcmV0dXJuIHRydWUgaWYgdGhlXHJcbiAqIHRva2VuIGlzIHdpdGhpbiB0aGUgdGltZSB3aW5kb3cgYXV0aG9yaXplZCBieSB0aGUgJ25iZicgKG5vdC1iZWZvcmUpIGFuZCAnaWF0JyAoaXNzdWVkLWF0KSBjbGFpbXMuXHJcbiAqXHJcbiAqIE5vdGVzOlxyXG4gKiAtIE1heSByZXR1cm4gYSBmYWxzZSBuZWdhdGl2ZSBpZiB0aGVyZSdzIG5vIG5hdGl2ZSBiYXNlNjQgZGVjb2Rpbmcgc3VwcG9ydC5cclxuICogLSBEb2Vzbid0IGNoZWNrIGlmIHRoZSB0b2tlbiBpcyBhY3R1YWxseSB2YWxpZC5cclxuICovXHJcbmNvbnN0IGlzVmFsaWRUaW1lc3RhbXAgPSBmdW5jdGlvbiAodG9rZW4pIHtcclxuICAgIGNvbnN0IGNsYWltcyA9IGRlY29kZSh0b2tlbikuY2xhaW1zO1xyXG4gICAgY29uc3Qgbm93ID0gTWF0aC5mbG9vcihuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDApO1xyXG4gICAgbGV0IHZhbGlkU2luY2UgPSAwLCB2YWxpZFVudGlsID0gMDtcclxuICAgIGlmICh0eXBlb2YgY2xhaW1zID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIGlmIChjbGFpbXMuaGFzT3duUHJvcGVydHkoJ25iZicpKSB7XHJcbiAgICAgICAgICAgIHZhbGlkU2luY2UgPSBjbGFpbXNbJ25iZiddO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChjbGFpbXMuaGFzT3duUHJvcGVydHkoJ2lhdCcpKSB7XHJcbiAgICAgICAgICAgIHZhbGlkU2luY2UgPSBjbGFpbXNbJ2lhdCddO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY2xhaW1zLmhhc093blByb3BlcnR5KCdleHAnKSkge1xyXG4gICAgICAgICAgICB2YWxpZFVudGlsID0gY2xhaW1zWydleHAnXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIHRva2VuIHdpbGwgZXhwaXJlIGFmdGVyIDI0aCBieSBkZWZhdWx0XHJcbiAgICAgICAgICAgIHZhbGlkVW50aWwgPSB2YWxpZFNpbmNlICsgODY0MDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuICghIW5vdyAmJlxyXG4gICAgICAgICEhdmFsaWRTaW5jZSAmJlxyXG4gICAgICAgICEhdmFsaWRVbnRpbCAmJlxyXG4gICAgICAgIG5vdyA+PSB2YWxpZFNpbmNlICYmXHJcbiAgICAgICAgbm93IDw9IHZhbGlkVW50aWwpO1xyXG59O1xyXG4vKipcclxuICogRGVjb2RlcyBhIEZpcmViYXNlIGF1dGguIHRva2VuIGFuZCByZXR1cm5zIGl0cyBpc3N1ZWQgYXQgdGltZSBpZiB2YWxpZCwgbnVsbCBvdGhlcndpc2UuXHJcbiAqXHJcbiAqIE5vdGVzOlxyXG4gKiAtIE1heSByZXR1cm4gbnVsbCBpZiB0aGVyZSdzIG5vIG5hdGl2ZSBiYXNlNjQgZGVjb2Rpbmcgc3VwcG9ydC5cclxuICogLSBEb2Vzbid0IGNoZWNrIGlmIHRoZSB0b2tlbiBpcyBhY3R1YWxseSB2YWxpZC5cclxuICovXHJcbmNvbnN0IGlzc3VlZEF0VGltZSA9IGZ1bmN0aW9uICh0b2tlbikge1xyXG4gICAgY29uc3QgY2xhaW1zID0gZGVjb2RlKHRva2VuKS5jbGFpbXM7XHJcbiAgICBpZiAodHlwZW9mIGNsYWltcyA9PT0gJ29iamVjdCcgJiYgY2xhaW1zLmhhc093blByb3BlcnR5KCdpYXQnKSkge1xyXG4gICAgICAgIHJldHVybiBjbGFpbXNbJ2lhdCddO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn07XHJcbi8qKlxyXG4gKiBEZWNvZGVzIGEgRmlyZWJhc2UgYXV0aC4gdG9rZW4gYW5kIGNoZWNrcyB0aGUgdmFsaWRpdHkgb2YgaXRzIGZvcm1hdC4gRXhwZWN0cyBhIHZhbGlkIGlzc3VlZC1hdCB0aW1lLlxyXG4gKlxyXG4gKiBOb3RlczpcclxuICogLSBNYXkgcmV0dXJuIGEgZmFsc2UgbmVnYXRpdmUgaWYgdGhlcmUncyBubyBuYXRpdmUgYmFzZTY0IGRlY29kaW5nIHN1cHBvcnQuXHJcbiAqIC0gRG9lc24ndCBjaGVjayBpZiB0aGUgdG9rZW4gaXMgYWN0dWFsbHkgdmFsaWQuXHJcbiAqL1xyXG5jb25zdCBpc1ZhbGlkRm9ybWF0ID0gZnVuY3Rpb24gKHRva2VuKSB7XHJcbiAgICBjb25zdCBkZWNvZGVkID0gZGVjb2RlKHRva2VuKSwgY2xhaW1zID0gZGVjb2RlZC5jbGFpbXM7XHJcbiAgICByZXR1cm4gISFjbGFpbXMgJiYgdHlwZW9mIGNsYWltcyA9PT0gJ29iamVjdCcgJiYgY2xhaW1zLmhhc093blByb3BlcnR5KCdpYXQnKTtcclxufTtcclxuLyoqXHJcbiAqIEF0dGVtcHRzIHRvIHBlZXIgaW50byBhbiBhdXRoIHRva2VuIGFuZCBkZXRlcm1pbmUgaWYgaXQncyBhbiBhZG1pbiBhdXRoIHRva2VuIGJ5IGxvb2tpbmcgYXQgdGhlIGNsYWltcyBwb3J0aW9uLlxyXG4gKlxyXG4gKiBOb3RlczpcclxuICogLSBNYXkgcmV0dXJuIGEgZmFsc2UgbmVnYXRpdmUgaWYgdGhlcmUncyBubyBuYXRpdmUgYmFzZTY0IGRlY29kaW5nIHN1cHBvcnQuXHJcbiAqIC0gRG9lc24ndCBjaGVjayBpZiB0aGUgdG9rZW4gaXMgYWN0dWFsbHkgdmFsaWQuXHJcbiAqL1xyXG5jb25zdCBpc0FkbWluID0gZnVuY3Rpb24gKHRva2VuKSB7XHJcbiAgICBjb25zdCBjbGFpbXMgPSBkZWNvZGUodG9rZW4pLmNsYWltcztcclxuICAgIHJldHVybiB0eXBlb2YgY2xhaW1zID09PSAnb2JqZWN0JyAmJiBjbGFpbXNbJ2FkbWluJ10gPT09IHRydWU7XHJcbn07XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIGNvbnRhaW5zKG9iaiwga2V5KSB7XHJcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KTtcclxufVxyXG5mdW5jdGlvbiBzYWZlR2V0KG9iaiwga2V5KSB7XHJcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xyXG4gICAgICAgIHJldHVybiBvYmpba2V5XTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gaXNFbXB0eShvYmopIHtcclxuICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xyXG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxyXG5mdW5jdGlvbiBtYXAob2JqLCBmbiwgY29udGV4dE9iaikge1xyXG4gICAgY29uc3QgcmVzID0ge307XHJcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcclxuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xyXG4gICAgICAgICAgICByZXNba2V5XSA9IGZuLmNhbGwoY29udGV4dE9iaiwgb2JqW2tleV0sIGtleSwgb2JqKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzO1xyXG59XHJcbi8qKlxyXG4gKiBEZWVwIGVxdWFsIHR3byBvYmplY3RzLiBTdXBwb3J0IEFycmF5cyBhbmQgT2JqZWN0cy5cclxuICovXHJcbmZ1bmN0aW9uIGRlZXBFcXVhbChhLCBiKSB7XHJcbiAgICBpZiAoYSA9PT0gYikge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgY29uc3QgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcclxuICAgIGNvbnN0IGJLZXlzID0gT2JqZWN0LmtleXMoYik7XHJcbiAgICBmb3IgKGNvbnN0IGsgb2YgYUtleXMpIHtcclxuICAgICAgICBpZiAoIWJLZXlzLmluY2x1ZGVzKGspKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgYVByb3AgPSBhW2tdO1xyXG4gICAgICAgIGNvbnN0IGJQcm9wID0gYltrXTtcclxuICAgICAgICBpZiAoaXNPYmplY3QoYVByb3ApICYmIGlzT2JqZWN0KGJQcm9wKSkge1xyXG4gICAgICAgICAgICBpZiAoIWRlZXBFcXVhbChhUHJvcCwgYlByb3ApKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYVByb3AgIT09IGJQcm9wKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmb3IgKGNvbnN0IGsgb2YgYktleXMpIHtcclxuICAgICAgICBpZiAoIWFLZXlzLmluY2x1ZGVzKGspKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxyXG5mdW5jdGlvbiBpc09iamVjdCh0aGluZykge1xyXG4gICAgcmV0dXJuIHRoaW5nICE9PSBudWxsICYmIHR5cGVvZiB0aGluZyA9PT0gJ29iamVjdCc7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJlamVjdHMgaWYgdGhlIGdpdmVuIHByb21pc2UgZG9lc24ndCByZXNvbHZlIGluIHRpbWVJbk1TIG1pbGxpc2Vjb25kcy5cclxuICogQGludGVybmFsXHJcbiAqL1xyXG5mdW5jdGlvbiBwcm9taXNlV2l0aFRpbWVvdXQocHJvbWlzZSwgdGltZUluTVMgPSAyMDAwKSB7XHJcbiAgICBjb25zdCBkZWZlcnJlZFByb21pc2UgPSBuZXcgRGVmZXJyZWQoKTtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4gZGVmZXJyZWRQcm9taXNlLnJlamVjdCgndGltZW91dCEnKSwgdGltZUluTVMpO1xyXG4gICAgcHJvbWlzZS50aGVuKGRlZmVycmVkUHJvbWlzZS5yZXNvbHZlLCBkZWZlcnJlZFByb21pc2UucmVqZWN0KTtcclxuICAgIHJldHVybiBkZWZlcnJlZFByb21pc2UucHJvbWlzZTtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUmV0dXJucyBhIHF1ZXJ5c3RyaW5nLWZvcm1hdHRlZCBzdHJpbmcgKGUuZy4gJmFyZz12YWwmYXJnMj12YWwyKSBmcm9tIGFcclxuICogcGFyYW1zIG9iamVjdCAoZS5nLiB7YXJnOiAndmFsJywgYXJnMjogJ3ZhbDInfSlcclxuICogTm90ZTogWW91IG11c3QgcHJlcGVuZCBpdCB3aXRoID8gd2hlbiBhZGRpbmcgaXQgdG8gYSBVUkwuXHJcbiAqL1xyXG5mdW5jdGlvbiBxdWVyeXN0cmluZyhxdWVyeXN0cmluZ1BhcmFtcykge1xyXG4gICAgY29uc3QgcGFyYW1zID0gW107XHJcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhxdWVyeXN0cmluZ1BhcmFtcykpIHtcclxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcclxuICAgICAgICAgICAgdmFsdWUuZm9yRWFjaChhcnJheVZhbCA9PiB7XHJcbiAgICAgICAgICAgICAgICBwYXJhbXMucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudChhcnJheVZhbCkpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHBhcmFtcy5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChrZXkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHBhcmFtcy5sZW5ndGggPyAnJicgKyBwYXJhbXMuam9pbignJicpIDogJyc7XHJcbn1cclxuLyoqXHJcbiAqIERlY29kZXMgYSBxdWVyeXN0cmluZyAoZS5nLiA/YXJnPXZhbCZhcmcyPXZhbDIpIGludG8gYSBwYXJhbXMgb2JqZWN0XHJcbiAqIChlLmcuIHthcmc6ICd2YWwnLCBhcmcyOiAndmFsMid9KVxyXG4gKi9cclxuZnVuY3Rpb24gcXVlcnlzdHJpbmdEZWNvZGUocXVlcnlzdHJpbmcpIHtcclxuICAgIGNvbnN0IG9iaiA9IHt9O1xyXG4gICAgY29uc3QgdG9rZW5zID0gcXVlcnlzdHJpbmcucmVwbGFjZSgvXlxcPy8sICcnKS5zcGxpdCgnJicpO1xyXG4gICAgdG9rZW5zLmZvckVhY2godG9rZW4gPT4ge1xyXG4gICAgICAgIGlmICh0b2tlbikge1xyXG4gICAgICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSB0b2tlbi5zcGxpdCgnPScpO1xyXG4gICAgICAgICAgICBvYmpbZGVjb2RlVVJJQ29tcG9uZW50KGtleSldID0gZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBvYmo7XHJcbn1cclxuLyoqXHJcbiAqIEV4dHJhY3QgdGhlIHF1ZXJ5IHN0cmluZyBwYXJ0IG9mIGEgVVJMLCBpbmNsdWRpbmcgdGhlIGxlYWRpbmcgcXVlc3Rpb24gbWFyayAoaWYgcHJlc2VudCkuXHJcbiAqL1xyXG5mdW5jdGlvbiBleHRyYWN0UXVlcnlzdHJpbmcodXJsKSB7XHJcbiAgICBjb25zdCBxdWVyeVN0YXJ0ID0gdXJsLmluZGV4T2YoJz8nKTtcclxuICAgIGlmICghcXVlcnlTdGFydCkge1xyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICAgIGNvbnN0IGZyYWdtZW50U3RhcnQgPSB1cmwuaW5kZXhPZignIycsIHF1ZXJ5U3RhcnQpO1xyXG4gICAgcmV0dXJuIHVybC5zdWJzdHJpbmcocXVlcnlTdGFydCwgZnJhZ21lbnRTdGFydCA+IDAgPyBmcmFnbWVudFN0YXJ0IDogdW5kZWZpbmVkKTtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQGZpbGVvdmVydmlldyBTSEEtMSBjcnlwdG9ncmFwaGljIGhhc2guXHJcbiAqIFZhcmlhYmxlIG5hbWVzIGZvbGxvdyB0aGUgbm90YXRpb24gaW4gRklQUyBQVUIgMTgwLTM6XHJcbiAqIGh0dHA6Ly9jc3JjLm5pc3QuZ292L3B1YmxpY2F0aW9ucy9maXBzL2ZpcHMxODAtMy9maXBzMTgwLTNfZmluYWwucGRmLlxyXG4gKlxyXG4gKiBVc2FnZTpcclxuICogICB2YXIgc2hhMSA9IG5ldyBzaGExKCk7XHJcbiAqICAgc2hhMS51cGRhdGUoYnl0ZXMpO1xyXG4gKiAgIHZhciBoYXNoID0gc2hhMS5kaWdlc3QoKTtcclxuICpcclxuICogUGVyZm9ybWFuY2U6XHJcbiAqICAgQ2hyb21lIDIzOiAgIH40MDAgTWJpdC9zXHJcbiAqICAgRmlyZWZveCAxNjogIH4yNTAgTWJpdC9zXHJcbiAqXHJcbiAqL1xyXG4vKipcclxuICogU0hBLTEgY3J5cHRvZ3JhcGhpYyBoYXNoIGNvbnN0cnVjdG9yLlxyXG4gKlxyXG4gKiBUaGUgcHJvcGVydGllcyBkZWNsYXJlZCBoZXJlIGFyZSBkaXNjdXNzZWQgaW4gdGhlIGFib3ZlIGFsZ29yaXRobSBkb2N1bWVudC5cclxuICogQGNvbnN0cnVjdG9yXHJcbiAqIEBmaW5hbFxyXG4gKiBAc3RydWN0XHJcbiAqL1xyXG5jbGFzcyBTaGExIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEhvbGRzIHRoZSBwcmV2aW91cyB2YWx1ZXMgb2YgYWNjdW11bGF0ZWQgdmFyaWFibGVzIGEtZSBpbiB0aGUgY29tcHJlc3NfXHJcbiAgICAgICAgICogZnVuY3Rpb24uXHJcbiAgICAgICAgICogQHByaXZhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmNoYWluXyA9IFtdO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgYnVmZmVyIGhvbGRpbmcgdGhlIHBhcnRpYWxseSBjb21wdXRlZCBoYXNoIHJlc3VsdC5cclxuICAgICAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuYnVmXyA9IFtdO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEFuIGFycmF5IG9mIDgwIGJ5dGVzLCBlYWNoIGEgcGFydCBvZiB0aGUgbWVzc2FnZSB0byBiZSBoYXNoZWQuICBSZWZlcnJlZCB0b1xyXG4gICAgICAgICAqIGFzIHRoZSBtZXNzYWdlIHNjaGVkdWxlIGluIHRoZSBkb2NzLlxyXG4gICAgICAgICAqIEBwcml2YXRlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5XXyA9IFtdO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENvbnRhaW5zIGRhdGEgbmVlZGVkIHRvIHBhZCBtZXNzYWdlcyBsZXNzIHRoYW4gNjQgYnl0ZXMuXHJcbiAgICAgICAgICogQHByaXZhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnBhZF8gPSBbXTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcHJpdmF0ZSB7bnVtYmVyfVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuaW5idWZfID0gMDtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBAcHJpdmF0ZSB7bnVtYmVyfVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMudG90YWxfID0gMDtcclxuICAgICAgICB0aGlzLmJsb2NrU2l6ZSA9IDUxMiAvIDg7XHJcbiAgICAgICAgdGhpcy5wYWRfWzBdID0gMTI4O1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgdGhpcy5ibG9ja1NpemU7ICsraSkge1xyXG4gICAgICAgICAgICB0aGlzLnBhZF9baV0gPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnJlc2V0KCk7XHJcbiAgICB9XHJcbiAgICByZXNldCgpIHtcclxuICAgICAgICB0aGlzLmNoYWluX1swXSA9IDB4Njc0NTIzMDE7XHJcbiAgICAgICAgdGhpcy5jaGFpbl9bMV0gPSAweGVmY2RhYjg5O1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzJdID0gMHg5OGJhZGNmZTtcclxuICAgICAgICB0aGlzLmNoYWluX1szXSA9IDB4MTAzMjU0NzY7XHJcbiAgICAgICAgdGhpcy5jaGFpbl9bNF0gPSAweGMzZDJlMWYwO1xyXG4gICAgICAgIHRoaXMuaW5idWZfID0gMDtcclxuICAgICAgICB0aGlzLnRvdGFsXyA9IDA7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEludGVybmFsIGNvbXByZXNzIGhlbHBlciBmdW5jdGlvbi5cclxuICAgICAqIEBwYXJhbSBidWYgQmxvY2sgdG8gY29tcHJlc3MuXHJcbiAgICAgKiBAcGFyYW0gb2Zmc2V0IE9mZnNldCBvZiB0aGUgYmxvY2sgaW4gdGhlIGJ1ZmZlci5cclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKi9cclxuICAgIGNvbXByZXNzXyhidWYsIG9mZnNldCkge1xyXG4gICAgICAgIGlmICghb2Zmc2V0KSB7XHJcbiAgICAgICAgICAgIG9mZnNldCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IFcgPSB0aGlzLldfO1xyXG4gICAgICAgIC8vIGdldCAxNiBiaWcgZW5kaWFuIHdvcmRzXHJcbiAgICAgICAgaWYgKHR5cGVvZiBidWYgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgLy8gVE9ETyh1c2VyKTogW2J1ZyA4MTQwMTIyXSBSZWNlbnQgdmVyc2lvbnMgb2YgU2FmYXJpIGZvciBNYWMgT1MgYW5kIGlPU1xyXG4gICAgICAgICAgICAgICAgLy8gaGF2ZSBhIGJ1ZyB0aGF0IHR1cm5zIHRoZSBwb3N0LWluY3JlbWVudCArKyBvcGVyYXRvciBpbnRvIHByZS1pbmNyZW1lbnRcclxuICAgICAgICAgICAgICAgIC8vIGR1cmluZyBKSVQgY29tcGlsYXRpb24uICBXZSBoYXZlIGNvZGUgdGhhdCBkZXBlbmRzIGhlYXZpbHkgb24gU0hBLTEgZm9yXHJcbiAgICAgICAgICAgICAgICAvLyBjb3JyZWN0bmVzcyBhbmQgd2hpY2ggaXMgYWZmZWN0ZWQgYnkgdGhpcyBidWcsIHNvIEkndmUgcmVtb3ZlZCBhbGwgdXNlc1xyXG4gICAgICAgICAgICAgICAgLy8gb2YgcG9zdC1pbmNyZW1lbnQgKysgaW4gd2hpY2ggdGhlIHJlc3VsdCB2YWx1ZSBpcyB1c2VkLiAgV2UgY2FuIHJldmVydFxyXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBjaGFuZ2Ugb25jZSB0aGUgU2FmYXJpIGJ1Z1xyXG4gICAgICAgICAgICAgICAgLy8gKGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMDkwMzYpIGhhcyBiZWVuIGZpeGVkIGFuZFxyXG4gICAgICAgICAgICAgICAgLy8gbW9zdCBjbGllbnRzIGhhdmUgYmVlbiB1cGRhdGVkLlxyXG4gICAgICAgICAgICAgICAgV1tpXSA9XHJcbiAgICAgICAgICAgICAgICAgICAgKGJ1Zi5jaGFyQ29kZUF0KG9mZnNldCkgPDwgMjQpIHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgKGJ1Zi5jaGFyQ29kZUF0KG9mZnNldCArIDEpIDw8IDE2KSB8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIChidWYuY2hhckNvZGVBdChvZmZzZXQgKyAyKSA8PCA4KSB8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1Zi5jaGFyQ29kZUF0KG9mZnNldCArIDMpO1xyXG4gICAgICAgICAgICAgICAgb2Zmc2V0ICs9IDQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgV1tpXSA9XHJcbiAgICAgICAgICAgICAgICAgICAgKGJ1ZltvZmZzZXRdIDw8IDI0KSB8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIChidWZbb2Zmc2V0ICsgMV0gPDwgMTYpIHxcclxuICAgICAgICAgICAgICAgICAgICAgICAgKGJ1ZltvZmZzZXQgKyAyXSA8PCA4KSB8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZltvZmZzZXQgKyAzXTtcclxuICAgICAgICAgICAgICAgIG9mZnNldCArPSA0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGV4cGFuZCB0byA4MCB3b3Jkc1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAxNjsgaSA8IDgwOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgdCA9IFdbaSAtIDNdIF4gV1tpIC0gOF0gXiBXW2kgLSAxNF0gXiBXW2kgLSAxNl07XHJcbiAgICAgICAgICAgIFdbaV0gPSAoKHQgPDwgMSkgfCAodCA+Pj4gMzEpKSAmIDB4ZmZmZmZmZmY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBhID0gdGhpcy5jaGFpbl9bMF07XHJcbiAgICAgICAgbGV0IGIgPSB0aGlzLmNoYWluX1sxXTtcclxuICAgICAgICBsZXQgYyA9IHRoaXMuY2hhaW5fWzJdO1xyXG4gICAgICAgIGxldCBkID0gdGhpcy5jaGFpbl9bM107XHJcbiAgICAgICAgbGV0IGUgPSB0aGlzLmNoYWluX1s0XTtcclxuICAgICAgICBsZXQgZiwgaztcclxuICAgICAgICAvLyBUT0RPKHVzZXIpOiBUcnkgdG8gdW5yb2xsIHRoaXMgbG9vcCB0byBzcGVlZCB1cCB0aGUgY29tcHV0YXRpb24uXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA4MDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChpIDwgNDApIHtcclxuICAgICAgICAgICAgICAgIGlmIChpIDwgMjApIHtcclxuICAgICAgICAgICAgICAgICAgICBmID0gZCBeIChiICYgKGMgXiBkKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgayA9IDB4NWE4Mjc5OTk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBmID0gYiBeIGMgXiBkO1xyXG4gICAgICAgICAgICAgICAgICAgIGsgPSAweDZlZDllYmExO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKGkgPCA2MCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGYgPSAoYiAmIGMpIHwgKGQgJiAoYiB8IGMpKTtcclxuICAgICAgICAgICAgICAgICAgICBrID0gMHg4ZjFiYmNkYztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGYgPSBiIF4gYyBeIGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgayA9IDB4Y2E2MmMxZDY7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgdCA9ICgoKGEgPDwgNSkgfCAoYSA+Pj4gMjcpKSArIGYgKyBlICsgayArIFdbaV0pICYgMHhmZmZmZmZmZjtcclxuICAgICAgICAgICAgZSA9IGQ7XHJcbiAgICAgICAgICAgIGQgPSBjO1xyXG4gICAgICAgICAgICBjID0gKChiIDw8IDMwKSB8IChiID4+PiAyKSkgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgICAgICBiID0gYTtcclxuICAgICAgICAgICAgYSA9IHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2hhaW5fWzBdID0gKHRoaXMuY2hhaW5fWzBdICsgYSkgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzFdID0gKHRoaXMuY2hhaW5fWzFdICsgYikgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzJdID0gKHRoaXMuY2hhaW5fWzJdICsgYykgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzNdID0gKHRoaXMuY2hhaW5fWzNdICsgZCkgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzRdID0gKHRoaXMuY2hhaW5fWzRdICsgZSkgJiAweGZmZmZmZmZmO1xyXG4gICAgfVxyXG4gICAgdXBkYXRlKGJ5dGVzLCBsZW5ndGgpIHtcclxuICAgICAgICAvLyBUT0RPKGpvaG5sZW56KTogdGlnaHRlbiB0aGUgZnVuY3Rpb24gc2lnbmF0dXJlIGFuZCByZW1vdmUgdGhpcyBjaGVja1xyXG4gICAgICAgIGlmIChieXRlcyA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGxlbmd0aCA9IGJ5dGVzLmxlbmd0aDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgbGVuZ3RoTWludXNCbG9jayA9IGxlbmd0aCAtIHRoaXMuYmxvY2tTaXplO1xyXG4gICAgICAgIGxldCBuID0gMDtcclxuICAgICAgICAvLyBVc2luZyBsb2NhbCBpbnN0ZWFkIG9mIG1lbWJlciB2YXJpYWJsZXMgZ2l2ZXMgfjUlIHNwZWVkdXAgb24gRmlyZWZveCAxNi5cclxuICAgICAgICBjb25zdCBidWYgPSB0aGlzLmJ1Zl87XHJcbiAgICAgICAgbGV0IGluYnVmID0gdGhpcy5pbmJ1Zl87XHJcbiAgICAgICAgLy8gVGhlIG91dGVyIHdoaWxlIGxvb3Agc2hvdWxkIGV4ZWN1dGUgYXQgbW9zdCB0d2ljZS5cclxuICAgICAgICB3aGlsZSAobiA8IGxlbmd0aCkge1xyXG4gICAgICAgICAgICAvLyBXaGVuIHdlIGhhdmUgbm8gZGF0YSBpbiB0aGUgYmxvY2sgdG8gdG9wIHVwLCB3ZSBjYW4gZGlyZWN0bHkgcHJvY2VzcyB0aGVcclxuICAgICAgICAgICAgLy8gaW5wdXQgYnVmZmVyIChhc3N1bWluZyBpdCBjb250YWlucyBzdWZmaWNpZW50IGRhdGEpLiBUaGlzIGdpdmVzIH4yNSVcclxuICAgICAgICAgICAgLy8gc3BlZWR1cCBvbiBDaHJvbWUgMjMgYW5kIH4xNSUgc3BlZWR1cCBvbiBGaXJlZm94IDE2LCBidXQgcmVxdWlyZXMgdGhhdFxyXG4gICAgICAgICAgICAvLyB0aGUgZGF0YSBpcyBwcm92aWRlZCBpbiBsYXJnZSBjaHVua3MgKG9yIGluIG11bHRpcGxlcyBvZiA2NCBieXRlcykuXHJcbiAgICAgICAgICAgIGlmIChpbmJ1ZiA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgd2hpbGUgKG4gPD0gbGVuZ3RoTWludXNCbG9jaykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tcHJlc3NfKGJ5dGVzLCBuKTtcclxuICAgICAgICAgICAgICAgICAgICBuICs9IHRoaXMuYmxvY2tTaXplO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgICAgICB3aGlsZSAobiA8IGxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1ZltpbmJ1Zl0gPSBieXRlcy5jaGFyQ29kZUF0KG4pO1xyXG4gICAgICAgICAgICAgICAgICAgICsraW5idWY7XHJcbiAgICAgICAgICAgICAgICAgICAgKytuO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmJ1ZiA9PT0gdGhpcy5ibG9ja1NpemUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21wcmVzc18oYnVmKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5idWYgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBKdW1wIHRvIHRoZSBvdXRlciBsb29wIHNvIHdlIHVzZSB0aGUgZnVsbC1ibG9jayBvcHRpbWl6YXRpb24uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHdoaWxlIChuIDwgbGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnVmW2luYnVmXSA9IGJ5dGVzW25dO1xyXG4gICAgICAgICAgICAgICAgICAgICsraW5idWY7XHJcbiAgICAgICAgICAgICAgICAgICAgKytuO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmJ1ZiA9PT0gdGhpcy5ibG9ja1NpemUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21wcmVzc18oYnVmKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5idWYgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBKdW1wIHRvIHRoZSBvdXRlciBsb29wIHNvIHdlIHVzZSB0aGUgZnVsbC1ibG9jayBvcHRpbWl6YXRpb24uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmluYnVmXyA9IGluYnVmO1xyXG4gICAgICAgIHRoaXMudG90YWxfICs9IGxlbmd0aDtcclxuICAgIH1cclxuICAgIC8qKiBAb3ZlcnJpZGUgKi9cclxuICAgIGRpZ2VzdCgpIHtcclxuICAgICAgICBjb25zdCBkaWdlc3QgPSBbXTtcclxuICAgICAgICBsZXQgdG90YWxCaXRzID0gdGhpcy50b3RhbF8gKiA4O1xyXG4gICAgICAgIC8vIEFkZCBwYWQgMHg4MCAweDAwKi5cclxuICAgICAgICBpZiAodGhpcy5pbmJ1Zl8gPCA1Nikge1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZSh0aGlzLnBhZF8sIDU2IC0gdGhpcy5pbmJ1Zl8pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGUodGhpcy5wYWRfLCB0aGlzLmJsb2NrU2l6ZSAtICh0aGlzLmluYnVmXyAtIDU2KSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIEFkZCAjIGJpdHMuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IHRoaXMuYmxvY2tTaXplIC0gMTsgaSA+PSA1NjsgaS0tKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnVmX1tpXSA9IHRvdGFsQml0cyAmIDI1NTtcclxuICAgICAgICAgICAgdG90YWxCaXRzIC89IDI1NjsgLy8gRG9uJ3QgdXNlIGJpdC1zaGlmdGluZyBoZXJlIVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNvbXByZXNzXyh0aGlzLmJ1Zl8pO1xyXG4gICAgICAgIGxldCBuID0gMDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMjQ7IGogPj0gMDsgaiAtPSA4KSB7XHJcbiAgICAgICAgICAgICAgICBkaWdlc3Rbbl0gPSAodGhpcy5jaGFpbl9baV0gPj4gaikgJiAyNTU7XHJcbiAgICAgICAgICAgICAgICArK247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRpZ2VzdDtcclxuICAgIH1cclxufVxuXG4vKipcclxuICogSGVscGVyIHRvIG1ha2UgYSBTdWJzY3JpYmUgZnVuY3Rpb24gKGp1c3QgbGlrZSBQcm9taXNlIGhlbHBzIG1ha2UgYVxyXG4gKiBUaGVuYWJsZSkuXHJcbiAqXHJcbiAqIEBwYXJhbSBleGVjdXRvciBGdW5jdGlvbiB3aGljaCBjYW4gbWFrZSBjYWxscyB0byBhIHNpbmdsZSBPYnNlcnZlclxyXG4gKiAgICAgYXMgYSBwcm94eS5cclxuICogQHBhcmFtIG9uTm9PYnNlcnZlcnMgQ2FsbGJhY2sgd2hlbiBjb3VudCBvZiBPYnNlcnZlcnMgZ29lcyB0byB6ZXJvLlxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlU3Vic2NyaWJlKGV4ZWN1dG9yLCBvbk5vT2JzZXJ2ZXJzKSB7XHJcbiAgICBjb25zdCBwcm94eSA9IG5ldyBPYnNlcnZlclByb3h5KGV4ZWN1dG9yLCBvbk5vT2JzZXJ2ZXJzKTtcclxuICAgIHJldHVybiBwcm94eS5zdWJzY3JpYmUuYmluZChwcm94eSk7XHJcbn1cclxuLyoqXHJcbiAqIEltcGxlbWVudCBmYW4tb3V0IGZvciBhbnkgbnVtYmVyIG9mIE9ic2VydmVycyBhdHRhY2hlZCB2aWEgYSBzdWJzY3JpYmVcclxuICogZnVuY3Rpb24uXHJcbiAqL1xyXG5jbGFzcyBPYnNlcnZlclByb3h5IHtcclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIGV4ZWN1dG9yIEZ1bmN0aW9uIHdoaWNoIGNhbiBtYWtlIGNhbGxzIHRvIGEgc2luZ2xlIE9ic2VydmVyXHJcbiAgICAgKiAgICAgYXMgYSBwcm94eS5cclxuICAgICAqIEBwYXJhbSBvbk5vT2JzZXJ2ZXJzIENhbGxiYWNrIHdoZW4gY291bnQgb2YgT2JzZXJ2ZXJzIGdvZXMgdG8gemVyby5cclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoZXhlY3V0b3IsIG9uTm9PYnNlcnZlcnMpIHtcclxuICAgICAgICB0aGlzLm9ic2VydmVycyA9IFtdO1xyXG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmVzID0gW107XHJcbiAgICAgICAgdGhpcy5vYnNlcnZlckNvdW50ID0gMDtcclxuICAgICAgICAvLyBNaWNyby10YXNrIHNjaGVkdWxpbmcgYnkgY2FsbGluZyB0YXNrLnRoZW4oKS5cclxuICAgICAgICB0aGlzLnRhc2sgPSBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgICAgICB0aGlzLmZpbmFsaXplZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMub25Ob09ic2VydmVycyA9IG9uTm9PYnNlcnZlcnM7XHJcbiAgICAgICAgLy8gQ2FsbCB0aGUgZXhlY3V0b3IgYXN5bmNocm9ub3VzbHkgc28gc3Vic2NyaWJlcnMgdGhhdCBhcmUgY2FsbGVkXHJcbiAgICAgICAgLy8gc3luY2hyb25vdXNseSBhZnRlciB0aGUgY3JlYXRpb24gb2YgdGhlIHN1YnNjcmliZSBmdW5jdGlvblxyXG4gICAgICAgIC8vIGNhbiBzdGlsbCByZWNlaXZlIHRoZSB2ZXJ5IGZpcnN0IHZhbHVlIGdlbmVyYXRlZCBpbiB0aGUgZXhlY3V0b3IuXHJcbiAgICAgICAgdGhpcy50YXNrXHJcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgZXhlY3V0b3IodGhpcyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKGUgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmVycm9yKGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgbmV4dCh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuZm9yRWFjaE9ic2VydmVyKChvYnNlcnZlcikgPT4ge1xyXG4gICAgICAgICAgICBvYnNlcnZlci5uZXh0KHZhbHVlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGVycm9yKGVycm9yKSB7XHJcbiAgICAgICAgdGhpcy5mb3JFYWNoT2JzZXJ2ZXIoKG9ic2VydmVyKSA9PiB7XHJcbiAgICAgICAgICAgIG9ic2VydmVyLmVycm9yKGVycm9yKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmNsb3NlKGVycm9yKTtcclxuICAgIH1cclxuICAgIGNvbXBsZXRlKCkge1xyXG4gICAgICAgIHRoaXMuZm9yRWFjaE9ic2VydmVyKChvYnNlcnZlcikgPT4ge1xyXG4gICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU3Vic2NyaWJlIGZ1bmN0aW9uIHRoYXQgY2FuIGJlIHVzZWQgdG8gYWRkIGFuIE9ic2VydmVyIHRvIHRoZSBmYW4tb3V0IGxpc3QuXHJcbiAgICAgKlxyXG4gICAgICogLSBXZSByZXF1aXJlIHRoYXQgbm8gZXZlbnQgaXMgc2VudCB0byBhIHN1YnNjcmliZXIgc3ljaHJvbm91c2x5IHRvIHRoZWlyXHJcbiAgICAgKiAgIGNhbGwgdG8gc3Vic2NyaWJlKCkuXHJcbiAgICAgKi9cclxuICAgIHN1YnNjcmliZShuZXh0T3JPYnNlcnZlciwgZXJyb3IsIGNvbXBsZXRlKSB7XHJcbiAgICAgICAgbGV0IG9ic2VydmVyO1xyXG4gICAgICAgIGlmIChuZXh0T3JPYnNlcnZlciA9PT0gdW5kZWZpbmVkICYmXHJcbiAgICAgICAgICAgIGVycm9yID09PSB1bmRlZmluZWQgJiZcclxuICAgICAgICAgICAgY29tcGxldGUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgT2JzZXJ2ZXIuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIEFzc2VtYmxlIGFuIE9ic2VydmVyIG9iamVjdCB3aGVuIHBhc3NlZCBhcyBjYWxsYmFjayBmdW5jdGlvbnMuXHJcbiAgICAgICAgaWYgKGltcGxlbWVudHNBbnlNZXRob2RzKG5leHRPck9ic2VydmVyLCBbXHJcbiAgICAgICAgICAgICduZXh0JyxcclxuICAgICAgICAgICAgJ2Vycm9yJyxcclxuICAgICAgICAgICAgJ2NvbXBsZXRlJ1xyXG4gICAgICAgIF0pKSB7XHJcbiAgICAgICAgICAgIG9ic2VydmVyID0gbmV4dE9yT2JzZXJ2ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBvYnNlcnZlciA9IHtcclxuICAgICAgICAgICAgICAgIG5leHQ6IG5leHRPck9ic2VydmVyLFxyXG4gICAgICAgICAgICAgICAgZXJyb3IsXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob2JzZXJ2ZXIubmV4dCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQgPSBub29wO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob2JzZXJ2ZXIuZXJyb3IgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBvYnNlcnZlci5lcnJvciA9IG5vb3A7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChvYnNlcnZlci5jb21wbGV0ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlID0gbm9vcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgdW5zdWIgPSB0aGlzLnVuc3Vic2NyaWJlT25lLmJpbmQodGhpcywgdGhpcy5vYnNlcnZlcnMubGVuZ3RoKTtcclxuICAgICAgICAvLyBBdHRlbXB0IHRvIHN1YnNjcmliZSB0byBhIHRlcm1pbmF0ZWQgT2JzZXJ2YWJsZSAtIHdlXHJcbiAgICAgICAgLy8ganVzdCByZXNwb25kIHRvIHRoZSBPYnNlcnZlciB3aXRoIHRoZSBmaW5hbCBlcnJvciBvciBjb21wbGV0ZVxyXG4gICAgICAgIC8vIGV2ZW50LlxyXG4gICAgICAgIGlmICh0aGlzLmZpbmFsaXplZCkge1xyXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXHJcbiAgICAgICAgICAgIHRoaXMudGFzay50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZmluYWxFcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcih0aGlzLmZpbmFsRXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIuY29tcGxldGUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIG5vdGhpbmdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMub2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpO1xyXG4gICAgICAgIHJldHVybiB1bnN1YjtcclxuICAgIH1cclxuICAgIC8vIFVuc3Vic2NyaWJlIGlzIHN5bmNocm9ub3VzIC0gd2UgZ3VhcmFudGVlIHRoYXQgbm8gZXZlbnRzIGFyZSBzZW50IHRvXHJcbiAgICAvLyBhbnkgdW5zdWJzY3JpYmVkIE9ic2VydmVyLlxyXG4gICAgdW5zdWJzY3JpYmVPbmUoaSkge1xyXG4gICAgICAgIGlmICh0aGlzLm9ic2VydmVycyA9PT0gdW5kZWZpbmVkIHx8IHRoaXMub2JzZXJ2ZXJzW2ldID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBkZWxldGUgdGhpcy5vYnNlcnZlcnNbaV07XHJcbiAgICAgICAgdGhpcy5vYnNlcnZlckNvdW50IC09IDE7XHJcbiAgICAgICAgaWYgKHRoaXMub2JzZXJ2ZXJDb3VudCA9PT0gMCAmJiB0aGlzLm9uTm9PYnNlcnZlcnMgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aGlzLm9uTm9PYnNlcnZlcnModGhpcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZm9yRWFjaE9ic2VydmVyKGZuKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZmluYWxpemVkKSB7XHJcbiAgICAgICAgICAgIC8vIEFscmVhZHkgY2xvc2VkIGJ5IHByZXZpb3VzIGV2ZW50Li4uLmp1c3QgZWF0IHRoZSBhZGRpdGlvbmFsIHZhbHVlcy5cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBTaW5jZSBzZW5kT25lIGNhbGxzIGFzeW5jaHJvbm91c2x5IC0gdGhlcmUgaXMgbm8gY2hhbmNlIHRoYXRcclxuICAgICAgICAvLyB0aGlzLm9ic2VydmVycyB3aWxsIGJlY29tZSB1bmRlZmluZWQuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm9ic2VydmVycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB0aGlzLnNlbmRPbmUoaSwgZm4pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIENhbGwgdGhlIE9ic2VydmVyIHZpYSBvbmUgb2YgaXQncyBjYWxsYmFjayBmdW5jdGlvbi4gV2UgYXJlIGNhcmVmdWwgdG9cclxuICAgIC8vIGNvbmZpcm0gdGhhdCB0aGUgb2JzZXJ2ZSBoYXMgbm90IGJlZW4gdW5zdWJzY3JpYmVkIHNpbmNlIHRoaXMgYXN5bmNocm9ub3VzXHJcbiAgICAvLyBmdW5jdGlvbiBoYWQgYmVlbiBxdWV1ZWQuXHJcbiAgICBzZW5kT25lKGksIGZuKSB7XHJcbiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgY2FsbGJhY2sgYXN5bmNocm9ub3VzbHlcclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXHJcbiAgICAgICAgdGhpcy50YXNrLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5vYnNlcnZlcnMgIT09IHVuZGVmaW5lZCAmJiB0aGlzLm9ic2VydmVyc1tpXSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZuKHRoaXMub2JzZXJ2ZXJzW2ldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gSWdub3JlIGV4Y2VwdGlvbnMgcmFpc2VkIGluIE9ic2VydmVycyBvciBtaXNzaW5nIG1ldGhvZHMgb2YgYW5cclxuICAgICAgICAgICAgICAgICAgICAvLyBPYnNlcnZlci5cclxuICAgICAgICAgICAgICAgICAgICAvLyBMb2cgZXJyb3IgdG8gY29uc29sZS4gYi8zMTQwNDgwNlxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS5lcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgY2xvc2UoZXJyKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZmluYWxpemVkKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5maW5hbGl6ZWQgPSB0cnVlO1xyXG4gICAgICAgIGlmIChlcnIgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aGlzLmZpbmFsRXJyb3IgPSBlcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFByb3h5IGlzIG5vIGxvbmdlciBuZWVkZWQgLSBnYXJiYWdlIGNvbGxlY3QgcmVmZXJlbmNlc1xyXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZmxvYXRpbmctcHJvbWlzZXNcclxuICAgICAgICB0aGlzLnRhc2sudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXJzID0gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICB0aGlzLm9uTm9PYnNlcnZlcnMgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuLyoqIFR1cm4gc3luY2hyb25vdXMgZnVuY3Rpb24gaW50byBvbmUgY2FsbGVkIGFzeW5jaHJvbm91c2x5LiAqL1xyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xyXG5mdW5jdGlvbiBhc3luYyhmbiwgb25FcnJvcikge1xyXG4gICAgcmV0dXJuICguLi5hcmdzKSA9PiB7XHJcbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHRydWUpXHJcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgZm4oLi4uYXJncyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICBpZiAob25FcnJvcikge1xyXG4gICAgICAgICAgICAgICAgb25FcnJvcihlcnJvcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybiB0cnVlIGlmIHRoZSBvYmplY3QgcGFzc2VkIGluIGltcGxlbWVudHMgYW55IG9mIHRoZSBuYW1lZCBtZXRob2RzLlxyXG4gKi9cclxuZnVuY3Rpb24gaW1wbGVtZW50c0FueU1ldGhvZHMob2JqLCBtZXRob2RzKSB7XHJcbiAgICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcgfHwgb2JqID09PSBudWxsKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgZm9yIChjb25zdCBtZXRob2Qgb2YgbWV0aG9kcykge1xyXG4gICAgICAgIGlmIChtZXRob2QgaW4gb2JqICYmIHR5cGVvZiBvYmpbbWV0aG9kXSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn1cclxuZnVuY3Rpb24gbm9vcCgpIHtcclxuICAgIC8vIGRvIG5vdGhpbmdcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQ2hlY2sgdG8gbWFrZSBzdXJlIHRoZSBhcHByb3ByaWF0ZSBudW1iZXIgb2YgYXJndW1lbnRzIGFyZSBwcm92aWRlZCBmb3IgYSBwdWJsaWMgZnVuY3Rpb24uXHJcbiAqIFRocm93cyBhbiBlcnJvciBpZiBpdCBmYWlscy5cclxuICpcclxuICogQHBhcmFtIGZuTmFtZSBUaGUgZnVuY3Rpb24gbmFtZVxyXG4gKiBAcGFyYW0gbWluQ291bnQgVGhlIG1pbmltdW0gbnVtYmVyIG9mIGFyZ3VtZW50cyB0byBhbGxvdyBmb3IgdGhlIGZ1bmN0aW9uIGNhbGxcclxuICogQHBhcmFtIG1heENvdW50IFRoZSBtYXhpbXVtIG51bWJlciBvZiBhcmd1bWVudCB0byBhbGxvdyBmb3IgdGhlIGZ1bmN0aW9uIGNhbGxcclxuICogQHBhcmFtIGFyZ0NvdW50IFRoZSBhY3R1YWwgbnVtYmVyIG9mIGFyZ3VtZW50cyBwcm92aWRlZC5cclxuICovXHJcbmNvbnN0IHZhbGlkYXRlQXJnQ291bnQgPSBmdW5jdGlvbiAoZm5OYW1lLCBtaW5Db3VudCwgbWF4Q291bnQsIGFyZ0NvdW50KSB7XHJcbiAgICBsZXQgYXJnRXJyb3I7XHJcbiAgICBpZiAoYXJnQ291bnQgPCBtaW5Db3VudCkge1xyXG4gICAgICAgIGFyZ0Vycm9yID0gJ2F0IGxlYXN0ICcgKyBtaW5Db3VudDtcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGFyZ0NvdW50ID4gbWF4Q291bnQpIHtcclxuICAgICAgICBhcmdFcnJvciA9IG1heENvdW50ID09PSAwID8gJ25vbmUnIDogJ25vIG1vcmUgdGhhbiAnICsgbWF4Q291bnQ7XHJcbiAgICB9XHJcbiAgICBpZiAoYXJnRXJyb3IpIHtcclxuICAgICAgICBjb25zdCBlcnJvciA9IGZuTmFtZSArXHJcbiAgICAgICAgICAgICcgZmFpbGVkOiBXYXMgY2FsbGVkIHdpdGggJyArXHJcbiAgICAgICAgICAgIGFyZ0NvdW50ICtcclxuICAgICAgICAgICAgKGFyZ0NvdW50ID09PSAxID8gJyBhcmd1bWVudC4nIDogJyBhcmd1bWVudHMuJykgK1xyXG4gICAgICAgICAgICAnIEV4cGVjdHMgJyArXHJcbiAgICAgICAgICAgIGFyZ0Vycm9yICtcclxuICAgICAgICAgICAgJy4nO1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvcik7XHJcbiAgICB9XHJcbn07XHJcbi8qKlxyXG4gKiBHZW5lcmF0ZXMgYSBzdHJpbmcgdG8gcHJlZml4IGFuIGVycm9yIG1lc3NhZ2UgYWJvdXQgZmFpbGVkIGFyZ3VtZW50IHZhbGlkYXRpb25cclxuICpcclxuICogQHBhcmFtIGZuTmFtZSBUaGUgZnVuY3Rpb24gbmFtZVxyXG4gKiBAcGFyYW0gYXJnTmFtZSBUaGUgbmFtZSBvZiB0aGUgYXJndW1lbnRcclxuICogQHJldHVybiBUaGUgcHJlZml4IHRvIGFkZCB0byB0aGUgZXJyb3IgdGhyb3duIGZvciB2YWxpZGF0aW9uLlxyXG4gKi9cclxuZnVuY3Rpb24gZXJyb3JQcmVmaXgoZm5OYW1lLCBhcmdOYW1lKSB7XHJcbiAgICByZXR1cm4gYCR7Zm5OYW1lfSBmYWlsZWQ6ICR7YXJnTmFtZX0gYXJndW1lbnQgYDtcclxufVxyXG4vKipcclxuICogQHBhcmFtIGZuTmFtZVxyXG4gKiBAcGFyYW0gYXJndW1lbnROdW1iZXJcclxuICogQHBhcmFtIG5hbWVzcGFjZVxyXG4gKiBAcGFyYW0gb3B0aW9uYWxcclxuICovXHJcbmZ1bmN0aW9uIHZhbGlkYXRlTmFtZXNwYWNlKGZuTmFtZSwgbmFtZXNwYWNlLCBvcHRpb25hbCkge1xyXG4gICAgaWYgKG9wdGlvbmFsICYmICFuYW1lc3BhY2UpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIG5hbWVzcGFjZSAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgICAvL1RPRE86IEkgc2hvdWxkIGRvIG1vcmUgdmFsaWRhdGlvbiBoZXJlLiBXZSBvbmx5IGFsbG93IGNlcnRhaW4gY2hhcnMgaW4gbmFtZXNwYWNlcy5cclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JQcmVmaXgoZm5OYW1lLCAnbmFtZXNwYWNlJykgKyAnbXVzdCBiZSBhIHZhbGlkIGZpcmViYXNlIG5hbWVzcGFjZS4nKTtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiB2YWxpZGF0ZUNhbGxiYWNrKGZuTmFtZSwgYXJndW1lbnROYW1lLCBcclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcclxuY2FsbGJhY2ssIG9wdGlvbmFsKSB7XHJcbiAgICBpZiAob3B0aW9uYWwgJiYgIWNhbGxiYWNrKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvclByZWZpeChmbk5hbWUsIGFyZ3VtZW50TmFtZSkgKyAnbXVzdCBiZSBhIHZhbGlkIGZ1bmN0aW9uLicpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIHZhbGlkYXRlQ29udGV4dE9iamVjdChmbk5hbWUsIGFyZ3VtZW50TmFtZSwgY29udGV4dCwgb3B0aW9uYWwpIHtcclxuICAgIGlmIChvcHRpb25hbCAmJiAhY29udGV4dCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgY29udGV4dCAhPT0gJ29iamVjdCcgfHwgY29udGV4dCA9PT0gbnVsbCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvclByZWZpeChmbk5hbWUsIGFyZ3VtZW50TmFtZSkgKyAnbXVzdCBiZSBhIHZhbGlkIGNvbnRleHQgb2JqZWN0LicpO1xyXG4gICAgfVxyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8vIENvZGUgb3JpZ2luYWxseSBjYW1lIGZyb20gZ29vZy5jcnlwdC5zdHJpbmdUb1V0ZjhCeXRlQXJyYXksIGJ1dCBmb3Igc29tZSByZWFzb24gdGhleVxyXG4vLyBhdXRvbWF0aWNhbGx5IHJlcGxhY2VkICdcXHJcXG4nIHdpdGggJ1xcbicsIGFuZCB0aGV5IGRpZG4ndCBoYW5kbGUgc3Vycm9nYXRlIHBhaXJzLFxyXG4vLyBzbyBpdCdzIGJlZW4gbW9kaWZpZWQuXHJcbi8vIE5vdGUgdGhhdCBub3QgYWxsIFVuaWNvZGUgY2hhcmFjdGVycyBhcHBlYXIgYXMgc2luZ2xlIGNoYXJhY3RlcnMgaW4gSmF2YVNjcmlwdCBzdHJpbmdzLlxyXG4vLyBmcm9tQ2hhckNvZGUgcmV0dXJucyB0aGUgVVRGLTE2IGVuY29kaW5nIG9mIGEgY2hhcmFjdGVyIC0gc28gc29tZSBVbmljb2RlIGNoYXJhY3RlcnNcclxuLy8gdXNlIDIgY2hhcmFjdGVycyBpbiBKYXZhc2NyaXB0LiAgQWxsIDQtYnl0ZSBVVEYtOCBjaGFyYWN0ZXJzIGJlZ2luIHdpdGggYSBmaXJzdFxyXG4vLyBjaGFyYWN0ZXIgaW4gdGhlIHJhbmdlIDB4RDgwMCAtIDB4REJGRiAodGhlIGZpcnN0IGNoYXJhY3RlciBvZiBhIHNvLWNhbGxlZCBzdXJyb2dhdGVcclxuLy8gcGFpcikuXHJcbi8vIFNlZSBodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNS4xLyNzZWMtMTUuMS4zXHJcbi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKi9cclxuY29uc3Qgc3RyaW5nVG9CeXRlQXJyYXkgPSBmdW5jdGlvbiAoc3RyKSB7XHJcbiAgICBjb25zdCBvdXQgPSBbXTtcclxuICAgIGxldCBwID0gMDtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IGMgPSBzdHIuY2hhckNvZGVBdChpKTtcclxuICAgICAgICAvLyBJcyB0aGlzIHRoZSBsZWFkIHN1cnJvZ2F0ZSBpbiBhIHN1cnJvZ2F0ZSBwYWlyP1xyXG4gICAgICAgIGlmIChjID49IDB4ZDgwMCAmJiBjIDw9IDB4ZGJmZikge1xyXG4gICAgICAgICAgICBjb25zdCBoaWdoID0gYyAtIDB4ZDgwMDsgLy8gdGhlIGhpZ2ggMTAgYml0cy5cclxuICAgICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgICBhc3NlcnQoaSA8IHN0ci5sZW5ndGgsICdTdXJyb2dhdGUgcGFpciBtaXNzaW5nIHRyYWlsIHN1cnJvZ2F0ZS4nKTtcclxuICAgICAgICAgICAgY29uc3QgbG93ID0gc3RyLmNoYXJDb2RlQXQoaSkgLSAweGRjMDA7IC8vIHRoZSBsb3cgMTAgYml0cy5cclxuICAgICAgICAgICAgYyA9IDB4MTAwMDAgKyAoaGlnaCA8PCAxMCkgKyBsb3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjIDwgMTI4KSB7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gYztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYyA8IDIwNDgpIHtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSAoYyA+PiA2KSB8IDE5MjtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSAoYyAmIDYzKSB8IDEyODtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYyA8IDY1NTM2KSB7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgPj4gMTIpIHwgMjI0O1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9ICgoYyA+PiA2KSAmIDYzKSB8IDEyODtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSAoYyAmIDYzKSB8IDEyODtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgPj4gMTgpIHwgMjQwO1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9ICgoYyA+PiAxMikgJiA2MykgfCAxMjg7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKChjID4+IDYpICYgNjMpIHwgMTI4O1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBvdXQ7XHJcbn07XHJcbi8qKlxyXG4gKiBDYWxjdWxhdGUgbGVuZ3RoIHdpdGhvdXQgYWN0dWFsbHkgY29udmVydGluZzsgdXNlZnVsIGZvciBkb2luZyBjaGVhcGVyIHZhbGlkYXRpb24uXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcclxuICogQHJldHVybiB7bnVtYmVyfVxyXG4gKi9cclxuY29uc3Qgc3RyaW5nTGVuZ3RoID0gZnVuY3Rpb24gKHN0cikge1xyXG4gICAgbGV0IHAgPSAwO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XHJcbiAgICAgICAgaWYgKGMgPCAxMjgpIHtcclxuICAgICAgICAgICAgcCsrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChjIDwgMjA0OCkge1xyXG4gICAgICAgICAgICBwICs9IDI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGMgPj0gMHhkODAwICYmIGMgPD0gMHhkYmZmKSB7XHJcbiAgICAgICAgICAgIC8vIExlYWQgc3Vycm9nYXRlIG9mIGEgc3Vycm9nYXRlIHBhaXIuICBUaGUgcGFpciB0b2dldGhlciB3aWxsIHRha2UgNCBieXRlcyB0byByZXByZXNlbnQuXHJcbiAgICAgICAgICAgIHAgKz0gNDtcclxuICAgICAgICAgICAgaSsrOyAvLyBza2lwIHRyYWlsIHN1cnJvZ2F0ZS5cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHAgKz0gMztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcDtcclxufTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIENvcGllZCBmcm9tIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yMTE3NTIzXHJcbiAqIEdlbmVyYXRlcyBhIG5ldyB1dWlkLlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5jb25zdCB1dWlkdjQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCBjID0+IHtcclxuICAgICAgICBjb25zdCByID0gKE1hdGgucmFuZG9tKCkgKiAxNikgfCAwLCB2ID0gYyA9PT0gJ3gnID8gciA6IChyICYgMHgzKSB8IDB4ODtcclxuICAgICAgICByZXR1cm4gdi50b1N0cmluZygxNik7XHJcbiAgICB9KTtcclxufTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFRoZSBhbW91bnQgb2YgbWlsbGlzZWNvbmRzIHRvIGV4cG9uZW50aWFsbHkgaW5jcmVhc2UuXHJcbiAqL1xyXG5jb25zdCBERUZBVUxUX0lOVEVSVkFMX01JTExJUyA9IDEwMDA7XHJcbi8qKlxyXG4gKiBUaGUgZmFjdG9yIHRvIGJhY2tvZmYgYnkuXHJcbiAqIFNob3VsZCBiZSBhIG51bWJlciBncmVhdGVyIHRoYW4gMS5cclxuICovXHJcbmNvbnN0IERFRkFVTFRfQkFDS09GRl9GQUNUT1IgPSAyO1xyXG4vKipcclxuICogVGhlIG1heGltdW0gbWlsbGlzZWNvbmRzIHRvIGluY3JlYXNlIHRvLlxyXG4gKlxyXG4gKiA8cD5WaXNpYmxlIGZvciB0ZXN0aW5nXHJcbiAqL1xyXG5jb25zdCBNQVhfVkFMVUVfTUlMTElTID0gNCAqIDYwICogNjAgKiAxMDAwOyAvLyBGb3VyIGhvdXJzLCBsaWtlIGlPUyBhbmQgQW5kcm9pZC5cclxuLyoqXHJcbiAqIFRoZSBwZXJjZW50YWdlIG9mIGJhY2tvZmYgdGltZSB0byByYW5kb21pemUgYnkuXHJcbiAqIFNlZVxyXG4gKiBodHRwOi8vZ28vc2FmZS1jbGllbnQtYmVoYXZpb3Ijc3RlcC0xLWRldGVybWluZS10aGUtYXBwcm9wcmlhdGUtcmV0cnktaW50ZXJ2YWwtdG8taGFuZGxlLXNwaWtlLXRyYWZmaWNcclxuICogZm9yIGNvbnRleHQuXHJcbiAqXHJcbiAqIDxwPlZpc2libGUgZm9yIHRlc3RpbmdcclxuICovXHJcbmNvbnN0IFJBTkRPTV9GQUNUT1IgPSAwLjU7XHJcbi8qKlxyXG4gKiBCYXNlZCBvbiB0aGUgYmFja29mZiBtZXRob2QgZnJvbVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL2Nsb3N1cmUtbGlicmFyeS9ibG9iL21hc3Rlci9jbG9zdXJlL2dvb2cvbWF0aC9leHBvbmVudGlhbGJhY2tvZmYuanMuXHJcbiAqIEV4dHJhY3RlZCBoZXJlIHNvIHdlIGRvbid0IG5lZWQgdG8gcGFzcyBtZXRhZGF0YSBhbmQgYSBzdGF0ZWZ1bCBFeHBvbmVudGlhbEJhY2tvZmYgb2JqZWN0IGFyb3VuZC5cclxuICovXHJcbmZ1bmN0aW9uIGNhbGN1bGF0ZUJhY2tvZmZNaWxsaXMoYmFja29mZkNvdW50LCBpbnRlcnZhbE1pbGxpcyA9IERFRkFVTFRfSU5URVJWQUxfTUlMTElTLCBiYWNrb2ZmRmFjdG9yID0gREVGQVVMVF9CQUNLT0ZGX0ZBQ1RPUikge1xyXG4gICAgLy8gQ2FsY3VsYXRlcyBhbiBleHBvbmVudGlhbGx5IGluY3JlYXNpbmcgdmFsdWUuXHJcbiAgICAvLyBEZXZpYXRpb246IGNhbGN1bGF0ZXMgdmFsdWUgZnJvbSBjb3VudCBhbmQgYSBjb25zdGFudCBpbnRlcnZhbCwgc28gd2Ugb25seSBuZWVkIHRvIHNhdmUgdmFsdWVcclxuICAgIC8vIGFuZCBjb3VudCB0byByZXN0b3JlIHN0YXRlLlxyXG4gICAgY29uc3QgY3VyckJhc2VWYWx1ZSA9IGludGVydmFsTWlsbGlzICogTWF0aC5wb3coYmFja29mZkZhY3RvciwgYmFja29mZkNvdW50KTtcclxuICAgIC8vIEEgcmFuZG9tIFwiZnV6elwiIHRvIGF2b2lkIHdhdmVzIG9mIHJldHJpZXMuXHJcbiAgICAvLyBEZXZpYXRpb246IHJhbmRvbUZhY3RvciBpcyByZXF1aXJlZC5cclxuICAgIGNvbnN0IHJhbmRvbVdhaXQgPSBNYXRoLnJvdW5kKFxyXG4gICAgLy8gQSBmcmFjdGlvbiBvZiB0aGUgYmFja29mZiB2YWx1ZSB0byBhZGQvc3VidHJhY3QuXHJcbiAgICAvLyBEZXZpYXRpb246IGNoYW5nZXMgbXVsdGlwbGljYXRpb24gb3JkZXIgdG8gaW1wcm92ZSByZWFkYWJpbGl0eS5cclxuICAgIFJBTkRPTV9GQUNUT1IgKlxyXG4gICAgICAgIGN1cnJCYXNlVmFsdWUgKlxyXG4gICAgICAgIC8vIEEgcmFuZG9tIGZsb2F0IChyb3VuZGVkIHRvIGludCBieSBNYXRoLnJvdW5kIGFib3ZlKSBpbiB0aGUgcmFuZ2UgWy0xLCAxXS4gRGV0ZXJtaW5lc1xyXG4gICAgICAgIC8vIGlmIHdlIGFkZCBvciBzdWJ0cmFjdC5cclxuICAgICAgICAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKlxyXG4gICAgICAgIDIpO1xyXG4gICAgLy8gTGltaXRzIGJhY2tvZmYgdG8gbWF4IHRvIGF2b2lkIGVmZmVjdGl2ZWx5IHBlcm1hbmVudCBiYWNrb2ZmLlxyXG4gICAgcmV0dXJuIE1hdGgubWluKE1BWF9WQUxVRV9NSUxMSVMsIGN1cnJCYXNlVmFsdWUgKyByYW5kb21XYWl0KTtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUHJvdmlkZSBFbmdsaXNoIG9yZGluYWwgbGV0dGVycyBhZnRlciBhIG51bWJlclxyXG4gKi9cclxuZnVuY3Rpb24gb3JkaW5hbChpKSB7XHJcbiAgICBpZiAoIU51bWJlci5pc0Zpbml0ZShpKSkge1xyXG4gICAgICAgIHJldHVybiBgJHtpfWA7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaSArIGluZGljYXRvcihpKTtcclxufVxyXG5mdW5jdGlvbiBpbmRpY2F0b3IoaSkge1xyXG4gICAgaSA9IE1hdGguYWJzKGkpO1xyXG4gICAgY29uc3QgY2VudCA9IGkgJSAxMDA7XHJcbiAgICBpZiAoY2VudCA+PSAxMCAmJiBjZW50IDw9IDIwKSB7XHJcbiAgICAgICAgcmV0dXJuICd0aCc7XHJcbiAgICB9XHJcbiAgICBjb25zdCBkZWMgPSBpICUgMTA7XHJcbiAgICBpZiAoZGVjID09PSAxKSB7XHJcbiAgICAgICAgcmV0dXJuICdzdCc7XHJcbiAgICB9XHJcbiAgICBpZiAoZGVjID09PSAyKSB7XHJcbiAgICAgICAgcmV0dXJuICduZCc7XHJcbiAgICB9XHJcbiAgICBpZiAoZGVjID09PSAzKSB7XHJcbiAgICAgICAgcmV0dXJuICdyZCc7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gJ3RoJztcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRNb2R1bGFySW5zdGFuY2Uoc2VydmljZSkge1xyXG4gICAgaWYgKHNlcnZpY2UgJiYgc2VydmljZS5fZGVsZWdhdGUpIHtcclxuICAgICAgICByZXR1cm4gc2VydmljZS5fZGVsZWdhdGU7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZXR1cm4gc2VydmljZTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBDT05TVEFOVFMsIERlY29kZUJhc2U2NFN0cmluZ0Vycm9yLCBEZWZlcnJlZCwgRXJyb3JGYWN0b3J5LCBGaXJlYmFzZUVycm9yLCBNQVhfVkFMVUVfTUlMTElTLCBSQU5ET01fRkFDVE9SLCBTaGExLCBhcmVDb29raWVzRW5hYmxlZCwgYXNzZXJ0LCBhc3NlcnRpb25FcnJvciwgYXN5bmMsIGJhc2U2NCwgYmFzZTY0RGVjb2RlLCBiYXNlNjRFbmNvZGUsIGJhc2U2NHVybEVuY29kZVdpdGhvdXRQYWRkaW5nLCBjYWxjdWxhdGVCYWNrb2ZmTWlsbGlzLCBjb250YWlucywgY3JlYXRlTW9ja1VzZXJUb2tlbiwgY3JlYXRlU3Vic2NyaWJlLCBkZWNvZGUsIGRlZXBDb3B5LCBkZWVwRXF1YWwsIGRlZXBFeHRlbmQsIGVycm9yUHJlZml4LCBleHRyYWN0UXVlcnlzdHJpbmcsIGdldERlZmF1bHRBcHBDb25maWcsIGdldERlZmF1bHRFbXVsYXRvckhvc3QsIGdldERlZmF1bHRFbXVsYXRvckhvc3RuYW1lQW5kUG9ydCwgZ2V0RGVmYXVsdHMsIGdldEV4cGVyaW1lbnRhbFNldHRpbmcsIGdldEdsb2JhbCwgZ2V0TW9kdWxhckluc3RhbmNlLCBnZXRVQSwgaXNBZG1pbiwgaXNCcm93c2VyLCBpc0Jyb3dzZXJFeHRlbnNpb24sIGlzRWxlY3Ryb24sIGlzRW1wdHksIGlzSUUsIGlzSW5kZXhlZERCQXZhaWxhYmxlLCBpc01vYmlsZUNvcmRvdmEsIGlzTm9kZSwgaXNOb2RlU2RrLCBpc1JlYWN0TmF0aXZlLCBpc1NhZmFyaSwgaXNVV1AsIGlzVmFsaWRGb3JtYXQsIGlzVmFsaWRUaW1lc3RhbXAsIGlzc3VlZEF0VGltZSwganNvbkV2YWwsIG1hcCwgb3JkaW5hbCwgcHJvbWlzZVdpdGhUaW1lb3V0LCBxdWVyeXN0cmluZywgcXVlcnlzdHJpbmdEZWNvZGUsIHNhZmVHZXQsIHN0cmluZ0xlbmd0aCwgc3RyaW5nVG9CeXRlQXJyYXksIHN0cmluZ2lmeSwgdXVpZHY0LCB2YWxpZGF0ZUFyZ0NvdW50LCB2YWxpZGF0ZUNhbGxiYWNrLCB2YWxpZGF0ZUNvbnRleHRPYmplY3QsIHZhbGlkYXRlSW5kZXhlZERCT3BlbmFibGUsIHZhbGlkYXRlTmFtZXNwYWNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lc20yMDE3LmpzLm1hcFxuIiwiaW1wb3J0IHsgaW5pdGlhbGl6ZUFwcCB9IGZyb20gXCJmaXJlYmFzZS9hcHBcIjtcclxuaW1wb3J0IHsgZ2V0QW5hbHl0aWNzLCBsb2dFdmVudCB9IGZyb20gXCJmaXJlYmFzZS9hbmFseXRpY3NcIjtcclxuaW1wb3J0IHsgZmlyZWJhc2VDb25maWcgfSBmcm9tIFwiLi9maXJlYmFzZS1jb25maWdcIjtcclxuZXhwb3J0IGNsYXNzIEJhc2VGaXJlYmFzZUludGVncmF0aW9uIHtcclxuICAgIGZpcmViYXNlQXBwO1xyXG4gICAgYW5hbHl0aWNzO1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5pbml0aWFsaXplRmlyZWJhc2UoKTtcclxuICAgIH1cclxuICAgIGN1c3RvbUV2ZW50cyhldmVudE5hbWUsIGV2ZW50KSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgbG9nRXZlbnQodGhpcy5hbmFseXRpY3MsIGV2ZW50TmFtZSwgZXZlbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8gY29uc29sZS5lcnJvciguLi5vb190eChgMTk2Njc1NDQzOF8xNV8xMl8xNV82OV8xMWAsIFwiRXJyb3Igd2hpbGUgbG9nZ2luZyBjdXN0b20gZXZlbnQ6XCIsIGVycm9yKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc2Vzc2lvbkVuZCgpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBpZiAobmF2aWdhdG9yLm9uTGluZSAmJiB0aGlzLmFuYWx5dGljcyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICBsb2dFdmVudCh0aGlzLmFuYWx5dGljcywgXCJzZXNzaW9uX2VuZFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8gY29uc29sZS5lcnJvciguLi5vb190eChgMTk2Njc1NDQzOF8yNF8xMl8yNF83NF8xMWAsIFwiRXJyb3Igd2hpbGUgbG9nZ2luZyBzZXNzaW9uX2VuZCBldmVudDpcIiwgZXJyb3IpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpbml0aWFsaXplRmlyZWJhc2UoKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdGhpcy5maXJlYmFzZUFwcCA9IGluaXRpYWxpemVBcHAoZmlyZWJhc2VDb25maWcpO1xyXG4gICAgICAgICAgICB0aGlzLmFuYWx5dGljcyA9IGdldEFuYWx5dGljcyh0aGlzLmZpcmViYXNlQXBwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlICovIGNvbnNvbGUuZXJyb3IoLi4ub29fdHgoYDE5NjY3NTQ0MzhfMzJfMTJfMzJfNzBfMTFgLCBcIkVycm9yIHdoaWxlIGluaXRpYWxpemluZyBGaXJlYmFzZTpcIiwgZXJyb3IpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gLyogYzggaWdub3JlIHN0YXJ0ICovIC8qIGVzbGludC1kaXNhYmxlICovIDtcclxuZnVuY3Rpb24gb29fY20oKSB7IHRyeSB7XHJcbiAgICByZXR1cm4gKDAsIGV2YWwpKFwiZ2xvYmFsVGhpcy5fY29uc29sZV9uaW5qYVwiKSB8fCAoMCwgZXZhbCkoXCIvKiBodHRwczovL2dpdGh1Yi5jb20vd2FsbGFieWpzL2NvbnNvbGUtbmluamEjaG93LWRvZXMtaXQtd29yayAqLyd1c2Ugc3RyaWN0Jzt2YXIgXzB4ZmU1ZTQ0PV8weDI4MDA7KGZ1bmN0aW9uKF8weDIxNTQ5NSxfMHg1NGRiM2Ype3ZhciBfMHgxNWEwYzE9XzB4MjgwMCxfMHg1NmQ4NWY9XzB4MjE1NDk1KCk7d2hpbGUoISFbXSl7dHJ5e3ZhciBfMHg4NTg5ZjU9cGFyc2VJbnQoXzB4MTVhMGMxKDB4MWYzKSkvMHgxKihwYXJzZUludChfMHgxNWEwYzEoMHgxYmYpKS8weDIpK3BhcnNlSW50KF8weDE1YTBjMSgweDFlYykpLzB4MystcGFyc2VJbnQoXzB4MTVhMGMxKDB4MjhiKSkvMHg0K3BhcnNlSW50KF8weDE1YTBjMSgweDIyYikpLzB4NSooLXBhcnNlSW50KF8weDE1YTBjMSgweDFhNCkpLzB4NikrLXBhcnNlSW50KF8weDE1YTBjMSgweDFhZCkpLzB4NytwYXJzZUludChfMHgxNWEwYzEoMHgxZTgpKS8weDgqKHBhcnNlSW50KF8weDE1YTBjMSgweDI5NCkpLzB4OSkrLXBhcnNlSW50KF8weDE1YTBjMSgweDIwZCkpLzB4YTtpZihfMHg4NTg5ZjU9PT1fMHg1NGRiM2YpYnJlYWs7ZWxzZSBfMHg1NmQ4NWZbJ3B1c2gnXShfMHg1NmQ4NWZbJ3NoaWZ0J10oKSk7fWNhdGNoKF8weDEyOGY0MCl7XzB4NTZkODVmWydwdXNoJ10oXzB4NTZkODVmWydzaGlmdCddKCkpO319fShfMHg0ODQyLDB4ZTNlYjgpKTt2YXIgSz1PYmplY3RbJ2NyZWF0ZSddLFE9T2JqZWN0W18weGZlNWU0NCgweDFiZCldLEc9T2JqZWN0WydnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InXSxlZT1PYmplY3RbJ2dldE93blByb3BlcnR5TmFtZXMnXSx0ZT1PYmplY3RbXzB4ZmU1ZTQ0KDB4MjQ4KV0sbmU9T2JqZWN0Wydwcm90b3R5cGUnXVtfMHhmZTVlNDQoMHgyNGEpXSxyZT0oXzB4NWI3NWM2LF8weDM0ODNiNixfMHg1OTJiZmIsXzB4MzViZDhiKT0+e3ZhciBfMHgzNGM4ZjY9XzB4ZmU1ZTQ0O2lmKF8weDM0ODNiNiYmdHlwZW9mIF8weDM0ODNiNj09XzB4MzRjOGY2KDB4MjU5KXx8dHlwZW9mIF8weDM0ODNiNj09XzB4MzRjOGY2KDB4MjU0KSl7Zm9yKGxldCBfMHgxNWNmYmMgb2YgZWUoXzB4MzQ4M2I2KSkhbmVbJ2NhbGwnXShfMHg1Yjc1YzYsXzB4MTVjZmJjKSYmXzB4MTVjZmJjIT09XzB4NTkyYmZiJiZRKF8weDViNzVjNixfMHgxNWNmYmMseydnZXQnOigpPT5fMHgzNDgzYjZbXzB4MTVjZmJjXSwnZW51bWVyYWJsZSc6IShfMHgzNWJkOGI9RyhfMHgzNDgzYjYsXzB4MTVjZmJjKSl8fF8weDM1YmQ4YlsnZW51bWVyYWJsZSddfSk7fXJldHVybiBfMHg1Yjc1YzY7fSxWPShfMHg4M2E0OTEsXzB4MWM3ZmFiLF8weDMzMzkyMik9PihfMHgzMzM5MjI9XzB4ODNhNDkxIT1udWxsP0sodGUoXzB4ODNhNDkxKSk6e30scmUoXzB4MWM3ZmFifHwhXzB4ODNhNDkxfHwhXzB4ODNhNDkxW18weGZlNWU0NCgweDI1MCldP1EoXzB4MzMzOTIyLF8weGZlNWU0NCgweDI1ZSkseyd2YWx1ZSc6XzB4ODNhNDkxLCdlbnVtZXJhYmxlJzohMHgwfSk6XzB4MzMzOTIyLF8weDgzYTQ5MSkpLFo9Y2xhc3N7Y29uc3RydWN0b3IoXzB4M2I4MjAxLF8weDJlZGQyYixfMHgxNGMyNTEsXzB4MjFhMzc0LF8weDJkNzQwOSxfMHg0ODVkMjYpe3ZhciBfMHgzMjczZWI9XzB4ZmU1ZTQ0LF8weDIyMDcwZixfMHgxY2RkM2IsXzB4NTVmOWRlLF8weGNlNDY4Zjt0aGlzW18weDMyNzNlYigweDI5MSldPV8weDNiODIwMSx0aGlzW18weDMyNzNlYigweDI3MCldPV8weDJlZGQyYix0aGlzW18weDMyNzNlYigweDI2MildPV8weDE0YzI1MSx0aGlzW18weDMyNzNlYigweDFiYyldPV8weDIxYTM3NCx0aGlzW18weDMyNzNlYigweDI2NCldPV8weDJkNzQwOSx0aGlzW18weDMyNzNlYigweDI3YyldPV8weDQ4NWQyNix0aGlzWydfYWxsb3dlZFRvU2VuZCddPSEweDAsdGhpc1tfMHgzMjczZWIoMHgxYWIpXT0hMHgwLHRoaXNbXzB4MzI3M2ViKDB4MjAzKV09ITB4MSx0aGlzW18weDMyNzNlYigweDFjNSldPSEweDEsdGhpc1tfMHgzMjczZWIoMHgyMjEpXT0oKF8weDFjZGQzYj0oXzB4MjIwNzBmPV8weDNiODIwMVtfMHgzMjczZWIoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4MjIwNzBmW18weDMyNzNlYigweDFjYyldKT09bnVsbD92b2lkIDB4MDpfMHgxY2RkM2JbXzB4MzI3M2ViKDB4MWMzKV0pPT09XzB4MzI3M2ViKDB4MWZkKSx0aGlzWydfaW5Ccm93c2VyJ109ISgoXzB4Y2U0NjhmPShfMHg1NWY5ZGU9dGhpc1tfMHgzMjczZWIoMHgyOTEpXVtfMHgzMjczZWIoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4NTVmOWRlW18weDMyNzNlYigweDI2ZildKSE9bnVsbCYmXzB4Y2U0NjhmW18weDMyNzNlYigweDI4YyldKSYmIXRoaXNbJ19pbk5leHRFZGdlJ10sdGhpc1snX1dlYlNvY2tldENsYXNzJ109bnVsbCx0aGlzW18weDMyNzNlYigweDFhOCldPTB4MCx0aGlzW18weDMyNzNlYigweDI4ZildPTB4MTQsdGhpc1snX3dlYlNvY2tldEVycm9yRG9jc0xpbmsnXT1fMHgzMjczZWIoMHgyMTEpLHRoaXNbXzB4MzI3M2ViKDB4MWFlKV09KHRoaXNbXzB4MzI3M2ViKDB4MjNlKV0/XzB4MzI3M2ViKDB4MjQ3KTpfMHgzMjczZWIoMHgyOGEpKSt0aGlzW18weDMyNzNlYigweDIwMSldO31hc3luY1tfMHhmZTVlNDQoMHgyNzIpXSgpe3ZhciBfMHgyZWM0NTc9XzB4ZmU1ZTQ0LF8weDE2YjFmNixfMHg0NmFlNTY7aWYodGhpc1tfMHgyZWM0NTcoMHgxZDUpXSlyZXR1cm4gdGhpc1tfMHgyZWM0NTcoMHgxZDUpXTtsZXQgXzB4NDIwY2Q3O2lmKHRoaXNbJ19pbkJyb3dzZXInXXx8dGhpc1tfMHgyZWM0NTcoMHgyMjEpXSlfMHg0MjBjZDc9dGhpc1tfMHgyZWM0NTcoMHgyOTEpXVsnV2ViU29ja2V0J107ZWxzZXtpZigoXzB4MTZiMWY2PXRoaXNbXzB4MmVjNDU3KDB4MjkxKV1bXzB4MmVjNDU3KDB4MjA2KV0pIT1udWxsJiZfMHgxNmIxZjZbJ19XZWJTb2NrZXQnXSlfMHg0MjBjZDc9KF8weDQ2YWU1Nj10aGlzW18weDJlYzQ1NygweDI5MSldW18weDJlYzQ1NygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHg0NmFlNTZbJ19XZWJTb2NrZXQnXTtlbHNlIHRyeXtsZXQgXzB4NDkyNTExPWF3YWl0IGltcG9ydChfMHgyZWM0NTcoMHgyNTEpKTtfMHg0MjBjZDc9KGF3YWl0IGltcG9ydCgoYXdhaXQgaW1wb3J0KF8weDJlYzQ1NygweDI0NSkpKVtfMHgyZWM0NTcoMHgxYjMpXShfMHg0OTI1MTFbJ2pvaW4nXSh0aGlzWydub2RlTW9kdWxlcyddLCd3cy9pbmRleC5qcycpKVtfMHgyZWM0NTcoMHgyMzIpXSgpKSlbXzB4MmVjNDU3KDB4MjVlKV07fWNhdGNoe3RyeXtfMHg0MjBjZDc9cmVxdWlyZShyZXF1aXJlKF8weDJlYzQ1NygweDI1MSkpW18weDJlYzQ1NygweDIzYyldKHRoaXNbXzB4MmVjNDU3KDB4MWJjKV0sJ3dzJykpO31jYXRjaHt0aHJvdyBuZXcgRXJyb3IoXzB4MmVjNDU3KDB4MjdmKSk7fX19cmV0dXJuIHRoaXNbXzB4MmVjNDU3KDB4MWQ1KV09XzB4NDIwY2Q3LF8weDQyMGNkNzt9WydfY29ubmVjdFRvSG9zdE5vdyddKCl7dmFyIF8weDMxMWFlNT1fMHhmZTVlNDQ7dGhpc1snX2Nvbm5lY3RpbmcnXXx8dGhpc1snX2Nvbm5lY3RlZCddfHx0aGlzWydfY29ubmVjdEF0dGVtcHRDb3VudCddPj10aGlzWydfbWF4Q29ubmVjdEF0dGVtcHRDb3VudCddfHwodGhpc1snX2FsbG93ZWRUb0Nvbm5lY3RPblNlbmQnXT0hMHgxLHRoaXNbXzB4MzExYWU1KDB4MWM1KV09ITB4MCx0aGlzW18weDMxMWFlNSgweDFhOCldKyssdGhpc1tfMHgzMTFhZTUoMHgxZTcpXT1uZXcgUHJvbWlzZSgoXzB4M2Y0ZTVjLF8weDFiMWQ0Mik9Pnt2YXIgXzB4MWY2MTMwPV8weDMxMWFlNTt0aGlzWydnZXRXZWJTb2NrZXRDbGFzcyddKClbXzB4MWY2MTMwKDB4MWNmKV0oXzB4MWE4ZmMyPT57dmFyIF8weDI2NjU3Yj1fMHgxZjYxMzA7bGV0IF8weDNmNzJhMD1uZXcgXzB4MWE4ZmMyKF8weDI2NjU3YigweDFjOSkrKCF0aGlzWydfaW5Ccm93c2VyJ10mJnRoaXNbXzB4MjY2NTdiKDB4MjY0KV0/XzB4MjY2NTdiKDB4MjgxKTp0aGlzW18weDI2NjU3YigweDI3MCldKSsnOicrdGhpc1tfMHgyNjY1N2IoMHgyNjIpXSk7XzB4M2Y3MmEwW18weDI2NjU3YigweDI3NCldPSgpPT57dmFyIF8weDVlNGRjZD1fMHgyNjY1N2I7dGhpc1tfMHg1ZTRkY2QoMHgxZTIpXT0hMHgxLHRoaXNbXzB4NWU0ZGNkKDB4MjFkKV0oXzB4M2Y3MmEwKSx0aGlzW18weDVlNGRjZCgweDI0YildKCksXzB4MWIxZDQyKG5ldyBFcnJvcihfMHg1ZTRkY2QoMHgyMGMpKSk7fSxfMHgzZjcyYTBbXzB4MjY2NTdiKDB4MjgwKV09KCk9Pnt2YXIgXzB4NWRhMTUyPV8weDI2NjU3Yjt0aGlzW18weDVkYTE1MigweDIzZSldfHxfMHgzZjcyYTBbXzB4NWRhMTUyKDB4MWRkKV0mJl8weDNmNzJhMFtfMHg1ZGExNTIoMHgxZGQpXVtfMHg1ZGExNTIoMHgxYjcpXSYmXzB4M2Y3MmEwW18weDVkYTE1MigweDFkZCldW18weDVkYTE1MigweDFiNyldKCksXzB4M2Y0ZTVjKF8weDNmNzJhMCk7fSxfMHgzZjcyYTBbXzB4MjY2NTdiKDB4MWVhKV09KCk9Pnt2YXIgXzB4MzgyYzkyPV8weDI2NjU3Yjt0aGlzW18weDM4MmM5MigweDFhYildPSEweDAsdGhpc1tfMHgzODJjOTIoMHgyMWQpXShfMHgzZjcyYTApLHRoaXNbXzB4MzgyYzkyKDB4MjRiKV0oKTt9LF8weDNmNzJhMFtfMHgyNjY1N2IoMHgxZGYpXT1fMHgxMWZjYWI9Pnt2YXIgXzB4NWZkMDRkPV8weDI2NjU3Yjt0cnl7aWYoIShfMHgxMWZjYWIhPW51bGwmJl8weDExZmNhYltfMHg1ZmQwNGQoMHgxYjkpXSl8fCF0aGlzWydldmVudFJlY2VpdmVkQ2FsbGJhY2snXSlyZXR1cm47bGV0IF8weDRmZjY1NT1KU09OW18weDVmZDA0ZCgweDIzNCldKF8weDExZmNhYltfMHg1ZmQwNGQoMHgxYjkpXSk7dGhpc1tfMHg1ZmQwNGQoMHgyN2MpXShfMHg0ZmY2NTVbXzB4NWZkMDRkKDB4MWI0KV0sXzB4NGZmNjU1WydhcmdzJ10sdGhpc1snZ2xvYmFsJ10sdGhpc1tfMHg1ZmQwNGQoMHgyM2UpXSk7fWNhdGNoe319O30pW18weDFmNjEzMCgweDFjZildKF8weDNlYzE4Zj0+KHRoaXNbXzB4MWY2MTMwKDB4MjAzKV09ITB4MCx0aGlzW18weDFmNjEzMCgweDFjNSldPSEweDEsdGhpc1tfMHgxZjYxMzAoMHgxYWIpXT0hMHgxLHRoaXNbJ19hbGxvd2VkVG9TZW5kJ109ITB4MCx0aGlzW18weDFmNjEzMCgweDFhOCldPTB4MCxfMHgzZWMxOGYpKVtfMHgxZjYxMzAoMHgyNjApXShfMHg0ZDA4NDI9Pih0aGlzW18weDFmNjEzMCgweDIwMyldPSEweDEsdGhpc1tfMHgxZjYxMzAoMHgxYzUpXT0hMHgxLGNvbnNvbGVbXzB4MWY2MTMwKDB4MWYyKV0oXzB4MWY2MTMwKDB4MWNhKSt0aGlzW18weDFmNjEzMCgweDIwMSldKSxfMHgxYjFkNDIobmV3IEVycm9yKF8weDFmNjEzMCgweDI2NikrKF8weDRkMDg0MiYmXzB4NGQwODQyWydtZXNzYWdlJ10pKSkpKTt9KSk7fVtfMHhmZTVlNDQoMHgyMWQpXShfMHgyMDA1MDYpe3ZhciBfMHgzODI4ZDM9XzB4ZmU1ZTQ0O3RoaXNbXzB4MzgyOGQzKDB4MjAzKV09ITB4MSx0aGlzW18weDM4MjhkMygweDFjNSldPSEweDE7dHJ5e18weDIwMDUwNltfMHgzODI4ZDMoMHgxZWEpXT1udWxsLF8weDIwMDUwNltfMHgzODI4ZDMoMHgyNzQpXT1udWxsLF8weDIwMDUwNltfMHgzODI4ZDMoMHgyODApXT1udWxsO31jYXRjaHt9dHJ5e18weDIwMDUwNltfMHgzODI4ZDMoMHgxZTUpXTwweDImJl8weDIwMDUwNlsnY2xvc2UnXSgpO31jYXRjaHt9fVsnX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpe3ZhciBfMHgyYzllNTA9XzB4ZmU1ZTQ0O2NsZWFyVGltZW91dCh0aGlzW18weDJjOWU1MCgweDI0MCldKSwhKHRoaXNbXzB4MmM5ZTUwKDB4MWE4KV0+PXRoaXNbXzB4MmM5ZTUwKDB4MjhmKV0pJiYodGhpc1tfMHgyYzllNTAoMHgyNDApXT1zZXRUaW1lb3V0KCgpPT57dmFyIF8weDI2ZWI3MT1fMHgyYzllNTAsXzB4NTI5NjhkO3RoaXNbXzB4MjZlYjcxKDB4MjAzKV18fHRoaXNbXzB4MjZlYjcxKDB4MWM1KV18fCh0aGlzW18weDI2ZWI3MSgweDI4NCldKCksKF8weDUyOTY4ZD10aGlzW18weDI2ZWI3MSgweDFlNyldKT09bnVsbHx8XzB4NTI5NjhkW18weDI2ZWI3MSgweDI2MCldKCgpPT50aGlzW18weDI2ZWI3MSgweDI0YildKCkpKTt9LDB4MWY0KSx0aGlzW18weDJjOWU1MCgweDI0MCldW18weDJjOWU1MCgweDFiNyldJiZ0aGlzW18weDJjOWU1MCgweDI0MCldWyd1bnJlZiddKCkpO31hc3luY1tfMHhmZTVlNDQoMHgyNmUpXShfMHgyNTQ1NTMpe3ZhciBfMHgxMGUyMDY9XzB4ZmU1ZTQ0O3RyeXtpZighdGhpc1tfMHgxMGUyMDYoMHgxZTIpXSlyZXR1cm47dGhpc1snX2FsbG93ZWRUb0Nvbm5lY3RPblNlbmQnXSYmdGhpc1tfMHgxMGUyMDYoMHgyODQpXSgpLChhd2FpdCB0aGlzW18weDEwZTIwNigweDFlNyldKVtfMHgxMGUyMDYoMHgyNmUpXShKU09OWydzdHJpbmdpZnknXShfMHgyNTQ1NTMpKTt9Y2F0Y2goXzB4NGZiNjhkKXtjb25zb2xlW18weDEwZTIwNigweDFmMildKHRoaXNbXzB4MTBlMjA2KDB4MWFlKV0rJzpcXFxceDIwJysoXzB4NGZiNjhkJiZfMHg0ZmI2OGRbXzB4MTBlMjA2KDB4MjIyKV0pKSx0aGlzW18weDEwZTIwNigweDFlMildPSEweDEsdGhpc1snX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpO319fTtmdW5jdGlvbiBxKF8weDM2M2U4YixfMHg1OGJjMTEsXzB4NWE1N2JlLF8weDNjMjBlNSxfMHgzY2RmNGYsXzB4MmVlYzU0LF8weDM3N2I4MyxfMHgxYjBiZmY9aWUpe3ZhciBfMHhjOGYwMGU9XzB4ZmU1ZTQ0O2xldCBfMHhlMjRiYTA9XzB4NWE1N2JlW18weGM4ZjAwZSgweDFlNCldKCcsJylbJ21hcCddKF8weDQ2ZjJjZj0+e3ZhciBfMHgxNGQ3MDU9XzB4YzhmMDBlLF8weGRhZWM0OSxfMHgzYzkyMGMsXzB4MjA1Nzg2LF8weDE0YmExMDt0cnl7aWYoIV8weDM2M2U4YlsnX2NvbnNvbGVfbmluamFfc2Vzc2lvbiddKXtsZXQgXzB4MzhhZDRhPSgoXzB4M2M5MjBjPShfMHhkYWVjNDk9XzB4MzYzZThiWydwcm9jZXNzJ10pPT1udWxsP3ZvaWQgMHgwOl8weGRhZWM0OVsndmVyc2lvbnMnXSk9PW51bGw/dm9pZCAweDA6XzB4M2M5MjBjW18weDE0ZDcwNSgweDI4YyldKXx8KChfMHgxNGJhMTA9KF8weDIwNTc4Nj1fMHgzNjNlOGJbXzB4MTRkNzA1KDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDIwNTc4NltfMHgxNGQ3MDUoMHgxY2MpXSk9PW51bGw/dm9pZCAweDA6XzB4MTRiYTEwW18weDE0ZDcwNSgweDFjMyldKT09PV8weDE0ZDcwNSgweDFmZCk7KF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIzNyl8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIwMCl8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDFhNil8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIzMykpJiYoXzB4M2NkZjRmKz1fMHgzOGFkNGE/XzB4MTRkNzA1KDB4MWY5KTpfMHgxNGQ3MDUoMHgxZWUpKSxfMHgzNjNlOGJbXzB4MTRkNzA1KDB4Mjg4KV09eydpZCc6K25ldyBEYXRlKCksJ3Rvb2wnOl8weDNjZGY0Zn0sXzB4Mzc3YjgzJiZfMHgzY2RmNGYmJiFfMHgzOGFkNGEmJmNvbnNvbGVbJ2xvZyddKF8weDE0ZDcwNSgweDFjNikrKF8weDNjZGY0ZltfMHgxNGQ3MDUoMHgyNmQpXSgweDApW18weDE0ZDcwNSgweDFjNyldKCkrXzB4M2NkZjRmW18weDE0ZDcwNSgweDFhOSldKDB4MSkpKycsJyxfMHgxNGQ3MDUoMHgyNTIpLF8weDE0ZDcwNSgweDI0NikpO31sZXQgXzB4NTFiNmExPW5ldyBaKF8weDM2M2U4YixfMHg1OGJjMTEsXzB4NDZmMmNmLF8weDNjMjBlNSxfMHgyZWVjNTQsXzB4MWIwYmZmKTtyZXR1cm4gXzB4NTFiNmExW18weDE0ZDcwNSgweDI2ZSldW18weDE0ZDcwNSgweDIxZildKF8weDUxYjZhMSk7fWNhdGNoKF8weGUxNGY0OCl7cmV0dXJuIGNvbnNvbGVbXzB4MTRkNzA1KDB4MWYyKV0oJ2xvZ2dlclxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwY29ubmVjdFxcXFx4MjB0b1xcXFx4MjBob3N0JyxfMHhlMTRmNDgmJl8weGUxNGY0OFtfMHgxNGQ3MDUoMHgyMjIpXSksKCk9Pnt9O319KTtyZXR1cm4gXzB4MTBmMDRjPT5fMHhlMjRiYTBbJ2ZvckVhY2gnXShfMHg1M2ZkZDY9Pl8weDUzZmRkNihfMHgxMGYwNGMpKTt9ZnVuY3Rpb24gaWUoXzB4MWUzYTRlLF8weDI2ZTliMSxfMHg0NWViMzEsXzB4NWRkMzRiKXt2YXIgXzB4YTc1OTc4PV8weGZlNWU0NDtfMHg1ZGQzNGImJl8weDFlM2E0ZT09PV8weGE3NTk3OCgweDI2MykmJl8weDQ1ZWIzMVsnbG9jYXRpb24nXVsncmVsb2FkJ10oKTt9ZnVuY3Rpb24gXzB4NDg0Migpe3ZhciBfMHg1NWExOTM9Wydvbm1lc3NhZ2UnLCdTeW1ib2wnLCdfbmluamFJZ25vcmVOZXh0RXJyb3InLCdfYWxsb3dlZFRvU2VuZCcsJ2FsbFN0ckxlbmd0aCcsJ3NwbGl0JywncmVhZHlTdGF0ZScsJ19nZXRPd25Qcm9wZXJ0eVN5bWJvbHMnLCdfd3MnLCcyMzgyNDgwTXBTTlVHJywncHJvcHMnLCdvbmNsb3NlJywnY291bnQnLCcxNzIwMjk2bkRpQ2JLJywnLi4uJywnXFxcXHgyMGJyb3dzZXInLCdfaXNVbmRlZmluZWQnLCdudW1iZXInLCdhdXRvRXhwYW5kTWF4RGVwdGgnLCd3YXJuJywnMXFMYXJHSycsJ3ZhbHVlJywnZ2V0T3duUHJvcGVydHlTeW1ib2xzJywnYXJncycsJ2xvY2F0aW9uJywnU2V0JywnXFxcXHgyMHNlcnZlcicsJ19udW1iZXJSZWdFeHAnLCdnZXQnLCdfaGFzU3ltYm9sUHJvcGVydHlPbkl0c1BhdGgnLCdlZGdlJywnX2FkZE9iamVjdFByb3BlcnR5JywncGVyZm9ybWFuY2UnLCdyZW1peCcsJ193ZWJTb2NrZXRFcnJvckRvY3NMaW5rJywnX2dldE93blByb3BlcnR5TmFtZXMnLCdfY29ubmVjdGVkJywncHVzaCcsJ3NldCcsJ3Byb2Nlc3MnLCdfcmVnRXhwVG9TdHJpbmcnLCdpc0FycmF5JywndGltZScsJ19zZXROb2RlTGFiZWwnLCd0ZXN0JywnbG9nZ2VyXFxcXHgyMHdlYnNvY2tldFxcXFx4MjBlcnJvcicsJzI0MjcwODBPeXJZUW0nLCdbb2JqZWN0XFxcXHgyME1hcF0nLCd1bmRlZmluZWQnLCdjYXBwZWQnLCdodHRwczovL3Rpbnl1cmwuY29tLzM3eDhiNzl0JywndGltZVN0YW1wJywnX3Byb3BlcnR5TmFtZScsJ2NhcHBlZFByb3BzJywnbmVnYXRpdmVJbmZpbml0eScsJ2NvbnN0cnVjdG9yJywnbnVsbCcsJ2Zyb21DaGFyQ29kZScsJ2hydGltZScsJ19vYmplY3RUb1N0cmluZycsJ25hbWUnLFtcXFwibG9jYWxob3N0XFxcIixcXFwiMTI3LjAuMC4xXFxcIixcXFwiZXhhbXBsZS5jeXByZXNzLmlvXFxcIixcXFwiQ0VCLUxBUFRPUC0wMDA2XFxcIixcXFwiMTkyLjE2OC4xLjc5XFxcIl0sJ19kaXNwb3NlV2Vic29ja2V0JywnaXNFeHByZXNzaW9uVG9FdmFsdWF0ZScsJ2JpbmQnLCdfY29uc29sZU5pbmphQWxsb3dlZFRvU3RhcnQnLCdfaW5OZXh0RWRnZScsJ21lc3NhZ2UnLCdwb3NpdGl2ZUluZmluaXR5JywnY29uY2F0JywnTnVtYmVyJywnX3NvcnRQcm9wcycsJ2NvbnNvbGUnLCd0eXBlJywncG9wJywnZXJyb3InLCcxMzIwNUJRYUdWcCcsJ2F1dG9FeHBhbmQnLCdlbGVtZW50cycsJ2F1dG9FeHBhbmRQcmV2aW91c09iamVjdHMnLCdfaXNQcmltaXRpdmVUeXBlJywnbG9nJywnX3RyZWVOb2RlUHJvcGVydGllc0JlZm9yZUZ1bGxWYWx1ZScsJ3RvU3RyaW5nJywnYW5ndWxhcicsJ3BhcnNlJywnW29iamVjdFxcXFx4MjBCaWdJbnRdJywnX2FkZGl0aW9uYWxNZXRhZGF0YScsJ25leHQuanMnLCdfdHJlZU5vZGVQcm9wZXJ0aWVzQWZ0ZXJGdWxsVmFsdWUnLCdIVE1MQWxsQ29sbGVjdGlvbicsJ3JlZHVjZUxpbWl0cycsJ3BhcmVudCcsJ2pvaW4nLCdzZXJpYWxpemUnLCdfaW5Ccm93c2VyJywnX2lzTmVnYXRpdmVaZXJvJywnX3JlY29ubmVjdFRpbWVvdXQnLCdhdXRvRXhwYW5kTGltaXQnLCdbb2JqZWN0XFxcXHgyMFNldF0nLCdbb2JqZWN0XFxcXHgyMERhdGVdJywnMScsJ3VybCcsJ3NlZVxcXFx4MjBodHRwczovL3Rpbnl1cmwuY29tLzJ2dDhqeHp3XFxcXHgyMGZvclxcXFx4MjBtb3JlXFxcXHgyMGluZm8uJywnQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwc2VuZFxcXFx4MjBsb2dzLFxcXFx4MjByZWZyZXNoaW5nXFxcXHgyMHRoZVxcXFx4MjBwYWdlXFxcXHgyMG1heVxcXFx4MjBoZWxwO1xcXFx4MjBhbHNvXFxcXHgyMHNlZVxcXFx4MjAnLCdnZXRQcm90b3R5cGVPZicsJ25vdycsJ2hhc093blByb3BlcnR5JywnX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknLCdfY29uc29sZV9uaW5qYScsJ2xlbmd0aCcsJ0Vycm9yJywnYXJyYXknLCdfX2VzJysnTW9kdWxlJywncGF0aCcsJ2JhY2tncm91bmQ6XFxcXHgyMHJnYigzMCwzMCwzMCk7XFxcXHgyMGNvbG9yOlxcXFx4MjByZ2IoMjU1LDIxMyw5MiknLCdfY2xlYW5Ob2RlJywnZnVuY3Rpb24nLCdyb290X2V4cF9pZCcsJ2dldE93blByb3BlcnR5RGVzY3JpcHRvcicsJ21hcCcsJ2ZvckVhY2gnLCdvYmplY3QnLCdjYXBwZWRFbGVtZW50cycsJ0J1ZmZlcicsJ19wcm9wZXJ0eScsJ2luZGV4JywnZGVmYXVsdCcsJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50JywnY2F0Y2gnLCdORUdBVElWRV9JTkZJTklUWScsJ3BvcnQnLCdyZWxvYWQnLCdkb2NrZXJpemVkQXBwJywnY3VycmVudCcsJ2ZhaWxlZFxcXFx4MjB0b1xcXFx4MjBjb25uZWN0XFxcXHgyMHRvXFxcXHgyMGhvc3Q6XFxcXHgyMCcsJ2Z1bmNOYW1lJywnc3RyTGVuZ3RoJywnYmlnaW50JywnbWF0Y2gnLCdzdGFjaycsJzEuMC4wJywnY2hhckF0Jywnc2VuZCcsJ3ZlcnNpb25zJywnaG9zdCcsJ19hZGRMb2FkTm9kZScsJ2dldFdlYlNvY2tldENsYXNzJywnY2FsbCcsJ29uZXJyb3InLCcnLCdfdHlwZScsJ2V4cHJlc3Npb25zVG9FdmFsdWF0ZScsJ3N0YWNrVHJhY2VMaW1pdCcsJ1BPU0lUSVZFX0lORklOSVRZJywnZGlzYWJsZWRUcmFjZScsJ191bmRlZmluZWQnLCdldmVudFJlY2VpdmVkQ2FsbGJhY2snLCdkaXNhYmxlZExvZycsJ3JlcGxhY2UnLCdmYWlsZWRcXFxceDIwdG9cXFxceDIwZmluZFxcXFx4MjBhbmRcXFxceDIwbG9hZFxcXFx4MjBXZWJTb2NrZXQnLCdvbm9wZW4nLCdnYXRld2F5LmRvY2tlci5pbnRlcm5hbCcsJ3N0cmluZycsJ19pc01hcCcsJ19jb25uZWN0VG9Ib3N0Tm93JywnX0hUTUxBbGxDb2xsZWN0aW9uJywnMTcyOTIzOTMxNDQ5NCcsJ19pc1NldCcsJ19jb25zb2xlX25pbmphX3Nlc3Npb24nLCdnZXRPd25Qcm9wZXJ0eU5hbWVzJywnQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwc2VuZFxcXFx4MjBsb2dzLFxcXFx4MjByZXN0YXJ0aW5nXFxcXHgyMHRoZVxcXFx4MjBwcm9jZXNzXFxcXHgyMG1heVxcXFx4MjBoZWxwO1xcXFx4MjBhbHNvXFxcXHgyMHNlZVxcXFx4MjAnLCczNzk5MTYwSm5IenBEJywnbm9kZScsJ3Byb3RvdHlwZScsJ19zZXROb2RlSWQnLCdfbWF4Q29ubmVjdEF0dGVtcHRDb3VudCcsJ3BlcmZfaG9va3MnLCdnbG9iYWwnLCdfaXNQcmltaXRpdmVXcmFwcGVyVHlwZScsJ1N0cmluZycsJzU0Y0tJbG5jJywnZW5kc1dpdGgnLCdpbmNsdWRlcycsJ2hpdHMnLCd0b0xvd2VyQ2FzZScsJ3RyYWNlJywnNDJTZm1kaUQnLCdzZXR0ZXInLCdhc3RybycsJ29yaWdpbicsJ19jb25uZWN0QXR0ZW1wdENvdW50Jywnc3Vic3RyJywndG90YWxTdHJMZW5ndGgnLCdfYWxsb3dlZFRvQ29ubmVjdE9uU2VuZCcsJ19wX2xlbmd0aCcsJzkwMjc0Mzh1Z1prZVYnLCdfc2VuZEVycm9yTWVzc2FnZScsJ19hZGRGdW5jdGlvbnNOb2RlJywnX2JsYWNrbGlzdGVkUHJvcGVydHknLCdlbGFwc2VkJywnc29ydCcsJ3BhdGhUb0ZpbGVVUkwnLCdtZXRob2QnLCdfU3ltYm9sJywnbm9GdW5jdGlvbnMnLCd1bnJlZicsJ19hZGRQcm9wZXJ0eScsJ2RhdGEnLCdyb290X2V4cCcsJ19xdW90ZWRSZWdFeHAnLCdub2RlTW9kdWxlcycsJ2RlZmluZVByb3BlcnR5JywncmVzb2x2ZUdldHRlcnMnLCcyMTQ3Nzc0cXJZUWF6JywnX2tleVN0clJlZ0V4cCcsJ19zZXROb2RlUXVlcnlQYXRoJywnc3RyaW5naWZ5JywnTkVYVF9SVU5USU1FJywnX2NhcElmU3RyaW5nJywnX2Nvbm5lY3RpbmcnLCclY1xcXFx4MjBDb25zb2xlXFxcXHgyME5pbmphXFxcXHgyMGV4dGVuc2lvblxcXFx4MjBpc1xcXFx4MjBjb25uZWN0ZWRcXFxceDIwdG9cXFxceDIwJywndG9VcHBlckNhc2UnLCd1bmtub3duJywnd3M6Ly8nLCdsb2dnZXJcXFxceDIwZmFpbGVkXFxcXHgyMHRvXFxcXHgyMGNvbm5lY3RcXFxceDIwdG9cXFxceDIwaG9zdCxcXFxceDIwc2VlXFxcXHgyMCcsJ19nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCdlbnYnLCcnLFxcXCJjOlxcXFxcXFxcVXNlcnNcXFxcXFxcXHNoZWVyd29vZGNcXFxcXFxcXC52c2NvZGVcXFxcXFxcXGV4dGVuc2lvbnNcXFxcXFxcXHdhbGxhYnlqcy5jb25zb2xlLW5pbmphLTEuMC4zNjNcXFxcXFxcXG5vZGVfbW9kdWxlc1xcXCIsJ3RoZW4nLCdfc2V0Tm9kZVBlcm1pc3Npb25zJywnZGVwdGgnLCdjb3ZlcmFnZScsJ2xldmVsJywnX3BfbmFtZScsJ19XZWJTb2NrZXRDbGFzcycsJ3NvcnRQcm9wcycsJ19wXycsJ2RhdGUnLCdzeW1ib2wnLCdfcHJvY2Vzc1RyZWVOb2RlUmVzdWx0JywnTWFwJywnc2xpY2UnLCdfc29ja2V0JywnX2lzQXJyYXknXTtfMHg0ODQyPWZ1bmN0aW9uKCl7cmV0dXJuIF8weDU1YTE5Mzt9O3JldHVybiBfMHg0ODQyKCk7fWZ1bmN0aW9uIEIoXzB4MmUzNmVhKXt2YXIgXzB4NWVhYjE4PV8weGZlNWU0NCxfMHg1N2NlYWMsXzB4MWNkM2ZmO2xldCBfMHgxNzRlNDM9ZnVuY3Rpb24oXzB4MmQ1MjE0LF8weDRkN2U4Mil7cmV0dXJuIF8weDRkN2U4Mi1fMHgyZDUyMTQ7fSxfMHgzNTVkZDk7aWYoXzB4MmUzNmVhW18weDVlYWIxOCgweDFmZildKV8weDM1NWRkOT1mdW5jdGlvbigpe3JldHVybiBfMHgyZTM2ZWFbJ3BlcmZvcm1hbmNlJ11bJ25vdyddKCk7fTtlbHNle2lmKF8weDJlMzZlYVtfMHg1ZWFiMTgoMHgyMDYpXSYmXzB4MmUzNmVhW18weDVlYWIxOCgweDIwNildW18weDVlYWIxOCgweDIxOSldJiYoKF8weDFjZDNmZj0oXzB4NTdjZWFjPV8weDJlMzZlYVsncHJvY2VzcyddKT09bnVsbD92b2lkIDB4MDpfMHg1N2NlYWNbXzB4NWVhYjE4KDB4MWNjKV0pPT1udWxsP3ZvaWQgMHgwOl8weDFjZDNmZltfMHg1ZWFiMTgoMHgxYzMpXSkhPT1fMHg1ZWFiMTgoMHgxZmQpKV8weDM1NWRkOT1mdW5jdGlvbigpe3ZhciBfMHgyYTViMjM9XzB4NWVhYjE4O3JldHVybiBfMHgyZTM2ZWFbXzB4MmE1YjIzKDB4MjA2KV1bJ2hydGltZSddKCk7fSxfMHgxNzRlNDM9ZnVuY3Rpb24oXzB4MzdhMTljLF8weDEzYjk2NSl7cmV0dXJuIDB4M2U4KihfMHgxM2I5NjVbMHgwXS1fMHgzN2ExOWNbMHgwXSkrKF8weDEzYjk2NVsweDFdLV8weDM3YTE5Y1sweDFdKS8weGY0MjQwO307ZWxzZSB0cnl7bGV0IHtwZXJmb3JtYW5jZTpfMHgyNDc0YTB9PXJlcXVpcmUoXzB4NWVhYjE4KDB4MjkwKSk7XzB4MzU1ZGQ5PWZ1bmN0aW9uKCl7dmFyIF8weDUwZGU5Yz1fMHg1ZWFiMTg7cmV0dXJuIF8weDI0NzRhMFtfMHg1MGRlOWMoMHgyNDkpXSgpO307fWNhdGNoe18weDM1NWRkOT1mdW5jdGlvbigpe3JldHVybituZXcgRGF0ZSgpO307fX1yZXR1cm57J2VsYXBzZWQnOl8weDE3NGU0MywndGltZVN0YW1wJzpfMHgzNTVkZDksJ25vdyc6KCk9PkRhdGVbJ25vdyddKCl9O31mdW5jdGlvbiBfMHgyODAwKF8weDIwYzMxNixfMHgyN2U0NGQpe3ZhciBfMHg0ODQyZDU9XzB4NDg0MigpO3JldHVybiBfMHgyODAwPWZ1bmN0aW9uKF8weDI4MDA3OSxfMHgyYjEzNmQpe18weDI4MDA3OT1fMHgyODAwNzktMHgxYTE7dmFyIF8weGY2ZGNlOT1fMHg0ODQyZDVbXzB4MjgwMDc5XTtyZXR1cm4gXzB4ZjZkY2U5O30sXzB4MjgwMChfMHgyMGMzMTYsXzB4MjdlNDRkKTt9ZnVuY3Rpb24gSChfMHg1ZjA0NmQsXzB4YmZlYTY3LF8weDRjOTg0Nyl7dmFyIF8weDQyMzMyYz1fMHhmZTVlNDQsXzB4NDUzNmRmLF8weDNlNTkxYixfMHgxYzAyZmQsXzB4NTY2MWI3LF8weGRhNzg4MjtpZihfMHg1ZjA0NmRbJ19jb25zb2xlTmluamFBbGxvd2VkVG9TdGFydCddIT09dm9pZCAweDApcmV0dXJuIF8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXTtsZXQgXzB4MTUyYTQyPSgoXzB4M2U1OTFiPShfMHg0NTM2ZGY9XzB4NWYwNDZkW18weDQyMzMyYygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHg0NTM2ZGZbJ3ZlcnNpb25zJ10pPT1udWxsP3ZvaWQgMHgwOl8weDNlNTkxYltfMHg0MjMzMmMoMHgyOGMpXSl8fCgoXzB4NTY2MWI3PShfMHgxYzAyZmQ9XzB4NWYwNDZkW18weDQyMzMyYygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHgxYzAyZmRbXzB4NDIzMzJjKDB4MWNjKV0pPT1udWxsP3ZvaWQgMHgwOl8weDU2NjFiN1tfMHg0MjMzMmMoMHgxYzMpXSk9PT1fMHg0MjMzMmMoMHgxZmQpO2Z1bmN0aW9uIF8weDQxMjU5NShfMHg1MDI3ZDQpe3ZhciBfMHg1NzgyYjE9XzB4NDIzMzJjO2lmKF8weDUwMjdkNFsnc3RhcnRzV2l0aCddKCcvJykmJl8weDUwMjdkNFtfMHg1NzgyYjEoMHgyOTUpXSgnLycpKXtsZXQgXzB4NTU4ZjAzPW5ldyBSZWdFeHAoXzB4NTAyN2Q0W18weDU3ODJiMSgweDFkYyldKDB4MSwtMHgxKSk7cmV0dXJuIF8weDNkMGQ2NT0+XzB4NTU4ZjAzWyd0ZXN0J10oXzB4M2QwZDY1KTt9ZWxzZXtpZihfMHg1MDI3ZDRbJ2luY2x1ZGVzJ10oJyonKXx8XzB4NTAyN2Q0W18weDU3ODJiMSgweDI5NildKCc/Jykpe2xldCBfMHg1MWJlYmY9bmV3IFJlZ0V4cCgnXicrXzB4NTAyN2Q0W18weDU3ODJiMSgweDI3ZSldKC9cXFxcLi9nLFN0cmluZ1tfMHg1NzgyYjEoMHgyMTgpXSgweDVjKSsnLicpW18weDU3ODJiMSgweDI3ZSldKC9cXFxcKi9nLCcuKicpW18weDU3ODJiMSgweDI3ZSldKC9cXFxcPy9nLCcuJykrU3RyaW5nWydmcm9tQ2hhckNvZGUnXSgweDI0KSk7cmV0dXJuIF8weDI0ZjY5OT0+XzB4NTFiZWJmW18weDU3ODJiMSgweDIwYildKF8weDI0ZjY5OSk7fWVsc2UgcmV0dXJuIF8weDIwNzYwMz0+XzB4MjA3NjAzPT09XzB4NTAyN2Q0O319bGV0IF8weDI3NWNlYT1fMHhiZmVhNjdbXzB4NDIzMzJjKDB4MjU3KV0oXzB4NDEyNTk1KTtyZXR1cm4gXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldPV8weDE1MmE0Mnx8IV8weGJmZWE2NywhXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldJiYoKF8weGRhNzg4Mj1fMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MWY3KV0pPT1udWxsP3ZvaWQgMHgwOl8weGRhNzg4MlsnaG9zdG5hbWUnXSkmJihfMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjIwKV09XzB4Mjc1Y2VhWydzb21lJ10oXzB4NTViNDM1PT5fMHg1NWI0MzUoXzB4NWYwNDZkWydsb2NhdGlvbiddWydob3N0bmFtZSddKSkpLF8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXTt9ZnVuY3Rpb24gWChfMHgyZjFhNzAsXzB4NWJlMDcyLF8weDM5YmUwMSxfMHg1YTU3NDUpe3ZhciBfMHgxYWU5ZGU9XzB4ZmU1ZTQ0O18weDJmMWE3MD1fMHgyZjFhNzAsXzB4NWJlMDcyPV8weDViZTA3MixfMHgzOWJlMDE9XzB4MzliZTAxLF8weDVhNTc0NT1fMHg1YTU3NDU7bGV0IF8weDQ1YWQyND1CKF8weDJmMWE3MCksXzB4MzQ5MTNiPV8weDQ1YWQyNFtfMHgxYWU5ZGUoMHgxYjEpXSxfMHg1ZjQyNTQ9XzB4NDVhZDI0W18weDFhZTlkZSgweDIxMildO2NsYXNzIF8weDM5YWVlM3tjb25zdHJ1Y3Rvcigpe3ZhciBfMHgyMDk0NjI9XzB4MWFlOWRlO3RoaXNbXzB4MjA5NDYyKDB4MWMwKV09L14oPyEoPzpkb3xpZnxpbnxmb3J8bGV0fG5ld3x0cnl8dmFyfGNhc2V8ZWxzZXxlbnVtfGV2YWx8ZmFsc2V8bnVsbHx0aGlzfHRydWV8dm9pZHx3aXRofGJyZWFrfGNhdGNofGNsYXNzfGNvbnN0fHN1cGVyfHRocm93fHdoaWxlfHlpZWxkfGRlbGV0ZXxleHBvcnR8aW1wb3J0fHB1YmxpY3xyZXR1cm58c3RhdGljfHN3aXRjaHx0eXBlb2Z8ZGVmYXVsdHxleHRlbmRzfGZpbmFsbHl8cGFja2FnZXxwcml2YXRlfGNvbnRpbnVlfGRlYnVnZ2VyfGZ1bmN0aW9ufGFyZ3VtZW50c3xpbnRlcmZhY2V8cHJvdGVjdGVkfGltcGxlbWVudHN8aW5zdGFuY2VvZikkKVtfJGEtekEtWlxcXFx4QTAtXFxcXHVGRkZGXVtfJGEtekEtWjAtOVxcXFx4QTAtXFxcXHVGRkZGXSokLyx0aGlzW18weDIwOTQ2MigweDFmYSldPS9eKDB8WzEtOV1bMC05XSopJC8sdGhpc1tfMHgyMDk0NjIoMHgxYmIpXT0vJyhbXlxcXFxcXFxcJ118XFxcXFxcXFwnKSonLyx0aGlzW18weDIwOTQ2MigweDI3YildPV8weDJmMWE3MFtfMHgyMDk0NjIoMHgyMGYpXSx0aGlzWydfSFRNTEFsbENvbGxlY3Rpb24nXT1fMHgyZjFhNzBbXzB4MjA5NDYyKDB4MjM5KV0sdGhpc1tfMHgyMDk0NjIoMHgxY2IpXT1PYmplY3RbXzB4MjA5NDYyKDB4MjU2KV0sdGhpc1tfMHgyMDk0NjIoMHgyMDIpXT1PYmplY3RbXzB4MjA5NDYyKDB4Mjg5KV0sdGhpc1tfMHgyMDk0NjIoMHgxYjUpXT1fMHgyZjFhNzBbXzB4MjA5NDYyKDB4MWUwKV0sdGhpc1snX3JlZ0V4cFRvU3RyaW5nJ109UmVnRXhwWydwcm90b3R5cGUnXVtfMHgyMDk0NjIoMHgyMzIpXSx0aGlzWydfZGF0ZVRvU3RyaW5nJ109RGF0ZVtfMHgyMDk0NjIoMHgyOGQpXVtfMHgyMDk0NjIoMHgyMzIpXTt9W18weDFhZTlkZSgweDIzZCldKF8weDI0YjdmMyxfMHgyOTZmNzMsXzB4NDY2NTNkLF8weDViZjlmZCl7dmFyIF8weGRhMjFiND1fMHgxYWU5ZGUsXzB4MmEyZmQwPXRoaXMsXzB4NGRkNmIwPV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmMpXTtmdW5jdGlvbiBfMHgxMzFlYjYoXzB4MjRjMWRmLF8weDI4YmY1NyxfMHg0MDhkNDgpe3ZhciBfMHg0NzkxMzE9XzB4ZGEyMWI0O18weDI4YmY1N1tfMHg0NzkxMzEoMHgyMjgpXT0ndW5rbm93bicsXzB4MjhiZjU3WydlcnJvciddPV8weDI0YzFkZltfMHg0NzkxMzEoMHgyMjIpXSxfMHgxZjBkNTY9XzB4NDA4ZDQ4W18weDQ3OTEzMSgweDI4YyldW18weDQ3OTEzMSgweDI2NSldLF8weDQwOGQ0OFtfMHg0NzkxMzEoMHgyOGMpXVtfMHg0NzkxMzEoMHgyNjUpXT1fMHgyOGJmNTcsXzB4MmEyZmQwW18weDQ3OTEzMSgweDIzMSldKF8weDI4YmY1NyxfMHg0MDhkNDgpO310cnl7XzB4NDY2NTNkWydsZXZlbCddKyssXzB4NDY2NTNkWydhdXRvRXhwYW5kJ10mJl8weDQ2NjUzZFsnYXV0b0V4cGFuZFByZXZpb3VzT2JqZWN0cyddW18weGRhMjFiNCgweDIwNCldKF8weDI5NmY3Myk7dmFyIF8weDFlMjA5NCxfMHgxNmFlZmEsXzB4NTQyNTY2LF8weDQyZTI4YixfMHhjZTdmOTU9W10sXzB4ZTZmMWMzPVtdLF8weGYxN2MyOSxfMHgyMDdkYjg9dGhpc1tfMHhkYTIxYjQoMHgyNzYpXShfMHgyOTZmNzMpLF8weDI3N2RlNj1fMHgyMDdkYjg9PT0nYXJyYXknLF8weDVjNDI2Yz0hMHgxLF8weDY2ZmUxYj1fMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyNTQpLF8weGNhNmU2ND10aGlzW18weGRhMjFiNCgweDIyZildKF8weDIwN2RiOCksXzB4MmM0MDVhPXRoaXNbXzB4ZGEyMWI0KDB4MjkyKV0oXzB4MjA3ZGI4KSxfMHg0ZjVkNjI9XzB4Y2E2ZTY0fHxfMHgyYzQwNWEsXzB4Njk2MWQzPXt9LF8weDFiYzY1Nz0weDAsXzB4MjAxMzM1PSEweDEsXzB4MWYwZDU2LF8weDQ2YWUyNj0vXigoWzEtOV17MX1bMC05XSopfDApJC87aWYoXzB4NDY2NTNkW18weGRhMjFiNCgweDFkMSldKXtpZihfMHgyNzdkZTYpe2lmKF8weDE2YWVmYT1fMHgyOTZmNzNbXzB4ZGEyMWI0KDB4MjRkKV0sXzB4MTZhZWZhPl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmQpXSl7Zm9yKF8weDU0MjU2Nj0weDAsXzB4NDJlMjhiPV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmQpXSxfMHgxZTIwOTQ9XzB4NTQyNTY2O18weDFlMjA5NDxfMHg0MmUyOGI7XzB4MWUyMDk0KyspXzB4ZTZmMWMzW18weGRhMjFiNCgweDIwNCldKF8weDJhMmZkMFsnX2FkZFByb3BlcnR5J10oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4MWUyMDk0LF8weDQ2NjUzZCkpO18weDI0YjdmM1tfMHhkYTIxYjQoMHgyNWEpXT0hMHgwO31lbHNle2ZvcihfMHg1NDI1NjY9MHgwLF8weDQyZTI4Yj1fMHgxNmFlZmEsXzB4MWUyMDk0PV8weDU0MjU2NjtfMHgxZTIwOTQ8XzB4NDJlMjhiO18weDFlMjA5NCsrKV8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyMDQpXShfMHgyYTJmZDBbXzB4ZGEyMWI0KDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4MWUyMDk0LF8weDQ2NjUzZCkpO31fMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J10rPV8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyNGQpXTt9aWYoIShfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMTcpfHxfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMGYpKSYmIV8weGNhNmU2NCYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjkzKSYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjViKSYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjY5KSl7dmFyIF8weDU2YjM4MD1fMHg1YmY5ZmRbXzB4ZGEyMWI0KDB4MWU5KV18fF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgxZTkpXTtpZih0aGlzWydfaXNTZXQnXShfMHgyOTZmNzMpPyhfMHgxZTIwOTQ9MHgwLF8weDI5NmY3M1tfMHhkYTIxYjQoMHgyNTgpXShmdW5jdGlvbihfMHgzNjU3ODIpe3ZhciBfMHgyMDQxNWU9XzB4ZGEyMWI0O2lmKF8weDFiYzY1NysrLF8weDQ2NjUzZFsnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnXSsrLF8weDFiYzY1Nz5fMHg1NmIzODApe18weDIwMTMzNT0hMHgwO3JldHVybjt9aWYoIV8weDQ2NjUzZFsnaXNFeHByZXNzaW9uVG9FdmFsdWF0ZSddJiZfMHg0NjY1M2RbJ2F1dG9FeHBhbmQnXSYmXzB4NDY2NTNkW18weDIwNDE1ZSgweDI1ZildPl8weDQ2NjUzZFtfMHgyMDQxNWUoMHgyNDEpXSl7XzB4MjAxMzM1PSEweDA7cmV0dXJuO31fMHhlNmYxYzNbJ3B1c2gnXShfMHgyYTJmZDBbXzB4MjA0MTVlKDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MywnU2V0JyxfMHgxZTIwOTQrKyxfMHg0NjY1M2QsZnVuY3Rpb24oXzB4NDY0MDc0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDY0MDc0O307fShfMHgzNjU3ODIpKSk7fSkpOnRoaXNbXzB4ZGEyMWI0KDB4MjgzKV0oXzB4Mjk2ZjczKSYmXzB4Mjk2ZjczW18weGRhMjFiNCgweDI1OCldKGZ1bmN0aW9uKF8weDM3ODQzMCxfMHgyOGIxYzYpe3ZhciBfMHgyOWFjMzg9XzB4ZGEyMWI0O2lmKF8weDFiYzY1NysrLF8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyNWYpXSsrLF8weDFiYzY1Nz5fMHg1NmIzODApe18weDIwMTMzNT0hMHgwO3JldHVybjt9aWYoIV8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyMWUpXSYmXzB4NDY2NTNkWydhdXRvRXhwYW5kJ10mJl8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyNWYpXT5fMHg0NjY1M2RbXzB4MjlhYzM4KDB4MjQxKV0pe18weDIwMTMzNT0hMHgwO3JldHVybjt9dmFyIF8weDM5ZGRmMz1fMHgyOGIxYzZbJ3RvU3RyaW5nJ10oKTtfMHgzOWRkZjNbXzB4MjlhYzM4KDB4MjRkKV0+MHg2NCYmKF8weDM5ZGRmMz1fMHgzOWRkZjNbXzB4MjlhYzM4KDB4MWRjKV0oMHgwLDB4NjQpK18weDI5YWMzOCgweDFlZCkpLF8weGU2ZjFjM1tfMHgyOWFjMzgoMHgyMDQpXShfMHgyYTJmZDBbXzB4MjlhYzM4KDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyOWFjMzgoMHgxZGIpLF8weDM5ZGRmMyxfMHg0NjY1M2QsZnVuY3Rpb24oXzB4NDZiZDdhKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDZiZDdhO307fShfMHgzNzg0MzApKSk7fSksIV8weDVjNDI2Yyl7dHJ5e2ZvcihfMHhmMTdjMjkgaW4gXzB4Mjk2ZjczKWlmKCEoXzB4Mjc3ZGU2JiZfMHg0NmFlMjZbXzB4ZGEyMWI0KDB4MjBiKV0oXzB4ZjE3YzI5KSkmJiF0aGlzWydfYmxhY2tsaXN0ZWRQcm9wZXJ0eSddKF8weDI5NmY3MyxfMHhmMTdjMjksXzB4NDY2NTNkKSl7aWYoXzB4MWJjNjU3KyssXzB4NDY2NTNkWydhdXRvRXhwYW5kUHJvcGVydHlDb3VudCddKyssXzB4MWJjNjU3Pl8weDU2YjM4MCl7XzB4MjAxMzM1PSEweDA7YnJlYWs7fWlmKCFfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjFlKV0mJl8weDQ2NjUzZFsnYXV0b0V4cGFuZCddJiZfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjVmKV0+XzB4NDY2NTNkW18weGRhMjFiNCgweDI0MSldKXtfMHgyMDEzMzU9ITB4MDticmVhazt9XzB4ZTZmMWMzW18weGRhMjFiNCgweDIwNCldKF8weDJhMmZkMFtfMHhkYTIxYjQoMHgxZmUpXShfMHhjZTdmOTUsXzB4Njk2MWQzLF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4ZjE3YzI5LF8weDQ2NjUzZCkpO319Y2F0Y2h7fWlmKF8weDY5NjFkM1tfMHhkYTIxYjQoMHgxYWMpXT0hMHgwLF8weDY2ZmUxYiYmKF8weDY5NjFkM1tfMHhkYTIxYjQoMHgxZDQpXT0hMHgwKSwhXzB4MjAxMzM1KXt2YXIgXzB4MjY1OGJhPVtdW18weGRhMjFiNCgweDIyNCldKHRoaXNbXzB4ZGEyMWI0KDB4MjAyKV0oXzB4Mjk2ZjczKSlbXzB4ZGEyMWI0KDB4MjI0KV0odGhpc1tfMHhkYTIxYjQoMHgxZTYpXShfMHgyOTZmNzMpKTtmb3IoXzB4MWUyMDk0PTB4MCxfMHgxNmFlZmE9XzB4MjY1OGJhW18weGRhMjFiNCgweDI0ZCldO18weDFlMjA5NDxfMHgxNmFlZmE7XzB4MWUyMDk0KyspaWYoXzB4ZjE3YzI5PV8weDI2NThiYVtfMHgxZTIwOTRdLCEoXzB4Mjc3ZGU2JiZfMHg0NmFlMjZbXzB4ZGEyMWI0KDB4MjBiKV0oXzB4ZjE3YzI5W18weGRhMjFiNCgweDIzMildKCkpKSYmIXRoaXNbXzB4ZGEyMWI0KDB4MWIwKV0oXzB4Mjk2ZjczLF8weGYxN2MyOSxfMHg0NjY1M2QpJiYhXzB4Njk2MWQzW18weGRhMjFiNCgweDFkNykrXzB4ZjE3YzI5W18weGRhMjFiNCgweDIzMildKCldKXtpZihfMHgxYmM2NTcrKyxfMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J10rKyxfMHgxYmM2NTc+XzB4NTZiMzgwKXtfMHgyMDEzMzU9ITB4MDticmVhazt9aWYoIV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMWUpXSYmXzB4NDY2NTNkW18weGRhMjFiNCgweDIyYyldJiZfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjVmKV0+XzB4NDY2NTNkWydhdXRvRXhwYW5kTGltaXQnXSl7XzB4MjAxMzM1PSEweDA7YnJlYWs7fV8weGU2ZjFjM1sncHVzaCddKF8weDJhMmZkMFtfMHhkYTIxYjQoMHgxZmUpXShfMHhjZTdmOTUsXzB4Njk2MWQzLF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4ZjE3YzI5LF8weDQ2NjUzZCkpO319fX19aWYoXzB4MjRiN2YzW18weGRhMjFiNCgweDIyOCldPV8weDIwN2RiOCxfMHg0ZjVkNjI/KF8weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT1fMHgyOTZmNzNbJ3ZhbHVlT2YnXSgpLHRoaXNbJ19jYXBJZlN0cmluZyddKF8weDIwN2RiOCxfMHgyNGI3ZjMsXzB4NDY2NTNkLF8weDViZjlmZCkpOl8weDIwN2RiOD09PSdkYXRlJz9fMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09dGhpc1snX2RhdGVUb1N0cmluZyddW18weGRhMjFiNCgweDI3MyldKF8weDI5NmY3Myk6XzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MjY5KT9fMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09XzB4Mjk2ZjczW18weGRhMjFiNCgweDIzMildKCk6XzB4MjA3ZGI4PT09J1JlZ0V4cCc/XzB4MjRiN2YzW18weGRhMjFiNCgweDFmNCldPXRoaXNbXzB4ZGEyMWI0KDB4MjA3KV1bXzB4ZGEyMWI0KDB4MjczKV0oXzB4Mjk2ZjczKTpfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgxZDkpJiZ0aGlzW18weGRhMjFiNCgweDFiNSldP18weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT10aGlzW18weGRhMjFiNCgweDFiNSldW18weGRhMjFiNCgweDI4ZCldW18weGRhMjFiNCgweDIzMildW18weGRhMjFiNCgweDI3MyldKF8weDI5NmY3Myk6IV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgxZDEpXSYmIShfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMTcpfHxfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMGYpKSYmKGRlbGV0ZSBfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV0sXzB4MjRiN2YzW18weGRhMjFiNCgweDIxMCldPSEweDApLF8weDIwMTMzNSYmKF8weDI0YjdmM1tfMHhkYTIxYjQoMHgyMTQpXT0hMHgwKSxfMHgxZjBkNTY9XzB4NDY2NTNkWydub2RlJ11bXzB4ZGEyMWI0KDB4MjY1KV0sXzB4NDY2NTNkW18weGRhMjFiNCgweDI4YyldW18weGRhMjFiNCgweDI2NSldPV8weDI0YjdmMyx0aGlzW18weGRhMjFiNCgweDIzMSldKF8weDI0YjdmMyxfMHg0NjY1M2QpLF8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyNGQpXSl7Zm9yKF8weDFlMjA5ND0weDAsXzB4MTZhZWZhPV8weGU2ZjFjM1snbGVuZ3RoJ107XzB4MWUyMDk0PF8weDE2YWVmYTtfMHgxZTIwOTQrKylfMHhlNmYxYzNbXzB4MWUyMDk0XShfMHgxZTIwOTQpO31fMHhjZTdmOTVbXzB4ZGEyMWI0KDB4MjRkKV0mJihfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWU5KV09XzB4Y2U3Zjk1KTt9Y2F0Y2goXzB4MzhlZjZkKXtfMHgxMzFlYjYoXzB4MzhlZjZkLF8weDI0YjdmMyxfMHg0NjY1M2QpO31yZXR1cm4gdGhpc1tfMHhkYTIxYjQoMHgyMzYpXShfMHgyOTZmNzMsXzB4MjRiN2YzKSx0aGlzW18weGRhMjFiNCgweDIzOCldKF8weDI0YjdmMyxfMHg0NjY1M2QpLF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyOGMpXVtfMHhkYTIxYjQoMHgyNjUpXT1fMHgxZjBkNTYsXzB4NDY2NTNkW18weGRhMjFiNCgweDFkMyldLS0sXzB4NDY2NTNkW18weGRhMjFiNCgweDIyYyldPV8weDRkZDZiMCxfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJjKV0mJl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmUpXVtfMHhkYTIxYjQoMHgyMjkpXSgpLF8weDI0YjdmMzt9W18weDFhZTlkZSgweDFlNildKF8weGI3NGViZCl7dmFyIF8weDE3NTNkNj1fMHgxYWU5ZGU7cmV0dXJuIE9iamVjdFtfMHgxNzUzZDYoMHgxZjUpXT9PYmplY3RbXzB4MTc1M2Q2KDB4MWY1KV0oXzB4Yjc0ZWJkKTpbXTt9W18weDFhZTlkZSgweDI4NyldKF8weDI4ZDJlZil7dmFyIF8weDMzZTE3Zj1fMHgxYWU5ZGU7cmV0dXJuISEoXzB4MjhkMmVmJiZfMHgyZjFhNzBbXzB4MzNlMTdmKDB4MWY4KV0mJnRoaXNbXzB4MzNlMTdmKDB4MjFhKV0oXzB4MjhkMmVmKT09PV8weDMzZTE3ZigweDI0MikmJl8weDI4ZDJlZltfMHgzM2UxN2YoMHgyNTgpXSk7fVtfMHgxYWU5ZGUoMHgxYjApXShfMHgzMjliMWIsXzB4NDIyOTJhLF8weDM3YWIyYyl7dmFyIF8weDQ1M2FjOT1fMHgxYWU5ZGU7cmV0dXJuIF8weDM3YWIyY1tfMHg0NTNhYzkoMHgxYjYpXT90eXBlb2YgXzB4MzI5YjFiW18weDQyMjkyYV09PSdmdW5jdGlvbic6ITB4MTt9W18weDFhZTlkZSgweDI3NildKF8weDIyZjA1OCl7dmFyIF8weDI0MWI3YT1fMHgxYWU5ZGUsXzB4M2Q0ZTY1PScnO3JldHVybiBfMHgzZDRlNjU9dHlwZW9mIF8weDIyZjA1OCxfMHgzZDRlNjU9PT0nb2JqZWN0Jz90aGlzWydfb2JqZWN0VG9TdHJpbmcnXShfMHgyMmYwNTgpPT09J1tvYmplY3RcXFxceDIwQXJyYXldJz9fMHgzZDRlNjU9J2FycmF5Jzp0aGlzW18weDI0MWI3YSgweDIxYSldKF8weDIyZjA1OCk9PT1fMHgyNDFiN2EoMHgyNDMpP18weDNkNGU2NT1fMHgyNDFiN2EoMHgxZDgpOnRoaXNbXzB4MjQxYjdhKDB4MjFhKV0oXzB4MjJmMDU4KT09PV8weDI0MWI3YSgweDIzNSk/XzB4M2Q0ZTY1PV8weDI0MWI3YSgweDI2OSk6XzB4MjJmMDU4PT09bnVsbD9fMHgzZDRlNjU9XzB4MjQxYjdhKDB4MjE3KTpfMHgyMmYwNThbXzB4MjQxYjdhKDB4MjE2KV0mJihfMHgzZDRlNjU9XzB4MjJmMDU4W18weDI0MWI3YSgweDIxNildW18weDI0MWI3YSgweDIxYildfHxfMHgzZDRlNjUpOl8weDNkNGU2NT09PV8weDI0MWI3YSgweDIwZikmJnRoaXNbJ19IVE1MQWxsQ29sbGVjdGlvbiddJiZfMHgyMmYwNTggaW5zdGFuY2VvZiB0aGlzW18weDI0MWI3YSgweDI4NSldJiYoXzB4M2Q0ZTY1PV8weDI0MWI3YSgweDIzOSkpLF8weDNkNGU2NTt9W18weDFhZTlkZSgweDIxYSldKF8weDFkZTg3Mil7dmFyIF8weDM1NzBlOT1fMHgxYWU5ZGU7cmV0dXJuIE9iamVjdFtfMHgzNTcwZTkoMHgyOGQpXVtfMHgzNTcwZTkoMHgyMzIpXVtfMHgzNTcwZTkoMHgyNzMpXShfMHgxZGU4NzIpO31bXzB4MWFlOWRlKDB4MjJmKV0oXzB4NDJiOTgxKXt2YXIgXzB4MWI0Mzg5PV8weDFhZTlkZTtyZXR1cm4gXzB4NDJiOTgxPT09J2Jvb2xlYW4nfHxfMHg0MmI5ODE9PT0nc3RyaW5nJ3x8XzB4NDJiOTgxPT09XzB4MWI0Mzg5KDB4MWYwKTt9WydfaXNQcmltaXRpdmVXcmFwcGVyVHlwZSddKF8weDU3ZDEyYSl7dmFyIF8weDUxZmE0MD1fMHgxYWU5ZGU7cmV0dXJuIF8weDU3ZDEyYT09PSdCb29sZWFuJ3x8XzB4NTdkMTJhPT09J1N0cmluZyd8fF8weDU3ZDEyYT09PV8weDUxZmE0MCgweDIyNSk7fVtfMHgxYWU5ZGUoMHgxYjgpXShfMHgzZGU5MGUsXzB4MTRiODJmLF8weDE1ODg1ZixfMHgyMmIyNmUsXzB4NWJmMDYxLF8weDJiYWU4NSl7dmFyIF8weDI3OWQzMD10aGlzO3JldHVybiBmdW5jdGlvbihfMHg1NmM2ODgpe3ZhciBfMHgzMWNiNDk9XzB4MjgwMCxfMHg2NGZjYTA9XzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldW18weDMxY2I0OSgweDI2NSldLF8weDE4OWNkOD1fMHg1YmYwNjFbJ25vZGUnXVtfMHgzMWNiNDkoMHgyNWQpXSxfMHg1ZWEyNWY9XzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldWydwYXJlbnQnXTtfMHg1YmYwNjFbJ25vZGUnXVtfMHgzMWNiNDkoMHgyM2IpXT1fMHg2NGZjYTAsXzB4NWJmMDYxWydub2RlJ11bXzB4MzFjYjQ5KDB4MjVkKV09dHlwZW9mIF8weDIyYjI2ZT09XzB4MzFjYjQ5KDB4MWYwKT9fMHgyMmIyNmU6XzB4NTZjNjg4LF8weDNkZTkwZVtfMHgzMWNiNDkoMHgyMDQpXShfMHgyNzlkMzBbXzB4MzFjYjQ5KDB4MjVjKV0oXzB4MTRiODJmLF8weDE1ODg1ZixfMHgyMmIyNmUsXzB4NWJmMDYxLF8weDJiYWU4NSkpLF8weDViZjA2MVtfMHgzMWNiNDkoMHgyOGMpXVtfMHgzMWNiNDkoMHgyM2IpXT1fMHg1ZWEyNWYsXzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldW18weDMxY2I0OSgweDI1ZCldPV8weDE4OWNkODt9O31bJ19hZGRPYmplY3RQcm9wZXJ0eSddKF8weDhmMTcxNCxfMHg0NmMxOWUsXzB4MzA4NzkzLF8weDUzYmYxMyxfMHgzYzU3MTIsXzB4M2ViN2RiLF8weDRkZDg4MSl7dmFyIF8weDU1NzQ0ND1fMHgxYWU5ZGUsXzB4NTg3NjZjPXRoaXM7cmV0dXJuIF8weDQ2YzE5ZVtfMHg1NTc0NDQoMHgxZDcpK18weDNjNTcxMlsndG9TdHJpbmcnXSgpXT0hMHgwLGZ1bmN0aW9uKF8weDQ5NGE3NCl7dmFyIF8weDNjNzM5Yj1fMHg1NTc0NDQsXzB4MzhjMDk5PV8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyNjUpXSxfMHhlYTg4NjU9XzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDI1ZCldLF8weDFkYTU4Mz1fMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjNiKV07XzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDIzYildPV8weDM4YzA5OSxfMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjVkKV09XzB4NDk0YTc0LF8weDhmMTcxNFtfMHgzYzczOWIoMHgyMDQpXShfMHg1ODc2NmNbXzB4M2M3MzliKDB4MjVjKV0oXzB4MzA4NzkzLF8weDUzYmYxMyxfMHgzYzU3MTIsXzB4M2ViN2RiLF8weDRkZDg4MSkpLF8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyM2IpXT1fMHgxZGE1ODMsXzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDI1ZCldPV8weGVhODg2NTt9O31bXzB4MWFlOWRlKDB4MjVjKV0oXzB4YTI2YWY3LF8weGQxNzgzYyxfMHg0YzM0MTAsXzB4YTNiZjIsXzB4OWZhZDk4KXt2YXIgXzB4YTYzYTRiPV8weDFhZTlkZSxfMHgzNmVjYTk9dGhpcztfMHg5ZmFkOTh8fChfMHg5ZmFkOTg9ZnVuY3Rpb24oXzB4NDk1OGE4LF8weDQxY2EyOCl7cmV0dXJuIF8weDQ5NThhOFtfMHg0MWNhMjhdO30pO3ZhciBfMHgyOWNiYjk9XzB4NGMzNDEwW18weGE2M2E0YigweDIzMildKCksXzB4NWNmYjQ2PV8weGEzYmYyW18weGE2M2E0YigweDI3NyldfHx7fSxfMHg0NDUxODM9XzB4YTNiZjJbXzB4YTYzYTRiKDB4MWQxKV0sXzB4MzE2ZjUwPV8weGEzYmYyWydpc0V4cHJlc3Npb25Ub0V2YWx1YXRlJ107dHJ5e3ZhciBfMHgxNDFkMjU9dGhpc1snX2lzTWFwJ10oXzB4YTI2YWY3KSxfMHhmZDVmNjc9XzB4MjljYmI5O18weDE0MWQyNSYmXzB4ZmQ1ZjY3WzB4MF09PT0nXFxcXHgyNycmJihfMHhmZDVmNjc9XzB4ZmQ1ZjY3W18weGE2M2E0YigweDFhOSldKDB4MSxfMHhmZDVmNjdbXzB4YTYzYTRiKDB4MjRkKV0tMHgyKSk7dmFyIF8weDRmZGI0ZD1fMHhhM2JmMltfMHhhNjNhNGIoMHgyNzcpXT1fMHg1Y2ZiNDZbXzB4YTYzYTRiKDB4MWQ3KStfMHhmZDVmNjddO18weDRmZGI0ZCYmKF8weGEzYmYyW18weGE2M2E0YigweDFkMSldPV8weGEzYmYyW18weGE2M2E0YigweDFkMSldKzB4MSksXzB4YTNiZjJbXzB4YTYzYTRiKDB4MjFlKV09ISFfMHg0ZmRiNGQ7dmFyIF8weDQ3NTE1Nz10eXBlb2YgXzB4NGMzNDEwPT0nc3ltYm9sJyxfMHgyOWQ4NWM9eyduYW1lJzpfMHg0NzUxNTd8fF8weDE0MWQyNT9fMHgyOWNiYjk6dGhpc1snX3Byb3BlcnR5TmFtZSddKF8weDI5Y2JiOSl9O2lmKF8weDQ3NTE1NyYmKF8weDI5ZDg1Y1tfMHhhNjNhNGIoMHgxZDkpXT0hMHgwKSwhKF8weGQxNzgzYz09PV8weGE2M2E0YigweDI0Zil8fF8weGQxNzgzYz09PV8weGE2M2E0YigweDI0ZSkpKXt2YXIgXzB4MjYwYjczPXRoaXNbXzB4YTYzYTRiKDB4MWNiKV0oXzB4YTI2YWY3LF8weDRjMzQxMCk7aWYoXzB4MjYwYjczJiYoXzB4MjYwYjczW18weGE2M2E0YigweDIwNSldJiYoXzB4MjlkODVjW18weGE2M2E0YigweDFhNSldPSEweDApLF8weDI2MGI3M1tfMHhhNjNhNGIoMHgxZmIpXSYmIV8weDRmZGI0ZCYmIV8weGEzYmYyW18weGE2M2E0YigweDFiZSldKSlyZXR1cm4gXzB4MjlkODVjWydnZXR0ZXInXT0hMHgwLHRoaXNbXzB4YTYzYTRiKDB4MWRhKV0oXzB4MjlkODVjLF8weGEzYmYyKSxfMHgyOWQ4NWM7fXZhciBfMHgxOTRmYTU7dHJ5e18weDE5NGZhNT1fMHg5ZmFkOTgoXzB4YTI2YWY3LF8weDRjMzQxMCk7fWNhdGNoKF8weDJjMzE0Mil7cmV0dXJuIF8weDI5ZDg1Yz17J25hbWUnOl8weDI5Y2JiOSwndHlwZSc6XzB4YTYzYTRiKDB4MWM4KSwnZXJyb3InOl8weDJjMzE0MltfMHhhNjNhNGIoMHgyMjIpXX0sdGhpc1tfMHhhNjNhNGIoMHgxZGEpXShfMHgyOWQ4NWMsXzB4YTNiZjIpLF8weDI5ZDg1Yzt9dmFyIF8weDUwODUyYT10aGlzW18weGE2M2E0YigweDI3NildKF8weDE5NGZhNSksXzB4M2FiNzllPXRoaXNbXzB4YTYzYTRiKDB4MjJmKV0oXzB4NTA4NTJhKTtpZihfMHgyOWQ4NWNbXzB4YTYzYTRiKDB4MjI4KV09XzB4NTA4NTJhLF8weDNhYjc5ZSl0aGlzW18weGE2M2E0YigweDFkYSldKF8weDI5ZDg1YyxfMHhhM2JmMixfMHgxOTRmYTUsZnVuY3Rpb24oKXt2YXIgXzB4MzBhMzNmPV8weGE2M2E0YjtfMHgyOWQ4NWNbXzB4MzBhMzNmKDB4MWY0KV09XzB4MTk0ZmE1Wyd2YWx1ZU9mJ10oKSwhXzB4NGZkYjRkJiZfMHgzNmVjYTlbXzB4MzBhMzNmKDB4MWM0KV0oXzB4NTA4NTJhLF8weDI5ZDg1YyxfMHhhM2JmMix7fSk7fSk7ZWxzZXt2YXIgXzB4MmViOGQxPV8weGEzYmYyW18weGE2M2E0YigweDIyYyldJiZfMHhhM2JmMltfMHhhNjNhNGIoMHgxZDMpXTxfMHhhM2JmMlsnYXV0b0V4cGFuZE1heERlcHRoJ10mJl8weGEzYmYyW18weGE2M2E0YigweDIyZSldWydpbmRleE9mJ10oXzB4MTk0ZmE1KTwweDAmJl8weDUwODUyYSE9PSdmdW5jdGlvbicmJl8weGEzYmYyW18weGE2M2E0YigweDI1ZildPF8weGEzYmYyWydhdXRvRXhwYW5kTGltaXQnXTtfMHgyZWI4ZDF8fF8weGEzYmYyW18weGE2M2E0YigweDFkMyldPF8weDQ0NTE4M3x8XzB4NGZkYjRkPyh0aGlzWydzZXJpYWxpemUnXShfMHgyOWQ4NWMsXzB4MTk0ZmE1LF8weGEzYmYyLF8weDRmZGI0ZHx8e30pLHRoaXNbXzB4YTYzYTRiKDB4MjM2KV0oXzB4MTk0ZmE1LF8weDI5ZDg1YykpOnRoaXNbXzB4YTYzYTRiKDB4MWRhKV0oXzB4MjlkODVjLF8weGEzYmYyLF8weDE5NGZhNSxmdW5jdGlvbigpe3ZhciBfMHgxYWMyZjQ9XzB4YTYzYTRiO18weDUwODUyYT09PV8weDFhYzJmNCgweDIxNyl8fF8weDUwODUyYT09PSd1bmRlZmluZWQnfHwoZGVsZXRlIF8weDI5ZDg1Y1sndmFsdWUnXSxfMHgyOWQ4NWNbXzB4MWFjMmY0KDB4MjEwKV09ITB4MCk7fSk7fXJldHVybiBfMHgyOWQ4NWM7fWZpbmFsbHl7XzB4YTNiZjJbXzB4YTYzYTRiKDB4Mjc3KV09XzB4NWNmYjQ2LF8weGEzYmYyWydkZXB0aCddPV8weDQ0NTE4MyxfMHhhM2JmMltfMHhhNjNhNGIoMHgyMWUpXT1fMHgzMTZmNTA7fX1bJ19jYXBJZlN0cmluZyddKF8weDE1YTYxOSxfMHgyZTk1NTEsXzB4MmQwZGM3LF8weDNhYTYxZCl7dmFyIF8weDFjY2ZkOD1fMHgxYWU5ZGUsXzB4MTRlNWNlPV8weDNhYTYxZFtfMHgxY2NmZDgoMHgyNjgpXXx8XzB4MmQwZGM3W18weDFjY2ZkOCgweDI2OCldO2lmKChfMHgxNWE2MTk9PT1fMHgxY2NmZDgoMHgyODIpfHxfMHgxNWE2MTk9PT1fMHgxY2NmZDgoMHgyOTMpKSYmXzB4MmU5NTUxWyd2YWx1ZSddKXtsZXQgXzB4MzgxNzQzPV8weDJlOTU1MVtfMHgxY2NmZDgoMHgxZjQpXVsnbGVuZ3RoJ107XzB4MmQwZGM3WydhbGxTdHJMZW5ndGgnXSs9XzB4MzgxNzQzLF8weDJkMGRjN1snYWxsU3RyTGVuZ3RoJ10+XzB4MmQwZGM3Wyd0b3RhbFN0ckxlbmd0aCddPyhfMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MjEwKV09JycsZGVsZXRlIF8weDJlOTU1MVtfMHgxY2NmZDgoMHgxZjQpXSk6XzB4MzgxNzQzPl8weDE0ZTVjZSYmKF8weDJlOTU1MVtfMHgxY2NmZDgoMHgyMTApXT1fMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MWY0KV1bJ3N1YnN0ciddKDB4MCxfMHgxNGU1Y2UpLGRlbGV0ZSBfMHgyZTk1NTFbJ3ZhbHVlJ10pO319W18weDFhZTlkZSgweDI4MyldKF8weDExYWIzZSl7dmFyIF8weDQ1NWJjZD1fMHgxYWU5ZGU7cmV0dXJuISEoXzB4MTFhYjNlJiZfMHgyZjFhNzBbJ01hcCddJiZ0aGlzW18weDQ1NWJjZCgweDIxYSldKF8weDExYWIzZSk9PT1fMHg0NTViY2QoMHgyMGUpJiZfMHgxMWFiM2VbXzB4NDU1YmNkKDB4MjU4KV0pO31bXzB4MWFlOWRlKDB4MjEzKV0oXzB4NTk3NjFkKXt2YXIgXzB4MjA1ZDk0PV8weDFhZTlkZTtpZihfMHg1OTc2MWRbXzB4MjA1ZDk0KDB4MjZhKV0oL15cXFxcZCskLykpcmV0dXJuIF8weDU5NzYxZDt2YXIgXzB4MjgzYmFkO3RyeXtfMHgyODNiYWQ9SlNPTltfMHgyMDVkOTQoMHgxYzIpXSgnJytfMHg1OTc2MWQpO31jYXRjaHtfMHgyODNiYWQ9J1xcXFx4MjInK3RoaXNbXzB4MjA1ZDk0KDB4MjFhKV0oXzB4NTk3NjFkKSsnXFxcXHgyMic7fXJldHVybiBfMHgyODNiYWRbJ21hdGNoJ10oL15cXFwiKFthLXpBLVpfXVthLXpBLVpfMC05XSopXFxcIiQvKT9fMHgyODNiYWQ9XzB4MjgzYmFkW18weDIwNWQ5NCgweDFhOSldKDB4MSxfMHgyODNiYWRbXzB4MjA1ZDk0KDB4MjRkKV0tMHgyKTpfMHgyODNiYWQ9XzB4MjgzYmFkW18weDIwNWQ5NCgweDI3ZSldKC8nL2csJ1xcXFx4NWNcXFxceDI3JylbXzB4MjA1ZDk0KDB4MjdlKV0oL1xcXFxcXFxcXFxcIi9nLCdcXFxceDIyJylbXzB4MjA1ZDk0KDB4MjdlKV0oLyheXFxcInxcXFwiJCkvZywnXFxcXHgyNycpLF8weDI4M2JhZDt9W18weDFhZTlkZSgweDFkYSldKF8weDU1YmIxMSxfMHgxYjM3OTUsXzB4NDhmMjYxLF8weDNlMjFhYSl7dmFyIF8weDU3MWFkYz1fMHgxYWU5ZGU7dGhpc1tfMHg1NzFhZGMoMHgyMzEpXShfMHg1NWJiMTEsXzB4MWIzNzk1KSxfMHgzZTIxYWEmJl8weDNlMjFhYSgpLHRoaXNbJ19hZGRpdGlvbmFsTWV0YWRhdGEnXShfMHg0OGYyNjEsXzB4NTViYjExKSx0aGlzW18weDU3MWFkYygweDIzOCldKF8weDU1YmIxMSxfMHgxYjM3OTUpO31bXzB4MWFlOWRlKDB4MjMxKV0oXzB4ZTA4MmVkLF8weDUwYjcwMCl7dmFyIF8weDQ4OWQ5Zj1fMHgxYWU5ZGU7dGhpc1snX3NldE5vZGVJZCddKF8weGUwODJlZCxfMHg1MGI3MDApLHRoaXNbXzB4NDg5ZDlmKDB4MWMxKV0oXzB4ZTA4MmVkLF8weDUwYjcwMCksdGhpc1snX3NldE5vZGVFeHByZXNzaW9uUGF0aCddKF8weGUwODJlZCxfMHg1MGI3MDApLHRoaXNbJ19zZXROb2RlUGVybWlzc2lvbnMnXShfMHhlMDgyZWQsXzB4NTBiNzAwKTt9Wydfc2V0Tm9kZUlkJ10oXzB4NTZlMjAwLF8weDQ1MzE5OCl7fVsnX3NldE5vZGVRdWVyeVBhdGgnXShfMHg0MGE5NWYsXzB4MWY2MTdhKXt9W18weDFhZTlkZSgweDIwYSldKF8weDI5NWM2YSxfMHgyOTdiYjQpe31bXzB4MWFlOWRlKDB4MWVmKV0oXzB4M2Y2OTI1KXtyZXR1cm4gXzB4M2Y2OTI1PT09dGhpc1snX3VuZGVmaW5lZCddO31bXzB4MWFlOWRlKDB4MjM4KV0oXzB4MjE1ODQwLF8weDIyOTJmZCl7dmFyIF8weDU0NGMzNz1fMHgxYWU5ZGU7dGhpc1tfMHg1NDRjMzcoMHgyMGEpXShfMHgyMTU4NDAsXzB4MjI5MmZkKSx0aGlzWydfc2V0Tm9kZUV4cGFuZGFibGVTdGF0ZSddKF8weDIxNTg0MCksXzB4MjI5MmZkW18weDU0NGMzNygweDFkNildJiZ0aGlzWydfc29ydFByb3BzJ10oXzB4MjE1ODQwKSx0aGlzW18weDU0NGMzNygweDFhZildKF8weDIxNTg0MCxfMHgyMjkyZmQpLHRoaXNbXzB4NTQ0YzM3KDB4MjcxKV0oXzB4MjE1ODQwLF8weDIyOTJmZCksdGhpc1tfMHg1NDRjMzcoMHgyNTMpXShfMHgyMTU4NDApO31bXzB4MWFlOWRlKDB4MjM2KV0oXzB4OTBlMzdkLF8weDI5MDVhYyl7dmFyIF8weDI0NWJmND1fMHgxYWU5ZGU7bGV0IF8weDQwNGE1Mzt0cnl7XzB4MmYxYTcwW18weDI0NWJmNCgweDIyNyldJiYoXzB4NDA0YTUzPV8weDJmMWE3MFtfMHgyNDViZjQoMHgyMjcpXVtfMHgyNDViZjQoMHgyMmEpXSxfMHgyZjFhNzBbXzB4MjQ1YmY0KDB4MjI3KV1bXzB4MjQ1YmY0KDB4MjJhKV09ZnVuY3Rpb24oKXt9KSxfMHg5MGUzN2QmJnR5cGVvZiBfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjRkKV09PV8weDI0NWJmNCgweDFmMCkmJihfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjRkKV09XzB4OTBlMzdkW18weDI0NWJmNCgweDI0ZCldKTt9Y2F0Y2h7fWZpbmFsbHl7XzB4NDA0YTUzJiYoXzB4MmYxYTcwWydjb25zb2xlJ11bXzB4MjQ1YmY0KDB4MjJhKV09XzB4NDA0YTUzKTt9aWYoXzB4MjkwNWFjW18weDI0NWJmNCgweDIyOCldPT09XzB4MjQ1YmY0KDB4MWYwKXx8XzB4MjkwNWFjW18weDI0NWJmNCgweDIyOCldPT09XzB4MjQ1YmY0KDB4MjI1KSl7aWYoaXNOYU4oXzB4MjkwNWFjW18weDI0NWJmNCgweDFmNCldKSlfMHgyOTA1YWNbJ25hbiddPSEweDAsZGVsZXRlIF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXTtlbHNlIHN3aXRjaChfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV0pe2Nhc2UgTnVtYmVyW18weDI0NWJmNCgweDI3OSldOl8weDI5MDVhY1tfMHgyNDViZjQoMHgyMjMpXT0hMHgwLGRlbGV0ZSBfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV07YnJlYWs7Y2FzZSBOdW1iZXJbXzB4MjQ1YmY0KDB4MjYxKV06XzB4MjkwNWFjW18weDI0NWJmNCgweDIxNSldPSEweDAsZGVsZXRlIF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXTticmVhaztjYXNlIDB4MDp0aGlzWydfaXNOZWdhdGl2ZVplcm8nXShfMHgyOTA1YWNbJ3ZhbHVlJ10pJiYoXzB4MjkwNWFjWyduZWdhdGl2ZVplcm8nXT0hMHgwKTticmVhazt9fWVsc2UgXzB4MjkwNWFjWyd0eXBlJ109PT0nZnVuY3Rpb24nJiZ0eXBlb2YgXzB4OTBlMzdkW18weDI0NWJmNCgweDIxYildPT1fMHgyNDViZjQoMHgyODIpJiZfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjFiKV0mJl8weDI5MDVhY1snbmFtZSddJiZfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjFiKV0hPT1fMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjFiKV0mJihfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjY3KV09XzB4OTBlMzdkWyduYW1lJ10pO31bXzB4MWFlOWRlKDB4MjNmKV0oXzB4MzYwM2Y5KXtyZXR1cm4gMHgxL18weDM2MDNmOT09PU51bWJlclsnTkVHQVRJVkVfSU5GSU5JVFknXTt9W18weDFhZTlkZSgweDIyNildKF8weDkxMTM1Zil7dmFyIF8weDI3YmNjOT1fMHgxYWU5ZGU7IV8weDkxMTM1ZlsncHJvcHMnXXx8IV8weDkxMTM1ZlsncHJvcHMnXVtfMHgyN2JjYzkoMHgyNGQpXXx8XzB4OTExMzVmW18weDI3YmNjOSgweDIyOCldPT09J2FycmF5J3x8XzB4OTExMzVmW18weDI3YmNjOSgweDIyOCldPT09J01hcCd8fF8weDkxMTM1ZltfMHgyN2JjYzkoMHgyMjgpXT09PV8weDI3YmNjOSgweDFmOCl8fF8weDkxMTM1ZlsncHJvcHMnXVtfMHgyN2JjYzkoMHgxYjIpXShmdW5jdGlvbihfMHgyYTJjZGIsXzB4NDllZTRiKXt2YXIgXzB4NWU3NmIzPV8weDI3YmNjOSxfMHgxOTA2M2U9XzB4MmEyY2RiW18weDVlNzZiMygweDIxYildW18weDVlNzZiMygweDFhMildKCksXzB4NDQ2MDAzPV8weDQ5ZWU0YltfMHg1ZTc2YjMoMHgyMWIpXVtfMHg1ZTc2YjMoMHgxYTIpXSgpO3JldHVybiBfMHgxOTA2M2U8XzB4NDQ2MDAzPy0weDE6XzB4MTkwNjNlPl8weDQ0NjAwMz8weDE6MHgwO30pO31bJ19hZGRGdW5jdGlvbnNOb2RlJ10oXzB4MmU4ZTRkLF8weDE5OWMzMCl7dmFyIF8weDNkM2FhMD1fMHgxYWU5ZGU7aWYoIShfMHgxOTljMzBbXzB4M2QzYWEwKDB4MWI2KV18fCFfMHgyZThlNGRbXzB4M2QzYWEwKDB4MWU5KV18fCFfMHgyZThlNGRbJ3Byb3BzJ11bJ2xlbmd0aCddKSl7Zm9yKHZhciBfMHg0MzUxMzM9W10sXzB4MjUzMWU3PVtdLF8weDRiNWE2MT0weDAsXzB4MzZkMjhiPV8weDJlOGU0ZFtfMHgzZDNhYTAoMHgxZTkpXVsnbGVuZ3RoJ107XzB4NGI1YTYxPF8weDM2ZDI4YjtfMHg0YjVhNjErKyl7dmFyIF8weDEwZDc5NT1fMHgyZThlNGRbJ3Byb3BzJ11bXzB4NGI1YTYxXTtfMHgxMGQ3OTVbXzB4M2QzYWEwKDB4MjI4KV09PT1fMHgzZDNhYTAoMHgyNTQpP18weDQzNTEzM1tfMHgzZDNhYTAoMHgyMDQpXShfMHgxMGQ3OTUpOl8weDI1MzFlN1tfMHgzZDNhYTAoMHgyMDQpXShfMHgxMGQ3OTUpO31pZighKCFfMHgyNTMxZTdbXzB4M2QzYWEwKDB4MjRkKV18fF8weDQzNTEzM1snbGVuZ3RoJ108PTB4MSkpe18weDJlOGU0ZFsncHJvcHMnXT1fMHgyNTMxZTc7dmFyIF8weDE0ZGVjND17J2Z1bmN0aW9uc05vZGUnOiEweDAsJ3Byb3BzJzpfMHg0MzUxMzN9O3RoaXNbXzB4M2QzYWEwKDB4MjhlKV0oXzB4MTRkZWM0LF8weDE5OWMzMCksdGhpc1tfMHgzZDNhYTAoMHgyMGEpXShfMHgxNGRlYzQsXzB4MTk5YzMwKSx0aGlzWydfc2V0Tm9kZUV4cGFuZGFibGVTdGF0ZSddKF8weDE0ZGVjNCksdGhpc1snX3NldE5vZGVQZXJtaXNzaW9ucyddKF8weDE0ZGVjNCxfMHgxOTljMzApLF8weDE0ZGVjNFsnaWQnXSs9J1xcXFx4MjBmJyxfMHgyZThlNGRbJ3Byb3BzJ11bJ3Vuc2hpZnQnXShfMHgxNGRlYzQpO319fVsnX2FkZExvYWROb2RlJ10oXzB4NGE4ZjdhLF8weDM0NmRiMCl7fVsnX3NldE5vZGVFeHBhbmRhYmxlU3RhdGUnXShfMHgxYzZmZDEpe31bXzB4MWFlOWRlKDB4MWRlKV0oXzB4MTIxMWU5KXt2YXIgXzB4MzkwM2I1PV8weDFhZTlkZTtyZXR1cm4gQXJyYXlbXzB4MzkwM2I1KDB4MjA4KV0oXzB4MTIxMWU5KXx8dHlwZW9mIF8weDEyMTFlOT09J29iamVjdCcmJnRoaXNbXzB4MzkwM2I1KDB4MjFhKV0oXzB4MTIxMWU5KT09PSdbb2JqZWN0XFxcXHgyMEFycmF5XSc7fVtfMHgxYWU5ZGUoMHgxZDApXShfMHgzMTFlOGMsXzB4NjlmOGYwKXt9W18weDFhZTlkZSgweDI1MyldKF8weDFmYjVhZCl7dmFyIF8weDRlNTE2YT1fMHgxYWU5ZGU7ZGVsZXRlIF8weDFmYjVhZFtfMHg0ZTUxNmEoMHgxZmMpXSxkZWxldGUgXzB4MWZiNWFkWydfaGFzU2V0T25JdHNQYXRoJ10sZGVsZXRlIF8weDFmYjVhZFsnX2hhc01hcE9uSXRzUGF0aCddO31bJ19zZXROb2RlRXhwcmVzc2lvblBhdGgnXShfMHgxZjQzZjAsXzB4NWRjMThjKXt9fWxldCBfMHg0NGUwOTc9bmV3IF8weDM5YWVlMygpLF8weDU1NTkzMz17J3Byb3BzJzoweDY0LCdlbGVtZW50cyc6MHg2NCwnc3RyTGVuZ3RoJzoweDQwMCoweDMyLCd0b3RhbFN0ckxlbmd0aCc6MHg0MDAqMHgzMiwnYXV0b0V4cGFuZExpbWl0JzoweDEzODgsJ2F1dG9FeHBhbmRNYXhEZXB0aCc6MHhhfSxfMHg1ZWY0YmI9eydwcm9wcyc6MHg1LCdlbGVtZW50cyc6MHg1LCdzdHJMZW5ndGgnOjB4MTAwLCd0b3RhbFN0ckxlbmd0aCc6MHgxMDAqMHgzLCdhdXRvRXhwYW5kTGltaXQnOjB4MWUsJ2F1dG9FeHBhbmRNYXhEZXB0aCc6MHgyfTtmdW5jdGlvbiBfMHg0N2FlZTAoXzB4NWY1MTliLF8weDM2ZTFjMixfMHgzOGE1YjIsXzB4MjQ1YTMzLF8weDMzODQyZSxfMHg0N2Y5OWQpe3ZhciBfMHgxYjZkYzk9XzB4MWFlOWRlO2xldCBfMHg0ZTkwOTcsXzB4MmQ1ZjA4O3RyeXtfMHgyZDVmMDg9XzB4NWY0MjU0KCksXzB4NGU5MDk3PV8weDM5YmUwMVtfMHgzNmUxYzJdLCFfMHg0ZTkwOTd8fF8weDJkNWYwOC1fMHg0ZTkwOTdbJ3RzJ10+MHgxZjQmJl8weDRlOTA5N1tfMHgxYjZkYzkoMHgxZWIpXSYmXzB4NGU5MDk3W18weDFiNmRjOSgweDIwOSldL18weDRlOTA5N1tfMHgxYjZkYzkoMHgxZWIpXTwweDY0PyhfMHgzOWJlMDFbXzB4MzZlMWMyXT1fMHg0ZTkwOTc9eydjb3VudCc6MHgwLCd0aW1lJzoweDAsJ3RzJzpfMHgyZDVmMDh9LF8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXT17fSk6XzB4MmQ1ZjA4LV8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsndHMnXT4weDMyJiZfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ2NvdW50J10mJl8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsndGltZSddL18weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVtfMHgxYjZkYzkoMHgxZWIpXTwweDY0JiYoXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldPXt9KTtsZXQgXzB4MzIxYzVlPVtdLF8weDEwMzg3MT1fMHg0ZTkwOTdbJ3JlZHVjZUxpbWl0cyddfHxfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ3JlZHVjZUxpbWl0cyddP18weDVlZjRiYjpfMHg1NTU5MzMsXzB4MWU0YWVjPV8weDExZjAwYj0+e3ZhciBfMHgxZDkzYzM9XzB4MWI2ZGM5O2xldCBfMHgzOTcwYzU9e307cmV0dXJuIF8weDM5NzBjNVsncHJvcHMnXT1fMHgxMWYwMGJbXzB4MWQ5M2MzKDB4MWU5KV0sXzB4Mzk3MGM1W18weDFkOTNjMygweDIyZCldPV8weDExZjAwYltfMHgxZDkzYzMoMHgyMmQpXSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MjY4KV09XzB4MTFmMDBiW18weDFkOTNjMygweDI2OCldLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxYWEpXT1fMHgxMWYwMGJbXzB4MWQ5M2MzKDB4MWFhKV0sXzB4Mzk3MGM1W18weDFkOTNjMygweDI0MSldPV8weDExZjAwYlsnYXV0b0V4cGFuZExpbWl0J10sXzB4Mzk3MGM1W18weDFkOTNjMygweDFmMSldPV8weDExZjAwYlsnYXV0b0V4cGFuZE1heERlcHRoJ10sXzB4Mzk3MGM1W18weDFkOTNjMygweDFkNildPSEweDEsXzB4Mzk3MGM1Wydub0Z1bmN0aW9ucyddPSFfMHg1YmUwNzIsXzB4Mzk3MGM1W18weDFkOTNjMygweDFkMSldPTB4MSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWQzKV09MHgwLF8weDM5NzBjNVsnZXhwSWQnXT1fMHgxZDkzYzMoMHgyNTUpLF8weDM5NzBjNVsncm9vdEV4cHJlc3Npb24nXT1fMHgxZDkzYzMoMHgxYmEpLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyMmMpXT0hMHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyMmUpXT1bXSxfMHgzOTcwYzVbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J109MHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxYmUpXT0hMHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxZTMpXT0weDAsXzB4Mzk3MGM1W18weDFkOTNjMygweDI4YyldPXsnY3VycmVudCc6dm9pZCAweDAsJ3BhcmVudCc6dm9pZCAweDAsJ2luZGV4JzoweDB9LF8weDM5NzBjNTt9O2Zvcih2YXIgXzB4NGUwNjZlPTB4MDtfMHg0ZTA2NmU8XzB4MzM4NDJlW18weDFiNmRjOSgweDI0ZCldO18weDRlMDY2ZSsrKV8weDMyMWM1ZVtfMHgxYjZkYzkoMHgyMDQpXShfMHg0NGUwOTdbXzB4MWI2ZGM5KDB4MjNkKV0oeyd0aW1lTm9kZSc6XzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MjA5KXx8dm9pZCAweDB9LF8weDMzODQyZVtfMHg0ZTA2NmVdLF8weDFlNGFlYyhfMHgxMDM4NzEpLHt9KSk7aWYoXzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MWEzKXx8XzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MjJhKSl7bGV0IF8weDQyMjNhMD1FcnJvclsnc3RhY2tUcmFjZUxpbWl0J107dHJ5e0Vycm9yW18weDFiNmRjOSgweDI3OCldPTB4MS8weDAsXzB4MzIxYzVlW18weDFiNmRjOSgweDIwNCldKF8weDQ0ZTA5N1tfMHgxYjZkYzkoMHgyM2QpXSh7J3N0YWNrTm9kZSc6ITB4MH0sbmV3IEVycm9yKClbXzB4MWI2ZGM5KDB4MjZiKV0sXzB4MWU0YWVjKF8weDEwMzg3MSkseydzdHJMZW5ndGgnOjB4MS8weDB9KSk7fWZpbmFsbHl7RXJyb3JbXzB4MWI2ZGM5KDB4Mjc4KV09XzB4NDIyM2EwO319cmV0dXJueydtZXRob2QnOl8weDFiNmRjOSgweDIzMCksJ3ZlcnNpb24nOl8weDVhNTc0NSwnYXJncyc6W3sndHMnOl8weDM4YTViMiwnc2Vzc2lvbic6XzB4MjQ1YTMzLCdhcmdzJzpfMHgzMjFjNWUsJ2lkJzpfMHgzNmUxYzIsJ2NvbnRleHQnOl8weDQ3Zjk5ZH1dfTt9Y2F0Y2goXzB4NWIyOGVlKXtyZXR1cm57J21ldGhvZCc6XzB4MWI2ZGM5KDB4MjMwKSwndmVyc2lvbic6XzB4NWE1NzQ1LCdhcmdzJzpbeyd0cyc6XzB4MzhhNWIyLCdzZXNzaW9uJzpfMHgyNDVhMzMsJ2FyZ3MnOlt7J3R5cGUnOid1bmtub3duJywnZXJyb3InOl8weDViMjhlZSYmXzB4NWIyOGVlW18weDFiNmRjOSgweDIyMildfV0sJ2lkJzpfMHgzNmUxYzIsJ2NvbnRleHQnOl8weDQ3Zjk5ZH1dfTt9ZmluYWxseXt0cnl7aWYoXzB4NGU5MDk3JiZfMHgyZDVmMDgpe2xldCBfMHgxZDY1YzY9XzB4NWY0MjU0KCk7XzB4NGU5MDk3Wydjb3VudCddKyssXzB4NGU5MDk3W18weDFiNmRjOSgweDIwOSldKz1fMHgzNDkxM2IoXzB4MmQ1ZjA4LF8weDFkNjVjNiksXzB4NGU5MDk3Wyd0cyddPV8weDFkNjVjNixfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ2NvdW50J10rKyxfMHgzOWJlMDFbJ2hpdHMnXVtfMHgxYjZkYzkoMHgyMDkpXSs9XzB4MzQ5MTNiKF8weDJkNWYwOCxfMHgxZDY1YzYpLF8weDM5YmUwMVsnaGl0cyddWyd0cyddPV8weDFkNjVjNiwoXzB4NGU5MDk3W18weDFiNmRjOSgweDFlYildPjB4MzJ8fF8weDRlOTA5N1tfMHgxYjZkYzkoMHgyMDkpXT4weDY0KSYmKF8weDRlOTA5N1sncmVkdWNlTGltaXRzJ109ITB4MCksKF8weDM5YmUwMVsnaGl0cyddWydjb3VudCddPjB4M2U4fHxfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bXzB4MWI2ZGM5KDB4MjA5KV0+MHgxMmMpJiYoXzB4MzliZTAxWydoaXRzJ11bXzB4MWI2ZGM5KDB4MjNhKV09ITB4MCk7fX1jYXRjaHt9fX1yZXR1cm4gXzB4NDdhZWUwO30oKF8weDJhYmIwMCxfMHg3NDEzMjYsXzB4MjY4ODE2LF8weDgzMTY5NCxfMHgxNzIyYTEsXzB4MmRlMTlmLF8weDFlMzAyYSxfMHgzNjNiOGQsXzB4YTBhMzAzLF8weDVlNTVmMSxfMHgzMDZhYjMpPT57dmFyIF8weDMxMzQ0ND1fMHhmZTVlNDQ7aWYoXzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldKXJldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV07aWYoIUgoXzB4MmFiYjAwLF8weDM2M2I4ZCxfMHgxNzIyYTEpKXJldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV09eydjb25zb2xlTG9nJzooKT0+e30sJ2NvbnNvbGVUcmFjZSc6KCk9Pnt9LCdjb25zb2xlVGltZSc6KCk9Pnt9LCdjb25zb2xlVGltZUVuZCc6KCk9Pnt9LCdhdXRvTG9nJzooKT0+e30sJ2F1dG9Mb2dNYW55JzooKT0+e30sJ2F1dG9UcmFjZU1hbnknOigpPT57fSwnY292ZXJhZ2UnOigpPT57fSwnYXV0b1RyYWNlJzooKT0+e30sJ2F1dG9UaW1lJzooKT0+e30sJ2F1dG9UaW1lRW5kJzooKT0+e319LF8weDJhYmIwMFtfMHgzMTM0NDQoMHgyNGMpXTtsZXQgXzB4M2I3ZDhkPUIoXzB4MmFiYjAwKSxfMHg0ZDlmNDc9XzB4M2I3ZDhkW18weDMxMzQ0NCgweDFiMSldLF8weGZjNmY2Yz1fMHgzYjdkOGRbXzB4MzEzNDQ0KDB4MjEyKV0sXzB4MTc1ZjJiPV8weDNiN2Q4ZFtfMHgzMTM0NDQoMHgyNDkpXSxfMHgxMjg3MjU9eydoaXRzJzp7fSwndHMnOnt9fSxfMHg0MmQ2Y2U9WChfMHgyYWJiMDAsXzB4YTBhMzAzLF8weDEyODcyNSxfMHgyZGUxOWYpLF8weDU0MWI0ZT1fMHgxODdjOGQ9PntfMHgxMjg3MjVbJ3RzJ11bXzB4MTg3YzhkXT1fMHhmYzZmNmMoKTt9LF8weDQ5ZWEwOD0oXzB4Mjk2NWY3LF8weDU0ZTBiNCk9PntsZXQgXzB4YTNhN2ExPV8weDEyODcyNVsndHMnXVtfMHg1NGUwYjRdO2lmKGRlbGV0ZSBfMHgxMjg3MjVbJ3RzJ11bXzB4NTRlMGI0XSxfMHhhM2E3YTEpe2xldCBfMHgzNzk5YTU9XzB4NGQ5ZjQ3KF8weGEzYTdhMSxfMHhmYzZmNmMoKSk7XzB4NDhhODk2KF8weDQyZDZjZSgndGltZScsXzB4Mjk2NWY3LF8weDE3NWYyYigpLF8weDFjOTZjYSxbXzB4Mzc5OWE1XSxfMHg1NGUwYjQpKTt9fSxfMHgxY2E5NWY9XzB4NTU2ZTJlPT57dmFyIF8weDYzNGM2ZD1fMHgzMTM0NDQsXzB4M2E3OGY5O3JldHVybiBfMHgxNzIyYTE9PT1fMHg2MzRjNmQoMHgyMzcpJiZfMHgyYWJiMDBbXzB4NjM0YzZkKDB4MWE3KV0mJigoXzB4M2E3OGY5PV8weDU1NmUyZT09bnVsbD92b2lkIDB4MDpfMHg1NTZlMmVbXzB4NjM0YzZkKDB4MWY2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDNhNzhmOVtfMHg2MzRjNmQoMHgyNGQpXSkmJihfMHg1NTZlMmVbJ2FyZ3MnXVsweDBdW18weDYzNGM2ZCgweDFhNyldPV8weDJhYmIwMFtfMHg2MzRjNmQoMHgxYTcpXSksXzB4NTU2ZTJlO307XzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldPXsnY29uc29sZUxvZyc6KF8weDFkOTA0NCxfMHgzZGEzYWIpPT57dmFyIF8weDU3OGExZT1fMHgzMTM0NDQ7XzB4MmFiYjAwW18weDU3OGExZSgweDIyNyldWydsb2cnXVtfMHg1NzhhMWUoMHgyMWIpXSE9PV8weDU3OGExZSgweDI3ZCkmJl8weDQ4YTg5NihfMHg0MmQ2Y2UoJ2xvZycsXzB4MWQ5MDQ0LF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHgzZGEzYWIpKTt9LCdjb25zb2xlVHJhY2UnOihfMHgzODQ2OGQsXzB4NTBiNTQ4KT0+e3ZhciBfMHgxNDQxMjM9XzB4MzEzNDQ0LF8weDJjMGEzYixfMHg0MWJkMzA7XzB4MmFiYjAwWydjb25zb2xlJ11bXzB4MTQ0MTIzKDB4MjMwKV1bXzB4MTQ0MTIzKDB4MjFiKV0hPT1fMHgxNDQxMjMoMHgyN2EpJiYoKF8weDQxYmQzMD0oXzB4MmMwYTNiPV8weDJhYmIwMFtfMHgxNDQxMjMoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4MmMwYTNiW18weDE0NDEyMygweDI2ZildKSE9bnVsbCYmXzB4NDFiZDMwW18weDE0NDEyMygweDI4YyldJiYoXzB4MmFiYjAwW18weDE0NDEyMygweDFlMSldPSEweDApLF8weDQ4YTg5NihfMHgxY2E5NWYoXzB4NDJkNmNlKCd0cmFjZScsXzB4Mzg0NjhkLF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHg1MGI1NDgpKSkpO30sJ2NvbnNvbGVFcnJvcic6KF8weGU4M2MwMixfMHg1MjgyNmUpPT57dmFyIF8weDE0ZGNjYT1fMHgzMTM0NDQ7XzB4MmFiYjAwW18weDE0ZGNjYSgweDFlMSldPSEweDAsXzB4NDhhODk2KF8weDFjYTk1ZihfMHg0MmQ2Y2UoXzB4MTRkY2NhKDB4MjJhKSxfMHhlODNjMDIsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDUyODI2ZSkpKTt9LCdjb25zb2xlVGltZSc6XzB4NWNhZjNmPT57XzB4NTQxYjRlKF8weDVjYWYzZik7fSwnY29uc29sZVRpbWVFbmQnOihfMHgyN2Q4YzUsXzB4NDE3NDc0KT0+e18weDQ5ZWEwOChfMHg0MTc0NzQsXzB4MjdkOGM1KTt9LCdhdXRvTG9nJzooXzB4ODVjNmRmLF8weDdmMzlhMik9Pnt2YXIgXzB4NDBiYjQ5PV8weDMxMzQ0NDtfMHg0OGE4OTYoXzB4NDJkNmNlKF8weDQwYmI0OSgweDIzMCksXzB4N2YzOWEyLF8weDE3NWYyYigpLF8weDFjOTZjYSxbXzB4ODVjNmRmXSkpO30sJ2F1dG9Mb2dNYW55JzooXzB4NTE1OGMwLF8weDdiOTlkMik9PntfMHg0OGE4OTYoXzB4NDJkNmNlKCdsb2cnLF8weDUxNThjMCxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsXzB4N2I5OWQyKSk7fSwnYXV0b1RyYWNlJzooXzB4MWJjMTFkLF8weDU2NWNjOSk9PntfMHg0OGE4OTYoXzB4MWNhOTVmKF8weDQyZDZjZSgndHJhY2UnLF8weDU2NWNjOSxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsW18weDFiYzExZF0pKSk7fSwnYXV0b1RyYWNlTWFueSc6KF8weDM1MjM0NSxfMHg0YzdmOTUpPT57dmFyIF8weDM3OGUxMD1fMHgzMTM0NDQ7XzB4NDhhODk2KF8weDFjYTk1ZihfMHg0MmQ2Y2UoXzB4Mzc4ZTEwKDB4MWEzKSxfMHgzNTIzNDUsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDRjN2Y5NSkpKTt9LCdhdXRvVGltZSc6KF8weDUzNTlmYSxfMHgyNTk5MGEsXzB4MzIzZDY4KT0+e18weDU0MWI0ZShfMHgzMjNkNjgpO30sJ2F1dG9UaW1lRW5kJzooXzB4NWJlOWJjLF8weDVkYmUwYSxfMHhiYTQ0NWYpPT57XzB4NDllYTA4KF8weDVkYmUwYSxfMHhiYTQ0NWYpO30sJ2NvdmVyYWdlJzpfMHgyN2JlNDE9Pnt2YXIgXzB4MjBhZmZlPV8weDMxMzQ0NDtfMHg0OGE4OTYoeydtZXRob2QnOl8weDIwYWZmZSgweDFkMiksJ3ZlcnNpb24nOl8weDJkZTE5ZiwnYXJncyc6W3snaWQnOl8weDI3YmU0MX1dfSk7fX07bGV0IF8weDQ4YTg5Nj1xKF8weDJhYmIwMCxfMHg3NDEzMjYsXzB4MjY4ODE2LF8weDgzMTY5NCxfMHgxNzIyYTEsXzB4NWU1NWYxLF8weDMwNmFiMyksXzB4MWM5NmNhPV8weDJhYmIwMFsnX2NvbnNvbGVfbmluamFfc2Vzc2lvbiddO3JldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV07fSkoZ2xvYmFsVGhpcywnMTI3LjAuMC4xJywnNjA1OTEnLF8weGZlNWU0NCgweDFjZSksJ3dlYnBhY2snLF8weGZlNWU0NCgweDI2YyksXzB4ZmU1ZTQ0KDB4Mjg2KSxfMHhmZTVlNDQoMHgyMWMpLF8weGZlNWU0NCgweDFjZCksXzB4ZmU1ZTQ0KDB4Mjc1KSxfMHhmZTVlNDQoMHgyNDQpKTtcIik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSB9XHJcbjsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fb28oaSwgLi4udikgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlTG9nKGksIHYpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb19vbzsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fdHIoaSwgLi4udikgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlVHJhY2UoaSwgdik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX3RyOyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb190eChpLCAuLi52KSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVFcnJvcihpLCB2KTtcclxufVxyXG5jYXRjaCAoZSkgeyB9IHJldHVybiB2OyB9XHJcbjtcclxub29fdHg7IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbmZ1bmN0aW9uIG9vX3RzKHYpIHsgdHJ5IHtcclxuICAgIG9vX2NtKCkuY29uc29sZVRpbWUodik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX3RzOyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb190ZSh2LCBpKSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVUaW1lRW5kKHYsIGkpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb190ZTsgLyplc2xpbnQgdW5pY29ybi9uby1hYnVzaXZlLWVzbGludC1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvZGlzYWJsZS1lbmFibGUtcGFpcjosZXNsaW50LWNvbW1lbnRzL25vLXVubGltaXRlZC1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvbm8tYWdncmVnYXRpbmctZW5hYmxlOixlc2xpbnQtY29tbWVudHMvbm8tZHVwbGljYXRlLWRpc2FibGU6LGVzbGludC1jb21tZW50cy9uby11bnVzZWQtZGlzYWJsZTosZXNsaW50LWNvbW1lbnRzL25vLXVudXNlZC1lbmFibGU6LCovXHJcbiIsImV4cG9ydCBjb25zdCBmaXJlYmFzZUNvbmZpZyA9IHtcclxuICAgIGFwaUtleTogXCJBSXphU3lCOGMybEJWaTI2dTdZUkw5c3hPUDk3VWFxM3lOOGhUbDRcIixcclxuICAgIGF1dGhEb21haW46IFwiZnRtLWI5ZDk5LmZpcmViYXNlYXBwLmNvbVwiLFxyXG4gICAgZGF0YWJhc2VVUkw6IFwiaHR0cHM6Ly9mdG0tYjlkOTkuZmlyZWJhc2Vpby5jb21cIixcclxuICAgIHByb2plY3RJZDogXCJmdG0tYjlkOTlcIixcclxuICAgIHN0b3JhZ2VCdWNrZXQ6IFwiZnRtLWI5ZDk5LmFwcHNwb3QuY29tXCIsXHJcbiAgICBtZXNzYWdpbmdTZW5kZXJJZDogXCI2MDI0MDIzODc5NDFcIixcclxuICAgIGFwcElkOiBcIjE6NjAyNDAyMzg3OTQxOndlYjphNjNmNGVhZGRjOTQ5ZjUzOWRlMTBjXCIsXHJcbiAgICBtZWFzdXJlbWVudElkOiBcIkctRlZMU043RDdOTVwiLFxyXG59O1xyXG4iLCJpbXBvcnQgeyBCYXNlRmlyZWJhc2VJbnRlZ3JhdGlvbiB9IGZyb20gXCIuL2Jhc2UtZmlyZWJhc2UtaW50ZWdyYXRpb25cIjtcclxuZXhwb3J0IGNsYXNzIEZpcmViYXNlSW50ZWdyYXRpb24gZXh0ZW5kcyBCYXNlRmlyZWJhc2VJbnRlZ3JhdGlvbiB7XHJcbiAgICBzdGF0aWMgaW5zdGFuY2U7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGdldEluc3RhbmNlKCkge1xyXG4gICAgICAgIGlmICghRmlyZWJhc2VJbnRlZ3JhdGlvbi5pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICBGaXJlYmFzZUludGVncmF0aW9uLmluc3RhbmNlID0gbmV3IEZpcmViYXNlSW50ZWdyYXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIEZpcmViYXNlSW50ZWdyYXRpb24uaW5zdGFuY2U7XHJcbiAgICB9XHJcbiAgICBzZW5kU2Vzc2lvblN0YXJ0RXZlbnQoZGF0YSkge1xyXG4gICAgICAgIHRoaXMuY3VzdG9tRXZlbnRzKFwic2Vzc2lvbl9zdGFydFwiLCBkYXRhKTtcclxuICAgIH1cclxuICAgIHNlbmRTZXNzaW9uRW5kRXZlbnQoZGF0YSkge1xyXG4gICAgICAgIHRoaXMuY3VzdG9tRXZlbnRzKFwic2Vzc2lvbl9lbmRcIiwgZGF0YSk7XHJcbiAgICB9XHJcbiAgICBzZW5kU2VsZWN0ZWRMZXZlbEV2ZW50KGRhdGEpIHtcclxuICAgICAgICB0aGlzLmN1c3RvbUV2ZW50cyhcInNlbGVjdGVkX2xldmVsXCIsIGRhdGEpO1xyXG4gICAgfVxyXG4gICAgc2VuZFRhcHBlZFN0YXJ0RXZlbnQoZGF0YSkge1xyXG4gICAgICAgIHRoaXMuY3VzdG9tRXZlbnRzKFwidGFwcGVkX3N0YXJ0XCIsIGRhdGEpO1xyXG4gICAgfVxyXG4gICAgc2VuZFB1enpsZUNvbXBsZXRlZEV2ZW50KGRhdGEpIHtcclxuICAgICAgICB0aGlzLmN1c3RvbUV2ZW50cyhcInB1enpsZV9jb21wbGV0ZWRcIiwgZGF0YSk7XHJcbiAgICB9XHJcbiAgICBzZW5kTGV2ZWxDb21wbGV0ZWRFdmVudChkYXRhKSB7XHJcbiAgICAgICAgdGhpcy5jdXN0b21FdmVudHMoXCJsZXZlbF9jb21wbGV0ZWRcIiwgZGF0YSk7XHJcbiAgICB9XHJcbiAgICBzZW5kVXNlckNsaWNrZWRPblBsYXlFdmVudCgpIHtcclxuICAgICAgICB0aGlzLmN1c3RvbUV2ZW50cygndXNlcl9jbGlja2VkJywgeyBjbGljazogJ0NsaWNrJyB9KTtcclxuICAgIH1cclxuICAgIHNlbmREb3dubG9hZENvbXBsZXRlZEV2ZW50KGRhdGEpIHtcclxuICAgICAgICB0aGlzLmN1c3RvbUV2ZW50cygnZG93bmxvYWRfY29tcGxldGVkJywgZGF0YSk7XHJcbiAgICB9XHJcbn1cclxuIiwiLy8gY3VzdG9tIEV2ZW50c1xyXG5leHBvcnQgY29uc3QgTE9BRFBVWlpMRSA9IFwibG9hZHB1enpsZVwiO1xyXG5leHBvcnQgY29uc3QgU1RPTkVEUk9QID0gXCJzdG9uZXNkcm9wcGVkXCI7XHJcbi8vIGRlZmF1bHQgRXZlbnRzXHJcbmV4cG9ydCBjb25zdCBNT1VTRU1PVkUgPSBcIm1vdXNlbW92ZVwiO1xyXG5leHBvcnQgY29uc3QgTU9VU0VET1dOID0gXCJtb3VzZWRvd25cIjtcclxuZXhwb3J0IGNvbnN0IE1PVVNFVVAgPSBcIm1vdXNldXBcIjtcclxuZXhwb3J0IGNvbnN0IFRPVUNIU1RBUlQgPSBcInRvdWNoc3RhcnRcIjtcclxuZXhwb3J0IGNvbnN0IFRPVUNITU9WRSA9IFwidG91Y2htb3ZlXCI7XHJcbmV4cG9ydCBjb25zdCBUT1VDSEVORCA9IFwidG91Y2hlbmRcIjtcclxuZXhwb3J0IGNvbnN0IENMSUNLID0gXCJjbGlja1wiO1xyXG5leHBvcnQgY29uc3QgVklTSUJJTElUWV9DSEFOR0UgPSBcInZpc2liaWxpdHljaGFuZ2VcIjtcclxuIiwiY29uc3QgdXJsUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh3aW5kb3cubG9jYXRpb24uc2VhcmNoKTtcclxuaW1wb3J0IHsgRGV2ZWxvcG1lbnRTZXJ2ZXIgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBVdGlscyB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmV4cG9ydCB2YXIgcHNldWRvSWQgPSB1cmxQYXJhbXMuZ2V0KFwiY3JfdXNlcl9pZFwiKTtcclxuZXhwb3J0IHZhciBsYW5nID0gdXJsUGFyYW1zLmdldChcImNyX2xhbmdcIikgPT0gbnVsbCA/IFwiZW5nbGlzaFwiIDogdXJsUGFyYW1zLmdldChcImNyX2xhbmdcIik7XHJcbmV4cG9ydCBjb25zdCBmb250ID0gVXRpbHMuZ2V0TGFuZ3VhZ2VTcGVjaWZpY0ZvbnQobGFuZyk7XHJcbmV4cG9ydCBjb25zdCBEZWJ1Z2dlciA9IHtcclxuICAgIERldmVsb3BtZW50TGluazogd2luZG93LmxvY2F0aW9uLmhyZWYuaW5jbHVkZXMoRGV2ZWxvcG1lbnRTZXJ2ZXIpXHJcbiAgICAgICAgPyB0cnVlXHJcbiAgICAgICAgOiBmYWxzZSxcclxuICAgIERlYnVnTW9kZTogZmFsc2UsXHJcbn07XHJcbiIsImltcG9ydCB7IGZvbnQgfSBmcm9tIFwiQGNvbW1vblwiO1xyXG5leHBvcnQgY2xhc3MgU3RvbmVDb25maWcge1xyXG4gICAgeDtcclxuICAgIHk7XHJcbiAgICBvcmlneDtcclxuICAgIG9yaWd5O1xyXG4gICAgdGV4dDtcclxuICAgIGltZztcclxuICAgIGltYWdlU2l6ZTtcclxuICAgIHRleHRGb250U2l6ZTtcclxuICAgIGNhbnZhc1dpZHRoO1xyXG4gICAgY2FudmFzSGVpZ2h0O1xyXG4gICAgaW1hZ2VDZW50ZXJPZmZzZXRYO1xyXG4gICAgaW1hZ2VDZW50ZXJPZmZzZXRZO1xyXG4gICAgY29udGV4dDtcclxuICAgIHR1dG9yaWFsSW5zdGFuY2U7XHJcbiAgICB0aW1lclRpY2tpbmdJbnN0YW5jZTtcclxuICAgIGZyYW1lID0gMDtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIGNhbnZhc1dpZHRoLCBjYW52YXNIZWlnaHQsIHN0b25lTGV0dGVyLCB4UG9zLCB5UG9zLCBpbWcsIHRpbWVyVGlja2luZ0luc3RhbmNlLCB0dXRvcmlhbEluc3RhbmNlKSB7XHJcbiAgICAgICAgdGhpcy54ID0geFBvcztcclxuICAgICAgICB0aGlzLnkgPSB5UG9zO1xyXG4gICAgICAgIHRoaXMub3JpZ3ggPSB4UG9zO1xyXG4gICAgICAgIHRoaXMub3JpZ3kgPSB5UG9zO1xyXG4gICAgICAgIHRoaXMuY2FudmFzV2lkdGggPSBjYW52YXNXaWR0aDtcclxuICAgICAgICB0aGlzLmNhbnZhc0hlaWdodCA9IGNhbnZhc0hlaWdodDtcclxuICAgICAgICB0aGlzLnR1dG9yaWFsSW5zdGFuY2UgPSB0dXRvcmlhbEluc3RhbmNlO1xyXG4gICAgICAgIHRoaXMudGV4dCA9IHN0b25lTGV0dGVyO1xyXG4gICAgICAgIHRoaXMuaW1nID0gaW1nO1xyXG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XHJcbiAgICAgICAgdGhpcy5jYWxjdWxhdGVJbWFnZUFuZEZvbnRTaXplKCk7XHJcbiAgICAgICAgdGhpcy5pbWFnZUNlbnRlck9mZnNldFggPSB0aGlzLmltYWdlU2l6ZSAvIDIuMztcclxuICAgICAgICB0aGlzLmltYWdlQ2VudGVyT2Zmc2V0WSA9IHRoaXMuaW1hZ2VTaXplIC8gMS41O1xyXG4gICAgICAgIHRoaXMudGltZXJUaWNraW5nSW5zdGFuY2UgPSB0aW1lclRpY2tpbmdJbnN0YW5jZTtcclxuICAgIH1cclxuICAgIGNhbGN1bGF0ZUltYWdlQW5kRm9udFNpemUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY29udGV4dC5tZWFzdXJlVGV4dCh0aGlzLnRleHQpLndpZHRoICogMS40ID5cclxuICAgICAgICAgICAgdGhpcy5jYW52YXNIZWlnaHQgLyA5LjUpIHtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZVNpemUgPSB0aGlzLmNvbnRleHQubWVhc3VyZVRleHQodGhpcy50ZXh0KS53aWR0aCAqIDEuMTtcclxuICAgICAgICAgICAgdGhpcy50ZXh0Rm9udFNpemUgPSB0aGlzLmNhbnZhc0hlaWdodCAvIDI1O1xyXG4gICAgICAgICAgICBpZiAodGhpcy50ZXh0Lmxlbmd0aCA+PSAzICYmIHRoaXMub3JpZ3ggPCA1MCAmJiB0aGlzLm9yaWd4IDwgdGhpcy5jYW52YXNXaWR0aCAvIDIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMueCA9IHRoaXMub3JpZ3ggKyAyMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZVNpemUgPSB0aGlzLmNhbnZhc0hlaWdodCAvIDkuNTtcclxuICAgICAgICAgICAgdGhpcy50ZXh0Rm9udFNpemUgPSB0aGlzLmNhbnZhc0hlaWdodCAvIDIwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGdldEVhc2UgPSAoY3VycmVudFByb2dyZXNzLCBzdGFydCwgZGlzdGFuY2UsIHN0ZXBzKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIC1kaXN0YW5jZSAvIDIgKiAoTWF0aC5jb3MoTWF0aC5QSSAqIGN1cnJlbnRQcm9ncmVzcyAvIHN0ZXBzKSAtIDEpICsgc3RhcnQ7XHJcbiAgICB9O1xyXG4gICAgZ2V0WCA9ICgpID0+IHtcclxuICAgICAgICBpZiAodGhpcy5mcmFtZSA+PSAxMDApIHtcclxuICAgICAgICAgICAgLy8gQW5pbWF0aW9uIGhhcyBlbmRlZCwgcmV0dXJuIHRoZSBmaW5hbCBzdG9uZSBwb3NpdGlvblxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy54O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRFYXNlKHRoaXMuZnJhbWUsIDAsIHRoaXMueCwgMTAwKTtcclxuICAgIH07XHJcbiAgICBnZXRZID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLmZyYW1lID49IDEwMCkge1xyXG4gICAgICAgICAgICAvLyBBbmltYXRpb24gaGFzIGVuZGVkLCByZXR1cm4gdGhlIGZpbmFsIHN0b25lIHBvc2l0aW9uXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmdldEVhc2UodGhpcy5mcmFtZSwgMCwgdGhpcy55LCAxMDApO1xyXG4gICAgfTtcclxuICAgIGFkanVzdFNpemUoc2hvdWxkUmVzaXplLCBudW0pIHtcclxuICAgICAgICByZXR1cm4gc2hvdWxkUmVzaXplID8gbnVtICogMS4yNSA6IG51bTtcclxuICAgIH1cclxuICAgIGRyYXcoZGVsdGFUaW1lLCBzaG91bGRSZXNpemUgPSBmYWxzZSkge1xyXG4gICAgICAgIGNvbnN0IHggPSB0aGlzLmdldFgoKSAtIHRoaXMuYWRqdXN0U2l6ZShzaG91bGRSZXNpemUsIHRoaXMuaW1hZ2VDZW50ZXJPZmZzZXRYKTtcclxuICAgICAgICBjb25zdCB5ID0gdGhpcy5nZXRZKCkgLSB0aGlzLmFkanVzdFNpemUoc2hvdWxkUmVzaXplLCB0aGlzLmltYWdlQ2VudGVyT2Zmc2V0WSk7XHJcbiAgICAgICAgLy8gQXBwbHkgc2hhZG93IHByb3BlcnRpZXNcclxuICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gJ3JlZCc7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnNoYWRvd0NvbG9yID0gJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMSknOyAvLyBDb2xvciBvZiB0aGUgc2hhZG93XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnNoYWRvd0JsdXIgPSAxMjsgLy8gQmx1ciBsZXZlbCBvZiB0aGUgc2hhZG93XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnNoYWRvd09mZnNldFggPSAwOyAvLyBIb3Jpem9udGFsIHNoYWRvdyBvZmZzZXRcclxuICAgICAgICB0aGlzLmNvbnRleHQuc2hhZG93T2Zmc2V0WSA9IDA7IC8vIFZlcnRpY2FsIHNoYWRvdyBvZmZzZXRcclxuICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMuaW1nLCB4LCB5LCB0aGlzLmFkanVzdFNpemUoc2hvdWxkUmVzaXplLCB0aGlzLmltYWdlU2l6ZSksIHRoaXMuYWRqdXN0U2l6ZShzaG91bGRSZXNpemUsIHRoaXMuaW1hZ2VTaXplKSk7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgICAgICB0aGlzLmNvbnRleHQuZm9udCA9IHRoaXMudGV4dEZvbnRTaXplICsgYHB4ICR7Zm9udH0sIG1vbm9zcGFjZWA7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnRleHRBbGlnbiA9IFwiY2VudGVyXCI7XHJcbiAgICAgICAgLy8gU2V0IHNoYWRvdyBwcm9wZXJ0aWVzXHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnNoYWRvd09mZnNldFggPSAwOyAvLyBNb3ZlIHNoYWRvdyB0byB0aGUgcmlnaHQgYnkgMTAgcGl4ZWxzXHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnNoYWRvd09mZnNldFkgPSAwOyAvLyBNb3ZlIHNoYWRvdyBkb3duIGJ5IDEwIHBpeGVsc1xyXG4gICAgICAgIHRoaXMuY29udGV4dC5zaGFkb3dCbHVyID0gMDsgLy8gQmx1ciB0aGUgc2hhZG93IGJ5IDE1IHBpeGVsc1xyXG4gICAgICAgIHRoaXMuY29udGV4dC5zaGFkb3dDb2xvciA9ICd0cmFuc3BhcmVudCAnOyAvLyBTZW1pLXRyYW5zcGFyZW50IHdoaXRlIHNoYWRvd1xyXG4gICAgICAgIHRoaXMuY29udGV4dC5maWxsVGV4dCh0aGlzLnRleHQsIHRoaXMuZ2V0WCgpLCB0aGlzLmdldFkoKSk7XHJcbiAgICAgICAgaWYgKHRoaXMuZnJhbWUgPCAxMDApIHtcclxuICAgICAgICAgICAgdGhpcy5mcmFtZSA9IHRoaXMuZnJhbWUgKyAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLnR1dG9yaWFsSW5zdGFuY2UgIT0gbnVsbCB8fCB0aGlzLnR1dG9yaWFsSW5zdGFuY2UgIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMudHV0b3JpYWxJbnN0YW5jZS5kcmF3KGRlbHRhVGltZSwgdGhpcy5pbWcsIHRoaXMuaW1hZ2VTaXplKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgRGVidWdnZXIgfSBmcm9tIFwiQGNvbW1vblwiO1xyXG5pbXBvcnQgeyBsYW5ndWFnZUZvbnRNYXBwaW5nIH0gZnJvbSBcIkBkYXRhL2kxOC1mb250LW1hcHBpbmdcIjtcclxuZXhwb3J0IGNsYXNzIFV0aWxzIHtcclxuICAgIHN0YXRpYyBVcmxTdWJzdHJpbmcgPSBcIi9mZWVkdGhlbW9uc3RlclwiO1xyXG4gICAgc3RhdGljIGdldENvbnZlcnRlZERldlByb2RVUkwodXJsKSB7XHJcbiAgICAgICAgcmV0dXJuIERlYnVnZ2VyLkRldmVsb3BtZW50TGlua1xyXG4gICAgICAgICAgICA/IHVybC5zbGljZSgwLCB1cmwuaW5kZXhPZih0aGlzLlVybFN1YnN0cmluZykgKyB0aGlzLlVybFN1YnN0cmluZy5sZW5ndGgpICtcclxuICAgICAgICAgICAgICAgIFwiZGV2XCIgK1xyXG4gICAgICAgICAgICAgICAgdXJsLnNsaWNlKHVybC5pbmRleE9mKHRoaXMuVXJsU3Vic3RyaW5nKSArIHRoaXMuVXJsU3Vic3RyaW5nLmxlbmd0aClcclxuICAgICAgICAgICAgOiB1cmw7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgZ2V0TGFuZ3VhZ2VTcGVjaWZpY0ZvbnQobGFuZ3VhZ2UpIHtcclxuICAgICAgICBjb25zdCBsb3dlckNhc2VMYW5ndWFnZSA9IGxhbmd1YWdlLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gbGFuZ3VhZ2VGb250TWFwcGluZykge1xyXG4gICAgICAgICAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkgPT09IGxvd2VyQ2FzZUxhbmd1YWdlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbGFuZ3VhZ2VGb250TWFwcGluZ1trZXldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlICovIGNvbnNvbGUubG9nKC4uLm9vX29vKGAyNzI0MDc2ODE3XzI2XzRfMjZfNTlfNGAsIGBGb250IG5vdCBmb3VuZCBmb3IgbGFuZ3VhZ2U6ICR7bGFuZ3VhZ2V9YCkpO1xyXG4gICAgICAgIHJldHVybiBcIk5vdG9TYW5zLVJlZ3VsYXJcIjtcclxuICAgIH1cclxuICAgIHN0YXRpYyBnZXRSYW5kb21OdW1iZXIobWluLCBtYXgpIHtcclxuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbjtcclxuICAgIH1cclxuICAgIHN0YXRpYyBnZXRFeGNsdWRlZENvb3JkaW5hdGVzKGNhbnZhcywgZXhjbHVzaW9uUGVyY2VudGFnZSkge1xyXG4gICAgICAgIGNvbnN0IGV4Y2x1ZGVkQXJlYVdpZHRoID0gY2FudmFzLndpZHRoICogKGV4Y2x1c2lvblBlcmNlbnRhZ2UgLyAxMDApO1xyXG4gICAgICAgIGNvbnN0IGV4Y2x1ZGVkQXJlYUhlaWdodCA9IGNhbnZhcy5oZWlnaHQgKiAoZXhjbHVzaW9uUGVyY2VudGFnZSAvIDEwMCk7XHJcbiAgICAgICAgcmV0dXJuIHsgZXhjbHVkZVg6IGV4Y2x1ZGVkQXJlYVdpZHRoLCBleGNsdWRlWTogZXhjbHVkZWRBcmVhSGVpZ2h0IH07XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJpcHBsZUVmZmVjdChjb250ZXh0KSB7XHJcbiAgICBjb25zdCBjdHggPSBjb250ZXh0O1xyXG4gICAgaWYgKCFjdHgpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW52YXMgY29udGV4dCBpcyBudWxsXCIpO1xyXG4gICAgfVxyXG4gICAgbGV0IGNlbnRlclggPSAwO1xyXG4gICAgbGV0IGNlbnRlclkgPSAwO1xyXG4gICAgY29uc3QgaW5pdGlhbE91dGVyUmFkaXVzID0gMTA7XHJcbiAgICBjb25zdCBpbml0aWFsSW5uZXJSYWRpdXMgPSAxMDtcclxuICAgIGNvbnN0IG1heFJhZGl1cyA9IDYwO1xyXG4gICAgbGV0IGluY3JlbWVudCA9IDAuNTtcclxuICAgIGxldCBvdXRlclJhZGl1cyA9IGluaXRpYWxPdXRlclJhZGl1cztcclxuICAgIGxldCBpbm5lclJhZGl1cyA9IGluaXRpYWxJbm5lclJhZGl1cztcclxuICAgIGZ1bmN0aW9uIGRyYXdSaXBwbGUoeCwgeSwgcmVzdGFydCkge1xyXG4gICAgICAgIGlmIChyZXN0YXJ0KSB7XHJcbiAgICAgICAgICAgIG91dGVyUmFkaXVzID0gMDtcclxuICAgICAgICAgICAgaW5uZXJSYWRpdXMgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjZW50ZXJYID0geDtcclxuICAgICAgICBjZW50ZXJZID0geTtcclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4LmFyYyhjZW50ZXJYLCBjZW50ZXJZLCBvdXRlclJhZGl1cywgMCwgMiAqIE1hdGguUEkpO1xyXG4gICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgICAgICBjdHgubGluZVdpZHRoID0gMjtcclxuICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xyXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjdHguYXJjKGNlbnRlclgsIGNlbnRlclksIGlubmVyUmFkaXVzLCAwLCAyICogTWF0aC5QSSk7XHJcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCJ3aGl0ZVwiO1xyXG4gICAgICAgIGN0eC5saW5lV2lkdGggPSAyO1xyXG4gICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgb3V0ZXJSYWRpdXMgKz0gaW5jcmVtZW50O1xyXG4gICAgICAgIGlubmVyUmFkaXVzICs9IGluY3JlbWVudDtcclxuICAgICAgICBpZiAob3V0ZXJSYWRpdXMgPj0gbWF4UmFkaXVzIHx8IGlubmVyUmFkaXVzID49IG1heFJhZGl1cykge1xyXG4gICAgICAgICAgICBvdXRlclJhZGl1cyA9IGluaXRpYWxPdXRlclJhZGl1cztcclxuICAgICAgICAgICAgaW5uZXJSYWRpdXMgPSBpbml0aWFsSW5uZXJSYWRpdXM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGRyYXdSaXBwbGU7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRJbWFnZXMoc291cmNlcywgY2FsbGJhY2spIHtcclxuICAgIGNvbnN0IGltYWdlcyA9IHt9O1xyXG4gICAgbGV0IGxvYWRlZEltYWdlcyA9IDA7XHJcbiAgICBjb25zdCBudW1JbWFnZXMgPSBPYmplY3Qua2V5cyhzb3VyY2VzKS5sZW5ndGg7XHJcbiAgICBmb3IgKGxldCBzcmMgaW4gc291cmNlcykge1xyXG4gICAgICAgIGltYWdlc1tzcmNdID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgaW1hZ2VzW3NyY10ub25sb2FkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoKytsb2FkZWRJbWFnZXMgPj0gbnVtSW1hZ2VzKSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhpbWFnZXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBpbWFnZXNbc3JjXS5zcmMgPSBzb3VyY2VzW3NyY107XHJcbiAgICB9XHJcbn1cclxuY29uc3QgY3JlYXRlSW1nID0gYXN5bmMgKGltYWdlKSA9PiB7XHJcbiAgICBjb25zdCBuZXdJbWFnZSA9IG5ldyBJbWFnZSgpO1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgICAgbmV3SW1hZ2Uub25sb2FkID0gKCkgPT4gcmVzb2x2ZShuZXdJbWFnZSk7XHJcbiAgICAgICAgbmV3SW1hZ2Uuc3JjID0gaW1hZ2U7XHJcbiAgICB9KTtcclxufTtcclxuZXhwb3J0IGNvbnN0IHN5bmNMb2FkaW5nSW1hZ2VzID0gYXN5bmMgKGltYWdlcykgPT4ge1xyXG4gICAgY29uc3QgbG9hZEltZ1Byb21pc2VzID0gT2JqZWN0LmtleXMoaW1hZ2VzKS5tYXAoYXN5bmMgKGFycktleSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGltZyA9IGF3YWl0IGNyZWF0ZUltZyhpbWFnZXNbYXJyS2V5XSk7XHJcbiAgICAgICAgcmV0dXJuIHsgW2FycktleV06IGltZyB9O1xyXG4gICAgfSk7XHJcbiAgICBjb25zdCByZXNvbHZlZEltYWdlID0gYXdhaXQgUHJvbWlzZS5hbGwobG9hZEltZ1Byb21pc2VzKTtcclxuICAgIGNvbnN0IGxvYWRlZEltYWdlcyA9IHJlc29sdmVkSW1hZ2UucmVkdWNlKChhY2N1bXVsYXRvciwgY3VycmVudCkgPT4ge1xyXG4gICAgICAgIHJldHVybiB7IC4uLmFjY3VtdWxhdG9yLCAuLi5jdXJyZW50IH07XHJcbiAgICB9LCB7fSk7XHJcbiAgICByZXR1cm4gbG9hZGVkSW1hZ2VzO1xyXG59O1xyXG5leHBvcnQgZnVuY3Rpb24gaXNDbGlja0luc2lkZUJ1dHRvbih4Q2xpY2ssIHlDbGljaywgYnV0dG9uWCwgYnV0dG9uWSwgYnV0dG9uV2lkdGgsIGJ1dHRvbkhlaWdodCwgaXNDaXJjdWxhciA9IGZhbHNlKSB7XHJcbiAgICBpZiAoaXNDaXJjdWxhcikge1xyXG4gICAgICAgIC8vIENoZWNrIGZvciBjaXJjdWxhciBidXR0b25cclxuICAgICAgICBjb25zdCBkaXN0YW5jZSA9IE1hdGguc3FydCgoeENsaWNrIC0gKGJ1dHRvblggKyBidXR0b25XaWR0aCAvIDIpKSAqKiAyICtcclxuICAgICAgICAgICAgKHlDbGljayAtIChidXR0b25ZICsgYnV0dG9uSGVpZ2h0IC8gMikpICoqIDIpO1xyXG4gICAgICAgIHJldHVybiBkaXN0YW5jZSA8IGJ1dHRvbldpZHRoIC8gMjtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIC8vIENoZWNrIGZvciByZWN0YW5ndWxhciBidXR0b25cclxuICAgICAgICByZXR1cm4gKHhDbGljayA+PSBidXR0b25YICYmXHJcbiAgICAgICAgICAgIHhDbGljayA8PSBidXR0b25YICsgYnV0dG9uV2lkdGggJiZcclxuICAgICAgICAgICAgeUNsaWNrID49IGJ1dHRvblkgJiZcclxuICAgICAgICAgICAgeUNsaWNrIDw9IGJ1dHRvblkgKyBidXR0b25IZWlnaHQpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjb25zdCBpc0RvY3VtZW50VmlzaWJsZSA9ICgpID0+IGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA9PT0gXCJ2aXNpYmxlXCI7XHJcbmV4cG9ydCBjb25zdCB0b2dnbGVEZWJ1Z01vZGUgPSAodG9nZ2xlQnRuKSA9PiB7XHJcbiAgICB0b2dnbGVCdG4uY2xhc3NMaXN0LnRvZ2dsZShcIm9uXCIpO1xyXG4gICAgY29uc3QgaXNPbiA9IHRvZ2dsZUJ0bi5jbGFzc0xpc3QuY29udGFpbnMoXCJvblwiKTtcclxuICAgIERlYnVnZ2VyLkRlYnVnTW9kZSA9IGlzT247XHJcbiAgICB0b2dnbGVCdG4uaW5uZXJUZXh0ID0gXCJEZXZcIjtcclxufTtcclxuZXhwb3J0IGNvbnN0IGhpZGVFbGVtZW50ID0gKGlzSGlkZSA9IGZhbHNlLCBlbGVtZW50KSA9PiB7XHJcbiAgICBpZiAoaXNIaWRlKSB7XHJcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInNob3dcIik7XHJcbiAgICB9XHJcbn07XHJcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovIC8qIGM4IGlnbm9yZSBzdGFydCAqLyAvKiBlc2xpbnQtZGlzYWJsZSAqLyA7XHJcbmZ1bmN0aW9uIG9vX2NtKCkgeyB0cnkge1xyXG4gICAgcmV0dXJuICgwLCBldmFsKShcImdsb2JhbFRoaXMuX2NvbnNvbGVfbmluamFcIikgfHwgKDAsIGV2YWwpKFwiLyogaHR0cHM6Ly9naXRodWIuY29tL3dhbGxhYnlqcy9jb25zb2xlLW5pbmphI2hvdy1kb2VzLWl0LXdvcmsgKi8ndXNlIHN0cmljdCc7dmFyIF8weGZlNWU0ND1fMHgyODAwOyhmdW5jdGlvbihfMHgyMTU0OTUsXzB4NTRkYjNmKXt2YXIgXzB4MTVhMGMxPV8weDI4MDAsXzB4NTZkODVmPV8weDIxNTQ5NSgpO3doaWxlKCEhW10pe3RyeXt2YXIgXzB4ODU4OWY1PXBhcnNlSW50KF8weDE1YTBjMSgweDFmMykpLzB4MSoocGFyc2VJbnQoXzB4MTVhMGMxKDB4MWJmKSkvMHgyKStwYXJzZUludChfMHgxNWEwYzEoMHgxZWMpKS8weDMrLXBhcnNlSW50KF8weDE1YTBjMSgweDI4YikpLzB4NCtwYXJzZUludChfMHgxNWEwYzEoMHgyMmIpKS8weDUqKC1wYXJzZUludChfMHgxNWEwYzEoMHgxYTQpKS8weDYpKy1wYXJzZUludChfMHgxNWEwYzEoMHgxYWQpKS8weDcrcGFyc2VJbnQoXzB4MTVhMGMxKDB4MWU4KSkvMHg4KihwYXJzZUludChfMHgxNWEwYzEoMHgyOTQpKS8weDkpKy1wYXJzZUludChfMHgxNWEwYzEoMHgyMGQpKS8weGE7aWYoXzB4ODU4OWY1PT09XzB4NTRkYjNmKWJyZWFrO2Vsc2UgXzB4NTZkODVmWydwdXNoJ10oXzB4NTZkODVmWydzaGlmdCddKCkpO31jYXRjaChfMHgxMjhmNDApe18weDU2ZDg1ZlsncHVzaCddKF8weDU2ZDg1Zlsnc2hpZnQnXSgpKTt9fX0oXzB4NDg0MiwweGUzZWI4KSk7dmFyIEs9T2JqZWN0WydjcmVhdGUnXSxRPU9iamVjdFtfMHhmZTVlNDQoMHgxYmQpXSxHPU9iamVjdFsnZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJ10sZWU9T2JqZWN0WydnZXRPd25Qcm9wZXJ0eU5hbWVzJ10sdGU9T2JqZWN0W18weGZlNWU0NCgweDI0OCldLG5lPU9iamVjdFsncHJvdG90eXBlJ11bXzB4ZmU1ZTQ0KDB4MjRhKV0scmU9KF8weDViNzVjNixfMHgzNDgzYjYsXzB4NTkyYmZiLF8weDM1YmQ4Yik9Pnt2YXIgXzB4MzRjOGY2PV8weGZlNWU0NDtpZihfMHgzNDgzYjYmJnR5cGVvZiBfMHgzNDgzYjY9PV8weDM0YzhmNigweDI1OSl8fHR5cGVvZiBfMHgzNDgzYjY9PV8weDM0YzhmNigweDI1NCkpe2ZvcihsZXQgXzB4MTVjZmJjIG9mIGVlKF8weDM0ODNiNikpIW5lWydjYWxsJ10oXzB4NWI3NWM2LF8weDE1Y2ZiYykmJl8weDE1Y2ZiYyE9PV8weDU5MmJmYiYmUShfMHg1Yjc1YzYsXzB4MTVjZmJjLHsnZ2V0JzooKT0+XzB4MzQ4M2I2W18weDE1Y2ZiY10sJ2VudW1lcmFibGUnOiEoXzB4MzViZDhiPUcoXzB4MzQ4M2I2LF8weDE1Y2ZiYykpfHxfMHgzNWJkOGJbJ2VudW1lcmFibGUnXX0pO31yZXR1cm4gXzB4NWI3NWM2O30sVj0oXzB4ODNhNDkxLF8weDFjN2ZhYixfMHgzMzM5MjIpPT4oXzB4MzMzOTIyPV8weDgzYTQ5MSE9bnVsbD9LKHRlKF8weDgzYTQ5MSkpOnt9LHJlKF8weDFjN2ZhYnx8IV8weDgzYTQ5MXx8IV8weDgzYTQ5MVtfMHhmZTVlNDQoMHgyNTApXT9RKF8weDMzMzkyMixfMHhmZTVlNDQoMHgyNWUpLHsndmFsdWUnOl8weDgzYTQ5MSwnZW51bWVyYWJsZSc6ITB4MH0pOl8weDMzMzkyMixfMHg4M2E0OTEpKSxaPWNsYXNze2NvbnN0cnVjdG9yKF8weDNiODIwMSxfMHgyZWRkMmIsXzB4MTRjMjUxLF8weDIxYTM3NCxfMHgyZDc0MDksXzB4NDg1ZDI2KXt2YXIgXzB4MzI3M2ViPV8weGZlNWU0NCxfMHgyMjA3MGYsXzB4MWNkZDNiLF8weDU1ZjlkZSxfMHhjZTQ2OGY7dGhpc1tfMHgzMjczZWIoMHgyOTEpXT1fMHgzYjgyMDEsdGhpc1tfMHgzMjczZWIoMHgyNzApXT1fMHgyZWRkMmIsdGhpc1tfMHgzMjczZWIoMHgyNjIpXT1fMHgxNGMyNTEsdGhpc1tfMHgzMjczZWIoMHgxYmMpXT1fMHgyMWEzNzQsdGhpc1tfMHgzMjczZWIoMHgyNjQpXT1fMHgyZDc0MDksdGhpc1tfMHgzMjczZWIoMHgyN2MpXT1fMHg0ODVkMjYsdGhpc1snX2FsbG93ZWRUb1NlbmQnXT0hMHgwLHRoaXNbXzB4MzI3M2ViKDB4MWFiKV09ITB4MCx0aGlzW18weDMyNzNlYigweDIwMyldPSEweDEsdGhpc1tfMHgzMjczZWIoMHgxYzUpXT0hMHgxLHRoaXNbXzB4MzI3M2ViKDB4MjIxKV09KChfMHgxY2RkM2I9KF8weDIyMDcwZj1fMHgzYjgyMDFbXzB4MzI3M2ViKDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDIyMDcwZltfMHgzMjczZWIoMHgxY2MpXSk9PW51bGw/dm9pZCAweDA6XzB4MWNkZDNiW18weDMyNzNlYigweDFjMyldKT09PV8weDMyNzNlYigweDFmZCksdGhpc1snX2luQnJvd3NlciddPSEoKF8weGNlNDY4Zj0oXzB4NTVmOWRlPXRoaXNbXzB4MzI3M2ViKDB4MjkxKV1bXzB4MzI3M2ViKDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDU1ZjlkZVtfMHgzMjczZWIoMHgyNmYpXSkhPW51bGwmJl8weGNlNDY4ZltfMHgzMjczZWIoMHgyOGMpXSkmJiF0aGlzWydfaW5OZXh0RWRnZSddLHRoaXNbJ19XZWJTb2NrZXRDbGFzcyddPW51bGwsdGhpc1tfMHgzMjczZWIoMHgxYTgpXT0weDAsdGhpc1tfMHgzMjczZWIoMHgyOGYpXT0weDE0LHRoaXNbJ193ZWJTb2NrZXRFcnJvckRvY3NMaW5rJ109XzB4MzI3M2ViKDB4MjExKSx0aGlzW18weDMyNzNlYigweDFhZSldPSh0aGlzW18weDMyNzNlYigweDIzZSldP18weDMyNzNlYigweDI0Nyk6XzB4MzI3M2ViKDB4MjhhKSkrdGhpc1tfMHgzMjczZWIoMHgyMDEpXTt9YXN5bmNbXzB4ZmU1ZTQ0KDB4MjcyKV0oKXt2YXIgXzB4MmVjNDU3PV8weGZlNWU0NCxfMHgxNmIxZjYsXzB4NDZhZTU2O2lmKHRoaXNbXzB4MmVjNDU3KDB4MWQ1KV0pcmV0dXJuIHRoaXNbXzB4MmVjNDU3KDB4MWQ1KV07bGV0IF8weDQyMGNkNztpZih0aGlzWydfaW5Ccm93c2VyJ118fHRoaXNbXzB4MmVjNDU3KDB4MjIxKV0pXzB4NDIwY2Q3PXRoaXNbXzB4MmVjNDU3KDB4MjkxKV1bJ1dlYlNvY2tldCddO2Vsc2V7aWYoKF8weDE2YjFmNj10aGlzW18weDJlYzQ1NygweDI5MSldW18weDJlYzQ1NygweDIwNildKSE9bnVsbCYmXzB4MTZiMWY2WydfV2ViU29ja2V0J10pXzB4NDIwY2Q3PShfMHg0NmFlNTY9dGhpc1tfMHgyZWM0NTcoMHgyOTEpXVtfMHgyZWM0NTcoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4NDZhZTU2WydfV2ViU29ja2V0J107ZWxzZSB0cnl7bGV0IF8weDQ5MjUxMT1hd2FpdCBpbXBvcnQoXzB4MmVjNDU3KDB4MjUxKSk7XzB4NDIwY2Q3PShhd2FpdCBpbXBvcnQoKGF3YWl0IGltcG9ydChfMHgyZWM0NTcoMHgyNDUpKSlbXzB4MmVjNDU3KDB4MWIzKV0oXzB4NDkyNTExWydqb2luJ10odGhpc1snbm9kZU1vZHVsZXMnXSwnd3MvaW5kZXguanMnKSlbXzB4MmVjNDU3KDB4MjMyKV0oKSkpW18weDJlYzQ1NygweDI1ZSldO31jYXRjaHt0cnl7XzB4NDIwY2Q3PXJlcXVpcmUocmVxdWlyZShfMHgyZWM0NTcoMHgyNTEpKVtfMHgyZWM0NTcoMHgyM2MpXSh0aGlzW18weDJlYzQ1NygweDFiYyldLCd3cycpKTt9Y2F0Y2h7dGhyb3cgbmV3IEVycm9yKF8weDJlYzQ1NygweDI3ZikpO319fXJldHVybiB0aGlzW18weDJlYzQ1NygweDFkNSldPV8weDQyMGNkNyxfMHg0MjBjZDc7fVsnX2Nvbm5lY3RUb0hvc3ROb3cnXSgpe3ZhciBfMHgzMTFhZTU9XzB4ZmU1ZTQ0O3RoaXNbJ19jb25uZWN0aW5nJ118fHRoaXNbJ19jb25uZWN0ZWQnXXx8dGhpc1snX2Nvbm5lY3RBdHRlbXB0Q291bnQnXT49dGhpc1snX21heENvbm5lY3RBdHRlbXB0Q291bnQnXXx8KHRoaXNbJ19hbGxvd2VkVG9Db25uZWN0T25TZW5kJ109ITB4MSx0aGlzW18weDMxMWFlNSgweDFjNSldPSEweDAsdGhpc1tfMHgzMTFhZTUoMHgxYTgpXSsrLHRoaXNbXzB4MzExYWU1KDB4MWU3KV09bmV3IFByb21pc2UoKF8weDNmNGU1YyxfMHgxYjFkNDIpPT57dmFyIF8weDFmNjEzMD1fMHgzMTFhZTU7dGhpc1snZ2V0V2ViU29ja2V0Q2xhc3MnXSgpW18weDFmNjEzMCgweDFjZildKF8weDFhOGZjMj0+e3ZhciBfMHgyNjY1N2I9XzB4MWY2MTMwO2xldCBfMHgzZjcyYTA9bmV3IF8weDFhOGZjMihfMHgyNjY1N2IoMHgxYzkpKyghdGhpc1snX2luQnJvd3NlciddJiZ0aGlzW18weDI2NjU3YigweDI2NCldP18weDI2NjU3YigweDI4MSk6dGhpc1tfMHgyNjY1N2IoMHgyNzApXSkrJzonK3RoaXNbXzB4MjY2NTdiKDB4MjYyKV0pO18weDNmNzJhMFtfMHgyNjY1N2IoMHgyNzQpXT0oKT0+e3ZhciBfMHg1ZTRkY2Q9XzB4MjY2NTdiO3RoaXNbXzB4NWU0ZGNkKDB4MWUyKV09ITB4MSx0aGlzW18weDVlNGRjZCgweDIxZCldKF8weDNmNzJhMCksdGhpc1tfMHg1ZTRkY2QoMHgyNGIpXSgpLF8weDFiMWQ0MihuZXcgRXJyb3IoXzB4NWU0ZGNkKDB4MjBjKSkpO30sXzB4M2Y3MmEwW18weDI2NjU3YigweDI4MCldPSgpPT57dmFyIF8weDVkYTE1Mj1fMHgyNjY1N2I7dGhpc1tfMHg1ZGExNTIoMHgyM2UpXXx8XzB4M2Y3MmEwW18weDVkYTE1MigweDFkZCldJiZfMHgzZjcyYTBbXzB4NWRhMTUyKDB4MWRkKV1bXzB4NWRhMTUyKDB4MWI3KV0mJl8weDNmNzJhMFtfMHg1ZGExNTIoMHgxZGQpXVtfMHg1ZGExNTIoMHgxYjcpXSgpLF8weDNmNGU1YyhfMHgzZjcyYTApO30sXzB4M2Y3MmEwW18weDI2NjU3YigweDFlYSldPSgpPT57dmFyIF8weDM4MmM5Mj1fMHgyNjY1N2I7dGhpc1tfMHgzODJjOTIoMHgxYWIpXT0hMHgwLHRoaXNbXzB4MzgyYzkyKDB4MjFkKV0oXzB4M2Y3MmEwKSx0aGlzW18weDM4MmM5MigweDI0YildKCk7fSxfMHgzZjcyYTBbXzB4MjY2NTdiKDB4MWRmKV09XzB4MTFmY2FiPT57dmFyIF8weDVmZDA0ZD1fMHgyNjY1N2I7dHJ5e2lmKCEoXzB4MTFmY2FiIT1udWxsJiZfMHgxMWZjYWJbXzB4NWZkMDRkKDB4MWI5KV0pfHwhdGhpc1snZXZlbnRSZWNlaXZlZENhbGxiYWNrJ10pcmV0dXJuO2xldCBfMHg0ZmY2NTU9SlNPTltfMHg1ZmQwNGQoMHgyMzQpXShfMHgxMWZjYWJbXzB4NWZkMDRkKDB4MWI5KV0pO3RoaXNbXzB4NWZkMDRkKDB4MjdjKV0oXzB4NGZmNjU1W18weDVmZDA0ZCgweDFiNCldLF8weDRmZjY1NVsnYXJncyddLHRoaXNbJ2dsb2JhbCddLHRoaXNbXzB4NWZkMDRkKDB4MjNlKV0pO31jYXRjaHt9fTt9KVtfMHgxZjYxMzAoMHgxY2YpXShfMHgzZWMxOGY9Pih0aGlzW18weDFmNjEzMCgweDIwMyldPSEweDAsdGhpc1tfMHgxZjYxMzAoMHgxYzUpXT0hMHgxLHRoaXNbXzB4MWY2MTMwKDB4MWFiKV09ITB4MSx0aGlzWydfYWxsb3dlZFRvU2VuZCddPSEweDAsdGhpc1tfMHgxZjYxMzAoMHgxYTgpXT0weDAsXzB4M2VjMThmKSlbXzB4MWY2MTMwKDB4MjYwKV0oXzB4NGQwODQyPT4odGhpc1tfMHgxZjYxMzAoMHgyMDMpXT0hMHgxLHRoaXNbXzB4MWY2MTMwKDB4MWM1KV09ITB4MSxjb25zb2xlW18weDFmNjEzMCgweDFmMildKF8weDFmNjEzMCgweDFjYSkrdGhpc1tfMHgxZjYxMzAoMHgyMDEpXSksXzB4MWIxZDQyKG5ldyBFcnJvcihfMHgxZjYxMzAoMHgyNjYpKyhfMHg0ZDA4NDImJl8weDRkMDg0MlsnbWVzc2FnZSddKSkpKSk7fSkpO31bXzB4ZmU1ZTQ0KDB4MjFkKV0oXzB4MjAwNTA2KXt2YXIgXzB4MzgyOGQzPV8weGZlNWU0NDt0aGlzW18weDM4MjhkMygweDIwMyldPSEweDEsdGhpc1tfMHgzODI4ZDMoMHgxYzUpXT0hMHgxO3RyeXtfMHgyMDA1MDZbXzB4MzgyOGQzKDB4MWVhKV09bnVsbCxfMHgyMDA1MDZbXzB4MzgyOGQzKDB4Mjc0KV09bnVsbCxfMHgyMDA1MDZbXzB4MzgyOGQzKDB4MjgwKV09bnVsbDt9Y2F0Y2h7fXRyeXtfMHgyMDA1MDZbXzB4MzgyOGQzKDB4MWU1KV08MHgyJiZfMHgyMDA1MDZbJ2Nsb3NlJ10oKTt9Y2F0Y2h7fX1bJ19hdHRlbXB0VG9SZWNvbm5lY3RTaG9ydGx5J10oKXt2YXIgXzB4MmM5ZTUwPV8weGZlNWU0NDtjbGVhclRpbWVvdXQodGhpc1tfMHgyYzllNTAoMHgyNDApXSksISh0aGlzW18weDJjOWU1MCgweDFhOCldPj10aGlzW18weDJjOWU1MCgweDI4ZildKSYmKHRoaXNbXzB4MmM5ZTUwKDB4MjQwKV09c2V0VGltZW91dCgoKT0+e3ZhciBfMHgyNmViNzE9XzB4MmM5ZTUwLF8weDUyOTY4ZDt0aGlzW18weDI2ZWI3MSgweDIwMyldfHx0aGlzW18weDI2ZWI3MSgweDFjNSldfHwodGhpc1tfMHgyNmViNzEoMHgyODQpXSgpLChfMHg1Mjk2OGQ9dGhpc1tfMHgyNmViNzEoMHgxZTcpXSk9PW51bGx8fF8weDUyOTY4ZFtfMHgyNmViNzEoMHgyNjApXSgoKT0+dGhpc1tfMHgyNmViNzEoMHgyNGIpXSgpKSk7fSwweDFmNCksdGhpc1tfMHgyYzllNTAoMHgyNDApXVtfMHgyYzllNTAoMHgxYjcpXSYmdGhpc1tfMHgyYzllNTAoMHgyNDApXVsndW5yZWYnXSgpKTt9YXN5bmNbXzB4ZmU1ZTQ0KDB4MjZlKV0oXzB4MjU0NTUzKXt2YXIgXzB4MTBlMjA2PV8weGZlNWU0NDt0cnl7aWYoIXRoaXNbXzB4MTBlMjA2KDB4MWUyKV0pcmV0dXJuO3RoaXNbJ19hbGxvd2VkVG9Db25uZWN0T25TZW5kJ10mJnRoaXNbXzB4MTBlMjA2KDB4Mjg0KV0oKSwoYXdhaXQgdGhpc1tfMHgxMGUyMDYoMHgxZTcpXSlbXzB4MTBlMjA2KDB4MjZlKV0oSlNPTlsnc3RyaW5naWZ5J10oXzB4MjU0NTUzKSk7fWNhdGNoKF8weDRmYjY4ZCl7Y29uc29sZVtfMHgxMGUyMDYoMHgxZjIpXSh0aGlzW18weDEwZTIwNigweDFhZSldKyc6XFxcXHgyMCcrKF8weDRmYjY4ZCYmXzB4NGZiNjhkW18weDEwZTIwNigweDIyMildKSksdGhpc1tfMHgxMGUyMDYoMHgxZTIpXT0hMHgxLHRoaXNbJ19hdHRlbXB0VG9SZWNvbm5lY3RTaG9ydGx5J10oKTt9fX07ZnVuY3Rpb24gcShfMHgzNjNlOGIsXzB4NThiYzExLF8weDVhNTdiZSxfMHgzYzIwZTUsXzB4M2NkZjRmLF8weDJlZWM1NCxfMHgzNzdiODMsXzB4MWIwYmZmPWllKXt2YXIgXzB4YzhmMDBlPV8weGZlNWU0NDtsZXQgXzB4ZTI0YmEwPV8weDVhNTdiZVtfMHhjOGYwMGUoMHgxZTQpXSgnLCcpWydtYXAnXShfMHg0NmYyY2Y9Pnt2YXIgXzB4MTRkNzA1PV8weGM4ZjAwZSxfMHhkYWVjNDksXzB4M2M5MjBjLF8weDIwNTc4NixfMHgxNGJhMTA7dHJ5e2lmKCFfMHgzNjNlOGJbJ19jb25zb2xlX25pbmphX3Nlc3Npb24nXSl7bGV0IF8weDM4YWQ0YT0oKF8weDNjOTIwYz0oXzB4ZGFlYzQ5PV8weDM2M2U4YlsncHJvY2VzcyddKT09bnVsbD92b2lkIDB4MDpfMHhkYWVjNDlbJ3ZlcnNpb25zJ10pPT1udWxsP3ZvaWQgMHgwOl8weDNjOTIwY1tfMHgxNGQ3MDUoMHgyOGMpXSl8fCgoXzB4MTRiYTEwPShfMHgyMDU3ODY9XzB4MzYzZThiW18weDE0ZDcwNSgweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHgyMDU3ODZbXzB4MTRkNzA1KDB4MWNjKV0pPT1udWxsP3ZvaWQgMHgwOl8weDE0YmExMFtfMHgxNGQ3MDUoMHgxYzMpXSk9PT1fMHgxNGQ3MDUoMHgxZmQpOyhfMHgzY2RmNGY9PT1fMHgxNGQ3MDUoMHgyMzcpfHxfMHgzY2RmNGY9PT1fMHgxNGQ3MDUoMHgyMDApfHxfMHgzY2RmNGY9PT1fMHgxNGQ3MDUoMHgxYTYpfHxfMHgzY2RmNGY9PT1fMHgxNGQ3MDUoMHgyMzMpKSYmKF8weDNjZGY0Zis9XzB4MzhhZDRhP18weDE0ZDcwNSgweDFmOSk6XzB4MTRkNzA1KDB4MWVlKSksXzB4MzYzZThiW18weDE0ZDcwNSgweDI4OCldPXsnaWQnOituZXcgRGF0ZSgpLCd0b29sJzpfMHgzY2RmNGZ9LF8weDM3N2I4MyYmXzB4M2NkZjRmJiYhXzB4MzhhZDRhJiZjb25zb2xlWydsb2cnXShfMHgxNGQ3MDUoMHgxYzYpKyhfMHgzY2RmNGZbXzB4MTRkNzA1KDB4MjZkKV0oMHgwKVtfMHgxNGQ3MDUoMHgxYzcpXSgpK18weDNjZGY0ZltfMHgxNGQ3MDUoMHgxYTkpXSgweDEpKSsnLCcsXzB4MTRkNzA1KDB4MjUyKSxfMHgxNGQ3MDUoMHgyNDYpKTt9bGV0IF8weDUxYjZhMT1uZXcgWihfMHgzNjNlOGIsXzB4NThiYzExLF8weDQ2ZjJjZixfMHgzYzIwZTUsXzB4MmVlYzU0LF8weDFiMGJmZik7cmV0dXJuIF8weDUxYjZhMVtfMHgxNGQ3MDUoMHgyNmUpXVtfMHgxNGQ3MDUoMHgyMWYpXShfMHg1MWI2YTEpO31jYXRjaChfMHhlMTRmNDgpe3JldHVybiBjb25zb2xlW18weDE0ZDcwNSgweDFmMildKCdsb2dnZXJcXFxceDIwZmFpbGVkXFxcXHgyMHRvXFxcXHgyMGNvbm5lY3RcXFxceDIwdG9cXFxceDIwaG9zdCcsXzB4ZTE0ZjQ4JiZfMHhlMTRmNDhbXzB4MTRkNzA1KDB4MjIyKV0pLCgpPT57fTt9fSk7cmV0dXJuIF8weDEwZjA0Yz0+XzB4ZTI0YmEwWydmb3JFYWNoJ10oXzB4NTNmZGQ2PT5fMHg1M2ZkZDYoXzB4MTBmMDRjKSk7fWZ1bmN0aW9uIGllKF8weDFlM2E0ZSxfMHgyNmU5YjEsXzB4NDVlYjMxLF8weDVkZDM0Yil7dmFyIF8weGE3NTk3OD1fMHhmZTVlNDQ7XzB4NWRkMzRiJiZfMHgxZTNhNGU9PT1fMHhhNzU5NzgoMHgyNjMpJiZfMHg0NWViMzFbJ2xvY2F0aW9uJ11bJ3JlbG9hZCddKCk7fWZ1bmN0aW9uIF8weDQ4NDIoKXt2YXIgXzB4NTVhMTkzPVsnb25tZXNzYWdlJywnU3ltYm9sJywnX25pbmphSWdub3JlTmV4dEVycm9yJywnX2FsbG93ZWRUb1NlbmQnLCdhbGxTdHJMZW5ndGgnLCdzcGxpdCcsJ3JlYWR5U3RhdGUnLCdfZ2V0T3duUHJvcGVydHlTeW1ib2xzJywnX3dzJywnMjM4MjQ4ME1wU05VRycsJ3Byb3BzJywnb25jbG9zZScsJ2NvdW50JywnMTcyMDI5Nm5EaUNiSycsJy4uLicsJ1xcXFx4MjBicm93c2VyJywnX2lzVW5kZWZpbmVkJywnbnVtYmVyJywnYXV0b0V4cGFuZE1heERlcHRoJywnd2FybicsJzFxTGFyR0snLCd2YWx1ZScsJ2dldE93blByb3BlcnR5U3ltYm9scycsJ2FyZ3MnLCdsb2NhdGlvbicsJ1NldCcsJ1xcXFx4MjBzZXJ2ZXInLCdfbnVtYmVyUmVnRXhwJywnZ2V0JywnX2hhc1N5bWJvbFByb3BlcnR5T25JdHNQYXRoJywnZWRnZScsJ19hZGRPYmplY3RQcm9wZXJ0eScsJ3BlcmZvcm1hbmNlJywncmVtaXgnLCdfd2ViU29ja2V0RXJyb3JEb2NzTGluaycsJ19nZXRPd25Qcm9wZXJ0eU5hbWVzJywnX2Nvbm5lY3RlZCcsJ3B1c2gnLCdzZXQnLCdwcm9jZXNzJywnX3JlZ0V4cFRvU3RyaW5nJywnaXNBcnJheScsJ3RpbWUnLCdfc2V0Tm9kZUxhYmVsJywndGVzdCcsJ2xvZ2dlclxcXFx4MjB3ZWJzb2NrZXRcXFxceDIwZXJyb3InLCcyNDI3MDgwT3lyWVFtJywnW29iamVjdFxcXFx4MjBNYXBdJywndW5kZWZpbmVkJywnY2FwcGVkJywnaHR0cHM6Ly90aW55dXJsLmNvbS8zN3g4Yjc5dCcsJ3RpbWVTdGFtcCcsJ19wcm9wZXJ0eU5hbWUnLCdjYXBwZWRQcm9wcycsJ25lZ2F0aXZlSW5maW5pdHknLCdjb25zdHJ1Y3RvcicsJ251bGwnLCdmcm9tQ2hhckNvZGUnLCdocnRpbWUnLCdfb2JqZWN0VG9TdHJpbmcnLCduYW1lJyxbXFxcImxvY2FsaG9zdFxcXCIsXFxcIjEyNy4wLjAuMVxcXCIsXFxcImV4YW1wbGUuY3lwcmVzcy5pb1xcXCIsXFxcIkNFQi1MQVBUT1AtMDAwNlxcXCIsXFxcIjE5Mi4xNjguMS43OVxcXCJdLCdfZGlzcG9zZVdlYnNvY2tldCcsJ2lzRXhwcmVzc2lvblRvRXZhbHVhdGUnLCdiaW5kJywnX2NvbnNvbGVOaW5qYUFsbG93ZWRUb1N0YXJ0JywnX2luTmV4dEVkZ2UnLCdtZXNzYWdlJywncG9zaXRpdmVJbmZpbml0eScsJ2NvbmNhdCcsJ051bWJlcicsJ19zb3J0UHJvcHMnLCdjb25zb2xlJywndHlwZScsJ3BvcCcsJ2Vycm9yJywnMTMyMDVCUWFHVnAnLCdhdXRvRXhwYW5kJywnZWxlbWVudHMnLCdhdXRvRXhwYW5kUHJldmlvdXNPYmplY3RzJywnX2lzUHJpbWl0aXZlVHlwZScsJ2xvZycsJ190cmVlTm9kZVByb3BlcnRpZXNCZWZvcmVGdWxsVmFsdWUnLCd0b1N0cmluZycsJ2FuZ3VsYXInLCdwYXJzZScsJ1tvYmplY3RcXFxceDIwQmlnSW50XScsJ19hZGRpdGlvbmFsTWV0YWRhdGEnLCduZXh0LmpzJywnX3RyZWVOb2RlUHJvcGVydGllc0FmdGVyRnVsbFZhbHVlJywnSFRNTEFsbENvbGxlY3Rpb24nLCdyZWR1Y2VMaW1pdHMnLCdwYXJlbnQnLCdqb2luJywnc2VyaWFsaXplJywnX2luQnJvd3NlcicsJ19pc05lZ2F0aXZlWmVybycsJ19yZWNvbm5lY3RUaW1lb3V0JywnYXV0b0V4cGFuZExpbWl0JywnW29iamVjdFxcXFx4MjBTZXRdJywnW29iamVjdFxcXFx4MjBEYXRlXScsJzEnLCd1cmwnLCdzZWVcXFxceDIwaHR0cHM6Ly90aW55dXJsLmNvbS8ydnQ4anh6d1xcXFx4MjBmb3JcXFxceDIwbW9yZVxcXFx4MjBpbmZvLicsJ0NvbnNvbGVcXFxceDIwTmluamFcXFxceDIwZmFpbGVkXFxcXHgyMHRvXFxcXHgyMHNlbmRcXFxceDIwbG9ncyxcXFxceDIwcmVmcmVzaGluZ1xcXFx4MjB0aGVcXFxceDIwcGFnZVxcXFx4MjBtYXlcXFxceDIwaGVscDtcXFxceDIwYWxzb1xcXFx4MjBzZWVcXFxceDIwJywnZ2V0UHJvdG90eXBlT2YnLCdub3cnLCdoYXNPd25Qcm9wZXJ0eScsJ19hdHRlbXB0VG9SZWNvbm5lY3RTaG9ydGx5JywnX2NvbnNvbGVfbmluamEnLCdsZW5ndGgnLCdFcnJvcicsJ2FycmF5JywnX19lcycrJ01vZHVsZScsJ3BhdGgnLCdiYWNrZ3JvdW5kOlxcXFx4MjByZ2IoMzAsMzAsMzApO1xcXFx4MjBjb2xvcjpcXFxceDIwcmdiKDI1NSwyMTMsOTIpJywnX2NsZWFuTm9kZScsJ2Z1bmN0aW9uJywncm9vdF9leHBfaWQnLCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCdtYXAnLCdmb3JFYWNoJywnb2JqZWN0JywnY2FwcGVkRWxlbWVudHMnLCdCdWZmZXInLCdfcHJvcGVydHknLCdpbmRleCcsJ2RlZmF1bHQnLCdhdXRvRXhwYW5kUHJvcGVydHlDb3VudCcsJ2NhdGNoJywnTkVHQVRJVkVfSU5GSU5JVFknLCdwb3J0JywncmVsb2FkJywnZG9ja2VyaXplZEFwcCcsJ2N1cnJlbnQnLCdmYWlsZWRcXFxceDIwdG9cXFxceDIwY29ubmVjdFxcXFx4MjB0b1xcXFx4MjBob3N0OlxcXFx4MjAnLCdmdW5jTmFtZScsJ3N0ckxlbmd0aCcsJ2JpZ2ludCcsJ21hdGNoJywnc3RhY2snLCcxLjAuMCcsJ2NoYXJBdCcsJ3NlbmQnLCd2ZXJzaW9ucycsJ2hvc3QnLCdfYWRkTG9hZE5vZGUnLCdnZXRXZWJTb2NrZXRDbGFzcycsJ2NhbGwnLCdvbmVycm9yJywnJywnX3R5cGUnLCdleHByZXNzaW9uc1RvRXZhbHVhdGUnLCdzdGFja1RyYWNlTGltaXQnLCdQT1NJVElWRV9JTkZJTklUWScsJ2Rpc2FibGVkVHJhY2UnLCdfdW5kZWZpbmVkJywnZXZlbnRSZWNlaXZlZENhbGxiYWNrJywnZGlzYWJsZWRMb2cnLCdyZXBsYWNlJywnZmFpbGVkXFxcXHgyMHRvXFxcXHgyMGZpbmRcXFxceDIwYW5kXFxcXHgyMGxvYWRcXFxceDIwV2ViU29ja2V0Jywnb25vcGVuJywnZ2F0ZXdheS5kb2NrZXIuaW50ZXJuYWwnLCdzdHJpbmcnLCdfaXNNYXAnLCdfY29ubmVjdFRvSG9zdE5vdycsJ19IVE1MQWxsQ29sbGVjdGlvbicsJzE3MjkyMzkzMTQ0OTQnLCdfaXNTZXQnLCdfY29uc29sZV9uaW5qYV9zZXNzaW9uJywnZ2V0T3duUHJvcGVydHlOYW1lcycsJ0NvbnNvbGVcXFxceDIwTmluamFcXFxceDIwZmFpbGVkXFxcXHgyMHRvXFxcXHgyMHNlbmRcXFxceDIwbG9ncyxcXFxceDIwcmVzdGFydGluZ1xcXFx4MjB0aGVcXFxceDIwcHJvY2Vzc1xcXFx4MjBtYXlcXFxceDIwaGVscDtcXFxceDIwYWxzb1xcXFx4MjBzZWVcXFxceDIwJywnMzc5OTE2MEpuSHpwRCcsJ25vZGUnLCdwcm90b3R5cGUnLCdfc2V0Tm9kZUlkJywnX21heENvbm5lY3RBdHRlbXB0Q291bnQnLCdwZXJmX2hvb2tzJywnZ2xvYmFsJywnX2lzUHJpbWl0aXZlV3JhcHBlclR5cGUnLCdTdHJpbmcnLCc1NGNLSWxuYycsJ2VuZHNXaXRoJywnaW5jbHVkZXMnLCdoaXRzJywndG9Mb3dlckNhc2UnLCd0cmFjZScsJzQyU2ZtZGlEJywnc2V0dGVyJywnYXN0cm8nLCdvcmlnaW4nLCdfY29ubmVjdEF0dGVtcHRDb3VudCcsJ3N1YnN0cicsJ3RvdGFsU3RyTGVuZ3RoJywnX2FsbG93ZWRUb0Nvbm5lY3RPblNlbmQnLCdfcF9sZW5ndGgnLCc5MDI3NDM4dWdaa2VWJywnX3NlbmRFcnJvck1lc3NhZ2UnLCdfYWRkRnVuY3Rpb25zTm9kZScsJ19ibGFja2xpc3RlZFByb3BlcnR5JywnZWxhcHNlZCcsJ3NvcnQnLCdwYXRoVG9GaWxlVVJMJywnbWV0aG9kJywnX1N5bWJvbCcsJ25vRnVuY3Rpb25zJywndW5yZWYnLCdfYWRkUHJvcGVydHknLCdkYXRhJywncm9vdF9leHAnLCdfcXVvdGVkUmVnRXhwJywnbm9kZU1vZHVsZXMnLCdkZWZpbmVQcm9wZXJ0eScsJ3Jlc29sdmVHZXR0ZXJzJywnMjE0Nzc3NHFyWVFheicsJ19rZXlTdHJSZWdFeHAnLCdfc2V0Tm9kZVF1ZXJ5UGF0aCcsJ3N0cmluZ2lmeScsJ05FWFRfUlVOVElNRScsJ19jYXBJZlN0cmluZycsJ19jb25uZWN0aW5nJywnJWNcXFxceDIwQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBleHRlbnNpb25cXFxceDIwaXNcXFxceDIwY29ubmVjdGVkXFxcXHgyMHRvXFxcXHgyMCcsJ3RvVXBwZXJDYXNlJywndW5rbm93bicsJ3dzOi8vJywnbG9nZ2VyXFxcXHgyMGZhaWxlZFxcXFx4MjB0b1xcXFx4MjBjb25uZWN0XFxcXHgyMHRvXFxcXHgyMGhvc3QsXFxcXHgyMHNlZVxcXFx4MjAnLCdfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJywnZW52JywnJyxcXFwiYzpcXFxcXFxcXFVzZXJzXFxcXFxcXFxzaGVlcndvb2RjXFxcXFxcXFwudnNjb2RlXFxcXFxcXFxleHRlbnNpb25zXFxcXFxcXFx3YWxsYWJ5anMuY29uc29sZS1uaW5qYS0xLjAuMzYzXFxcXFxcXFxub2RlX21vZHVsZXNcXFwiLCd0aGVuJywnX3NldE5vZGVQZXJtaXNzaW9ucycsJ2RlcHRoJywnY292ZXJhZ2UnLCdsZXZlbCcsJ19wX25hbWUnLCdfV2ViU29ja2V0Q2xhc3MnLCdzb3J0UHJvcHMnLCdfcF8nLCdkYXRlJywnc3ltYm9sJywnX3Byb2Nlc3NUcmVlTm9kZVJlc3VsdCcsJ01hcCcsJ3NsaWNlJywnX3NvY2tldCcsJ19pc0FycmF5J107XzB4NDg0Mj1mdW5jdGlvbigpe3JldHVybiBfMHg1NWExOTM7fTtyZXR1cm4gXzB4NDg0MigpO31mdW5jdGlvbiBCKF8weDJlMzZlYSl7dmFyIF8weDVlYWIxOD1fMHhmZTVlNDQsXzB4NTdjZWFjLF8weDFjZDNmZjtsZXQgXzB4MTc0ZTQzPWZ1bmN0aW9uKF8weDJkNTIxNCxfMHg0ZDdlODIpe3JldHVybiBfMHg0ZDdlODItXzB4MmQ1MjE0O30sXzB4MzU1ZGQ5O2lmKF8weDJlMzZlYVtfMHg1ZWFiMTgoMHgxZmYpXSlfMHgzNTVkZDk9ZnVuY3Rpb24oKXtyZXR1cm4gXzB4MmUzNmVhWydwZXJmb3JtYW5jZSddWydub3cnXSgpO307ZWxzZXtpZihfMHgyZTM2ZWFbXzB4NWVhYjE4KDB4MjA2KV0mJl8weDJlMzZlYVtfMHg1ZWFiMTgoMHgyMDYpXVtfMHg1ZWFiMTgoMHgyMTkpXSYmKChfMHgxY2QzZmY9KF8weDU3Y2VhYz1fMHgyZTM2ZWFbJ3Byb2Nlc3MnXSk9PW51bGw/dm9pZCAweDA6XzB4NTdjZWFjW18weDVlYWIxOCgweDFjYyldKT09bnVsbD92b2lkIDB4MDpfMHgxY2QzZmZbXzB4NWVhYjE4KDB4MWMzKV0pIT09XzB4NWVhYjE4KDB4MWZkKSlfMHgzNTVkZDk9ZnVuY3Rpb24oKXt2YXIgXzB4MmE1YjIzPV8weDVlYWIxODtyZXR1cm4gXzB4MmUzNmVhW18weDJhNWIyMygweDIwNildWydocnRpbWUnXSgpO30sXzB4MTc0ZTQzPWZ1bmN0aW9uKF8weDM3YTE5YyxfMHgxM2I5NjUpe3JldHVybiAweDNlOCooXzB4MTNiOTY1WzB4MF0tXzB4MzdhMTljWzB4MF0pKyhfMHgxM2I5NjVbMHgxXS1fMHgzN2ExOWNbMHgxXSkvMHhmNDI0MDt9O2Vsc2UgdHJ5e2xldCB7cGVyZm9ybWFuY2U6XzB4MjQ3NGEwfT1yZXF1aXJlKF8weDVlYWIxOCgweDI5MCkpO18weDM1NWRkOT1mdW5jdGlvbigpe3ZhciBfMHg1MGRlOWM9XzB4NWVhYjE4O3JldHVybiBfMHgyNDc0YTBbXzB4NTBkZTljKDB4MjQ5KV0oKTt9O31jYXRjaHtfMHgzNTVkZDk9ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGUoKTt9O319cmV0dXJueydlbGFwc2VkJzpfMHgxNzRlNDMsJ3RpbWVTdGFtcCc6XzB4MzU1ZGQ5LCdub3cnOigpPT5EYXRlWydub3cnXSgpfTt9ZnVuY3Rpb24gXzB4MjgwMChfMHgyMGMzMTYsXzB4MjdlNDRkKXt2YXIgXzB4NDg0MmQ1PV8weDQ4NDIoKTtyZXR1cm4gXzB4MjgwMD1mdW5jdGlvbihfMHgyODAwNzksXzB4MmIxMzZkKXtfMHgyODAwNzk9XzB4MjgwMDc5LTB4MWExO3ZhciBfMHhmNmRjZTk9XzB4NDg0MmQ1W18weDI4MDA3OV07cmV0dXJuIF8weGY2ZGNlOTt9LF8weDI4MDAoXzB4MjBjMzE2LF8weDI3ZTQ0ZCk7fWZ1bmN0aW9uIEgoXzB4NWYwNDZkLF8weGJmZWE2NyxfMHg0Yzk4NDcpe3ZhciBfMHg0MjMzMmM9XzB4ZmU1ZTQ0LF8weDQ1MzZkZixfMHgzZTU5MWIsXzB4MWMwMmZkLF8weDU2NjFiNyxfMHhkYTc4ODI7aWYoXzB4NWYwNDZkWydfY29uc29sZU5pbmphQWxsb3dlZFRvU3RhcnQnXSE9PXZvaWQgMHgwKXJldHVybiBfMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjIwKV07bGV0IF8weDE1MmE0Mj0oKF8weDNlNTkxYj0oXzB4NDUzNmRmPV8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4NDUzNmRmWyd2ZXJzaW9ucyddKT09bnVsbD92b2lkIDB4MDpfMHgzZTU5MWJbXzB4NDIzMzJjKDB4MjhjKV0pfHwoKF8weDU2NjFiNz0oXzB4MWMwMmZkPV8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4MWMwMmZkW18weDQyMzMyYygweDFjYyldKT09bnVsbD92b2lkIDB4MDpfMHg1NjYxYjdbXzB4NDIzMzJjKDB4MWMzKV0pPT09XzB4NDIzMzJjKDB4MWZkKTtmdW5jdGlvbiBfMHg0MTI1OTUoXzB4NTAyN2Q0KXt2YXIgXzB4NTc4MmIxPV8weDQyMzMyYztpZihfMHg1MDI3ZDRbJ3N0YXJ0c1dpdGgnXSgnLycpJiZfMHg1MDI3ZDRbXzB4NTc4MmIxKDB4Mjk1KV0oJy8nKSl7bGV0IF8weDU1OGYwMz1uZXcgUmVnRXhwKF8weDUwMjdkNFtfMHg1NzgyYjEoMHgxZGMpXSgweDEsLTB4MSkpO3JldHVybiBfMHgzZDBkNjU9Pl8weDU1OGYwM1sndGVzdCddKF8weDNkMGQ2NSk7fWVsc2V7aWYoXzB4NTAyN2Q0WydpbmNsdWRlcyddKCcqJyl8fF8weDUwMjdkNFtfMHg1NzgyYjEoMHgyOTYpXSgnPycpKXtsZXQgXzB4NTFiZWJmPW5ldyBSZWdFeHAoJ14nK18weDUwMjdkNFtfMHg1NzgyYjEoMHgyN2UpXSgvXFxcXC4vZyxTdHJpbmdbXzB4NTc4MmIxKDB4MjE4KV0oMHg1YykrJy4nKVtfMHg1NzgyYjEoMHgyN2UpXSgvXFxcXCovZywnLionKVtfMHg1NzgyYjEoMHgyN2UpXSgvXFxcXD8vZywnLicpK1N0cmluZ1snZnJvbUNoYXJDb2RlJ10oMHgyNCkpO3JldHVybiBfMHgyNGY2OTk9Pl8weDUxYmViZltfMHg1NzgyYjEoMHgyMGIpXShfMHgyNGY2OTkpO31lbHNlIHJldHVybiBfMHgyMDc2MDM9Pl8weDIwNzYwMz09PV8weDUwMjdkNDt9fWxldCBfMHgyNzVjZWE9XzB4YmZlYTY3W18weDQyMzMyYygweDI1NyldKF8weDQxMjU5NSk7cmV0dXJuIF8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXT1fMHgxNTJhNDJ8fCFfMHhiZmVhNjcsIV8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXSYmKChfMHhkYTc4ODI9XzB4NWYwNDZkW18weDQyMzMyYygweDFmNyldKT09bnVsbD92b2lkIDB4MDpfMHhkYTc4ODJbJ2hvc3RuYW1lJ10pJiYoXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldPV8weDI3NWNlYVsnc29tZSddKF8weDU1YjQzNT0+XzB4NTViNDM1KF8weDVmMDQ2ZFsnbG9jYXRpb24nXVsnaG9zdG5hbWUnXSkpKSxfMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjIwKV07fWZ1bmN0aW9uIFgoXzB4MmYxYTcwLF8weDViZTA3MixfMHgzOWJlMDEsXzB4NWE1NzQ1KXt2YXIgXzB4MWFlOWRlPV8weGZlNWU0NDtfMHgyZjFhNzA9XzB4MmYxYTcwLF8weDViZTA3Mj1fMHg1YmUwNzIsXzB4MzliZTAxPV8weDM5YmUwMSxfMHg1YTU3NDU9XzB4NWE1NzQ1O2xldCBfMHg0NWFkMjQ9QihfMHgyZjFhNzApLF8weDM0OTEzYj1fMHg0NWFkMjRbXzB4MWFlOWRlKDB4MWIxKV0sXzB4NWY0MjU0PV8weDQ1YWQyNFtfMHgxYWU5ZGUoMHgyMTIpXTtjbGFzcyBfMHgzOWFlZTN7Y29uc3RydWN0b3IoKXt2YXIgXzB4MjA5NDYyPV8weDFhZTlkZTt0aGlzW18weDIwOTQ2MigweDFjMCldPS9eKD8hKD86ZG98aWZ8aW58Zm9yfGxldHxuZXd8dHJ5fHZhcnxjYXNlfGVsc2V8ZW51bXxldmFsfGZhbHNlfG51bGx8dGhpc3x0cnVlfHZvaWR8d2l0aHxicmVha3xjYXRjaHxjbGFzc3xjb25zdHxzdXBlcnx0aHJvd3x3aGlsZXx5aWVsZHxkZWxldGV8ZXhwb3J0fGltcG9ydHxwdWJsaWN8cmV0dXJufHN0YXRpY3xzd2l0Y2h8dHlwZW9mfGRlZmF1bHR8ZXh0ZW5kc3xmaW5hbGx5fHBhY2thZ2V8cHJpdmF0ZXxjb250aW51ZXxkZWJ1Z2dlcnxmdW5jdGlvbnxhcmd1bWVudHN8aW50ZXJmYWNlfHByb3RlY3RlZHxpbXBsZW1lbnRzfGluc3RhbmNlb2YpJClbXyRhLXpBLVpcXFxceEEwLVxcXFx1RkZGRl1bXyRhLXpBLVowLTlcXFxceEEwLVxcXFx1RkZGRl0qJC8sdGhpc1tfMHgyMDk0NjIoMHgxZmEpXT0vXigwfFsxLTldWzAtOV0qKSQvLHRoaXNbXzB4MjA5NDYyKDB4MWJiKV09LycoW15cXFxcXFxcXCddfFxcXFxcXFxcJykqJy8sdGhpc1tfMHgyMDk0NjIoMHgyN2IpXT1fMHgyZjFhNzBbXzB4MjA5NDYyKDB4MjBmKV0sdGhpc1snX0hUTUxBbGxDb2xsZWN0aW9uJ109XzB4MmYxYTcwW18weDIwOTQ2MigweDIzOSldLHRoaXNbXzB4MjA5NDYyKDB4MWNiKV09T2JqZWN0W18weDIwOTQ2MigweDI1NildLHRoaXNbXzB4MjA5NDYyKDB4MjAyKV09T2JqZWN0W18weDIwOTQ2MigweDI4OSldLHRoaXNbXzB4MjA5NDYyKDB4MWI1KV09XzB4MmYxYTcwW18weDIwOTQ2MigweDFlMCldLHRoaXNbJ19yZWdFeHBUb1N0cmluZyddPVJlZ0V4cFsncHJvdG90eXBlJ11bXzB4MjA5NDYyKDB4MjMyKV0sdGhpc1snX2RhdGVUb1N0cmluZyddPURhdGVbXzB4MjA5NDYyKDB4MjhkKV1bXzB4MjA5NDYyKDB4MjMyKV07fVtfMHgxYWU5ZGUoMHgyM2QpXShfMHgyNGI3ZjMsXzB4Mjk2ZjczLF8weDQ2NjUzZCxfMHg1YmY5ZmQpe3ZhciBfMHhkYTIxYjQ9XzB4MWFlOWRlLF8weDJhMmZkMD10aGlzLF8weDRkZDZiMD1fMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJjKV07ZnVuY3Rpb24gXzB4MTMxZWI2KF8weDI0YzFkZixfMHgyOGJmNTcsXzB4NDA4ZDQ4KXt2YXIgXzB4NDc5MTMxPV8weGRhMjFiNDtfMHgyOGJmNTdbXzB4NDc5MTMxKDB4MjI4KV09J3Vua25vd24nLF8weDI4YmY1N1snZXJyb3InXT1fMHgyNGMxZGZbXzB4NDc5MTMxKDB4MjIyKV0sXzB4MWYwZDU2PV8weDQwOGQ0OFtfMHg0NzkxMzEoMHgyOGMpXVtfMHg0NzkxMzEoMHgyNjUpXSxfMHg0MDhkNDhbXzB4NDc5MTMxKDB4MjhjKV1bXzB4NDc5MTMxKDB4MjY1KV09XzB4MjhiZjU3LF8weDJhMmZkMFtfMHg0NzkxMzEoMHgyMzEpXShfMHgyOGJmNTcsXzB4NDA4ZDQ4KTt9dHJ5e18weDQ2NjUzZFsnbGV2ZWwnXSsrLF8weDQ2NjUzZFsnYXV0b0V4cGFuZCddJiZfMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcmV2aW91c09iamVjdHMnXVtfMHhkYTIxYjQoMHgyMDQpXShfMHgyOTZmNzMpO3ZhciBfMHgxZTIwOTQsXzB4MTZhZWZhLF8weDU0MjU2NixfMHg0MmUyOGIsXzB4Y2U3Zjk1PVtdLF8weGU2ZjFjMz1bXSxfMHhmMTdjMjksXzB4MjA3ZGI4PXRoaXNbXzB4ZGEyMWI0KDB4Mjc2KV0oXzB4Mjk2ZjczKSxfMHgyNzdkZTY9XzB4MjA3ZGI4PT09J2FycmF5JyxfMHg1YzQyNmM9ITB4MSxfMHg2NmZlMWI9XzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MjU0KSxfMHhjYTZlNjQ9dGhpc1tfMHhkYTIxYjQoMHgyMmYpXShfMHgyMDdkYjgpLF8weDJjNDA1YT10aGlzW18weGRhMjFiNCgweDI5MildKF8weDIwN2RiOCksXzB4NGY1ZDYyPV8weGNhNmU2NHx8XzB4MmM0MDVhLF8weDY5NjFkMz17fSxfMHgxYmM2NTc9MHgwLF8weDIwMTMzNT0hMHgxLF8weDFmMGQ1NixfMHg0NmFlMjY9L14oKFsxLTldezF9WzAtOV0qKXwwKSQvO2lmKF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgxZDEpXSl7aWYoXzB4Mjc3ZGU2KXtpZihfMHgxNmFlZmE9XzB4Mjk2ZjczW18weGRhMjFiNCgweDI0ZCldLF8weDE2YWVmYT5fMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJkKV0pe2ZvcihfMHg1NDI1NjY9MHgwLF8weDQyZTI4Yj1fMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJkKV0sXzB4MWUyMDk0PV8weDU0MjU2NjtfMHgxZTIwOTQ8XzB4NDJlMjhiO18weDFlMjA5NCsrKV8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyMDQpXShfMHgyYTJmZDBbJ19hZGRQcm9wZXJ0eSddKF8weGNlN2Y5NSxfMHgyOTZmNzMsXzB4MjA3ZGI4LF8weDFlMjA5NCxfMHg0NjY1M2QpKTtfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MjVhKV09ITB4MDt9ZWxzZXtmb3IoXzB4NTQyNTY2PTB4MCxfMHg0MmUyOGI9XzB4MTZhZWZhLF8weDFlMjA5ND1fMHg1NDI1NjY7XzB4MWUyMDk0PF8weDQyZTI4YjtfMHgxZTIwOTQrKylfMHhlNmYxYzNbXzB4ZGEyMWI0KDB4MjA0KV0oXzB4MmEyZmQwW18weGRhMjFiNCgweDFiOCldKF8weGNlN2Y5NSxfMHgyOTZmNzMsXzB4MjA3ZGI4LF8weDFlMjA5NCxfMHg0NjY1M2QpKTt9XzB4NDY2NTNkWydhdXRvRXhwYW5kUHJvcGVydHlDb3VudCddKz1fMHhlNmYxYzNbXzB4ZGEyMWI0KDB4MjRkKV07fWlmKCEoXzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MjE3KXx8XzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MjBmKSkmJiFfMHhjYTZlNjQmJl8weDIwN2RiOCE9PV8weGRhMjFiNCgweDI5MykmJl8weDIwN2RiOCE9PV8weGRhMjFiNCgweDI1YikmJl8weDIwN2RiOCE9PV8weGRhMjFiNCgweDI2OSkpe3ZhciBfMHg1NmIzODA9XzB4NWJmOWZkW18weGRhMjFiNCgweDFlOSldfHxfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MWU5KV07aWYodGhpc1snX2lzU2V0J10oXzB4Mjk2ZjczKT8oXzB4MWUyMDk0PTB4MCxfMHgyOTZmNzNbXzB4ZGEyMWI0KDB4MjU4KV0oZnVuY3Rpb24oXzB4MzY1NzgyKXt2YXIgXzB4MjA0MTVlPV8weGRhMjFiNDtpZihfMHgxYmM2NTcrKyxfMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J10rKyxfMHgxYmM2NTc+XzB4NTZiMzgwKXtfMHgyMDEzMzU9ITB4MDtyZXR1cm47fWlmKCFfMHg0NjY1M2RbJ2lzRXhwcmVzc2lvblRvRXZhbHVhdGUnXSYmXzB4NDY2NTNkWydhdXRvRXhwYW5kJ10mJl8weDQ2NjUzZFtfMHgyMDQxNWUoMHgyNWYpXT5fMHg0NjY1M2RbXzB4MjA0MTVlKDB4MjQxKV0pe18weDIwMTMzNT0hMHgwO3JldHVybjt9XzB4ZTZmMWMzWydwdXNoJ10oXzB4MmEyZmQwW18weDIwNDE1ZSgweDFiOCldKF8weGNlN2Y5NSxfMHgyOTZmNzMsJ1NldCcsXzB4MWUyMDk0KyssXzB4NDY2NTNkLGZ1bmN0aW9uKF8weDQ2NDA3NCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIF8weDQ2NDA3NDt9O30oXzB4MzY1NzgyKSkpO30pKTp0aGlzW18weGRhMjFiNCgweDI4MyldKF8weDI5NmY3MykmJl8weDI5NmY3M1tfMHhkYTIxYjQoMHgyNTgpXShmdW5jdGlvbihfMHgzNzg0MzAsXzB4MjhiMWM2KXt2YXIgXzB4MjlhYzM4PV8weGRhMjFiNDtpZihfMHgxYmM2NTcrKyxfMHg0NjY1M2RbXzB4MjlhYzM4KDB4MjVmKV0rKyxfMHgxYmM2NTc+XzB4NTZiMzgwKXtfMHgyMDEzMzU9ITB4MDtyZXR1cm47fWlmKCFfMHg0NjY1M2RbXzB4MjlhYzM4KDB4MjFlKV0mJl8weDQ2NjUzZFsnYXV0b0V4cGFuZCddJiZfMHg0NjY1M2RbXzB4MjlhYzM4KDB4MjVmKV0+XzB4NDY2NTNkW18weDI5YWMzOCgweDI0MSldKXtfMHgyMDEzMzU9ITB4MDtyZXR1cm47fXZhciBfMHgzOWRkZjM9XzB4MjhiMWM2Wyd0b1N0cmluZyddKCk7XzB4MzlkZGYzW18weDI5YWMzOCgweDI0ZCldPjB4NjQmJihfMHgzOWRkZjM9XzB4MzlkZGYzW18weDI5YWMzOCgweDFkYyldKDB4MCwweDY0KStfMHgyOWFjMzgoMHgxZWQpKSxfMHhlNmYxYzNbXzB4MjlhYzM4KDB4MjA0KV0oXzB4MmEyZmQwW18weDI5YWMzOCgweDFiOCldKF8weGNlN2Y5NSxfMHgyOTZmNzMsXzB4MjlhYzM4KDB4MWRiKSxfMHgzOWRkZjMsXzB4NDY2NTNkLGZ1bmN0aW9uKF8weDQ2YmQ3YSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIF8weDQ2YmQ3YTt9O30oXzB4Mzc4NDMwKSkpO30pLCFfMHg1YzQyNmMpe3RyeXtmb3IoXzB4ZjE3YzI5IGluIF8weDI5NmY3MylpZighKF8weDI3N2RlNiYmXzB4NDZhZTI2W18weGRhMjFiNCgweDIwYildKF8weGYxN2MyOSkpJiYhdGhpc1snX2JsYWNrbGlzdGVkUHJvcGVydHknXShfMHgyOTZmNzMsXzB4ZjE3YzI5LF8weDQ2NjUzZCkpe2lmKF8weDFiYzY1NysrLF8weDQ2NjUzZFsnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnXSsrLF8weDFiYzY1Nz5fMHg1NmIzODApe18weDIwMTMzNT0hMHgwO2JyZWFrO31pZighXzB4NDY2NTNkW18weGRhMjFiNCgweDIxZSldJiZfMHg0NjY1M2RbJ2F1dG9FeHBhbmQnXSYmXzB4NDY2NTNkW18weGRhMjFiNCgweDI1ZildPl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyNDEpXSl7XzB4MjAxMzM1PSEweDA7YnJlYWs7fV8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyMDQpXShfMHgyYTJmZDBbXzB4ZGEyMWI0KDB4MWZlKV0oXzB4Y2U3Zjk1LF8weDY5NjFkMyxfMHgyOTZmNzMsXzB4MjA3ZGI4LF8weGYxN2MyOSxfMHg0NjY1M2QpKTt9fWNhdGNoe31pZihfMHg2OTYxZDNbXzB4ZGEyMWI0KDB4MWFjKV09ITB4MCxfMHg2NmZlMWImJihfMHg2OTYxZDNbXzB4ZGEyMWI0KDB4MWQ0KV09ITB4MCksIV8weDIwMTMzNSl7dmFyIF8weDI2NThiYT1bXVtfMHhkYTIxYjQoMHgyMjQpXSh0aGlzW18weGRhMjFiNCgweDIwMildKF8weDI5NmY3MykpW18weGRhMjFiNCgweDIyNCldKHRoaXNbXzB4ZGEyMWI0KDB4MWU2KV0oXzB4Mjk2ZjczKSk7Zm9yKF8weDFlMjA5ND0weDAsXzB4MTZhZWZhPV8weDI2NThiYVtfMHhkYTIxYjQoMHgyNGQpXTtfMHgxZTIwOTQ8XzB4MTZhZWZhO18weDFlMjA5NCsrKWlmKF8weGYxN2MyOT1fMHgyNjU4YmFbXzB4MWUyMDk0XSwhKF8weDI3N2RlNiYmXzB4NDZhZTI2W18weGRhMjFiNCgweDIwYildKF8weGYxN2MyOVtfMHhkYTIxYjQoMHgyMzIpXSgpKSkmJiF0aGlzW18weGRhMjFiNCgweDFiMCldKF8weDI5NmY3MyxfMHhmMTdjMjksXzB4NDY2NTNkKSYmIV8weDY5NjFkM1tfMHhkYTIxYjQoMHgxZDcpK18weGYxN2MyOVtfMHhkYTIxYjQoMHgyMzIpXSgpXSl7aWYoXzB4MWJjNjU3KyssXzB4NDY2NTNkWydhdXRvRXhwYW5kUHJvcGVydHlDb3VudCddKyssXzB4MWJjNjU3Pl8weDU2YjM4MCl7XzB4MjAxMzM1PSEweDA7YnJlYWs7fWlmKCFfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjFlKV0mJl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmMpXSYmXzB4NDY2NTNkW18weGRhMjFiNCgweDI1ZildPl8weDQ2NjUzZFsnYXV0b0V4cGFuZExpbWl0J10pe18weDIwMTMzNT0hMHgwO2JyZWFrO31fMHhlNmYxYzNbJ3B1c2gnXShfMHgyYTJmZDBbXzB4ZGEyMWI0KDB4MWZlKV0oXzB4Y2U3Zjk1LF8weDY5NjFkMyxfMHgyOTZmNzMsXzB4MjA3ZGI4LF8weGYxN2MyOSxfMHg0NjY1M2QpKTt9fX19fWlmKF8weDI0YjdmM1tfMHhkYTIxYjQoMHgyMjgpXT1fMHgyMDdkYjgsXzB4NGY1ZDYyPyhfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09XzB4Mjk2ZjczWyd2YWx1ZU9mJ10oKSx0aGlzWydfY2FwSWZTdHJpbmcnXShfMHgyMDdkYjgsXzB4MjRiN2YzLF8weDQ2NjUzZCxfMHg1YmY5ZmQpKTpfMHgyMDdkYjg9PT0nZGF0ZSc/XzB4MjRiN2YzW18weGRhMjFiNCgweDFmNCldPXRoaXNbJ19kYXRlVG9TdHJpbmcnXVtfMHhkYTIxYjQoMHgyNzMpXShfMHgyOTZmNzMpOl8weDIwN2RiOD09PV8weGRhMjFiNCgweDI2OSk/XzB4MjRiN2YzW18weGRhMjFiNCgweDFmNCldPV8weDI5NmY3M1tfMHhkYTIxYjQoMHgyMzIpXSgpOl8weDIwN2RiOD09PSdSZWdFeHAnP18weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT10aGlzW18weGRhMjFiNCgweDIwNyldW18weGRhMjFiNCgweDI3MyldKF8weDI5NmY3Myk6XzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MWQ5KSYmdGhpc1tfMHhkYTIxYjQoMHgxYjUpXT9fMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09dGhpc1tfMHhkYTIxYjQoMHgxYjUpXVtfMHhkYTIxYjQoMHgyOGQpXVtfMHhkYTIxYjQoMHgyMzIpXVtfMHhkYTIxYjQoMHgyNzMpXShfMHgyOTZmNzMpOiFfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MWQxKV0mJiEoXzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MjE3KXx8XzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MjBmKSkmJihkZWxldGUgXzB4MjRiN2YzW18weGRhMjFiNCgweDFmNCldLF8weDI0YjdmM1tfMHhkYTIxYjQoMHgyMTApXT0hMHgwKSxfMHgyMDEzMzUmJihfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MjE0KV09ITB4MCksXzB4MWYwZDU2PV8weDQ2NjUzZFsnbm9kZSddW18weGRhMjFiNCgweDI2NSldLF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyOGMpXVtfMHhkYTIxYjQoMHgyNjUpXT1fMHgyNGI3ZjMsdGhpc1tfMHhkYTIxYjQoMHgyMzEpXShfMHgyNGI3ZjMsXzB4NDY2NTNkKSxfMHhlNmYxYzNbXzB4ZGEyMWI0KDB4MjRkKV0pe2ZvcihfMHgxZTIwOTQ9MHgwLF8weDE2YWVmYT1fMHhlNmYxYzNbJ2xlbmd0aCddO18weDFlMjA5NDxfMHgxNmFlZmE7XzB4MWUyMDk0KyspXzB4ZTZmMWMzW18weDFlMjA5NF0oXzB4MWUyMDk0KTt9XzB4Y2U3Zjk1W18weGRhMjFiNCgweDI0ZCldJiYoXzB4MjRiN2YzW18weGRhMjFiNCgweDFlOSldPV8weGNlN2Y5NSk7fWNhdGNoKF8weDM4ZWY2ZCl7XzB4MTMxZWI2KF8weDM4ZWY2ZCxfMHgyNGI3ZjMsXzB4NDY2NTNkKTt9cmV0dXJuIHRoaXNbXzB4ZGEyMWI0KDB4MjM2KV0oXzB4Mjk2ZjczLF8weDI0YjdmMyksdGhpc1tfMHhkYTIxYjQoMHgyMzgpXShfMHgyNGI3ZjMsXzB4NDY2NTNkKSxfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjhjKV1bXzB4ZGEyMWI0KDB4MjY1KV09XzB4MWYwZDU2LF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgxZDMpXS0tLF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmMpXT1fMHg0ZGQ2YjAsXzB4NDY2NTNkW18weGRhMjFiNCgweDIyYyldJiZfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJlKV1bXzB4ZGEyMWI0KDB4MjI5KV0oKSxfMHgyNGI3ZjM7fVtfMHgxYWU5ZGUoMHgxZTYpXShfMHhiNzRlYmQpe3ZhciBfMHgxNzUzZDY9XzB4MWFlOWRlO3JldHVybiBPYmplY3RbXzB4MTc1M2Q2KDB4MWY1KV0/T2JqZWN0W18weDE3NTNkNigweDFmNSldKF8weGI3NGViZCk6W107fVtfMHgxYWU5ZGUoMHgyODcpXShfMHgyOGQyZWYpe3ZhciBfMHgzM2UxN2Y9XzB4MWFlOWRlO3JldHVybiEhKF8weDI4ZDJlZiYmXzB4MmYxYTcwW18weDMzZTE3ZigweDFmOCldJiZ0aGlzW18weDMzZTE3ZigweDIxYSldKF8weDI4ZDJlZik9PT1fMHgzM2UxN2YoMHgyNDIpJiZfMHgyOGQyZWZbXzB4MzNlMTdmKDB4MjU4KV0pO31bXzB4MWFlOWRlKDB4MWIwKV0oXzB4MzI5YjFiLF8weDQyMjkyYSxfMHgzN2FiMmMpe3ZhciBfMHg0NTNhYzk9XzB4MWFlOWRlO3JldHVybiBfMHgzN2FiMmNbXzB4NDUzYWM5KDB4MWI2KV0/dHlwZW9mIF8weDMyOWIxYltfMHg0MjI5MmFdPT0nZnVuY3Rpb24nOiEweDE7fVtfMHgxYWU5ZGUoMHgyNzYpXShfMHgyMmYwNTgpe3ZhciBfMHgyNDFiN2E9XzB4MWFlOWRlLF8weDNkNGU2NT0nJztyZXR1cm4gXzB4M2Q0ZTY1PXR5cGVvZiBfMHgyMmYwNTgsXzB4M2Q0ZTY1PT09J29iamVjdCc/dGhpc1snX29iamVjdFRvU3RyaW5nJ10oXzB4MjJmMDU4KT09PSdbb2JqZWN0XFxcXHgyMEFycmF5XSc/XzB4M2Q0ZTY1PSdhcnJheSc6dGhpc1tfMHgyNDFiN2EoMHgyMWEpXShfMHgyMmYwNTgpPT09XzB4MjQxYjdhKDB4MjQzKT9fMHgzZDRlNjU9XzB4MjQxYjdhKDB4MWQ4KTp0aGlzW18weDI0MWI3YSgweDIxYSldKF8weDIyZjA1OCk9PT1fMHgyNDFiN2EoMHgyMzUpP18weDNkNGU2NT1fMHgyNDFiN2EoMHgyNjkpOl8weDIyZjA1OD09PW51bGw/XzB4M2Q0ZTY1PV8weDI0MWI3YSgweDIxNyk6XzB4MjJmMDU4W18weDI0MWI3YSgweDIxNildJiYoXzB4M2Q0ZTY1PV8weDIyZjA1OFtfMHgyNDFiN2EoMHgyMTYpXVtfMHgyNDFiN2EoMHgyMWIpXXx8XzB4M2Q0ZTY1KTpfMHgzZDRlNjU9PT1fMHgyNDFiN2EoMHgyMGYpJiZ0aGlzWydfSFRNTEFsbENvbGxlY3Rpb24nXSYmXzB4MjJmMDU4IGluc3RhbmNlb2YgdGhpc1tfMHgyNDFiN2EoMHgyODUpXSYmKF8weDNkNGU2NT1fMHgyNDFiN2EoMHgyMzkpKSxfMHgzZDRlNjU7fVtfMHgxYWU5ZGUoMHgyMWEpXShfMHgxZGU4NzIpe3ZhciBfMHgzNTcwZTk9XzB4MWFlOWRlO3JldHVybiBPYmplY3RbXzB4MzU3MGU5KDB4MjhkKV1bXzB4MzU3MGU5KDB4MjMyKV1bXzB4MzU3MGU5KDB4MjczKV0oXzB4MWRlODcyKTt9W18weDFhZTlkZSgweDIyZildKF8weDQyYjk4MSl7dmFyIF8weDFiNDM4OT1fMHgxYWU5ZGU7cmV0dXJuIF8weDQyYjk4MT09PSdib29sZWFuJ3x8XzB4NDJiOTgxPT09J3N0cmluZyd8fF8weDQyYjk4MT09PV8weDFiNDM4OSgweDFmMCk7fVsnX2lzUHJpbWl0aXZlV3JhcHBlclR5cGUnXShfMHg1N2QxMmEpe3ZhciBfMHg1MWZhNDA9XzB4MWFlOWRlO3JldHVybiBfMHg1N2QxMmE9PT0nQm9vbGVhbid8fF8weDU3ZDEyYT09PSdTdHJpbmcnfHxfMHg1N2QxMmE9PT1fMHg1MWZhNDAoMHgyMjUpO31bXzB4MWFlOWRlKDB4MWI4KV0oXzB4M2RlOTBlLF8weDE0YjgyZixfMHgxNTg4NWYsXzB4MjJiMjZlLF8weDViZjA2MSxfMHgyYmFlODUpe3ZhciBfMHgyNzlkMzA9dGhpcztyZXR1cm4gZnVuY3Rpb24oXzB4NTZjNjg4KXt2YXIgXzB4MzFjYjQ5PV8weDI4MDAsXzB4NjRmY2EwPV8weDViZjA2MVtfMHgzMWNiNDkoMHgyOGMpXVtfMHgzMWNiNDkoMHgyNjUpXSxfMHgxODljZDg9XzB4NWJmMDYxWydub2RlJ11bXzB4MzFjYjQ5KDB4MjVkKV0sXzB4NWVhMjVmPV8weDViZjA2MVtfMHgzMWNiNDkoMHgyOGMpXVsncGFyZW50J107XzB4NWJmMDYxWydub2RlJ11bXzB4MzFjYjQ5KDB4MjNiKV09XzB4NjRmY2EwLF8weDViZjA2MVsnbm9kZSddW18weDMxY2I0OSgweDI1ZCldPXR5cGVvZiBfMHgyMmIyNmU9PV8weDMxY2I0OSgweDFmMCk/XzB4MjJiMjZlOl8weDU2YzY4OCxfMHgzZGU5MGVbXzB4MzFjYjQ5KDB4MjA0KV0oXzB4Mjc5ZDMwW18weDMxY2I0OSgweDI1YyldKF8weDE0YjgyZixfMHgxNTg4NWYsXzB4MjJiMjZlLF8weDViZjA2MSxfMHgyYmFlODUpKSxfMHg1YmYwNjFbXzB4MzFjYjQ5KDB4MjhjKV1bXzB4MzFjYjQ5KDB4MjNiKV09XzB4NWVhMjVmLF8weDViZjA2MVtfMHgzMWNiNDkoMHgyOGMpXVtfMHgzMWNiNDkoMHgyNWQpXT1fMHgxODljZDg7fTt9WydfYWRkT2JqZWN0UHJvcGVydHknXShfMHg4ZjE3MTQsXzB4NDZjMTllLF8weDMwODc5MyxfMHg1M2JmMTMsXzB4M2M1NzEyLF8weDNlYjdkYixfMHg0ZGQ4ODEpe3ZhciBfMHg1NTc0NDQ9XzB4MWFlOWRlLF8weDU4NzY2Yz10aGlzO3JldHVybiBfMHg0NmMxOWVbXzB4NTU3NDQ0KDB4MWQ3KStfMHgzYzU3MTJbJ3RvU3RyaW5nJ10oKV09ITB4MCxmdW5jdGlvbihfMHg0OTRhNzQpe3ZhciBfMHgzYzczOWI9XzB4NTU3NDQ0LF8weDM4YzA5OT1fMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjY1KV0sXzB4ZWE4ODY1PV8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyNWQpXSxfMHgxZGE1ODM9XzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDIzYildO18weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyM2IpXT1fMHgzOGMwOTksXzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDI1ZCldPV8weDQ5NGE3NCxfMHg4ZjE3MTRbXzB4M2M3MzliKDB4MjA0KV0oXzB4NTg3NjZjW18weDNjNzM5YigweDI1YyldKF8weDMwODc5MyxfMHg1M2JmMTMsXzB4M2M1NzEyLF8weDNlYjdkYixfMHg0ZGQ4ODEpKSxfMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjNiKV09XzB4MWRhNTgzLF8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyNWQpXT1fMHhlYTg4NjU7fTt9W18weDFhZTlkZSgweDI1YyldKF8weGEyNmFmNyxfMHhkMTc4M2MsXzB4NGMzNDEwLF8weGEzYmYyLF8weDlmYWQ5OCl7dmFyIF8weGE2M2E0Yj1fMHgxYWU5ZGUsXzB4MzZlY2E5PXRoaXM7XzB4OWZhZDk4fHwoXzB4OWZhZDk4PWZ1bmN0aW9uKF8weDQ5NThhOCxfMHg0MWNhMjgpe3JldHVybiBfMHg0OTU4YThbXzB4NDFjYTI4XTt9KTt2YXIgXzB4MjljYmI5PV8weDRjMzQxMFtfMHhhNjNhNGIoMHgyMzIpXSgpLF8weDVjZmI0Nj1fMHhhM2JmMltfMHhhNjNhNGIoMHgyNzcpXXx8e30sXzB4NDQ1MTgzPV8weGEzYmYyW18weGE2M2E0YigweDFkMSldLF8weDMxNmY1MD1fMHhhM2JmMlsnaXNFeHByZXNzaW9uVG9FdmFsdWF0ZSddO3RyeXt2YXIgXzB4MTQxZDI1PXRoaXNbJ19pc01hcCddKF8weGEyNmFmNyksXzB4ZmQ1ZjY3PV8weDI5Y2JiOTtfMHgxNDFkMjUmJl8weGZkNWY2N1sweDBdPT09J1xcXFx4MjcnJiYoXzB4ZmQ1ZjY3PV8weGZkNWY2N1tfMHhhNjNhNGIoMHgxYTkpXSgweDEsXzB4ZmQ1ZjY3W18weGE2M2E0YigweDI0ZCldLTB4MikpO3ZhciBfMHg0ZmRiNGQ9XzB4YTNiZjJbXzB4YTYzYTRiKDB4Mjc3KV09XzB4NWNmYjQ2W18weGE2M2E0YigweDFkNykrXzB4ZmQ1ZjY3XTtfMHg0ZmRiNGQmJihfMHhhM2JmMltfMHhhNjNhNGIoMHgxZDEpXT1fMHhhM2JmMltfMHhhNjNhNGIoMHgxZDEpXSsweDEpLF8weGEzYmYyW18weGE2M2E0YigweDIxZSldPSEhXzB4NGZkYjRkO3ZhciBfMHg0NzUxNTc9dHlwZW9mIF8weDRjMzQxMD09J3N5bWJvbCcsXzB4MjlkODVjPXsnbmFtZSc6XzB4NDc1MTU3fHxfMHgxNDFkMjU/XzB4MjljYmI5OnRoaXNbJ19wcm9wZXJ0eU5hbWUnXShfMHgyOWNiYjkpfTtpZihfMHg0NzUxNTcmJihfMHgyOWQ4NWNbXzB4YTYzYTRiKDB4MWQ5KV09ITB4MCksIShfMHhkMTc4M2M9PT1fMHhhNjNhNGIoMHgyNGYpfHxfMHhkMTc4M2M9PT1fMHhhNjNhNGIoMHgyNGUpKSl7dmFyIF8weDI2MGI3Mz10aGlzW18weGE2M2E0YigweDFjYildKF8weGEyNmFmNyxfMHg0YzM0MTApO2lmKF8weDI2MGI3MyYmKF8weDI2MGI3M1tfMHhhNjNhNGIoMHgyMDUpXSYmKF8weDI5ZDg1Y1tfMHhhNjNhNGIoMHgxYTUpXT0hMHgwKSxfMHgyNjBiNzNbXzB4YTYzYTRiKDB4MWZiKV0mJiFfMHg0ZmRiNGQmJiFfMHhhM2JmMltfMHhhNjNhNGIoMHgxYmUpXSkpcmV0dXJuIF8weDI5ZDg1Y1snZ2V0dGVyJ109ITB4MCx0aGlzW18weGE2M2E0YigweDFkYSldKF8weDI5ZDg1YyxfMHhhM2JmMiksXzB4MjlkODVjO312YXIgXzB4MTk0ZmE1O3RyeXtfMHgxOTRmYTU9XzB4OWZhZDk4KF8weGEyNmFmNyxfMHg0YzM0MTApO31jYXRjaChfMHgyYzMxNDIpe3JldHVybiBfMHgyOWQ4NWM9eyduYW1lJzpfMHgyOWNiYjksJ3R5cGUnOl8weGE2M2E0YigweDFjOCksJ2Vycm9yJzpfMHgyYzMxNDJbXzB4YTYzYTRiKDB4MjIyKV19LHRoaXNbXzB4YTYzYTRiKDB4MWRhKV0oXzB4MjlkODVjLF8weGEzYmYyKSxfMHgyOWQ4NWM7fXZhciBfMHg1MDg1MmE9dGhpc1tfMHhhNjNhNGIoMHgyNzYpXShfMHgxOTRmYTUpLF8weDNhYjc5ZT10aGlzW18weGE2M2E0YigweDIyZildKF8weDUwODUyYSk7aWYoXzB4MjlkODVjW18weGE2M2E0YigweDIyOCldPV8weDUwODUyYSxfMHgzYWI3OWUpdGhpc1tfMHhhNjNhNGIoMHgxZGEpXShfMHgyOWQ4NWMsXzB4YTNiZjIsXzB4MTk0ZmE1LGZ1bmN0aW9uKCl7dmFyIF8weDMwYTMzZj1fMHhhNjNhNGI7XzB4MjlkODVjW18weDMwYTMzZigweDFmNCldPV8weDE5NGZhNVsndmFsdWVPZiddKCksIV8weDRmZGI0ZCYmXzB4MzZlY2E5W18weDMwYTMzZigweDFjNCldKF8weDUwODUyYSxfMHgyOWQ4NWMsXzB4YTNiZjIse30pO30pO2Vsc2V7dmFyIF8weDJlYjhkMT1fMHhhM2JmMltfMHhhNjNhNGIoMHgyMmMpXSYmXzB4YTNiZjJbXzB4YTYzYTRiKDB4MWQzKV08XzB4YTNiZjJbJ2F1dG9FeHBhbmRNYXhEZXB0aCddJiZfMHhhM2JmMltfMHhhNjNhNGIoMHgyMmUpXVsnaW5kZXhPZiddKF8weDE5NGZhNSk8MHgwJiZfMHg1MDg1MmEhPT0nZnVuY3Rpb24nJiZfMHhhM2JmMltfMHhhNjNhNGIoMHgyNWYpXTxfMHhhM2JmMlsnYXV0b0V4cGFuZExpbWl0J107XzB4MmViOGQxfHxfMHhhM2JmMltfMHhhNjNhNGIoMHgxZDMpXTxfMHg0NDUxODN8fF8weDRmZGI0ZD8odGhpc1snc2VyaWFsaXplJ10oXzB4MjlkODVjLF8weDE5NGZhNSxfMHhhM2JmMixfMHg0ZmRiNGR8fHt9KSx0aGlzW18weGE2M2E0YigweDIzNildKF8weDE5NGZhNSxfMHgyOWQ4NWMpKTp0aGlzW18weGE2M2E0YigweDFkYSldKF8weDI5ZDg1YyxfMHhhM2JmMixfMHgxOTRmYTUsZnVuY3Rpb24oKXt2YXIgXzB4MWFjMmY0PV8weGE2M2E0YjtfMHg1MDg1MmE9PT1fMHgxYWMyZjQoMHgyMTcpfHxfMHg1MDg1MmE9PT0ndW5kZWZpbmVkJ3x8KGRlbGV0ZSBfMHgyOWQ4NWNbJ3ZhbHVlJ10sXzB4MjlkODVjW18weDFhYzJmNCgweDIxMCldPSEweDApO30pO31yZXR1cm4gXzB4MjlkODVjO31maW5hbGx5e18weGEzYmYyW18weGE2M2E0YigweDI3NyldPV8weDVjZmI0NixfMHhhM2JmMlsnZGVwdGgnXT1fMHg0NDUxODMsXzB4YTNiZjJbXzB4YTYzYTRiKDB4MjFlKV09XzB4MzE2ZjUwO319WydfY2FwSWZTdHJpbmcnXShfMHgxNWE2MTksXzB4MmU5NTUxLF8weDJkMGRjNyxfMHgzYWE2MWQpe3ZhciBfMHgxY2NmZDg9XzB4MWFlOWRlLF8weDE0ZTVjZT1fMHgzYWE2MWRbXzB4MWNjZmQ4KDB4MjY4KV18fF8weDJkMGRjN1tfMHgxY2NmZDgoMHgyNjgpXTtpZigoXzB4MTVhNjE5PT09XzB4MWNjZmQ4KDB4MjgyKXx8XzB4MTVhNjE5PT09XzB4MWNjZmQ4KDB4MjkzKSkmJl8weDJlOTU1MVsndmFsdWUnXSl7bGV0IF8weDM4MTc0Mz1fMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MWY0KV1bJ2xlbmd0aCddO18weDJkMGRjN1snYWxsU3RyTGVuZ3RoJ10rPV8weDM4MTc0MyxfMHgyZDBkYzdbJ2FsbFN0ckxlbmd0aCddPl8weDJkMGRjN1sndG90YWxTdHJMZW5ndGgnXT8oXzB4MmU5NTUxW18weDFjY2ZkOCgweDIxMCldPScnLGRlbGV0ZSBfMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MWY0KV0pOl8weDM4MTc0Mz5fMHgxNGU1Y2UmJihfMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MjEwKV09XzB4MmU5NTUxW18weDFjY2ZkOCgweDFmNCldWydzdWJzdHInXSgweDAsXzB4MTRlNWNlKSxkZWxldGUgXzB4MmU5NTUxWyd2YWx1ZSddKTt9fVtfMHgxYWU5ZGUoMHgyODMpXShfMHgxMWFiM2Upe3ZhciBfMHg0NTViY2Q9XzB4MWFlOWRlO3JldHVybiEhKF8weDExYWIzZSYmXzB4MmYxYTcwWydNYXAnXSYmdGhpc1tfMHg0NTViY2QoMHgyMWEpXShfMHgxMWFiM2UpPT09XzB4NDU1YmNkKDB4MjBlKSYmXzB4MTFhYjNlW18weDQ1NWJjZCgweDI1OCldKTt9W18weDFhZTlkZSgweDIxMyldKF8weDU5NzYxZCl7dmFyIF8weDIwNWQ5ND1fMHgxYWU5ZGU7aWYoXzB4NTk3NjFkW18weDIwNWQ5NCgweDI2YSldKC9eXFxcXGQrJC8pKXJldHVybiBfMHg1OTc2MWQ7dmFyIF8weDI4M2JhZDt0cnl7XzB4MjgzYmFkPUpTT05bXzB4MjA1ZDk0KDB4MWMyKV0oJycrXzB4NTk3NjFkKTt9Y2F0Y2h7XzB4MjgzYmFkPSdcXFxceDIyJyt0aGlzW18weDIwNWQ5NCgweDIxYSldKF8weDU5NzYxZCkrJ1xcXFx4MjInO31yZXR1cm4gXzB4MjgzYmFkWydtYXRjaCddKC9eXFxcIihbYS16QS1aX11bYS16QS1aXzAtOV0qKVxcXCIkLyk/XzB4MjgzYmFkPV8weDI4M2JhZFtfMHgyMDVkOTQoMHgxYTkpXSgweDEsXzB4MjgzYmFkW18weDIwNWQ5NCgweDI0ZCldLTB4Mik6XzB4MjgzYmFkPV8weDI4M2JhZFtfMHgyMDVkOTQoMHgyN2UpXSgvJy9nLCdcXFxceDVjXFxcXHgyNycpW18weDIwNWQ5NCgweDI3ZSldKC9cXFxcXFxcXFxcXCIvZywnXFxcXHgyMicpW18weDIwNWQ5NCgweDI3ZSldKC8oXlxcXCJ8XFxcIiQpL2csJ1xcXFx4MjcnKSxfMHgyODNiYWQ7fVtfMHgxYWU5ZGUoMHgxZGEpXShfMHg1NWJiMTEsXzB4MWIzNzk1LF8weDQ4ZjI2MSxfMHgzZTIxYWEpe3ZhciBfMHg1NzFhZGM9XzB4MWFlOWRlO3RoaXNbXzB4NTcxYWRjKDB4MjMxKV0oXzB4NTViYjExLF8weDFiMzc5NSksXzB4M2UyMWFhJiZfMHgzZTIxYWEoKSx0aGlzWydfYWRkaXRpb25hbE1ldGFkYXRhJ10oXzB4NDhmMjYxLF8weDU1YmIxMSksdGhpc1tfMHg1NzFhZGMoMHgyMzgpXShfMHg1NWJiMTEsXzB4MWIzNzk1KTt9W18weDFhZTlkZSgweDIzMSldKF8weGUwODJlZCxfMHg1MGI3MDApe3ZhciBfMHg0ODlkOWY9XzB4MWFlOWRlO3RoaXNbJ19zZXROb2RlSWQnXShfMHhlMDgyZWQsXzB4NTBiNzAwKSx0aGlzW18weDQ4OWQ5ZigweDFjMSldKF8weGUwODJlZCxfMHg1MGI3MDApLHRoaXNbJ19zZXROb2RlRXhwcmVzc2lvblBhdGgnXShfMHhlMDgyZWQsXzB4NTBiNzAwKSx0aGlzWydfc2V0Tm9kZVBlcm1pc3Npb25zJ10oXzB4ZTA4MmVkLF8weDUwYjcwMCk7fVsnX3NldE5vZGVJZCddKF8weDU2ZTIwMCxfMHg0NTMxOTgpe31bJ19zZXROb2RlUXVlcnlQYXRoJ10oXzB4NDBhOTVmLF8weDFmNjE3YSl7fVtfMHgxYWU5ZGUoMHgyMGEpXShfMHgyOTVjNmEsXzB4Mjk3YmI0KXt9W18weDFhZTlkZSgweDFlZildKF8weDNmNjkyNSl7cmV0dXJuIF8weDNmNjkyNT09PXRoaXNbJ191bmRlZmluZWQnXTt9W18weDFhZTlkZSgweDIzOCldKF8weDIxNTg0MCxfMHgyMjkyZmQpe3ZhciBfMHg1NDRjMzc9XzB4MWFlOWRlO3RoaXNbXzB4NTQ0YzM3KDB4MjBhKV0oXzB4MjE1ODQwLF8weDIyOTJmZCksdGhpc1snX3NldE5vZGVFeHBhbmRhYmxlU3RhdGUnXShfMHgyMTU4NDApLF8weDIyOTJmZFtfMHg1NDRjMzcoMHgxZDYpXSYmdGhpc1snX3NvcnRQcm9wcyddKF8weDIxNTg0MCksdGhpc1tfMHg1NDRjMzcoMHgxYWYpXShfMHgyMTU4NDAsXzB4MjI5MmZkKSx0aGlzW18weDU0NGMzNygweDI3MSldKF8weDIxNTg0MCxfMHgyMjkyZmQpLHRoaXNbXzB4NTQ0YzM3KDB4MjUzKV0oXzB4MjE1ODQwKTt9W18weDFhZTlkZSgweDIzNildKF8weDkwZTM3ZCxfMHgyOTA1YWMpe3ZhciBfMHgyNDViZjQ9XzB4MWFlOWRlO2xldCBfMHg0MDRhNTM7dHJ5e18weDJmMWE3MFtfMHgyNDViZjQoMHgyMjcpXSYmKF8weDQwNGE1Mz1fMHgyZjFhNzBbXzB4MjQ1YmY0KDB4MjI3KV1bXzB4MjQ1YmY0KDB4MjJhKV0sXzB4MmYxYTcwW18weDI0NWJmNCgweDIyNyldW18weDI0NWJmNCgweDIyYSldPWZ1bmN0aW9uKCl7fSksXzB4OTBlMzdkJiZ0eXBlb2YgXzB4OTBlMzdkW18weDI0NWJmNCgweDI0ZCldPT1fMHgyNDViZjQoMHgxZjApJiYoXzB4MjkwNWFjW18weDI0NWJmNCgweDI0ZCldPV8weDkwZTM3ZFtfMHgyNDViZjQoMHgyNGQpXSk7fWNhdGNoe31maW5hbGx5e18weDQwNGE1MyYmKF8weDJmMWE3MFsnY29uc29sZSddW18weDI0NWJmNCgweDIyYSldPV8weDQwNGE1Myk7fWlmKF8weDI5MDVhY1tfMHgyNDViZjQoMHgyMjgpXT09PV8weDI0NWJmNCgweDFmMCl8fF8weDI5MDVhY1tfMHgyNDViZjQoMHgyMjgpXT09PV8weDI0NWJmNCgweDIyNSkpe2lmKGlzTmFOKF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXSkpXzB4MjkwNWFjWyduYW4nXT0hMHgwLGRlbGV0ZSBfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV07ZWxzZSBzd2l0Y2goXzB4MjkwNWFjW18weDI0NWJmNCgweDFmNCldKXtjYXNlIE51bWJlcltfMHgyNDViZjQoMHgyNzkpXTpfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjIzKV09ITB4MCxkZWxldGUgXzB4MjkwNWFjW18weDI0NWJmNCgweDFmNCldO2JyZWFrO2Nhc2UgTnVtYmVyW18weDI0NWJmNCgweDI2MSldOl8weDI5MDVhY1tfMHgyNDViZjQoMHgyMTUpXT0hMHgwLGRlbGV0ZSBfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV07YnJlYWs7Y2FzZSAweDA6dGhpc1snX2lzTmVnYXRpdmVaZXJvJ10oXzB4MjkwNWFjWyd2YWx1ZSddKSYmKF8weDI5MDVhY1snbmVnYXRpdmVaZXJvJ109ITB4MCk7YnJlYWs7fX1lbHNlIF8weDI5MDVhY1sndHlwZSddPT09J2Z1bmN0aW9uJyYmdHlwZW9mIF8weDkwZTM3ZFtfMHgyNDViZjQoMHgyMWIpXT09XzB4MjQ1YmY0KDB4MjgyKSYmXzB4OTBlMzdkW18weDI0NWJmNCgweDIxYildJiZfMHgyOTA1YWNbJ25hbWUnXSYmXzB4OTBlMzdkW18weDI0NWJmNCgweDIxYildIT09XzB4MjkwNWFjW18weDI0NWJmNCgweDIxYildJiYoXzB4MjkwNWFjW18weDI0NWJmNCgweDI2NyldPV8weDkwZTM3ZFsnbmFtZSddKTt9W18weDFhZTlkZSgweDIzZildKF8weDM2MDNmOSl7cmV0dXJuIDB4MS9fMHgzNjAzZjk9PT1OdW1iZXJbJ05FR0FUSVZFX0lORklOSVRZJ107fVtfMHgxYWU5ZGUoMHgyMjYpXShfMHg5MTEzNWYpe3ZhciBfMHgyN2JjYzk9XzB4MWFlOWRlOyFfMHg5MTEzNWZbJ3Byb3BzJ118fCFfMHg5MTEzNWZbJ3Byb3BzJ11bXzB4MjdiY2M5KDB4MjRkKV18fF8weDkxMTM1ZltfMHgyN2JjYzkoMHgyMjgpXT09PSdhcnJheSd8fF8weDkxMTM1ZltfMHgyN2JjYzkoMHgyMjgpXT09PSdNYXAnfHxfMHg5MTEzNWZbXzB4MjdiY2M5KDB4MjI4KV09PT1fMHgyN2JjYzkoMHgxZjgpfHxfMHg5MTEzNWZbJ3Byb3BzJ11bXzB4MjdiY2M5KDB4MWIyKV0oZnVuY3Rpb24oXzB4MmEyY2RiLF8weDQ5ZWU0Yil7dmFyIF8weDVlNzZiMz1fMHgyN2JjYzksXzB4MTkwNjNlPV8weDJhMmNkYltfMHg1ZTc2YjMoMHgyMWIpXVtfMHg1ZTc2YjMoMHgxYTIpXSgpLF8weDQ0NjAwMz1fMHg0OWVlNGJbXzB4NWU3NmIzKDB4MjFiKV1bXzB4NWU3NmIzKDB4MWEyKV0oKTtyZXR1cm4gXzB4MTkwNjNlPF8weDQ0NjAwMz8tMHgxOl8weDE5MDYzZT5fMHg0NDYwMDM/MHgxOjB4MDt9KTt9WydfYWRkRnVuY3Rpb25zTm9kZSddKF8weDJlOGU0ZCxfMHgxOTljMzApe3ZhciBfMHgzZDNhYTA9XzB4MWFlOWRlO2lmKCEoXzB4MTk5YzMwW18weDNkM2FhMCgweDFiNildfHwhXzB4MmU4ZTRkW18weDNkM2FhMCgweDFlOSldfHwhXzB4MmU4ZTRkWydwcm9wcyddWydsZW5ndGgnXSkpe2Zvcih2YXIgXzB4NDM1MTMzPVtdLF8weDI1MzFlNz1bXSxfMHg0YjVhNjE9MHgwLF8weDM2ZDI4Yj1fMHgyZThlNGRbXzB4M2QzYWEwKDB4MWU5KV1bJ2xlbmd0aCddO18weDRiNWE2MTxfMHgzNmQyOGI7XzB4NGI1YTYxKyspe3ZhciBfMHgxMGQ3OTU9XzB4MmU4ZTRkWydwcm9wcyddW18weDRiNWE2MV07XzB4MTBkNzk1W18weDNkM2FhMCgweDIyOCldPT09XzB4M2QzYWEwKDB4MjU0KT9fMHg0MzUxMzNbXzB4M2QzYWEwKDB4MjA0KV0oXzB4MTBkNzk1KTpfMHgyNTMxZTdbXzB4M2QzYWEwKDB4MjA0KV0oXzB4MTBkNzk1KTt9aWYoISghXzB4MjUzMWU3W18weDNkM2FhMCgweDI0ZCldfHxfMHg0MzUxMzNbJ2xlbmd0aCddPD0weDEpKXtfMHgyZThlNGRbJ3Byb3BzJ109XzB4MjUzMWU3O3ZhciBfMHgxNGRlYzQ9eydmdW5jdGlvbnNOb2RlJzohMHgwLCdwcm9wcyc6XzB4NDM1MTMzfTt0aGlzW18weDNkM2FhMCgweDI4ZSldKF8weDE0ZGVjNCxfMHgxOTljMzApLHRoaXNbXzB4M2QzYWEwKDB4MjBhKV0oXzB4MTRkZWM0LF8weDE5OWMzMCksdGhpc1snX3NldE5vZGVFeHBhbmRhYmxlU3RhdGUnXShfMHgxNGRlYzQpLHRoaXNbJ19zZXROb2RlUGVybWlzc2lvbnMnXShfMHgxNGRlYzQsXzB4MTk5YzMwKSxfMHgxNGRlYzRbJ2lkJ10rPSdcXFxceDIwZicsXzB4MmU4ZTRkWydwcm9wcyddWyd1bnNoaWZ0J10oXzB4MTRkZWM0KTt9fX1bJ19hZGRMb2FkTm9kZSddKF8weDRhOGY3YSxfMHgzNDZkYjApe31bJ19zZXROb2RlRXhwYW5kYWJsZVN0YXRlJ10oXzB4MWM2ZmQxKXt9W18weDFhZTlkZSgweDFkZSldKF8weDEyMTFlOSl7dmFyIF8weDM5MDNiNT1fMHgxYWU5ZGU7cmV0dXJuIEFycmF5W18weDM5MDNiNSgweDIwOCldKF8weDEyMTFlOSl8fHR5cGVvZiBfMHgxMjExZTk9PSdvYmplY3QnJiZ0aGlzW18weDM5MDNiNSgweDIxYSldKF8weDEyMTFlOSk9PT0nW29iamVjdFxcXFx4MjBBcnJheV0nO31bXzB4MWFlOWRlKDB4MWQwKV0oXzB4MzExZThjLF8weDY5ZjhmMCl7fVtfMHgxYWU5ZGUoMHgyNTMpXShfMHgxZmI1YWQpe3ZhciBfMHg0ZTUxNmE9XzB4MWFlOWRlO2RlbGV0ZSBfMHgxZmI1YWRbXzB4NGU1MTZhKDB4MWZjKV0sZGVsZXRlIF8weDFmYjVhZFsnX2hhc1NldE9uSXRzUGF0aCddLGRlbGV0ZSBfMHgxZmI1YWRbJ19oYXNNYXBPbkl0c1BhdGgnXTt9Wydfc2V0Tm9kZUV4cHJlc3Npb25QYXRoJ10oXzB4MWY0M2YwLF8weDVkYzE4Yyl7fX1sZXQgXzB4NDRlMDk3PW5ldyBfMHgzOWFlZTMoKSxfMHg1NTU5MzM9eydwcm9wcyc6MHg2NCwnZWxlbWVudHMnOjB4NjQsJ3N0ckxlbmd0aCc6MHg0MDAqMHgzMiwndG90YWxTdHJMZW5ndGgnOjB4NDAwKjB4MzIsJ2F1dG9FeHBhbmRMaW1pdCc6MHgxMzg4LCdhdXRvRXhwYW5kTWF4RGVwdGgnOjB4YX0sXzB4NWVmNGJiPXsncHJvcHMnOjB4NSwnZWxlbWVudHMnOjB4NSwnc3RyTGVuZ3RoJzoweDEwMCwndG90YWxTdHJMZW5ndGgnOjB4MTAwKjB4MywnYXV0b0V4cGFuZExpbWl0JzoweDFlLCdhdXRvRXhwYW5kTWF4RGVwdGgnOjB4Mn07ZnVuY3Rpb24gXzB4NDdhZWUwKF8weDVmNTE5YixfMHgzNmUxYzIsXzB4MzhhNWIyLF8weDI0NWEzMyxfMHgzMzg0MmUsXzB4NDdmOTlkKXt2YXIgXzB4MWI2ZGM5PV8weDFhZTlkZTtsZXQgXzB4NGU5MDk3LF8weDJkNWYwODt0cnl7XzB4MmQ1ZjA4PV8weDVmNDI1NCgpLF8weDRlOTA5Nz1fMHgzOWJlMDFbXzB4MzZlMWMyXSwhXzB4NGU5MDk3fHxfMHgyZDVmMDgtXzB4NGU5MDk3Wyd0cyddPjB4MWY0JiZfMHg0ZTkwOTdbXzB4MWI2ZGM5KDB4MWViKV0mJl8weDRlOTA5N1tfMHgxYjZkYzkoMHgyMDkpXS9fMHg0ZTkwOTdbXzB4MWI2ZGM5KDB4MWViKV08MHg2ND8oXzB4MzliZTAxW18weDM2ZTFjMl09XzB4NGU5MDk3PXsnY291bnQnOjB4MCwndGltZSc6MHgwLCd0cyc6XzB4MmQ1ZjA4fSxfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV09e30pOl8weDJkNWYwOC1fMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ3RzJ10+MHgzMiYmXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldWydjb3VudCddJiZfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ3RpbWUnXS9fMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bXzB4MWI2ZGM5KDB4MWViKV08MHg2NCYmKF8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXT17fSk7bGV0IF8weDMyMWM1ZT1bXSxfMHgxMDM4NzE9XzB4NGU5MDk3WydyZWR1Y2VMaW1pdHMnXXx8XzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldWydyZWR1Y2VMaW1pdHMnXT9fMHg1ZWY0YmI6XzB4NTU1OTMzLF8weDFlNGFlYz1fMHgxMWYwMGI9Pnt2YXIgXzB4MWQ5M2MzPV8weDFiNmRjOTtsZXQgXzB4Mzk3MGM1PXt9O3JldHVybiBfMHgzOTcwYzVbJ3Byb3BzJ109XzB4MTFmMDBiW18weDFkOTNjMygweDFlOSldLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyMmQpXT1fMHgxMWYwMGJbXzB4MWQ5M2MzKDB4MjJkKV0sXzB4Mzk3MGM1W18weDFkOTNjMygweDI2OCldPV8weDExZjAwYltfMHgxZDkzYzMoMHgyNjgpXSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWFhKV09XzB4MTFmMDBiW18weDFkOTNjMygweDFhYSldLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyNDEpXT1fMHgxMWYwMGJbJ2F1dG9FeHBhbmRMaW1pdCddLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxZjEpXT1fMHgxMWYwMGJbJ2F1dG9FeHBhbmRNYXhEZXB0aCddLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxZDYpXT0hMHgxLF8weDM5NzBjNVsnbm9GdW5jdGlvbnMnXT0hXzB4NWJlMDcyLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxZDEpXT0weDEsXzB4Mzk3MGM1W18weDFkOTNjMygweDFkMyldPTB4MCxfMHgzOTcwYzVbJ2V4cElkJ109XzB4MWQ5M2MzKDB4MjU1KSxfMHgzOTcwYzVbJ3Jvb3RFeHByZXNzaW9uJ109XzB4MWQ5M2MzKDB4MWJhKSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MjJjKV09ITB4MCxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MjJlKV09W10sXzB4Mzk3MGM1WydhdXRvRXhwYW5kUHJvcGVydHlDb3VudCddPTB4MCxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWJlKV09ITB4MCxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWUzKV09MHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyOGMpXT17J2N1cnJlbnQnOnZvaWQgMHgwLCdwYXJlbnQnOnZvaWQgMHgwLCdpbmRleCc6MHgwfSxfMHgzOTcwYzU7fTtmb3IodmFyIF8weDRlMDY2ZT0weDA7XzB4NGUwNjZlPF8weDMzODQyZVtfMHgxYjZkYzkoMHgyNGQpXTtfMHg0ZTA2NmUrKylfMHgzMjFjNWVbXzB4MWI2ZGM5KDB4MjA0KV0oXzB4NDRlMDk3W18weDFiNmRjOSgweDIzZCldKHsndGltZU5vZGUnOl8weDVmNTE5Yj09PV8weDFiNmRjOSgweDIwOSl8fHZvaWQgMHgwfSxfMHgzMzg0MmVbXzB4NGUwNjZlXSxfMHgxZTRhZWMoXzB4MTAzODcxKSx7fSkpO2lmKF8weDVmNTE5Yj09PV8weDFiNmRjOSgweDFhMyl8fF8weDVmNTE5Yj09PV8weDFiNmRjOSgweDIyYSkpe2xldCBfMHg0MjIzYTA9RXJyb3JbJ3N0YWNrVHJhY2VMaW1pdCddO3RyeXtFcnJvcltfMHgxYjZkYzkoMHgyNzgpXT0weDEvMHgwLF8weDMyMWM1ZVtfMHgxYjZkYzkoMHgyMDQpXShfMHg0NGUwOTdbXzB4MWI2ZGM5KDB4MjNkKV0oeydzdGFja05vZGUnOiEweDB9LG5ldyBFcnJvcigpW18weDFiNmRjOSgweDI2YildLF8weDFlNGFlYyhfMHgxMDM4NzEpLHsnc3RyTGVuZ3RoJzoweDEvMHgwfSkpO31maW5hbGx5e0Vycm9yW18weDFiNmRjOSgweDI3OCldPV8weDQyMjNhMDt9fXJldHVybnsnbWV0aG9kJzpfMHgxYjZkYzkoMHgyMzApLCd2ZXJzaW9uJzpfMHg1YTU3NDUsJ2FyZ3MnOlt7J3RzJzpfMHgzOGE1YjIsJ3Nlc3Npb24nOl8weDI0NWEzMywnYXJncyc6XzB4MzIxYzVlLCdpZCc6XzB4MzZlMWMyLCdjb250ZXh0JzpfMHg0N2Y5OWR9XX07fWNhdGNoKF8weDViMjhlZSl7cmV0dXJueydtZXRob2QnOl8weDFiNmRjOSgweDIzMCksJ3ZlcnNpb24nOl8weDVhNTc0NSwnYXJncyc6W3sndHMnOl8weDM4YTViMiwnc2Vzc2lvbic6XzB4MjQ1YTMzLCdhcmdzJzpbeyd0eXBlJzondW5rbm93bicsJ2Vycm9yJzpfMHg1YjI4ZWUmJl8weDViMjhlZVtfMHgxYjZkYzkoMHgyMjIpXX1dLCdpZCc6XzB4MzZlMWMyLCdjb250ZXh0JzpfMHg0N2Y5OWR9XX07fWZpbmFsbHl7dHJ5e2lmKF8weDRlOTA5NyYmXzB4MmQ1ZjA4KXtsZXQgXzB4MWQ2NWM2PV8weDVmNDI1NCgpO18weDRlOTA5N1snY291bnQnXSsrLF8weDRlOTA5N1tfMHgxYjZkYzkoMHgyMDkpXSs9XzB4MzQ5MTNiKF8weDJkNWYwOCxfMHgxZDY1YzYpLF8weDRlOTA5N1sndHMnXT1fMHgxZDY1YzYsXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldWydjb3VudCddKyssXzB4MzliZTAxWydoaXRzJ11bXzB4MWI2ZGM5KDB4MjA5KV0rPV8weDM0OTEzYihfMHgyZDVmMDgsXzB4MWQ2NWM2KSxfMHgzOWJlMDFbJ2hpdHMnXVsndHMnXT1fMHgxZDY1YzYsKF8weDRlOTA5N1tfMHgxYjZkYzkoMHgxZWIpXT4weDMyfHxfMHg0ZTkwOTdbXzB4MWI2ZGM5KDB4MjA5KV0+MHg2NCkmJihfMHg0ZTkwOTdbJ3JlZHVjZUxpbWl0cyddPSEweDApLChfMHgzOWJlMDFbJ2hpdHMnXVsnY291bnQnXT4weDNlOHx8XzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldW18weDFiNmRjOSgweDIwOSldPjB4MTJjKSYmKF8weDM5YmUwMVsnaGl0cyddW18weDFiNmRjOSgweDIzYSldPSEweDApO319Y2F0Y2h7fX19cmV0dXJuIF8weDQ3YWVlMDt9KChfMHgyYWJiMDAsXzB4NzQxMzI2LF8weDI2ODgxNixfMHg4MzE2OTQsXzB4MTcyMmExLF8weDJkZTE5ZixfMHgxZTMwMmEsXzB4MzYzYjhkLF8weGEwYTMwMyxfMHg1ZTU1ZjEsXzB4MzA2YWIzKT0+e3ZhciBfMHgzMTM0NDQ9XzB4ZmU1ZTQ0O2lmKF8weDJhYmIwMFtfMHgzMTM0NDQoMHgyNGMpXSlyZXR1cm4gXzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldO2lmKCFIKF8weDJhYmIwMCxfMHgzNjNiOGQsXzB4MTcyMmExKSlyZXR1cm4gXzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldPXsnY29uc29sZUxvZyc6KCk9Pnt9LCdjb25zb2xlVHJhY2UnOigpPT57fSwnY29uc29sZVRpbWUnOigpPT57fSwnY29uc29sZVRpbWVFbmQnOigpPT57fSwnYXV0b0xvZyc6KCk9Pnt9LCdhdXRvTG9nTWFueSc6KCk9Pnt9LCdhdXRvVHJhY2VNYW55JzooKT0+e30sJ2NvdmVyYWdlJzooKT0+e30sJ2F1dG9UcmFjZSc6KCk9Pnt9LCdhdXRvVGltZSc6KCk9Pnt9LCdhdXRvVGltZUVuZCc6KCk9Pnt9fSxfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV07bGV0IF8weDNiN2Q4ZD1CKF8weDJhYmIwMCksXzB4NGQ5ZjQ3PV8weDNiN2Q4ZFtfMHgzMTM0NDQoMHgxYjEpXSxfMHhmYzZmNmM9XzB4M2I3ZDhkW18weDMxMzQ0NCgweDIxMildLF8weDE3NWYyYj1fMHgzYjdkOGRbXzB4MzEzNDQ0KDB4MjQ5KV0sXzB4MTI4NzI1PXsnaGl0cyc6e30sJ3RzJzp7fX0sXzB4NDJkNmNlPVgoXzB4MmFiYjAwLF8weGEwYTMwMyxfMHgxMjg3MjUsXzB4MmRlMTlmKSxfMHg1NDFiNGU9XzB4MTg3YzhkPT57XzB4MTI4NzI1Wyd0cyddW18weDE4N2M4ZF09XzB4ZmM2ZjZjKCk7fSxfMHg0OWVhMDg9KF8weDI5NjVmNyxfMHg1NGUwYjQpPT57bGV0IF8weGEzYTdhMT1fMHgxMjg3MjVbJ3RzJ11bXzB4NTRlMGI0XTtpZihkZWxldGUgXzB4MTI4NzI1Wyd0cyddW18weDU0ZTBiNF0sXzB4YTNhN2ExKXtsZXQgXzB4Mzc5OWE1PV8weDRkOWY0NyhfMHhhM2E3YTEsXzB4ZmM2ZjZjKCkpO18weDQ4YTg5NihfMHg0MmQ2Y2UoJ3RpbWUnLF8weDI5NjVmNyxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsW18weDM3OTlhNV0sXzB4NTRlMGI0KSk7fX0sXzB4MWNhOTVmPV8weDU1NmUyZT0+e3ZhciBfMHg2MzRjNmQ9XzB4MzEzNDQ0LF8weDNhNzhmOTtyZXR1cm4gXzB4MTcyMmExPT09XzB4NjM0YzZkKDB4MjM3KSYmXzB4MmFiYjAwW18weDYzNGM2ZCgweDFhNyldJiYoKF8weDNhNzhmOT1fMHg1NTZlMmU9PW51bGw/dm9pZCAweDA6XzB4NTU2ZTJlW18weDYzNGM2ZCgweDFmNildKT09bnVsbD92b2lkIDB4MDpfMHgzYTc4ZjlbXzB4NjM0YzZkKDB4MjRkKV0pJiYoXzB4NTU2ZTJlWydhcmdzJ11bMHgwXVtfMHg2MzRjNmQoMHgxYTcpXT1fMHgyYWJiMDBbXzB4NjM0YzZkKDB4MWE3KV0pLF8weDU1NmUyZTt9O18weDJhYmIwMFtfMHgzMTM0NDQoMHgyNGMpXT17J2NvbnNvbGVMb2cnOihfMHgxZDkwNDQsXzB4M2RhM2FiKT0+e3ZhciBfMHg1NzhhMWU9XzB4MzEzNDQ0O18weDJhYmIwMFtfMHg1NzhhMWUoMHgyMjcpXVsnbG9nJ11bXzB4NTc4YTFlKDB4MjFiKV0hPT1fMHg1NzhhMWUoMHgyN2QpJiZfMHg0OGE4OTYoXzB4NDJkNmNlKCdsb2cnLF8weDFkOTA0NCxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsXzB4M2RhM2FiKSk7fSwnY29uc29sZVRyYWNlJzooXzB4Mzg0NjhkLF8weDUwYjU0OCk9Pnt2YXIgXzB4MTQ0MTIzPV8weDMxMzQ0NCxfMHgyYzBhM2IsXzB4NDFiZDMwO18weDJhYmIwMFsnY29uc29sZSddW18weDE0NDEyMygweDIzMCldW18weDE0NDEyMygweDIxYildIT09XzB4MTQ0MTIzKDB4MjdhKSYmKChfMHg0MWJkMzA9KF8weDJjMGEzYj1fMHgyYWJiMDBbXzB4MTQ0MTIzKDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDJjMGEzYltfMHgxNDQxMjMoMHgyNmYpXSkhPW51bGwmJl8weDQxYmQzMFtfMHgxNDQxMjMoMHgyOGMpXSYmKF8weDJhYmIwMFtfMHgxNDQxMjMoMHgxZTEpXT0hMHgwKSxfMHg0OGE4OTYoXzB4MWNhOTVmKF8weDQyZDZjZSgndHJhY2UnLF8weDM4NDY4ZCxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsXzB4NTBiNTQ4KSkpKTt9LCdjb25zb2xlRXJyb3InOihfMHhlODNjMDIsXzB4NTI4MjZlKT0+e3ZhciBfMHgxNGRjY2E9XzB4MzEzNDQ0O18weDJhYmIwMFtfMHgxNGRjY2EoMHgxZTEpXT0hMHgwLF8weDQ4YTg5NihfMHgxY2E5NWYoXzB4NDJkNmNlKF8weDE0ZGNjYSgweDIyYSksXzB4ZTgzYzAyLF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHg1MjgyNmUpKSk7fSwnY29uc29sZVRpbWUnOl8weDVjYWYzZj0+e18weDU0MWI0ZShfMHg1Y2FmM2YpO30sJ2NvbnNvbGVUaW1lRW5kJzooXzB4MjdkOGM1LF8weDQxNzQ3NCk9PntfMHg0OWVhMDgoXzB4NDE3NDc0LF8weDI3ZDhjNSk7fSwnYXV0b0xvZyc6KF8weDg1YzZkZixfMHg3ZjM5YTIpPT57dmFyIF8weDQwYmI0OT1fMHgzMTM0NDQ7XzB4NDhhODk2KF8weDQyZDZjZShfMHg0MGJiNDkoMHgyMzApLF8weDdmMzlhMixfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsW18weDg1YzZkZl0pKTt9LCdhdXRvTG9nTWFueSc6KF8weDUxNThjMCxfMHg3Yjk5ZDIpPT57XzB4NDhhODk2KF8weDQyZDZjZSgnbG9nJyxfMHg1MTU4YzAsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDdiOTlkMikpO30sJ2F1dG9UcmFjZSc6KF8weDFiYzExZCxfMHg1NjVjYzkpPT57XzB4NDhhODk2KF8weDFjYTk1ZihfMHg0MmQ2Y2UoJ3RyYWNlJyxfMHg1NjVjYzksXzB4MTc1ZjJiKCksXzB4MWM5NmNhLFtfMHgxYmMxMWRdKSkpO30sJ2F1dG9UcmFjZU1hbnknOihfMHgzNTIzNDUsXzB4NGM3Zjk1KT0+e3ZhciBfMHgzNzhlMTA9XzB4MzEzNDQ0O18weDQ4YTg5NihfMHgxY2E5NWYoXzB4NDJkNmNlKF8weDM3OGUxMCgweDFhMyksXzB4MzUyMzQ1LF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHg0YzdmOTUpKSk7fSwnYXV0b1RpbWUnOihfMHg1MzU5ZmEsXzB4MjU5OTBhLF8weDMyM2Q2OCk9PntfMHg1NDFiNGUoXzB4MzIzZDY4KTt9LCdhdXRvVGltZUVuZCc6KF8weDViZTliYyxfMHg1ZGJlMGEsXzB4YmE0NDVmKT0+e18weDQ5ZWEwOChfMHg1ZGJlMGEsXzB4YmE0NDVmKTt9LCdjb3ZlcmFnZSc6XzB4MjdiZTQxPT57dmFyIF8weDIwYWZmZT1fMHgzMTM0NDQ7XzB4NDhhODk2KHsnbWV0aG9kJzpfMHgyMGFmZmUoMHgxZDIpLCd2ZXJzaW9uJzpfMHgyZGUxOWYsJ2FyZ3MnOlt7J2lkJzpfMHgyN2JlNDF9XX0pO319O2xldCBfMHg0OGE4OTY9cShfMHgyYWJiMDAsXzB4NzQxMzI2LF8weDI2ODgxNixfMHg4MzE2OTQsXzB4MTcyMmExLF8weDVlNTVmMSxfMHgzMDZhYjMpLF8weDFjOTZjYT1fMHgyYWJiMDBbJ19jb25zb2xlX25pbmphX3Nlc3Npb24nXTtyZXR1cm4gXzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldO30pKGdsb2JhbFRoaXMsJzEyNy4wLjAuMScsJzYwNTkxJyxfMHhmZTVlNDQoMHgxY2UpLCd3ZWJwYWNrJyxfMHhmZTVlNDQoMHgyNmMpLF8weGZlNWU0NCgweDI4NiksXzB4ZmU1ZTQ0KDB4MjFjKSxfMHhmZTVlNDQoMHgxY2QpLF8weGZlNWU0NCgweDI3NSksXzB4ZmU1ZTQ0KDB4MjQ0KSk7XCIpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gfVxyXG47IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbmZ1bmN0aW9uIG9vX29vKGksIC4uLnYpIHsgdHJ5IHtcclxuICAgIG9vX2NtKCkuY29uc29sZUxvZyhpLCB2KTtcclxufVxyXG5jYXRjaCAoZSkgeyB9IHJldHVybiB2OyB9XHJcbjtcclxub29fb287IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbmZ1bmN0aW9uIG9vX3RyKGksIC4uLnYpIHsgdHJ5IHtcclxuICAgIG9vX2NtKCkuY29uc29sZVRyYWNlKGksIHYpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb190cjsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fdHgoaSwgLi4udikgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlRXJyb3IoaSwgdik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX3R4OyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb190cyh2KSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVUaW1lKHYpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb190czsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fdGUodiwgaSkgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlVGltZUVuZCh2LCBpKTtcclxufVxyXG5jYXRjaCAoZSkgeyB9IHJldHVybiB2OyB9XHJcbjtcclxub29fdGU7IC8qZXNsaW50IHVuaWNvcm4vbm8tYWJ1c2l2ZS1lc2xpbnQtZGlzYWJsZTosZXNsaW50LWNvbW1lbnRzL2Rpc2FibGUtZW5hYmxlLXBhaXI6LGVzbGludC1jb21tZW50cy9uby11bmxpbWl0ZWQtZGlzYWJsZTosZXNsaW50LWNvbW1lbnRzL25vLWFnZ3JlZ2F0aW5nLWVuYWJsZTosZXNsaW50LWNvbW1lbnRzL25vLWR1cGxpY2F0ZS1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvbm8tdW51c2VkLWRpc2FibGU6LGVzbGludC1jb21tZW50cy9uby11bnVzZWQtZW5hYmxlOiwqL1xyXG4iLCJpbXBvcnQgeyBBVURJT19QQVRIX0JUTl9DTElDSyB9IGZyb20gXCJAY29uc3RhbnRzXCI7XHJcbmV4cG9ydCBjbGFzcyBBdWRpb1BsYXllciB7XHJcbiAgICBhdWRpb0NvbnRleHQ7XHJcbiAgICBzb3VyY2VOb2RlO1xyXG4gICAgYXVkaW9RdWV1ZTtcclxuICAgIHByb21wdEF1ZGlvQnVmZmVyO1xyXG4gICAgY2xpY2tTb3VuZEJ1ZmZlcjtcclxuICAgIHN0YXRpYyBhdWRpb0J1ZmZlcnMgPSBuZXcgTWFwKCk7XHJcbiAgICBhdWRpb1NvdXJjcyA9IFtdO1xyXG4gICAgaXNDbGlja1NvdW5kTG9hZGVkO1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5hdWRpb0NvbnRleHQgPSBBdWRpb0NvbnRleHRNYW5hZ2VyLmdldEF1ZGlvQ29udGV4dCgpO1xyXG4gICAgICAgIHRoaXMuc291cmNlTm9kZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5hdWRpb1F1ZXVlID0gW107XHJcbiAgICAgICAgdGhpcy5jbGlja1NvdW5kQnVmZmVyID0gbnVsbDsgLy8gSW5pdGlhbGl6ZSB0aGUgY2xpY2tTb3VuZEJ1ZmZlclxyXG4gICAgICAgIHRoaXMuaXNDbGlja1NvdW5kTG9hZGVkID0gZmFsc2U7IC8vIEluaXRpYWxpemUgYXMgZmFsc2VcclxuICAgIH1cclxuICAgIGFzeW5jIHBsYXlCdXR0b25DbGlja1NvdW5kKCkge1xyXG4gICAgICAgIGNvbnN0IGF1ZGlvU3JjID0gQVVESU9fUEFUSF9CVE5fQ0xJQ0s7XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzQ2xpY2tTb3VuZExvYWRlZCkge1xyXG4gICAgICAgICAgICAvLyBMb2FkIGFuZCBkZWNvZGUgdGhlIGF1ZGlvIG9uIGRlbWFuZCBpZiBpdCBoYXNuJ3QgYmVlbiBsb2FkZWRcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xpY2tTb3VuZEJ1ZmZlciA9IGF3YWl0IHRoaXMubG9hZEFuZERlY29kZUF1ZGlvKGF1ZGlvU3JjKTtcclxuICAgICAgICAgICAgICAgIEF1ZGlvUGxheWVyLmF1ZGlvQnVmZmVycy5zZXQoYXVkaW9TcmMsIHRoaXMuY2xpY2tTb3VuZEJ1ZmZlcik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlzQ2xpY2tTb3VuZExvYWRlZCA9IHRydWU7IC8vIFNldCB0aGUgZmxhZyB0byB0cnVlIGFmdGVyIGxvYWRpbmdcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlICovIGNvbnNvbGUuZXJyb3IoLi4ub29fdHgoYDI5Mjg1NjIxMTVfMzNfOF8zM183MF8xMWAsIFwiRXJyb3IgbG9hZGluZyBvciBkZWNvZGluZyBjbGljayBzb3VuZDpcIiwgZXJyb3IpKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBQbGF5IHRoZSBhdWRpbyB1c2luZyB0aGUgYnVmZmVyIGlmIGl0IGV4aXN0c1xyXG4gICAgICAgIGlmICh0aGlzLmNsaWNrU291bmRCdWZmZXIpIHtcclxuICAgICAgICAgICAgY29uc3Qgc291cmNlTm9kZSA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO1xyXG4gICAgICAgICAgICBzb3VyY2VOb2RlLmJ1ZmZlciA9IHRoaXMuY2xpY2tTb3VuZEJ1ZmZlcjtcclxuICAgICAgICAgICAgc291cmNlTm9kZS5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcclxuICAgICAgICAgICAgc291cmNlTm9kZS5zdGFydCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8gY29uc29sZS5lcnJvciguLi5vb190eChgMjkyODU2MjExNV80NV82XzQ1XzU5XzExYCwgXCJDbGljayBzb3VuZCBidWZmZXIgaXMgbm90IGF2YWlsYWJsZS5cIikpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGFzeW5jIGxvYWRBbmREZWNvZGVBdWRpbyhhdWRpb1NyYykge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGF1ZGlvU3JjKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGFycmF5QnVmZmVyID0gYXdhaXQgcmVzcG9uc2UuYXJyYXlCdWZmZXIoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGF1ZGlvQnVmZmVyID0gYXdhaXQgdGhpcy5hdWRpb0NvbnRleHQuZGVjb2RlQXVkaW9EYXRhKGFycmF5QnVmZmVyKTtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoYXVkaW9CdWZmZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8gY29uc29sZS5lcnJvciguLi5vb190eChgMjkyODU2MjExNV81OV84XzU5XzY0XzExYCwgXCJFcnJvciBsb2FkaW5nIG9yIGRlY29kaW5nIGF1ZGlvOlwiLCBlcnJvcikpO1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgYXN5bmMgcHJlbG9hZFByb21wdEF1ZGlvKGF1ZGlvU3JjKSB7XHJcbiAgICAgICAgY29uc3QgYXVkaW9CdWZmZXIgPSBhd2FpdCB0aGlzLmxvYWRBbmREZWNvZGVBdWRpbyhhdWRpb1NyYyk7XHJcbiAgICAgICAgaWYgKGF1ZGlvQnVmZmVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMucHJvbXB0QXVkaW9CdWZmZXIgPSBhdWRpb0J1ZmZlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBhc3luYyBwcmVsb2FkR2FtZUF1ZGlvKGF1ZGlvU3JjKSB7XHJcbiAgICAgICAgaWYgKEF1ZGlvUGxheWVyLmF1ZGlvQnVmZmVycy5oYXMoYXVkaW9TcmMpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgYXVkaW9CdWZmZXIgPSBhd2FpdCB0aGlzLmxvYWRBbmREZWNvZGVBdWRpbyhhdWRpb1NyYyk7XHJcbiAgICAgICAgaWYgKGF1ZGlvQnVmZmVyKSB7XHJcbiAgICAgICAgICAgIEF1ZGlvUGxheWVyLmF1ZGlvQnVmZmVycy5zZXQoYXVkaW9TcmMsIGF1ZGlvQnVmZmVyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwbGF5QXVkaW8oYXVkaW9TcmMpIHtcclxuICAgICAgICBjb25zdCBhdWRpb0J1ZmZlciA9IEF1ZGlvUGxheWVyLmF1ZGlvQnVmZmVycy5nZXQoYXVkaW9TcmMpO1xyXG4gICAgICAgIGlmIChhdWRpb0J1ZmZlcikge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2VOb2RlID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7XHJcbiAgICAgICAgICAgIHNvdXJjZU5vZGUuYnVmZmVyID0gYXVkaW9CdWZmZXI7XHJcbiAgICAgICAgICAgIHNvdXJjZU5vZGUuY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XHJcbiAgICAgICAgICAgIHRoaXMuYXVkaW9Tb3VyY3MucHVzaChzb3VyY2VOb2RlKTtcclxuICAgICAgICAgICAgc291cmNlTm9kZS5zdGFydCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHBsYXlGZWVkYmFja0F1ZGlvcyA9IChsb29wID0gZmFsc2UsIC4uLmZpbGVVcmwpID0+IHtcclxuICAgICAgICBpZiAoZmlsZVVybC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXVkaW9RdWV1ZSA9IGZpbGVVcmw7XHJcbiAgICAgICAgICAgIHRoaXMucGxheUZldGNoKDAsIGxvb3ApO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBwbGF5UHJvbXB0QXVkaW8gPSAoYXVkaW9TcmMpID0+IHtcclxuICAgICAgICBpZiAodGhpcy5wcm9tcHRBdWRpb0J1ZmZlcikge1xyXG4gICAgICAgICAgICBjb25zdCBzb3VyY2VOb2RlID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7XHJcbiAgICAgICAgICAgIHNvdXJjZU5vZGUuYnVmZmVyID0gdGhpcy5wcm9tcHRBdWRpb0J1ZmZlcjtcclxuICAgICAgICAgICAgc291cmNlTm9kZS5jb25uZWN0KHRoaXMuYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcclxuICAgICAgICAgICAgdGhpcy5hdWRpb1NvdXJjcy5wdXNoKHNvdXJjZU5vZGUpO1xyXG4gICAgICAgICAgICBzb3VyY2VOb2RlLnN0YXJ0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHN0b3BGZWVkYmFja0F1ZGlvID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnNvdXJjZU5vZGUpIHtcclxuICAgICAgICAgICAgdGhpcy5zb3VyY2VOb2RlLnN0b3AoKTtcclxuICAgICAgICAgICAgdGhpcy5zb3VyY2VOb2RlID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hdWRpb1F1ZXVlID0gW107XHJcbiAgICB9O1xyXG4gICAgc3RvcEFsbEF1ZGlvcyA9ICgpID0+IHtcclxuICAgICAgICBpZiAodGhpcy5zb3VyY2VOb2RlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc291cmNlTm9kZS5zdG9wKCk7XHJcbiAgICAgICAgICAgIHRoaXMuc291cmNlTm9kZSA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYXVkaW9RdWV1ZSA9IFtdO1xyXG4gICAgICAgIHRoaXMuYXVkaW9Tb3VyY3MuZm9yRWFjaCgoc291cmNlTm9kZSkgPT4ge1xyXG4gICAgICAgICAgICBzb3VyY2VOb2RlLnN0b3AoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmF1ZGlvU291cmNzID0gW107XHJcbiAgICB9O1xyXG4gICAgcGxheUZldGNoID0gKGluZGV4LCBsb29wKSA9PiB7XHJcbiAgICAgICAgaWYgKGluZGV4ID49IHRoaXMuYXVkaW9RdWV1ZS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdGhpcy5zdG9wRmVlZGJhY2tBdWRpbygpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmF1ZGlvUXVldWVbaW5kZXhdKSB7XHJcbiAgICAgICAgICAgIGZldGNoKHRoaXMuYXVkaW9RdWV1ZVtpbmRleF0pXHJcbiAgICAgICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmFycmF5QnVmZmVyKCkpXHJcbiAgICAgICAgICAgICAgICAudGhlbigoYnVmZmVyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvQ29udGV4dD8uZGVjb2RlQXVkaW9EYXRhKGJ1ZmZlciwgKGF1ZGlvQnVmZmVyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zb3VyY2VOb2RlID0gdGhpcy5hdWRpb0NvbnRleHQ/LmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc291cmNlTm9kZS5idWZmZXIgPSBhdWRpb0J1ZmZlcjtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNvdXJjZU5vZGUuY29ubmVjdCh0aGlzLmF1ZGlvQ29udGV4dD8uZGVzdGluYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc291cmNlTm9kZS5sb29wID0gbG9vcDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNvdXJjZU5vZGUub25lbmRlZCA9ICgpID0+IHRoaXMuaGFuZGxlQXVkaW9FbmRlZChpbmRleCwgbG9vcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zb3VyY2VOb2RlLnN0YXJ0KCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGhhbmRsZUF1ZGlvRW5kZWQgPSAoaW5kZXgsIGxvb3ApID0+IHtcclxuICAgICAgICBpZiAodGhpcy5zb3VyY2VOb2RlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc291cmNlTm9kZS5vbmVuZGVkID0gbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5zb3VyY2VOb2RlLnN0b3AoKTtcclxuICAgICAgICAgICAgdGhpcy5zb3VyY2VOb2RlLmRpc2Nvbm5lY3QoKTtcclxuICAgICAgICAgICAgdGhpcy5zb3VyY2VOb2RlID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5wbGF5RmV0Y2goaW5kZXggKyAxLCBsb29wKTtcclxuICAgIH07XHJcbn1cclxuY2xhc3MgQXVkaW9Db250ZXh0TWFuYWdlciB7XHJcbiAgICBzdGF0aWMgaW5zdGFuY2UgPSBudWxsO1xyXG4gICAgc3RhdGljIGdldEF1ZGlvQ29udGV4dCgpIHtcclxuICAgICAgICBpZiAoIUF1ZGlvQ29udGV4dE1hbmFnZXIuaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgQXVkaW9Db250ZXh0TWFuYWdlci5pbnN0YW5jZSA9IG5ldyAod2luZG93LkF1ZGlvQ29udGV4dCB8fFxyXG4gICAgICAgICAgICAgICAgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dCkoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIEF1ZGlvQ29udGV4dE1hbmFnZXIuaW5zdGFuY2U7XHJcbiAgICB9XHJcbn1cclxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gLyogYzggaWdub3JlIHN0YXJ0ICovIC8qIGVzbGludC1kaXNhYmxlICovIDtcclxuZnVuY3Rpb24gb29fY20oKSB7IHRyeSB7XHJcbiAgICByZXR1cm4gKDAsIGV2YWwpKFwiZ2xvYmFsVGhpcy5fY29uc29sZV9uaW5qYVwiKSB8fCAoMCwgZXZhbCkoXCIvKiBodHRwczovL2dpdGh1Yi5jb20vd2FsbGFieWpzL2NvbnNvbGUtbmluamEjaG93LWRvZXMtaXQtd29yayAqLyd1c2Ugc3RyaWN0Jzt2YXIgXzB4ZmU1ZTQ0PV8weDI4MDA7KGZ1bmN0aW9uKF8weDIxNTQ5NSxfMHg1NGRiM2Ype3ZhciBfMHgxNWEwYzE9XzB4MjgwMCxfMHg1NmQ4NWY9XzB4MjE1NDk1KCk7d2hpbGUoISFbXSl7dHJ5e3ZhciBfMHg4NTg5ZjU9cGFyc2VJbnQoXzB4MTVhMGMxKDB4MWYzKSkvMHgxKihwYXJzZUludChfMHgxNWEwYzEoMHgxYmYpKS8weDIpK3BhcnNlSW50KF8weDE1YTBjMSgweDFlYykpLzB4MystcGFyc2VJbnQoXzB4MTVhMGMxKDB4MjhiKSkvMHg0K3BhcnNlSW50KF8weDE1YTBjMSgweDIyYikpLzB4NSooLXBhcnNlSW50KF8weDE1YTBjMSgweDFhNCkpLzB4NikrLXBhcnNlSW50KF8weDE1YTBjMSgweDFhZCkpLzB4NytwYXJzZUludChfMHgxNWEwYzEoMHgxZTgpKS8weDgqKHBhcnNlSW50KF8weDE1YTBjMSgweDI5NCkpLzB4OSkrLXBhcnNlSW50KF8weDE1YTBjMSgweDIwZCkpLzB4YTtpZihfMHg4NTg5ZjU9PT1fMHg1NGRiM2YpYnJlYWs7ZWxzZSBfMHg1NmQ4NWZbJ3B1c2gnXShfMHg1NmQ4NWZbJ3NoaWZ0J10oKSk7fWNhdGNoKF8weDEyOGY0MCl7XzB4NTZkODVmWydwdXNoJ10oXzB4NTZkODVmWydzaGlmdCddKCkpO319fShfMHg0ODQyLDB4ZTNlYjgpKTt2YXIgSz1PYmplY3RbJ2NyZWF0ZSddLFE9T2JqZWN0W18weGZlNWU0NCgweDFiZCldLEc9T2JqZWN0WydnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InXSxlZT1PYmplY3RbJ2dldE93blByb3BlcnR5TmFtZXMnXSx0ZT1PYmplY3RbXzB4ZmU1ZTQ0KDB4MjQ4KV0sbmU9T2JqZWN0Wydwcm90b3R5cGUnXVtfMHhmZTVlNDQoMHgyNGEpXSxyZT0oXzB4NWI3NWM2LF8weDM0ODNiNixfMHg1OTJiZmIsXzB4MzViZDhiKT0+e3ZhciBfMHgzNGM4ZjY9XzB4ZmU1ZTQ0O2lmKF8weDM0ODNiNiYmdHlwZW9mIF8weDM0ODNiNj09XzB4MzRjOGY2KDB4MjU5KXx8dHlwZW9mIF8weDM0ODNiNj09XzB4MzRjOGY2KDB4MjU0KSl7Zm9yKGxldCBfMHgxNWNmYmMgb2YgZWUoXzB4MzQ4M2I2KSkhbmVbJ2NhbGwnXShfMHg1Yjc1YzYsXzB4MTVjZmJjKSYmXzB4MTVjZmJjIT09XzB4NTkyYmZiJiZRKF8weDViNzVjNixfMHgxNWNmYmMseydnZXQnOigpPT5fMHgzNDgzYjZbXzB4MTVjZmJjXSwnZW51bWVyYWJsZSc6IShfMHgzNWJkOGI9RyhfMHgzNDgzYjYsXzB4MTVjZmJjKSl8fF8weDM1YmQ4YlsnZW51bWVyYWJsZSddfSk7fXJldHVybiBfMHg1Yjc1YzY7fSxWPShfMHg4M2E0OTEsXzB4MWM3ZmFiLF8weDMzMzkyMik9PihfMHgzMzM5MjI9XzB4ODNhNDkxIT1udWxsP0sodGUoXzB4ODNhNDkxKSk6e30scmUoXzB4MWM3ZmFifHwhXzB4ODNhNDkxfHwhXzB4ODNhNDkxW18weGZlNWU0NCgweDI1MCldP1EoXzB4MzMzOTIyLF8weGZlNWU0NCgweDI1ZSkseyd2YWx1ZSc6XzB4ODNhNDkxLCdlbnVtZXJhYmxlJzohMHgwfSk6XzB4MzMzOTIyLF8weDgzYTQ5MSkpLFo9Y2xhc3N7Y29uc3RydWN0b3IoXzB4M2I4MjAxLF8weDJlZGQyYixfMHgxNGMyNTEsXzB4MjFhMzc0LF8weDJkNzQwOSxfMHg0ODVkMjYpe3ZhciBfMHgzMjczZWI9XzB4ZmU1ZTQ0LF8weDIyMDcwZixfMHgxY2RkM2IsXzB4NTVmOWRlLF8weGNlNDY4Zjt0aGlzW18weDMyNzNlYigweDI5MSldPV8weDNiODIwMSx0aGlzW18weDMyNzNlYigweDI3MCldPV8weDJlZGQyYix0aGlzW18weDMyNzNlYigweDI2MildPV8weDE0YzI1MSx0aGlzW18weDMyNzNlYigweDFiYyldPV8weDIxYTM3NCx0aGlzW18weDMyNzNlYigweDI2NCldPV8weDJkNzQwOSx0aGlzW18weDMyNzNlYigweDI3YyldPV8weDQ4NWQyNix0aGlzWydfYWxsb3dlZFRvU2VuZCddPSEweDAsdGhpc1tfMHgzMjczZWIoMHgxYWIpXT0hMHgwLHRoaXNbXzB4MzI3M2ViKDB4MjAzKV09ITB4MSx0aGlzW18weDMyNzNlYigweDFjNSldPSEweDEsdGhpc1tfMHgzMjczZWIoMHgyMjEpXT0oKF8weDFjZGQzYj0oXzB4MjIwNzBmPV8weDNiODIwMVtfMHgzMjczZWIoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4MjIwNzBmW18weDMyNzNlYigweDFjYyldKT09bnVsbD92b2lkIDB4MDpfMHgxY2RkM2JbXzB4MzI3M2ViKDB4MWMzKV0pPT09XzB4MzI3M2ViKDB4MWZkKSx0aGlzWydfaW5Ccm93c2VyJ109ISgoXzB4Y2U0NjhmPShfMHg1NWY5ZGU9dGhpc1tfMHgzMjczZWIoMHgyOTEpXVtfMHgzMjczZWIoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4NTVmOWRlW18weDMyNzNlYigweDI2ZildKSE9bnVsbCYmXzB4Y2U0NjhmW18weDMyNzNlYigweDI4YyldKSYmIXRoaXNbJ19pbk5leHRFZGdlJ10sdGhpc1snX1dlYlNvY2tldENsYXNzJ109bnVsbCx0aGlzW18weDMyNzNlYigweDFhOCldPTB4MCx0aGlzW18weDMyNzNlYigweDI4ZildPTB4MTQsdGhpc1snX3dlYlNvY2tldEVycm9yRG9jc0xpbmsnXT1fMHgzMjczZWIoMHgyMTEpLHRoaXNbXzB4MzI3M2ViKDB4MWFlKV09KHRoaXNbXzB4MzI3M2ViKDB4MjNlKV0/XzB4MzI3M2ViKDB4MjQ3KTpfMHgzMjczZWIoMHgyOGEpKSt0aGlzW18weDMyNzNlYigweDIwMSldO31hc3luY1tfMHhmZTVlNDQoMHgyNzIpXSgpe3ZhciBfMHgyZWM0NTc9XzB4ZmU1ZTQ0LF8weDE2YjFmNixfMHg0NmFlNTY7aWYodGhpc1tfMHgyZWM0NTcoMHgxZDUpXSlyZXR1cm4gdGhpc1tfMHgyZWM0NTcoMHgxZDUpXTtsZXQgXzB4NDIwY2Q3O2lmKHRoaXNbJ19pbkJyb3dzZXInXXx8dGhpc1tfMHgyZWM0NTcoMHgyMjEpXSlfMHg0MjBjZDc9dGhpc1tfMHgyZWM0NTcoMHgyOTEpXVsnV2ViU29ja2V0J107ZWxzZXtpZigoXzB4MTZiMWY2PXRoaXNbXzB4MmVjNDU3KDB4MjkxKV1bXzB4MmVjNDU3KDB4MjA2KV0pIT1udWxsJiZfMHgxNmIxZjZbJ19XZWJTb2NrZXQnXSlfMHg0MjBjZDc9KF8weDQ2YWU1Nj10aGlzW18weDJlYzQ1NygweDI5MSldW18weDJlYzQ1NygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHg0NmFlNTZbJ19XZWJTb2NrZXQnXTtlbHNlIHRyeXtsZXQgXzB4NDkyNTExPWF3YWl0IGltcG9ydChfMHgyZWM0NTcoMHgyNTEpKTtfMHg0MjBjZDc9KGF3YWl0IGltcG9ydCgoYXdhaXQgaW1wb3J0KF8weDJlYzQ1NygweDI0NSkpKVtfMHgyZWM0NTcoMHgxYjMpXShfMHg0OTI1MTFbJ2pvaW4nXSh0aGlzWydub2RlTW9kdWxlcyddLCd3cy9pbmRleC5qcycpKVtfMHgyZWM0NTcoMHgyMzIpXSgpKSlbXzB4MmVjNDU3KDB4MjVlKV07fWNhdGNoe3RyeXtfMHg0MjBjZDc9cmVxdWlyZShyZXF1aXJlKF8weDJlYzQ1NygweDI1MSkpW18weDJlYzQ1NygweDIzYyldKHRoaXNbXzB4MmVjNDU3KDB4MWJjKV0sJ3dzJykpO31jYXRjaHt0aHJvdyBuZXcgRXJyb3IoXzB4MmVjNDU3KDB4MjdmKSk7fX19cmV0dXJuIHRoaXNbXzB4MmVjNDU3KDB4MWQ1KV09XzB4NDIwY2Q3LF8weDQyMGNkNzt9WydfY29ubmVjdFRvSG9zdE5vdyddKCl7dmFyIF8weDMxMWFlNT1fMHhmZTVlNDQ7dGhpc1snX2Nvbm5lY3RpbmcnXXx8dGhpc1snX2Nvbm5lY3RlZCddfHx0aGlzWydfY29ubmVjdEF0dGVtcHRDb3VudCddPj10aGlzWydfbWF4Q29ubmVjdEF0dGVtcHRDb3VudCddfHwodGhpc1snX2FsbG93ZWRUb0Nvbm5lY3RPblNlbmQnXT0hMHgxLHRoaXNbXzB4MzExYWU1KDB4MWM1KV09ITB4MCx0aGlzW18weDMxMWFlNSgweDFhOCldKyssdGhpc1tfMHgzMTFhZTUoMHgxZTcpXT1uZXcgUHJvbWlzZSgoXzB4M2Y0ZTVjLF8weDFiMWQ0Mik9Pnt2YXIgXzB4MWY2MTMwPV8weDMxMWFlNTt0aGlzWydnZXRXZWJTb2NrZXRDbGFzcyddKClbXzB4MWY2MTMwKDB4MWNmKV0oXzB4MWE4ZmMyPT57dmFyIF8weDI2NjU3Yj1fMHgxZjYxMzA7bGV0IF8weDNmNzJhMD1uZXcgXzB4MWE4ZmMyKF8weDI2NjU3YigweDFjOSkrKCF0aGlzWydfaW5Ccm93c2VyJ10mJnRoaXNbXzB4MjY2NTdiKDB4MjY0KV0/XzB4MjY2NTdiKDB4MjgxKTp0aGlzW18weDI2NjU3YigweDI3MCldKSsnOicrdGhpc1tfMHgyNjY1N2IoMHgyNjIpXSk7XzB4M2Y3MmEwW18weDI2NjU3YigweDI3NCldPSgpPT57dmFyIF8weDVlNGRjZD1fMHgyNjY1N2I7dGhpc1tfMHg1ZTRkY2QoMHgxZTIpXT0hMHgxLHRoaXNbXzB4NWU0ZGNkKDB4MjFkKV0oXzB4M2Y3MmEwKSx0aGlzW18weDVlNGRjZCgweDI0YildKCksXzB4MWIxZDQyKG5ldyBFcnJvcihfMHg1ZTRkY2QoMHgyMGMpKSk7fSxfMHgzZjcyYTBbXzB4MjY2NTdiKDB4MjgwKV09KCk9Pnt2YXIgXzB4NWRhMTUyPV8weDI2NjU3Yjt0aGlzW18weDVkYTE1MigweDIzZSldfHxfMHgzZjcyYTBbXzB4NWRhMTUyKDB4MWRkKV0mJl8weDNmNzJhMFtfMHg1ZGExNTIoMHgxZGQpXVtfMHg1ZGExNTIoMHgxYjcpXSYmXzB4M2Y3MmEwW18weDVkYTE1MigweDFkZCldW18weDVkYTE1MigweDFiNyldKCksXzB4M2Y0ZTVjKF8weDNmNzJhMCk7fSxfMHgzZjcyYTBbXzB4MjY2NTdiKDB4MWVhKV09KCk9Pnt2YXIgXzB4MzgyYzkyPV8weDI2NjU3Yjt0aGlzW18weDM4MmM5MigweDFhYildPSEweDAsdGhpc1tfMHgzODJjOTIoMHgyMWQpXShfMHgzZjcyYTApLHRoaXNbXzB4MzgyYzkyKDB4MjRiKV0oKTt9LF8weDNmNzJhMFtfMHgyNjY1N2IoMHgxZGYpXT1fMHgxMWZjYWI9Pnt2YXIgXzB4NWZkMDRkPV8weDI2NjU3Yjt0cnl7aWYoIShfMHgxMWZjYWIhPW51bGwmJl8weDExZmNhYltfMHg1ZmQwNGQoMHgxYjkpXSl8fCF0aGlzWydldmVudFJlY2VpdmVkQ2FsbGJhY2snXSlyZXR1cm47bGV0IF8weDRmZjY1NT1KU09OW18weDVmZDA0ZCgweDIzNCldKF8weDExZmNhYltfMHg1ZmQwNGQoMHgxYjkpXSk7dGhpc1tfMHg1ZmQwNGQoMHgyN2MpXShfMHg0ZmY2NTVbXzB4NWZkMDRkKDB4MWI0KV0sXzB4NGZmNjU1WydhcmdzJ10sdGhpc1snZ2xvYmFsJ10sdGhpc1tfMHg1ZmQwNGQoMHgyM2UpXSk7fWNhdGNoe319O30pW18weDFmNjEzMCgweDFjZildKF8weDNlYzE4Zj0+KHRoaXNbXzB4MWY2MTMwKDB4MjAzKV09ITB4MCx0aGlzW18weDFmNjEzMCgweDFjNSldPSEweDEsdGhpc1tfMHgxZjYxMzAoMHgxYWIpXT0hMHgxLHRoaXNbJ19hbGxvd2VkVG9TZW5kJ109ITB4MCx0aGlzW18weDFmNjEzMCgweDFhOCldPTB4MCxfMHgzZWMxOGYpKVtfMHgxZjYxMzAoMHgyNjApXShfMHg0ZDA4NDI9Pih0aGlzW18weDFmNjEzMCgweDIwMyldPSEweDEsdGhpc1tfMHgxZjYxMzAoMHgxYzUpXT0hMHgxLGNvbnNvbGVbXzB4MWY2MTMwKDB4MWYyKV0oXzB4MWY2MTMwKDB4MWNhKSt0aGlzW18weDFmNjEzMCgweDIwMSldKSxfMHgxYjFkNDIobmV3IEVycm9yKF8weDFmNjEzMCgweDI2NikrKF8weDRkMDg0MiYmXzB4NGQwODQyWydtZXNzYWdlJ10pKSkpKTt9KSk7fVtfMHhmZTVlNDQoMHgyMWQpXShfMHgyMDA1MDYpe3ZhciBfMHgzODI4ZDM9XzB4ZmU1ZTQ0O3RoaXNbXzB4MzgyOGQzKDB4MjAzKV09ITB4MSx0aGlzW18weDM4MjhkMygweDFjNSldPSEweDE7dHJ5e18weDIwMDUwNltfMHgzODI4ZDMoMHgxZWEpXT1udWxsLF8weDIwMDUwNltfMHgzODI4ZDMoMHgyNzQpXT1udWxsLF8weDIwMDUwNltfMHgzODI4ZDMoMHgyODApXT1udWxsO31jYXRjaHt9dHJ5e18weDIwMDUwNltfMHgzODI4ZDMoMHgxZTUpXTwweDImJl8weDIwMDUwNlsnY2xvc2UnXSgpO31jYXRjaHt9fVsnX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpe3ZhciBfMHgyYzllNTA9XzB4ZmU1ZTQ0O2NsZWFyVGltZW91dCh0aGlzW18weDJjOWU1MCgweDI0MCldKSwhKHRoaXNbXzB4MmM5ZTUwKDB4MWE4KV0+PXRoaXNbXzB4MmM5ZTUwKDB4MjhmKV0pJiYodGhpc1tfMHgyYzllNTAoMHgyNDApXT1zZXRUaW1lb3V0KCgpPT57dmFyIF8weDI2ZWI3MT1fMHgyYzllNTAsXzB4NTI5NjhkO3RoaXNbXzB4MjZlYjcxKDB4MjAzKV18fHRoaXNbXzB4MjZlYjcxKDB4MWM1KV18fCh0aGlzW18weDI2ZWI3MSgweDI4NCldKCksKF8weDUyOTY4ZD10aGlzW18weDI2ZWI3MSgweDFlNyldKT09bnVsbHx8XzB4NTI5NjhkW18weDI2ZWI3MSgweDI2MCldKCgpPT50aGlzW18weDI2ZWI3MSgweDI0YildKCkpKTt9LDB4MWY0KSx0aGlzW18weDJjOWU1MCgweDI0MCldW18weDJjOWU1MCgweDFiNyldJiZ0aGlzW18weDJjOWU1MCgweDI0MCldWyd1bnJlZiddKCkpO31hc3luY1tfMHhmZTVlNDQoMHgyNmUpXShfMHgyNTQ1NTMpe3ZhciBfMHgxMGUyMDY9XzB4ZmU1ZTQ0O3RyeXtpZighdGhpc1tfMHgxMGUyMDYoMHgxZTIpXSlyZXR1cm47dGhpc1snX2FsbG93ZWRUb0Nvbm5lY3RPblNlbmQnXSYmdGhpc1tfMHgxMGUyMDYoMHgyODQpXSgpLChhd2FpdCB0aGlzW18weDEwZTIwNigweDFlNyldKVtfMHgxMGUyMDYoMHgyNmUpXShKU09OWydzdHJpbmdpZnknXShfMHgyNTQ1NTMpKTt9Y2F0Y2goXzB4NGZiNjhkKXtjb25zb2xlW18weDEwZTIwNigweDFmMildKHRoaXNbXzB4MTBlMjA2KDB4MWFlKV0rJzpcXFxceDIwJysoXzB4NGZiNjhkJiZfMHg0ZmI2OGRbXzB4MTBlMjA2KDB4MjIyKV0pKSx0aGlzW18weDEwZTIwNigweDFlMildPSEweDEsdGhpc1snX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpO319fTtmdW5jdGlvbiBxKF8weDM2M2U4YixfMHg1OGJjMTEsXzB4NWE1N2JlLF8weDNjMjBlNSxfMHgzY2RmNGYsXzB4MmVlYzU0LF8weDM3N2I4MyxfMHgxYjBiZmY9aWUpe3ZhciBfMHhjOGYwMGU9XzB4ZmU1ZTQ0O2xldCBfMHhlMjRiYTA9XzB4NWE1N2JlW18weGM4ZjAwZSgweDFlNCldKCcsJylbJ21hcCddKF8weDQ2ZjJjZj0+e3ZhciBfMHgxNGQ3MDU9XzB4YzhmMDBlLF8weGRhZWM0OSxfMHgzYzkyMGMsXzB4MjA1Nzg2LF8weDE0YmExMDt0cnl7aWYoIV8weDM2M2U4YlsnX2NvbnNvbGVfbmluamFfc2Vzc2lvbiddKXtsZXQgXzB4MzhhZDRhPSgoXzB4M2M5MjBjPShfMHhkYWVjNDk9XzB4MzYzZThiWydwcm9jZXNzJ10pPT1udWxsP3ZvaWQgMHgwOl8weGRhZWM0OVsndmVyc2lvbnMnXSk9PW51bGw/dm9pZCAweDA6XzB4M2M5MjBjW18weDE0ZDcwNSgweDI4YyldKXx8KChfMHgxNGJhMTA9KF8weDIwNTc4Nj1fMHgzNjNlOGJbXzB4MTRkNzA1KDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDIwNTc4NltfMHgxNGQ3MDUoMHgxY2MpXSk9PW51bGw/dm9pZCAweDA6XzB4MTRiYTEwW18weDE0ZDcwNSgweDFjMyldKT09PV8weDE0ZDcwNSgweDFmZCk7KF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIzNyl8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIwMCl8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDFhNil8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIzMykpJiYoXzB4M2NkZjRmKz1fMHgzOGFkNGE/XzB4MTRkNzA1KDB4MWY5KTpfMHgxNGQ3MDUoMHgxZWUpKSxfMHgzNjNlOGJbXzB4MTRkNzA1KDB4Mjg4KV09eydpZCc6K25ldyBEYXRlKCksJ3Rvb2wnOl8weDNjZGY0Zn0sXzB4Mzc3YjgzJiZfMHgzY2RmNGYmJiFfMHgzOGFkNGEmJmNvbnNvbGVbJ2xvZyddKF8weDE0ZDcwNSgweDFjNikrKF8weDNjZGY0ZltfMHgxNGQ3MDUoMHgyNmQpXSgweDApW18weDE0ZDcwNSgweDFjNyldKCkrXzB4M2NkZjRmW18weDE0ZDcwNSgweDFhOSldKDB4MSkpKycsJyxfMHgxNGQ3MDUoMHgyNTIpLF8weDE0ZDcwNSgweDI0NikpO31sZXQgXzB4NTFiNmExPW5ldyBaKF8weDM2M2U4YixfMHg1OGJjMTEsXzB4NDZmMmNmLF8weDNjMjBlNSxfMHgyZWVjNTQsXzB4MWIwYmZmKTtyZXR1cm4gXzB4NTFiNmExW18weDE0ZDcwNSgweDI2ZSldW18weDE0ZDcwNSgweDIxZildKF8weDUxYjZhMSk7fWNhdGNoKF8weGUxNGY0OCl7cmV0dXJuIGNvbnNvbGVbXzB4MTRkNzA1KDB4MWYyKV0oJ2xvZ2dlclxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwY29ubmVjdFxcXFx4MjB0b1xcXFx4MjBob3N0JyxfMHhlMTRmNDgmJl8weGUxNGY0OFtfMHgxNGQ3MDUoMHgyMjIpXSksKCk9Pnt9O319KTtyZXR1cm4gXzB4MTBmMDRjPT5fMHhlMjRiYTBbJ2ZvckVhY2gnXShfMHg1M2ZkZDY9Pl8weDUzZmRkNihfMHgxMGYwNGMpKTt9ZnVuY3Rpb24gaWUoXzB4MWUzYTRlLF8weDI2ZTliMSxfMHg0NWViMzEsXzB4NWRkMzRiKXt2YXIgXzB4YTc1OTc4PV8weGZlNWU0NDtfMHg1ZGQzNGImJl8weDFlM2E0ZT09PV8weGE3NTk3OCgweDI2MykmJl8weDQ1ZWIzMVsnbG9jYXRpb24nXVsncmVsb2FkJ10oKTt9ZnVuY3Rpb24gXzB4NDg0Migpe3ZhciBfMHg1NWExOTM9Wydvbm1lc3NhZ2UnLCdTeW1ib2wnLCdfbmluamFJZ25vcmVOZXh0RXJyb3InLCdfYWxsb3dlZFRvU2VuZCcsJ2FsbFN0ckxlbmd0aCcsJ3NwbGl0JywncmVhZHlTdGF0ZScsJ19nZXRPd25Qcm9wZXJ0eVN5bWJvbHMnLCdfd3MnLCcyMzgyNDgwTXBTTlVHJywncHJvcHMnLCdvbmNsb3NlJywnY291bnQnLCcxNzIwMjk2bkRpQ2JLJywnLi4uJywnXFxcXHgyMGJyb3dzZXInLCdfaXNVbmRlZmluZWQnLCdudW1iZXInLCdhdXRvRXhwYW5kTWF4RGVwdGgnLCd3YXJuJywnMXFMYXJHSycsJ3ZhbHVlJywnZ2V0T3duUHJvcGVydHlTeW1ib2xzJywnYXJncycsJ2xvY2F0aW9uJywnU2V0JywnXFxcXHgyMHNlcnZlcicsJ19udW1iZXJSZWdFeHAnLCdnZXQnLCdfaGFzU3ltYm9sUHJvcGVydHlPbkl0c1BhdGgnLCdlZGdlJywnX2FkZE9iamVjdFByb3BlcnR5JywncGVyZm9ybWFuY2UnLCdyZW1peCcsJ193ZWJTb2NrZXRFcnJvckRvY3NMaW5rJywnX2dldE93blByb3BlcnR5TmFtZXMnLCdfY29ubmVjdGVkJywncHVzaCcsJ3NldCcsJ3Byb2Nlc3MnLCdfcmVnRXhwVG9TdHJpbmcnLCdpc0FycmF5JywndGltZScsJ19zZXROb2RlTGFiZWwnLCd0ZXN0JywnbG9nZ2VyXFxcXHgyMHdlYnNvY2tldFxcXFx4MjBlcnJvcicsJzI0MjcwODBPeXJZUW0nLCdbb2JqZWN0XFxcXHgyME1hcF0nLCd1bmRlZmluZWQnLCdjYXBwZWQnLCdodHRwczovL3Rpbnl1cmwuY29tLzM3eDhiNzl0JywndGltZVN0YW1wJywnX3Byb3BlcnR5TmFtZScsJ2NhcHBlZFByb3BzJywnbmVnYXRpdmVJbmZpbml0eScsJ2NvbnN0cnVjdG9yJywnbnVsbCcsJ2Zyb21DaGFyQ29kZScsJ2hydGltZScsJ19vYmplY3RUb1N0cmluZycsJ25hbWUnLFtcXFwibG9jYWxob3N0XFxcIixcXFwiMTI3LjAuMC4xXFxcIixcXFwiZXhhbXBsZS5jeXByZXNzLmlvXFxcIixcXFwiQ0VCLUxBUFRPUC0wMDA2XFxcIixcXFwiMTkyLjE2OC4xLjc5XFxcIl0sJ19kaXNwb3NlV2Vic29ja2V0JywnaXNFeHByZXNzaW9uVG9FdmFsdWF0ZScsJ2JpbmQnLCdfY29uc29sZU5pbmphQWxsb3dlZFRvU3RhcnQnLCdfaW5OZXh0RWRnZScsJ21lc3NhZ2UnLCdwb3NpdGl2ZUluZmluaXR5JywnY29uY2F0JywnTnVtYmVyJywnX3NvcnRQcm9wcycsJ2NvbnNvbGUnLCd0eXBlJywncG9wJywnZXJyb3InLCcxMzIwNUJRYUdWcCcsJ2F1dG9FeHBhbmQnLCdlbGVtZW50cycsJ2F1dG9FeHBhbmRQcmV2aW91c09iamVjdHMnLCdfaXNQcmltaXRpdmVUeXBlJywnbG9nJywnX3RyZWVOb2RlUHJvcGVydGllc0JlZm9yZUZ1bGxWYWx1ZScsJ3RvU3RyaW5nJywnYW5ndWxhcicsJ3BhcnNlJywnW29iamVjdFxcXFx4MjBCaWdJbnRdJywnX2FkZGl0aW9uYWxNZXRhZGF0YScsJ25leHQuanMnLCdfdHJlZU5vZGVQcm9wZXJ0aWVzQWZ0ZXJGdWxsVmFsdWUnLCdIVE1MQWxsQ29sbGVjdGlvbicsJ3JlZHVjZUxpbWl0cycsJ3BhcmVudCcsJ2pvaW4nLCdzZXJpYWxpemUnLCdfaW5Ccm93c2VyJywnX2lzTmVnYXRpdmVaZXJvJywnX3JlY29ubmVjdFRpbWVvdXQnLCdhdXRvRXhwYW5kTGltaXQnLCdbb2JqZWN0XFxcXHgyMFNldF0nLCdbb2JqZWN0XFxcXHgyMERhdGVdJywnMScsJ3VybCcsJ3NlZVxcXFx4MjBodHRwczovL3Rpbnl1cmwuY29tLzJ2dDhqeHp3XFxcXHgyMGZvclxcXFx4MjBtb3JlXFxcXHgyMGluZm8uJywnQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwc2VuZFxcXFx4MjBsb2dzLFxcXFx4MjByZWZyZXNoaW5nXFxcXHgyMHRoZVxcXFx4MjBwYWdlXFxcXHgyMG1heVxcXFx4MjBoZWxwO1xcXFx4MjBhbHNvXFxcXHgyMHNlZVxcXFx4MjAnLCdnZXRQcm90b3R5cGVPZicsJ25vdycsJ2hhc093blByb3BlcnR5JywnX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknLCdfY29uc29sZV9uaW5qYScsJ2xlbmd0aCcsJ0Vycm9yJywnYXJyYXknLCdfX2VzJysnTW9kdWxlJywncGF0aCcsJ2JhY2tncm91bmQ6XFxcXHgyMHJnYigzMCwzMCwzMCk7XFxcXHgyMGNvbG9yOlxcXFx4MjByZ2IoMjU1LDIxMyw5MiknLCdfY2xlYW5Ob2RlJywnZnVuY3Rpb24nLCdyb290X2V4cF9pZCcsJ2dldE93blByb3BlcnR5RGVzY3JpcHRvcicsJ21hcCcsJ2ZvckVhY2gnLCdvYmplY3QnLCdjYXBwZWRFbGVtZW50cycsJ0J1ZmZlcicsJ19wcm9wZXJ0eScsJ2luZGV4JywnZGVmYXVsdCcsJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50JywnY2F0Y2gnLCdORUdBVElWRV9JTkZJTklUWScsJ3BvcnQnLCdyZWxvYWQnLCdkb2NrZXJpemVkQXBwJywnY3VycmVudCcsJ2ZhaWxlZFxcXFx4MjB0b1xcXFx4MjBjb25uZWN0XFxcXHgyMHRvXFxcXHgyMGhvc3Q6XFxcXHgyMCcsJ2Z1bmNOYW1lJywnc3RyTGVuZ3RoJywnYmlnaW50JywnbWF0Y2gnLCdzdGFjaycsJzEuMC4wJywnY2hhckF0Jywnc2VuZCcsJ3ZlcnNpb25zJywnaG9zdCcsJ19hZGRMb2FkTm9kZScsJ2dldFdlYlNvY2tldENsYXNzJywnY2FsbCcsJ29uZXJyb3InLCcnLCdfdHlwZScsJ2V4cHJlc3Npb25zVG9FdmFsdWF0ZScsJ3N0YWNrVHJhY2VMaW1pdCcsJ1BPU0lUSVZFX0lORklOSVRZJywnZGlzYWJsZWRUcmFjZScsJ191bmRlZmluZWQnLCdldmVudFJlY2VpdmVkQ2FsbGJhY2snLCdkaXNhYmxlZExvZycsJ3JlcGxhY2UnLCdmYWlsZWRcXFxceDIwdG9cXFxceDIwZmluZFxcXFx4MjBhbmRcXFxceDIwbG9hZFxcXFx4MjBXZWJTb2NrZXQnLCdvbm9wZW4nLCdnYXRld2F5LmRvY2tlci5pbnRlcm5hbCcsJ3N0cmluZycsJ19pc01hcCcsJ19jb25uZWN0VG9Ib3N0Tm93JywnX0hUTUxBbGxDb2xsZWN0aW9uJywnMTcyOTIzOTMxNDQ5NCcsJ19pc1NldCcsJ19jb25zb2xlX25pbmphX3Nlc3Npb24nLCdnZXRPd25Qcm9wZXJ0eU5hbWVzJywnQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwc2VuZFxcXFx4MjBsb2dzLFxcXFx4MjByZXN0YXJ0aW5nXFxcXHgyMHRoZVxcXFx4MjBwcm9jZXNzXFxcXHgyMG1heVxcXFx4MjBoZWxwO1xcXFx4MjBhbHNvXFxcXHgyMHNlZVxcXFx4MjAnLCczNzk5MTYwSm5IenBEJywnbm9kZScsJ3Byb3RvdHlwZScsJ19zZXROb2RlSWQnLCdfbWF4Q29ubmVjdEF0dGVtcHRDb3VudCcsJ3BlcmZfaG9va3MnLCdnbG9iYWwnLCdfaXNQcmltaXRpdmVXcmFwcGVyVHlwZScsJ1N0cmluZycsJzU0Y0tJbG5jJywnZW5kc1dpdGgnLCdpbmNsdWRlcycsJ2hpdHMnLCd0b0xvd2VyQ2FzZScsJ3RyYWNlJywnNDJTZm1kaUQnLCdzZXR0ZXInLCdhc3RybycsJ29yaWdpbicsJ19jb25uZWN0QXR0ZW1wdENvdW50Jywnc3Vic3RyJywndG90YWxTdHJMZW5ndGgnLCdfYWxsb3dlZFRvQ29ubmVjdE9uU2VuZCcsJ19wX2xlbmd0aCcsJzkwMjc0Mzh1Z1prZVYnLCdfc2VuZEVycm9yTWVzc2FnZScsJ19hZGRGdW5jdGlvbnNOb2RlJywnX2JsYWNrbGlzdGVkUHJvcGVydHknLCdlbGFwc2VkJywnc29ydCcsJ3BhdGhUb0ZpbGVVUkwnLCdtZXRob2QnLCdfU3ltYm9sJywnbm9GdW5jdGlvbnMnLCd1bnJlZicsJ19hZGRQcm9wZXJ0eScsJ2RhdGEnLCdyb290X2V4cCcsJ19xdW90ZWRSZWdFeHAnLCdub2RlTW9kdWxlcycsJ2RlZmluZVByb3BlcnR5JywncmVzb2x2ZUdldHRlcnMnLCcyMTQ3Nzc0cXJZUWF6JywnX2tleVN0clJlZ0V4cCcsJ19zZXROb2RlUXVlcnlQYXRoJywnc3RyaW5naWZ5JywnTkVYVF9SVU5USU1FJywnX2NhcElmU3RyaW5nJywnX2Nvbm5lY3RpbmcnLCclY1xcXFx4MjBDb25zb2xlXFxcXHgyME5pbmphXFxcXHgyMGV4dGVuc2lvblxcXFx4MjBpc1xcXFx4MjBjb25uZWN0ZWRcXFxceDIwdG9cXFxceDIwJywndG9VcHBlckNhc2UnLCd1bmtub3duJywnd3M6Ly8nLCdsb2dnZXJcXFxceDIwZmFpbGVkXFxcXHgyMHRvXFxcXHgyMGNvbm5lY3RcXFxceDIwdG9cXFxceDIwaG9zdCxcXFxceDIwc2VlXFxcXHgyMCcsJ19nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCdlbnYnLCcnLFxcXCJjOlxcXFxcXFxcVXNlcnNcXFxcXFxcXHNoZWVyd29vZGNcXFxcXFxcXC52c2NvZGVcXFxcXFxcXGV4dGVuc2lvbnNcXFxcXFxcXHdhbGxhYnlqcy5jb25zb2xlLW5pbmphLTEuMC4zNjNcXFxcXFxcXG5vZGVfbW9kdWxlc1xcXCIsJ3RoZW4nLCdfc2V0Tm9kZVBlcm1pc3Npb25zJywnZGVwdGgnLCdjb3ZlcmFnZScsJ2xldmVsJywnX3BfbmFtZScsJ19XZWJTb2NrZXRDbGFzcycsJ3NvcnRQcm9wcycsJ19wXycsJ2RhdGUnLCdzeW1ib2wnLCdfcHJvY2Vzc1RyZWVOb2RlUmVzdWx0JywnTWFwJywnc2xpY2UnLCdfc29ja2V0JywnX2lzQXJyYXknXTtfMHg0ODQyPWZ1bmN0aW9uKCl7cmV0dXJuIF8weDU1YTE5Mzt9O3JldHVybiBfMHg0ODQyKCk7fWZ1bmN0aW9uIEIoXzB4MmUzNmVhKXt2YXIgXzB4NWVhYjE4PV8weGZlNWU0NCxfMHg1N2NlYWMsXzB4MWNkM2ZmO2xldCBfMHgxNzRlNDM9ZnVuY3Rpb24oXzB4MmQ1MjE0LF8weDRkN2U4Mil7cmV0dXJuIF8weDRkN2U4Mi1fMHgyZDUyMTQ7fSxfMHgzNTVkZDk7aWYoXzB4MmUzNmVhW18weDVlYWIxOCgweDFmZildKV8weDM1NWRkOT1mdW5jdGlvbigpe3JldHVybiBfMHgyZTM2ZWFbJ3BlcmZvcm1hbmNlJ11bJ25vdyddKCk7fTtlbHNle2lmKF8weDJlMzZlYVtfMHg1ZWFiMTgoMHgyMDYpXSYmXzB4MmUzNmVhW18weDVlYWIxOCgweDIwNildW18weDVlYWIxOCgweDIxOSldJiYoKF8weDFjZDNmZj0oXzB4NTdjZWFjPV8weDJlMzZlYVsncHJvY2VzcyddKT09bnVsbD92b2lkIDB4MDpfMHg1N2NlYWNbXzB4NWVhYjE4KDB4MWNjKV0pPT1udWxsP3ZvaWQgMHgwOl8weDFjZDNmZltfMHg1ZWFiMTgoMHgxYzMpXSkhPT1fMHg1ZWFiMTgoMHgxZmQpKV8weDM1NWRkOT1mdW5jdGlvbigpe3ZhciBfMHgyYTViMjM9XzB4NWVhYjE4O3JldHVybiBfMHgyZTM2ZWFbXzB4MmE1YjIzKDB4MjA2KV1bJ2hydGltZSddKCk7fSxfMHgxNzRlNDM9ZnVuY3Rpb24oXzB4MzdhMTljLF8weDEzYjk2NSl7cmV0dXJuIDB4M2U4KihfMHgxM2I5NjVbMHgwXS1fMHgzN2ExOWNbMHgwXSkrKF8weDEzYjk2NVsweDFdLV8weDM3YTE5Y1sweDFdKS8weGY0MjQwO307ZWxzZSB0cnl7bGV0IHtwZXJmb3JtYW5jZTpfMHgyNDc0YTB9PXJlcXVpcmUoXzB4NWVhYjE4KDB4MjkwKSk7XzB4MzU1ZGQ5PWZ1bmN0aW9uKCl7dmFyIF8weDUwZGU5Yz1fMHg1ZWFiMTg7cmV0dXJuIF8weDI0NzRhMFtfMHg1MGRlOWMoMHgyNDkpXSgpO307fWNhdGNoe18weDM1NWRkOT1mdW5jdGlvbigpe3JldHVybituZXcgRGF0ZSgpO307fX1yZXR1cm57J2VsYXBzZWQnOl8weDE3NGU0MywndGltZVN0YW1wJzpfMHgzNTVkZDksJ25vdyc6KCk9PkRhdGVbJ25vdyddKCl9O31mdW5jdGlvbiBfMHgyODAwKF8weDIwYzMxNixfMHgyN2U0NGQpe3ZhciBfMHg0ODQyZDU9XzB4NDg0MigpO3JldHVybiBfMHgyODAwPWZ1bmN0aW9uKF8weDI4MDA3OSxfMHgyYjEzNmQpe18weDI4MDA3OT1fMHgyODAwNzktMHgxYTE7dmFyIF8weGY2ZGNlOT1fMHg0ODQyZDVbXzB4MjgwMDc5XTtyZXR1cm4gXzB4ZjZkY2U5O30sXzB4MjgwMChfMHgyMGMzMTYsXzB4MjdlNDRkKTt9ZnVuY3Rpb24gSChfMHg1ZjA0NmQsXzB4YmZlYTY3LF8weDRjOTg0Nyl7dmFyIF8weDQyMzMyYz1fMHhmZTVlNDQsXzB4NDUzNmRmLF8weDNlNTkxYixfMHgxYzAyZmQsXzB4NTY2MWI3LF8weGRhNzg4MjtpZihfMHg1ZjA0NmRbJ19jb25zb2xlTmluamFBbGxvd2VkVG9TdGFydCddIT09dm9pZCAweDApcmV0dXJuIF8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXTtsZXQgXzB4MTUyYTQyPSgoXzB4M2U1OTFiPShfMHg0NTM2ZGY9XzB4NWYwNDZkW18weDQyMzMyYygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHg0NTM2ZGZbJ3ZlcnNpb25zJ10pPT1udWxsP3ZvaWQgMHgwOl8weDNlNTkxYltfMHg0MjMzMmMoMHgyOGMpXSl8fCgoXzB4NTY2MWI3PShfMHgxYzAyZmQ9XzB4NWYwNDZkW18weDQyMzMyYygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHgxYzAyZmRbXzB4NDIzMzJjKDB4MWNjKV0pPT1udWxsP3ZvaWQgMHgwOl8weDU2NjFiN1tfMHg0MjMzMmMoMHgxYzMpXSk9PT1fMHg0MjMzMmMoMHgxZmQpO2Z1bmN0aW9uIF8weDQxMjU5NShfMHg1MDI3ZDQpe3ZhciBfMHg1NzgyYjE9XzB4NDIzMzJjO2lmKF8weDUwMjdkNFsnc3RhcnRzV2l0aCddKCcvJykmJl8weDUwMjdkNFtfMHg1NzgyYjEoMHgyOTUpXSgnLycpKXtsZXQgXzB4NTU4ZjAzPW5ldyBSZWdFeHAoXzB4NTAyN2Q0W18weDU3ODJiMSgweDFkYyldKDB4MSwtMHgxKSk7cmV0dXJuIF8weDNkMGQ2NT0+XzB4NTU4ZjAzWyd0ZXN0J10oXzB4M2QwZDY1KTt9ZWxzZXtpZihfMHg1MDI3ZDRbJ2luY2x1ZGVzJ10oJyonKXx8XzB4NTAyN2Q0W18weDU3ODJiMSgweDI5NildKCc/Jykpe2xldCBfMHg1MWJlYmY9bmV3IFJlZ0V4cCgnXicrXzB4NTAyN2Q0W18weDU3ODJiMSgweDI3ZSldKC9cXFxcLi9nLFN0cmluZ1tfMHg1NzgyYjEoMHgyMTgpXSgweDVjKSsnLicpW18weDU3ODJiMSgweDI3ZSldKC9cXFxcKi9nLCcuKicpW18weDU3ODJiMSgweDI3ZSldKC9cXFxcPy9nLCcuJykrU3RyaW5nWydmcm9tQ2hhckNvZGUnXSgweDI0KSk7cmV0dXJuIF8weDI0ZjY5OT0+XzB4NTFiZWJmW18weDU3ODJiMSgweDIwYildKF8weDI0ZjY5OSk7fWVsc2UgcmV0dXJuIF8weDIwNzYwMz0+XzB4MjA3NjAzPT09XzB4NTAyN2Q0O319bGV0IF8weDI3NWNlYT1fMHhiZmVhNjdbXzB4NDIzMzJjKDB4MjU3KV0oXzB4NDEyNTk1KTtyZXR1cm4gXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldPV8weDE1MmE0Mnx8IV8weGJmZWE2NywhXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldJiYoKF8weGRhNzg4Mj1fMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MWY3KV0pPT1udWxsP3ZvaWQgMHgwOl8weGRhNzg4MlsnaG9zdG5hbWUnXSkmJihfMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjIwKV09XzB4Mjc1Y2VhWydzb21lJ10oXzB4NTViNDM1PT5fMHg1NWI0MzUoXzB4NWYwNDZkWydsb2NhdGlvbiddWydob3N0bmFtZSddKSkpLF8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXTt9ZnVuY3Rpb24gWChfMHgyZjFhNzAsXzB4NWJlMDcyLF8weDM5YmUwMSxfMHg1YTU3NDUpe3ZhciBfMHgxYWU5ZGU9XzB4ZmU1ZTQ0O18weDJmMWE3MD1fMHgyZjFhNzAsXzB4NWJlMDcyPV8weDViZTA3MixfMHgzOWJlMDE9XzB4MzliZTAxLF8weDVhNTc0NT1fMHg1YTU3NDU7bGV0IF8weDQ1YWQyND1CKF8weDJmMWE3MCksXzB4MzQ5MTNiPV8weDQ1YWQyNFtfMHgxYWU5ZGUoMHgxYjEpXSxfMHg1ZjQyNTQ9XzB4NDVhZDI0W18weDFhZTlkZSgweDIxMildO2NsYXNzIF8weDM5YWVlM3tjb25zdHJ1Y3Rvcigpe3ZhciBfMHgyMDk0NjI9XzB4MWFlOWRlO3RoaXNbXzB4MjA5NDYyKDB4MWMwKV09L14oPyEoPzpkb3xpZnxpbnxmb3J8bGV0fG5ld3x0cnl8dmFyfGNhc2V8ZWxzZXxlbnVtfGV2YWx8ZmFsc2V8bnVsbHx0aGlzfHRydWV8dm9pZHx3aXRofGJyZWFrfGNhdGNofGNsYXNzfGNvbnN0fHN1cGVyfHRocm93fHdoaWxlfHlpZWxkfGRlbGV0ZXxleHBvcnR8aW1wb3J0fHB1YmxpY3xyZXR1cm58c3RhdGljfHN3aXRjaHx0eXBlb2Z8ZGVmYXVsdHxleHRlbmRzfGZpbmFsbHl8cGFja2FnZXxwcml2YXRlfGNvbnRpbnVlfGRlYnVnZ2VyfGZ1bmN0aW9ufGFyZ3VtZW50c3xpbnRlcmZhY2V8cHJvdGVjdGVkfGltcGxlbWVudHN8aW5zdGFuY2VvZikkKVtfJGEtekEtWlxcXFx4QTAtXFxcXHVGRkZGXVtfJGEtekEtWjAtOVxcXFx4QTAtXFxcXHVGRkZGXSokLyx0aGlzW18weDIwOTQ2MigweDFmYSldPS9eKDB8WzEtOV1bMC05XSopJC8sdGhpc1tfMHgyMDk0NjIoMHgxYmIpXT0vJyhbXlxcXFxcXFxcJ118XFxcXFxcXFwnKSonLyx0aGlzW18weDIwOTQ2MigweDI3YildPV8weDJmMWE3MFtfMHgyMDk0NjIoMHgyMGYpXSx0aGlzWydfSFRNTEFsbENvbGxlY3Rpb24nXT1fMHgyZjFhNzBbXzB4MjA5NDYyKDB4MjM5KV0sdGhpc1tfMHgyMDk0NjIoMHgxY2IpXT1PYmplY3RbXzB4MjA5NDYyKDB4MjU2KV0sdGhpc1tfMHgyMDk0NjIoMHgyMDIpXT1PYmplY3RbXzB4MjA5NDYyKDB4Mjg5KV0sdGhpc1tfMHgyMDk0NjIoMHgxYjUpXT1fMHgyZjFhNzBbXzB4MjA5NDYyKDB4MWUwKV0sdGhpc1snX3JlZ0V4cFRvU3RyaW5nJ109UmVnRXhwWydwcm90b3R5cGUnXVtfMHgyMDk0NjIoMHgyMzIpXSx0aGlzWydfZGF0ZVRvU3RyaW5nJ109RGF0ZVtfMHgyMDk0NjIoMHgyOGQpXVtfMHgyMDk0NjIoMHgyMzIpXTt9W18weDFhZTlkZSgweDIzZCldKF8weDI0YjdmMyxfMHgyOTZmNzMsXzB4NDY2NTNkLF8weDViZjlmZCl7dmFyIF8weGRhMjFiND1fMHgxYWU5ZGUsXzB4MmEyZmQwPXRoaXMsXzB4NGRkNmIwPV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmMpXTtmdW5jdGlvbiBfMHgxMzFlYjYoXzB4MjRjMWRmLF8weDI4YmY1NyxfMHg0MDhkNDgpe3ZhciBfMHg0NzkxMzE9XzB4ZGEyMWI0O18weDI4YmY1N1tfMHg0NzkxMzEoMHgyMjgpXT0ndW5rbm93bicsXzB4MjhiZjU3WydlcnJvciddPV8weDI0YzFkZltfMHg0NzkxMzEoMHgyMjIpXSxfMHgxZjBkNTY9XzB4NDA4ZDQ4W18weDQ3OTEzMSgweDI4YyldW18weDQ3OTEzMSgweDI2NSldLF8weDQwOGQ0OFtfMHg0NzkxMzEoMHgyOGMpXVtfMHg0NzkxMzEoMHgyNjUpXT1fMHgyOGJmNTcsXzB4MmEyZmQwW18weDQ3OTEzMSgweDIzMSldKF8weDI4YmY1NyxfMHg0MDhkNDgpO310cnl7XzB4NDY2NTNkWydsZXZlbCddKyssXzB4NDY2NTNkWydhdXRvRXhwYW5kJ10mJl8weDQ2NjUzZFsnYXV0b0V4cGFuZFByZXZpb3VzT2JqZWN0cyddW18weGRhMjFiNCgweDIwNCldKF8weDI5NmY3Myk7dmFyIF8weDFlMjA5NCxfMHgxNmFlZmEsXzB4NTQyNTY2LF8weDQyZTI4YixfMHhjZTdmOTU9W10sXzB4ZTZmMWMzPVtdLF8weGYxN2MyOSxfMHgyMDdkYjg9dGhpc1tfMHhkYTIxYjQoMHgyNzYpXShfMHgyOTZmNzMpLF8weDI3N2RlNj1fMHgyMDdkYjg9PT0nYXJyYXknLF8weDVjNDI2Yz0hMHgxLF8weDY2ZmUxYj1fMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyNTQpLF8weGNhNmU2ND10aGlzW18weGRhMjFiNCgweDIyZildKF8weDIwN2RiOCksXzB4MmM0MDVhPXRoaXNbXzB4ZGEyMWI0KDB4MjkyKV0oXzB4MjA3ZGI4KSxfMHg0ZjVkNjI9XzB4Y2E2ZTY0fHxfMHgyYzQwNWEsXzB4Njk2MWQzPXt9LF8weDFiYzY1Nz0weDAsXzB4MjAxMzM1PSEweDEsXzB4MWYwZDU2LF8weDQ2YWUyNj0vXigoWzEtOV17MX1bMC05XSopfDApJC87aWYoXzB4NDY2NTNkW18weGRhMjFiNCgweDFkMSldKXtpZihfMHgyNzdkZTYpe2lmKF8weDE2YWVmYT1fMHgyOTZmNzNbXzB4ZGEyMWI0KDB4MjRkKV0sXzB4MTZhZWZhPl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmQpXSl7Zm9yKF8weDU0MjU2Nj0weDAsXzB4NDJlMjhiPV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmQpXSxfMHgxZTIwOTQ9XzB4NTQyNTY2O18weDFlMjA5NDxfMHg0MmUyOGI7XzB4MWUyMDk0KyspXzB4ZTZmMWMzW18weGRhMjFiNCgweDIwNCldKF8weDJhMmZkMFsnX2FkZFByb3BlcnR5J10oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4MWUyMDk0LF8weDQ2NjUzZCkpO18weDI0YjdmM1tfMHhkYTIxYjQoMHgyNWEpXT0hMHgwO31lbHNle2ZvcihfMHg1NDI1NjY9MHgwLF8weDQyZTI4Yj1fMHgxNmFlZmEsXzB4MWUyMDk0PV8weDU0MjU2NjtfMHgxZTIwOTQ8XzB4NDJlMjhiO18weDFlMjA5NCsrKV8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyMDQpXShfMHgyYTJmZDBbXzB4ZGEyMWI0KDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4MWUyMDk0LF8weDQ2NjUzZCkpO31fMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J10rPV8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyNGQpXTt9aWYoIShfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMTcpfHxfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMGYpKSYmIV8weGNhNmU2NCYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjkzKSYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjViKSYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjY5KSl7dmFyIF8weDU2YjM4MD1fMHg1YmY5ZmRbXzB4ZGEyMWI0KDB4MWU5KV18fF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgxZTkpXTtpZih0aGlzWydfaXNTZXQnXShfMHgyOTZmNzMpPyhfMHgxZTIwOTQ9MHgwLF8weDI5NmY3M1tfMHhkYTIxYjQoMHgyNTgpXShmdW5jdGlvbihfMHgzNjU3ODIpe3ZhciBfMHgyMDQxNWU9XzB4ZGEyMWI0O2lmKF8weDFiYzY1NysrLF8weDQ2NjUzZFsnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnXSsrLF8weDFiYzY1Nz5fMHg1NmIzODApe18weDIwMTMzNT0hMHgwO3JldHVybjt9aWYoIV8weDQ2NjUzZFsnaXNFeHByZXNzaW9uVG9FdmFsdWF0ZSddJiZfMHg0NjY1M2RbJ2F1dG9FeHBhbmQnXSYmXzB4NDY2NTNkW18weDIwNDE1ZSgweDI1ZildPl8weDQ2NjUzZFtfMHgyMDQxNWUoMHgyNDEpXSl7XzB4MjAxMzM1PSEweDA7cmV0dXJuO31fMHhlNmYxYzNbJ3B1c2gnXShfMHgyYTJmZDBbXzB4MjA0MTVlKDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MywnU2V0JyxfMHgxZTIwOTQrKyxfMHg0NjY1M2QsZnVuY3Rpb24oXzB4NDY0MDc0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDY0MDc0O307fShfMHgzNjU3ODIpKSk7fSkpOnRoaXNbXzB4ZGEyMWI0KDB4MjgzKV0oXzB4Mjk2ZjczKSYmXzB4Mjk2ZjczW18weGRhMjFiNCgweDI1OCldKGZ1bmN0aW9uKF8weDM3ODQzMCxfMHgyOGIxYzYpe3ZhciBfMHgyOWFjMzg9XzB4ZGEyMWI0O2lmKF8weDFiYzY1NysrLF8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyNWYpXSsrLF8weDFiYzY1Nz5fMHg1NmIzODApe18weDIwMTMzNT0hMHgwO3JldHVybjt9aWYoIV8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyMWUpXSYmXzB4NDY2NTNkWydhdXRvRXhwYW5kJ10mJl8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyNWYpXT5fMHg0NjY1M2RbXzB4MjlhYzM4KDB4MjQxKV0pe18weDIwMTMzNT0hMHgwO3JldHVybjt9dmFyIF8weDM5ZGRmMz1fMHgyOGIxYzZbJ3RvU3RyaW5nJ10oKTtfMHgzOWRkZjNbXzB4MjlhYzM4KDB4MjRkKV0+MHg2NCYmKF8weDM5ZGRmMz1fMHgzOWRkZjNbXzB4MjlhYzM4KDB4MWRjKV0oMHgwLDB4NjQpK18weDI5YWMzOCgweDFlZCkpLF8weGU2ZjFjM1tfMHgyOWFjMzgoMHgyMDQpXShfMHgyYTJmZDBbXzB4MjlhYzM4KDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyOWFjMzgoMHgxZGIpLF8weDM5ZGRmMyxfMHg0NjY1M2QsZnVuY3Rpb24oXzB4NDZiZDdhKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDZiZDdhO307fShfMHgzNzg0MzApKSk7fSksIV8weDVjNDI2Yyl7dHJ5e2ZvcihfMHhmMTdjMjkgaW4gXzB4Mjk2ZjczKWlmKCEoXzB4Mjc3ZGU2JiZfMHg0NmFlMjZbXzB4ZGEyMWI0KDB4MjBiKV0oXzB4ZjE3YzI5KSkmJiF0aGlzWydfYmxhY2tsaXN0ZWRQcm9wZXJ0eSddKF8weDI5NmY3MyxfMHhmMTdjMjksXzB4NDY2NTNkKSl7aWYoXzB4MWJjNjU3KyssXzB4NDY2NTNkWydhdXRvRXhwYW5kUHJvcGVydHlDb3VudCddKyssXzB4MWJjNjU3Pl8weDU2YjM4MCl7XzB4MjAxMzM1PSEweDA7YnJlYWs7fWlmKCFfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjFlKV0mJl8weDQ2NjUzZFsnYXV0b0V4cGFuZCddJiZfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjVmKV0+XzB4NDY2NTNkW18weGRhMjFiNCgweDI0MSldKXtfMHgyMDEzMzU9ITB4MDticmVhazt9XzB4ZTZmMWMzW18weGRhMjFiNCgweDIwNCldKF8weDJhMmZkMFtfMHhkYTIxYjQoMHgxZmUpXShfMHhjZTdmOTUsXzB4Njk2MWQzLF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4ZjE3YzI5LF8weDQ2NjUzZCkpO319Y2F0Y2h7fWlmKF8weDY5NjFkM1tfMHhkYTIxYjQoMHgxYWMpXT0hMHgwLF8weDY2ZmUxYiYmKF8weDY5NjFkM1tfMHhkYTIxYjQoMHgxZDQpXT0hMHgwKSwhXzB4MjAxMzM1KXt2YXIgXzB4MjY1OGJhPVtdW18weGRhMjFiNCgweDIyNCldKHRoaXNbXzB4ZGEyMWI0KDB4MjAyKV0oXzB4Mjk2ZjczKSlbXzB4ZGEyMWI0KDB4MjI0KV0odGhpc1tfMHhkYTIxYjQoMHgxZTYpXShfMHgyOTZmNzMpKTtmb3IoXzB4MWUyMDk0PTB4MCxfMHgxNmFlZmE9XzB4MjY1OGJhW18weGRhMjFiNCgweDI0ZCldO18weDFlMjA5NDxfMHgxNmFlZmE7XzB4MWUyMDk0KyspaWYoXzB4ZjE3YzI5PV8weDI2NThiYVtfMHgxZTIwOTRdLCEoXzB4Mjc3ZGU2JiZfMHg0NmFlMjZbXzB4ZGEyMWI0KDB4MjBiKV0oXzB4ZjE3YzI5W18weGRhMjFiNCgweDIzMildKCkpKSYmIXRoaXNbXzB4ZGEyMWI0KDB4MWIwKV0oXzB4Mjk2ZjczLF8weGYxN2MyOSxfMHg0NjY1M2QpJiYhXzB4Njk2MWQzW18weGRhMjFiNCgweDFkNykrXzB4ZjE3YzI5W18weGRhMjFiNCgweDIzMildKCldKXtpZihfMHgxYmM2NTcrKyxfMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J10rKyxfMHgxYmM2NTc+XzB4NTZiMzgwKXtfMHgyMDEzMzU9ITB4MDticmVhazt9aWYoIV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMWUpXSYmXzB4NDY2NTNkW18weGRhMjFiNCgweDIyYyldJiZfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjVmKV0+XzB4NDY2NTNkWydhdXRvRXhwYW5kTGltaXQnXSl7XzB4MjAxMzM1PSEweDA7YnJlYWs7fV8weGU2ZjFjM1sncHVzaCddKF8weDJhMmZkMFtfMHhkYTIxYjQoMHgxZmUpXShfMHhjZTdmOTUsXzB4Njk2MWQzLF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4ZjE3YzI5LF8weDQ2NjUzZCkpO319fX19aWYoXzB4MjRiN2YzW18weGRhMjFiNCgweDIyOCldPV8weDIwN2RiOCxfMHg0ZjVkNjI/KF8weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT1fMHgyOTZmNzNbJ3ZhbHVlT2YnXSgpLHRoaXNbJ19jYXBJZlN0cmluZyddKF8weDIwN2RiOCxfMHgyNGI3ZjMsXzB4NDY2NTNkLF8weDViZjlmZCkpOl8weDIwN2RiOD09PSdkYXRlJz9fMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09dGhpc1snX2RhdGVUb1N0cmluZyddW18weGRhMjFiNCgweDI3MyldKF8weDI5NmY3Myk6XzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MjY5KT9fMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09XzB4Mjk2ZjczW18weGRhMjFiNCgweDIzMildKCk6XzB4MjA3ZGI4PT09J1JlZ0V4cCc/XzB4MjRiN2YzW18weGRhMjFiNCgweDFmNCldPXRoaXNbXzB4ZGEyMWI0KDB4MjA3KV1bXzB4ZGEyMWI0KDB4MjczKV0oXzB4Mjk2ZjczKTpfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgxZDkpJiZ0aGlzW18weGRhMjFiNCgweDFiNSldP18weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT10aGlzW18weGRhMjFiNCgweDFiNSldW18weGRhMjFiNCgweDI4ZCldW18weGRhMjFiNCgweDIzMildW18weGRhMjFiNCgweDI3MyldKF8weDI5NmY3Myk6IV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgxZDEpXSYmIShfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMTcpfHxfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMGYpKSYmKGRlbGV0ZSBfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV0sXzB4MjRiN2YzW18weGRhMjFiNCgweDIxMCldPSEweDApLF8weDIwMTMzNSYmKF8weDI0YjdmM1tfMHhkYTIxYjQoMHgyMTQpXT0hMHgwKSxfMHgxZjBkNTY9XzB4NDY2NTNkWydub2RlJ11bXzB4ZGEyMWI0KDB4MjY1KV0sXzB4NDY2NTNkW18weGRhMjFiNCgweDI4YyldW18weGRhMjFiNCgweDI2NSldPV8weDI0YjdmMyx0aGlzW18weGRhMjFiNCgweDIzMSldKF8weDI0YjdmMyxfMHg0NjY1M2QpLF8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyNGQpXSl7Zm9yKF8weDFlMjA5ND0weDAsXzB4MTZhZWZhPV8weGU2ZjFjM1snbGVuZ3RoJ107XzB4MWUyMDk0PF8weDE2YWVmYTtfMHgxZTIwOTQrKylfMHhlNmYxYzNbXzB4MWUyMDk0XShfMHgxZTIwOTQpO31fMHhjZTdmOTVbXzB4ZGEyMWI0KDB4MjRkKV0mJihfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWU5KV09XzB4Y2U3Zjk1KTt9Y2F0Y2goXzB4MzhlZjZkKXtfMHgxMzFlYjYoXzB4MzhlZjZkLF8weDI0YjdmMyxfMHg0NjY1M2QpO31yZXR1cm4gdGhpc1tfMHhkYTIxYjQoMHgyMzYpXShfMHgyOTZmNzMsXzB4MjRiN2YzKSx0aGlzW18weGRhMjFiNCgweDIzOCldKF8weDI0YjdmMyxfMHg0NjY1M2QpLF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyOGMpXVtfMHhkYTIxYjQoMHgyNjUpXT1fMHgxZjBkNTYsXzB4NDY2NTNkW18weGRhMjFiNCgweDFkMyldLS0sXzB4NDY2NTNkW18weGRhMjFiNCgweDIyYyldPV8weDRkZDZiMCxfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJjKV0mJl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmUpXVtfMHhkYTIxYjQoMHgyMjkpXSgpLF8weDI0YjdmMzt9W18weDFhZTlkZSgweDFlNildKF8weGI3NGViZCl7dmFyIF8weDE3NTNkNj1fMHgxYWU5ZGU7cmV0dXJuIE9iamVjdFtfMHgxNzUzZDYoMHgxZjUpXT9PYmplY3RbXzB4MTc1M2Q2KDB4MWY1KV0oXzB4Yjc0ZWJkKTpbXTt9W18weDFhZTlkZSgweDI4NyldKF8weDI4ZDJlZil7dmFyIF8weDMzZTE3Zj1fMHgxYWU5ZGU7cmV0dXJuISEoXzB4MjhkMmVmJiZfMHgyZjFhNzBbXzB4MzNlMTdmKDB4MWY4KV0mJnRoaXNbXzB4MzNlMTdmKDB4MjFhKV0oXzB4MjhkMmVmKT09PV8weDMzZTE3ZigweDI0MikmJl8weDI4ZDJlZltfMHgzM2UxN2YoMHgyNTgpXSk7fVtfMHgxYWU5ZGUoMHgxYjApXShfMHgzMjliMWIsXzB4NDIyOTJhLF8weDM3YWIyYyl7dmFyIF8weDQ1M2FjOT1fMHgxYWU5ZGU7cmV0dXJuIF8weDM3YWIyY1tfMHg0NTNhYzkoMHgxYjYpXT90eXBlb2YgXzB4MzI5YjFiW18weDQyMjkyYV09PSdmdW5jdGlvbic6ITB4MTt9W18weDFhZTlkZSgweDI3NildKF8weDIyZjA1OCl7dmFyIF8weDI0MWI3YT1fMHgxYWU5ZGUsXzB4M2Q0ZTY1PScnO3JldHVybiBfMHgzZDRlNjU9dHlwZW9mIF8weDIyZjA1OCxfMHgzZDRlNjU9PT0nb2JqZWN0Jz90aGlzWydfb2JqZWN0VG9TdHJpbmcnXShfMHgyMmYwNTgpPT09J1tvYmplY3RcXFxceDIwQXJyYXldJz9fMHgzZDRlNjU9J2FycmF5Jzp0aGlzW18weDI0MWI3YSgweDIxYSldKF8weDIyZjA1OCk9PT1fMHgyNDFiN2EoMHgyNDMpP18weDNkNGU2NT1fMHgyNDFiN2EoMHgxZDgpOnRoaXNbXzB4MjQxYjdhKDB4MjFhKV0oXzB4MjJmMDU4KT09PV8weDI0MWI3YSgweDIzNSk/XzB4M2Q0ZTY1PV8weDI0MWI3YSgweDI2OSk6XzB4MjJmMDU4PT09bnVsbD9fMHgzZDRlNjU9XzB4MjQxYjdhKDB4MjE3KTpfMHgyMmYwNThbXzB4MjQxYjdhKDB4MjE2KV0mJihfMHgzZDRlNjU9XzB4MjJmMDU4W18weDI0MWI3YSgweDIxNildW18weDI0MWI3YSgweDIxYildfHxfMHgzZDRlNjUpOl8weDNkNGU2NT09PV8weDI0MWI3YSgweDIwZikmJnRoaXNbJ19IVE1MQWxsQ29sbGVjdGlvbiddJiZfMHgyMmYwNTggaW5zdGFuY2VvZiB0aGlzW18weDI0MWI3YSgweDI4NSldJiYoXzB4M2Q0ZTY1PV8weDI0MWI3YSgweDIzOSkpLF8weDNkNGU2NTt9W18weDFhZTlkZSgweDIxYSldKF8weDFkZTg3Mil7dmFyIF8weDM1NzBlOT1fMHgxYWU5ZGU7cmV0dXJuIE9iamVjdFtfMHgzNTcwZTkoMHgyOGQpXVtfMHgzNTcwZTkoMHgyMzIpXVtfMHgzNTcwZTkoMHgyNzMpXShfMHgxZGU4NzIpO31bXzB4MWFlOWRlKDB4MjJmKV0oXzB4NDJiOTgxKXt2YXIgXzB4MWI0Mzg5PV8weDFhZTlkZTtyZXR1cm4gXzB4NDJiOTgxPT09J2Jvb2xlYW4nfHxfMHg0MmI5ODE9PT0nc3RyaW5nJ3x8XzB4NDJiOTgxPT09XzB4MWI0Mzg5KDB4MWYwKTt9WydfaXNQcmltaXRpdmVXcmFwcGVyVHlwZSddKF8weDU3ZDEyYSl7dmFyIF8weDUxZmE0MD1fMHgxYWU5ZGU7cmV0dXJuIF8weDU3ZDEyYT09PSdCb29sZWFuJ3x8XzB4NTdkMTJhPT09J1N0cmluZyd8fF8weDU3ZDEyYT09PV8weDUxZmE0MCgweDIyNSk7fVtfMHgxYWU5ZGUoMHgxYjgpXShfMHgzZGU5MGUsXzB4MTRiODJmLF8weDE1ODg1ZixfMHgyMmIyNmUsXzB4NWJmMDYxLF8weDJiYWU4NSl7dmFyIF8weDI3OWQzMD10aGlzO3JldHVybiBmdW5jdGlvbihfMHg1NmM2ODgpe3ZhciBfMHgzMWNiNDk9XzB4MjgwMCxfMHg2NGZjYTA9XzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldW18weDMxY2I0OSgweDI2NSldLF8weDE4OWNkOD1fMHg1YmYwNjFbJ25vZGUnXVtfMHgzMWNiNDkoMHgyNWQpXSxfMHg1ZWEyNWY9XzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldWydwYXJlbnQnXTtfMHg1YmYwNjFbJ25vZGUnXVtfMHgzMWNiNDkoMHgyM2IpXT1fMHg2NGZjYTAsXzB4NWJmMDYxWydub2RlJ11bXzB4MzFjYjQ5KDB4MjVkKV09dHlwZW9mIF8weDIyYjI2ZT09XzB4MzFjYjQ5KDB4MWYwKT9fMHgyMmIyNmU6XzB4NTZjNjg4LF8weDNkZTkwZVtfMHgzMWNiNDkoMHgyMDQpXShfMHgyNzlkMzBbXzB4MzFjYjQ5KDB4MjVjKV0oXzB4MTRiODJmLF8weDE1ODg1ZixfMHgyMmIyNmUsXzB4NWJmMDYxLF8weDJiYWU4NSkpLF8weDViZjA2MVtfMHgzMWNiNDkoMHgyOGMpXVtfMHgzMWNiNDkoMHgyM2IpXT1fMHg1ZWEyNWYsXzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldW18weDMxY2I0OSgweDI1ZCldPV8weDE4OWNkODt9O31bJ19hZGRPYmplY3RQcm9wZXJ0eSddKF8weDhmMTcxNCxfMHg0NmMxOWUsXzB4MzA4NzkzLF8weDUzYmYxMyxfMHgzYzU3MTIsXzB4M2ViN2RiLF8weDRkZDg4MSl7dmFyIF8weDU1NzQ0ND1fMHgxYWU5ZGUsXzB4NTg3NjZjPXRoaXM7cmV0dXJuIF8weDQ2YzE5ZVtfMHg1NTc0NDQoMHgxZDcpK18weDNjNTcxMlsndG9TdHJpbmcnXSgpXT0hMHgwLGZ1bmN0aW9uKF8weDQ5NGE3NCl7dmFyIF8weDNjNzM5Yj1fMHg1NTc0NDQsXzB4MzhjMDk5PV8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyNjUpXSxfMHhlYTg4NjU9XzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDI1ZCldLF8weDFkYTU4Mz1fMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjNiKV07XzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDIzYildPV8weDM4YzA5OSxfMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjVkKV09XzB4NDk0YTc0LF8weDhmMTcxNFtfMHgzYzczOWIoMHgyMDQpXShfMHg1ODc2NmNbXzB4M2M3MzliKDB4MjVjKV0oXzB4MzA4NzkzLF8weDUzYmYxMyxfMHgzYzU3MTIsXzB4M2ViN2RiLF8weDRkZDg4MSkpLF8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyM2IpXT1fMHgxZGE1ODMsXzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDI1ZCldPV8weGVhODg2NTt9O31bXzB4MWFlOWRlKDB4MjVjKV0oXzB4YTI2YWY3LF8weGQxNzgzYyxfMHg0YzM0MTAsXzB4YTNiZjIsXzB4OWZhZDk4KXt2YXIgXzB4YTYzYTRiPV8weDFhZTlkZSxfMHgzNmVjYTk9dGhpcztfMHg5ZmFkOTh8fChfMHg5ZmFkOTg9ZnVuY3Rpb24oXzB4NDk1OGE4LF8weDQxY2EyOCl7cmV0dXJuIF8weDQ5NThhOFtfMHg0MWNhMjhdO30pO3ZhciBfMHgyOWNiYjk9XzB4NGMzNDEwW18weGE2M2E0YigweDIzMildKCksXzB4NWNmYjQ2PV8weGEzYmYyW18weGE2M2E0YigweDI3NyldfHx7fSxfMHg0NDUxODM9XzB4YTNiZjJbXzB4YTYzYTRiKDB4MWQxKV0sXzB4MzE2ZjUwPV8weGEzYmYyWydpc0V4cHJlc3Npb25Ub0V2YWx1YXRlJ107dHJ5e3ZhciBfMHgxNDFkMjU9dGhpc1snX2lzTWFwJ10oXzB4YTI2YWY3KSxfMHhmZDVmNjc9XzB4MjljYmI5O18weDE0MWQyNSYmXzB4ZmQ1ZjY3WzB4MF09PT0nXFxcXHgyNycmJihfMHhmZDVmNjc9XzB4ZmQ1ZjY3W18weGE2M2E0YigweDFhOSldKDB4MSxfMHhmZDVmNjdbXzB4YTYzYTRiKDB4MjRkKV0tMHgyKSk7dmFyIF8weDRmZGI0ZD1fMHhhM2JmMltfMHhhNjNhNGIoMHgyNzcpXT1fMHg1Y2ZiNDZbXzB4YTYzYTRiKDB4MWQ3KStfMHhmZDVmNjddO18weDRmZGI0ZCYmKF8weGEzYmYyW18weGE2M2E0YigweDFkMSldPV8weGEzYmYyW18weGE2M2E0YigweDFkMSldKzB4MSksXzB4YTNiZjJbXzB4YTYzYTRiKDB4MjFlKV09ISFfMHg0ZmRiNGQ7dmFyIF8weDQ3NTE1Nz10eXBlb2YgXzB4NGMzNDEwPT0nc3ltYm9sJyxfMHgyOWQ4NWM9eyduYW1lJzpfMHg0NzUxNTd8fF8weDE0MWQyNT9fMHgyOWNiYjk6dGhpc1snX3Byb3BlcnR5TmFtZSddKF8weDI5Y2JiOSl9O2lmKF8weDQ3NTE1NyYmKF8weDI5ZDg1Y1tfMHhhNjNhNGIoMHgxZDkpXT0hMHgwKSwhKF8weGQxNzgzYz09PV8weGE2M2E0YigweDI0Zil8fF8weGQxNzgzYz09PV8weGE2M2E0YigweDI0ZSkpKXt2YXIgXzB4MjYwYjczPXRoaXNbXzB4YTYzYTRiKDB4MWNiKV0oXzB4YTI2YWY3LF8weDRjMzQxMCk7aWYoXzB4MjYwYjczJiYoXzB4MjYwYjczW18weGE2M2E0YigweDIwNSldJiYoXzB4MjlkODVjW18weGE2M2E0YigweDFhNSldPSEweDApLF8weDI2MGI3M1tfMHhhNjNhNGIoMHgxZmIpXSYmIV8weDRmZGI0ZCYmIV8weGEzYmYyW18weGE2M2E0YigweDFiZSldKSlyZXR1cm4gXzB4MjlkODVjWydnZXR0ZXInXT0hMHgwLHRoaXNbXzB4YTYzYTRiKDB4MWRhKV0oXzB4MjlkODVjLF8weGEzYmYyKSxfMHgyOWQ4NWM7fXZhciBfMHgxOTRmYTU7dHJ5e18weDE5NGZhNT1fMHg5ZmFkOTgoXzB4YTI2YWY3LF8weDRjMzQxMCk7fWNhdGNoKF8weDJjMzE0Mil7cmV0dXJuIF8weDI5ZDg1Yz17J25hbWUnOl8weDI5Y2JiOSwndHlwZSc6XzB4YTYzYTRiKDB4MWM4KSwnZXJyb3InOl8weDJjMzE0MltfMHhhNjNhNGIoMHgyMjIpXX0sdGhpc1tfMHhhNjNhNGIoMHgxZGEpXShfMHgyOWQ4NWMsXzB4YTNiZjIpLF8weDI5ZDg1Yzt9dmFyIF8weDUwODUyYT10aGlzW18weGE2M2E0YigweDI3NildKF8weDE5NGZhNSksXzB4M2FiNzllPXRoaXNbXzB4YTYzYTRiKDB4MjJmKV0oXzB4NTA4NTJhKTtpZihfMHgyOWQ4NWNbXzB4YTYzYTRiKDB4MjI4KV09XzB4NTA4NTJhLF8weDNhYjc5ZSl0aGlzW18weGE2M2E0YigweDFkYSldKF8weDI5ZDg1YyxfMHhhM2JmMixfMHgxOTRmYTUsZnVuY3Rpb24oKXt2YXIgXzB4MzBhMzNmPV8weGE2M2E0YjtfMHgyOWQ4NWNbXzB4MzBhMzNmKDB4MWY0KV09XzB4MTk0ZmE1Wyd2YWx1ZU9mJ10oKSwhXzB4NGZkYjRkJiZfMHgzNmVjYTlbXzB4MzBhMzNmKDB4MWM0KV0oXzB4NTA4NTJhLF8weDI5ZDg1YyxfMHhhM2JmMix7fSk7fSk7ZWxzZXt2YXIgXzB4MmViOGQxPV8weGEzYmYyW18weGE2M2E0YigweDIyYyldJiZfMHhhM2JmMltfMHhhNjNhNGIoMHgxZDMpXTxfMHhhM2JmMlsnYXV0b0V4cGFuZE1heERlcHRoJ10mJl8weGEzYmYyW18weGE2M2E0YigweDIyZSldWydpbmRleE9mJ10oXzB4MTk0ZmE1KTwweDAmJl8weDUwODUyYSE9PSdmdW5jdGlvbicmJl8weGEzYmYyW18weGE2M2E0YigweDI1ZildPF8weGEzYmYyWydhdXRvRXhwYW5kTGltaXQnXTtfMHgyZWI4ZDF8fF8weGEzYmYyW18weGE2M2E0YigweDFkMyldPF8weDQ0NTE4M3x8XzB4NGZkYjRkPyh0aGlzWydzZXJpYWxpemUnXShfMHgyOWQ4NWMsXzB4MTk0ZmE1LF8weGEzYmYyLF8weDRmZGI0ZHx8e30pLHRoaXNbXzB4YTYzYTRiKDB4MjM2KV0oXzB4MTk0ZmE1LF8weDI5ZDg1YykpOnRoaXNbXzB4YTYzYTRiKDB4MWRhKV0oXzB4MjlkODVjLF8weGEzYmYyLF8weDE5NGZhNSxmdW5jdGlvbigpe3ZhciBfMHgxYWMyZjQ9XzB4YTYzYTRiO18weDUwODUyYT09PV8weDFhYzJmNCgweDIxNyl8fF8weDUwODUyYT09PSd1bmRlZmluZWQnfHwoZGVsZXRlIF8weDI5ZDg1Y1sndmFsdWUnXSxfMHgyOWQ4NWNbXzB4MWFjMmY0KDB4MjEwKV09ITB4MCk7fSk7fXJldHVybiBfMHgyOWQ4NWM7fWZpbmFsbHl7XzB4YTNiZjJbXzB4YTYzYTRiKDB4Mjc3KV09XzB4NWNmYjQ2LF8weGEzYmYyWydkZXB0aCddPV8weDQ0NTE4MyxfMHhhM2JmMltfMHhhNjNhNGIoMHgyMWUpXT1fMHgzMTZmNTA7fX1bJ19jYXBJZlN0cmluZyddKF8weDE1YTYxOSxfMHgyZTk1NTEsXzB4MmQwZGM3LF8weDNhYTYxZCl7dmFyIF8weDFjY2ZkOD1fMHgxYWU5ZGUsXzB4MTRlNWNlPV8weDNhYTYxZFtfMHgxY2NmZDgoMHgyNjgpXXx8XzB4MmQwZGM3W18weDFjY2ZkOCgweDI2OCldO2lmKChfMHgxNWE2MTk9PT1fMHgxY2NmZDgoMHgyODIpfHxfMHgxNWE2MTk9PT1fMHgxY2NmZDgoMHgyOTMpKSYmXzB4MmU5NTUxWyd2YWx1ZSddKXtsZXQgXzB4MzgxNzQzPV8weDJlOTU1MVtfMHgxY2NmZDgoMHgxZjQpXVsnbGVuZ3RoJ107XzB4MmQwZGM3WydhbGxTdHJMZW5ndGgnXSs9XzB4MzgxNzQzLF8weDJkMGRjN1snYWxsU3RyTGVuZ3RoJ10+XzB4MmQwZGM3Wyd0b3RhbFN0ckxlbmd0aCddPyhfMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MjEwKV09JycsZGVsZXRlIF8weDJlOTU1MVtfMHgxY2NmZDgoMHgxZjQpXSk6XzB4MzgxNzQzPl8weDE0ZTVjZSYmKF8weDJlOTU1MVtfMHgxY2NmZDgoMHgyMTApXT1fMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MWY0KV1bJ3N1YnN0ciddKDB4MCxfMHgxNGU1Y2UpLGRlbGV0ZSBfMHgyZTk1NTFbJ3ZhbHVlJ10pO319W18weDFhZTlkZSgweDI4MyldKF8weDExYWIzZSl7dmFyIF8weDQ1NWJjZD1fMHgxYWU5ZGU7cmV0dXJuISEoXzB4MTFhYjNlJiZfMHgyZjFhNzBbJ01hcCddJiZ0aGlzW18weDQ1NWJjZCgweDIxYSldKF8weDExYWIzZSk9PT1fMHg0NTViY2QoMHgyMGUpJiZfMHgxMWFiM2VbXzB4NDU1YmNkKDB4MjU4KV0pO31bXzB4MWFlOWRlKDB4MjEzKV0oXzB4NTk3NjFkKXt2YXIgXzB4MjA1ZDk0PV8weDFhZTlkZTtpZihfMHg1OTc2MWRbXzB4MjA1ZDk0KDB4MjZhKV0oL15cXFxcZCskLykpcmV0dXJuIF8weDU5NzYxZDt2YXIgXzB4MjgzYmFkO3RyeXtfMHgyODNiYWQ9SlNPTltfMHgyMDVkOTQoMHgxYzIpXSgnJytfMHg1OTc2MWQpO31jYXRjaHtfMHgyODNiYWQ9J1xcXFx4MjInK3RoaXNbXzB4MjA1ZDk0KDB4MjFhKV0oXzB4NTk3NjFkKSsnXFxcXHgyMic7fXJldHVybiBfMHgyODNiYWRbJ21hdGNoJ10oL15cXFwiKFthLXpBLVpfXVthLXpBLVpfMC05XSopXFxcIiQvKT9fMHgyODNiYWQ9XzB4MjgzYmFkW18weDIwNWQ5NCgweDFhOSldKDB4MSxfMHgyODNiYWRbXzB4MjA1ZDk0KDB4MjRkKV0tMHgyKTpfMHgyODNiYWQ9XzB4MjgzYmFkW18weDIwNWQ5NCgweDI3ZSldKC8nL2csJ1xcXFx4NWNcXFxceDI3JylbXzB4MjA1ZDk0KDB4MjdlKV0oL1xcXFxcXFxcXFxcIi9nLCdcXFxceDIyJylbXzB4MjA1ZDk0KDB4MjdlKV0oLyheXFxcInxcXFwiJCkvZywnXFxcXHgyNycpLF8weDI4M2JhZDt9W18weDFhZTlkZSgweDFkYSldKF8weDU1YmIxMSxfMHgxYjM3OTUsXzB4NDhmMjYxLF8weDNlMjFhYSl7dmFyIF8weDU3MWFkYz1fMHgxYWU5ZGU7dGhpc1tfMHg1NzFhZGMoMHgyMzEpXShfMHg1NWJiMTEsXzB4MWIzNzk1KSxfMHgzZTIxYWEmJl8weDNlMjFhYSgpLHRoaXNbJ19hZGRpdGlvbmFsTWV0YWRhdGEnXShfMHg0OGYyNjEsXzB4NTViYjExKSx0aGlzW18weDU3MWFkYygweDIzOCldKF8weDU1YmIxMSxfMHgxYjM3OTUpO31bXzB4MWFlOWRlKDB4MjMxKV0oXzB4ZTA4MmVkLF8weDUwYjcwMCl7dmFyIF8weDQ4OWQ5Zj1fMHgxYWU5ZGU7dGhpc1snX3NldE5vZGVJZCddKF8weGUwODJlZCxfMHg1MGI3MDApLHRoaXNbXzB4NDg5ZDlmKDB4MWMxKV0oXzB4ZTA4MmVkLF8weDUwYjcwMCksdGhpc1snX3NldE5vZGVFeHByZXNzaW9uUGF0aCddKF8weGUwODJlZCxfMHg1MGI3MDApLHRoaXNbJ19zZXROb2RlUGVybWlzc2lvbnMnXShfMHhlMDgyZWQsXzB4NTBiNzAwKTt9Wydfc2V0Tm9kZUlkJ10oXzB4NTZlMjAwLF8weDQ1MzE5OCl7fVsnX3NldE5vZGVRdWVyeVBhdGgnXShfMHg0MGE5NWYsXzB4MWY2MTdhKXt9W18weDFhZTlkZSgweDIwYSldKF8weDI5NWM2YSxfMHgyOTdiYjQpe31bXzB4MWFlOWRlKDB4MWVmKV0oXzB4M2Y2OTI1KXtyZXR1cm4gXzB4M2Y2OTI1PT09dGhpc1snX3VuZGVmaW5lZCddO31bXzB4MWFlOWRlKDB4MjM4KV0oXzB4MjE1ODQwLF8weDIyOTJmZCl7dmFyIF8weDU0NGMzNz1fMHgxYWU5ZGU7dGhpc1tfMHg1NDRjMzcoMHgyMGEpXShfMHgyMTU4NDAsXzB4MjI5MmZkKSx0aGlzWydfc2V0Tm9kZUV4cGFuZGFibGVTdGF0ZSddKF8weDIxNTg0MCksXzB4MjI5MmZkW18weDU0NGMzNygweDFkNildJiZ0aGlzWydfc29ydFByb3BzJ10oXzB4MjE1ODQwKSx0aGlzW18weDU0NGMzNygweDFhZildKF8weDIxNTg0MCxfMHgyMjkyZmQpLHRoaXNbXzB4NTQ0YzM3KDB4MjcxKV0oXzB4MjE1ODQwLF8weDIyOTJmZCksdGhpc1tfMHg1NDRjMzcoMHgyNTMpXShfMHgyMTU4NDApO31bXzB4MWFlOWRlKDB4MjM2KV0oXzB4OTBlMzdkLF8weDI5MDVhYyl7dmFyIF8weDI0NWJmND1fMHgxYWU5ZGU7bGV0IF8weDQwNGE1Mzt0cnl7XzB4MmYxYTcwW18weDI0NWJmNCgweDIyNyldJiYoXzB4NDA0YTUzPV8weDJmMWE3MFtfMHgyNDViZjQoMHgyMjcpXVtfMHgyNDViZjQoMHgyMmEpXSxfMHgyZjFhNzBbXzB4MjQ1YmY0KDB4MjI3KV1bXzB4MjQ1YmY0KDB4MjJhKV09ZnVuY3Rpb24oKXt9KSxfMHg5MGUzN2QmJnR5cGVvZiBfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjRkKV09PV8weDI0NWJmNCgweDFmMCkmJihfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjRkKV09XzB4OTBlMzdkW18weDI0NWJmNCgweDI0ZCldKTt9Y2F0Y2h7fWZpbmFsbHl7XzB4NDA0YTUzJiYoXzB4MmYxYTcwWydjb25zb2xlJ11bXzB4MjQ1YmY0KDB4MjJhKV09XzB4NDA0YTUzKTt9aWYoXzB4MjkwNWFjW18weDI0NWJmNCgweDIyOCldPT09XzB4MjQ1YmY0KDB4MWYwKXx8XzB4MjkwNWFjW18weDI0NWJmNCgweDIyOCldPT09XzB4MjQ1YmY0KDB4MjI1KSl7aWYoaXNOYU4oXzB4MjkwNWFjW18weDI0NWJmNCgweDFmNCldKSlfMHgyOTA1YWNbJ25hbiddPSEweDAsZGVsZXRlIF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXTtlbHNlIHN3aXRjaChfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV0pe2Nhc2UgTnVtYmVyW18weDI0NWJmNCgweDI3OSldOl8weDI5MDVhY1tfMHgyNDViZjQoMHgyMjMpXT0hMHgwLGRlbGV0ZSBfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV07YnJlYWs7Y2FzZSBOdW1iZXJbXzB4MjQ1YmY0KDB4MjYxKV06XzB4MjkwNWFjW18weDI0NWJmNCgweDIxNSldPSEweDAsZGVsZXRlIF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXTticmVhaztjYXNlIDB4MDp0aGlzWydfaXNOZWdhdGl2ZVplcm8nXShfMHgyOTA1YWNbJ3ZhbHVlJ10pJiYoXzB4MjkwNWFjWyduZWdhdGl2ZVplcm8nXT0hMHgwKTticmVhazt9fWVsc2UgXzB4MjkwNWFjWyd0eXBlJ109PT0nZnVuY3Rpb24nJiZ0eXBlb2YgXzB4OTBlMzdkW18weDI0NWJmNCgweDIxYildPT1fMHgyNDViZjQoMHgyODIpJiZfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjFiKV0mJl8weDI5MDVhY1snbmFtZSddJiZfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjFiKV0hPT1fMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjFiKV0mJihfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjY3KV09XzB4OTBlMzdkWyduYW1lJ10pO31bXzB4MWFlOWRlKDB4MjNmKV0oXzB4MzYwM2Y5KXtyZXR1cm4gMHgxL18weDM2MDNmOT09PU51bWJlclsnTkVHQVRJVkVfSU5GSU5JVFknXTt9W18weDFhZTlkZSgweDIyNildKF8weDkxMTM1Zil7dmFyIF8weDI3YmNjOT1fMHgxYWU5ZGU7IV8weDkxMTM1ZlsncHJvcHMnXXx8IV8weDkxMTM1ZlsncHJvcHMnXVtfMHgyN2JjYzkoMHgyNGQpXXx8XzB4OTExMzVmW18weDI3YmNjOSgweDIyOCldPT09J2FycmF5J3x8XzB4OTExMzVmW18weDI3YmNjOSgweDIyOCldPT09J01hcCd8fF8weDkxMTM1ZltfMHgyN2JjYzkoMHgyMjgpXT09PV8weDI3YmNjOSgweDFmOCl8fF8weDkxMTM1ZlsncHJvcHMnXVtfMHgyN2JjYzkoMHgxYjIpXShmdW5jdGlvbihfMHgyYTJjZGIsXzB4NDllZTRiKXt2YXIgXzB4NWU3NmIzPV8weDI3YmNjOSxfMHgxOTA2M2U9XzB4MmEyY2RiW18weDVlNzZiMygweDIxYildW18weDVlNzZiMygweDFhMildKCksXzB4NDQ2MDAzPV8weDQ5ZWU0YltfMHg1ZTc2YjMoMHgyMWIpXVtfMHg1ZTc2YjMoMHgxYTIpXSgpO3JldHVybiBfMHgxOTA2M2U8XzB4NDQ2MDAzPy0weDE6XzB4MTkwNjNlPl8weDQ0NjAwMz8weDE6MHgwO30pO31bJ19hZGRGdW5jdGlvbnNOb2RlJ10oXzB4MmU4ZTRkLF8weDE5OWMzMCl7dmFyIF8weDNkM2FhMD1fMHgxYWU5ZGU7aWYoIShfMHgxOTljMzBbXzB4M2QzYWEwKDB4MWI2KV18fCFfMHgyZThlNGRbXzB4M2QzYWEwKDB4MWU5KV18fCFfMHgyZThlNGRbJ3Byb3BzJ11bJ2xlbmd0aCddKSl7Zm9yKHZhciBfMHg0MzUxMzM9W10sXzB4MjUzMWU3PVtdLF8weDRiNWE2MT0weDAsXzB4MzZkMjhiPV8weDJlOGU0ZFtfMHgzZDNhYTAoMHgxZTkpXVsnbGVuZ3RoJ107XzB4NGI1YTYxPF8weDM2ZDI4YjtfMHg0YjVhNjErKyl7dmFyIF8weDEwZDc5NT1fMHgyZThlNGRbJ3Byb3BzJ11bXzB4NGI1YTYxXTtfMHgxMGQ3OTVbXzB4M2QzYWEwKDB4MjI4KV09PT1fMHgzZDNhYTAoMHgyNTQpP18weDQzNTEzM1tfMHgzZDNhYTAoMHgyMDQpXShfMHgxMGQ3OTUpOl8weDI1MzFlN1tfMHgzZDNhYTAoMHgyMDQpXShfMHgxMGQ3OTUpO31pZighKCFfMHgyNTMxZTdbXzB4M2QzYWEwKDB4MjRkKV18fF8weDQzNTEzM1snbGVuZ3RoJ108PTB4MSkpe18weDJlOGU0ZFsncHJvcHMnXT1fMHgyNTMxZTc7dmFyIF8weDE0ZGVjND17J2Z1bmN0aW9uc05vZGUnOiEweDAsJ3Byb3BzJzpfMHg0MzUxMzN9O3RoaXNbXzB4M2QzYWEwKDB4MjhlKV0oXzB4MTRkZWM0LF8weDE5OWMzMCksdGhpc1tfMHgzZDNhYTAoMHgyMGEpXShfMHgxNGRlYzQsXzB4MTk5YzMwKSx0aGlzWydfc2V0Tm9kZUV4cGFuZGFibGVTdGF0ZSddKF8weDE0ZGVjNCksdGhpc1snX3NldE5vZGVQZXJtaXNzaW9ucyddKF8weDE0ZGVjNCxfMHgxOTljMzApLF8weDE0ZGVjNFsnaWQnXSs9J1xcXFx4MjBmJyxfMHgyZThlNGRbJ3Byb3BzJ11bJ3Vuc2hpZnQnXShfMHgxNGRlYzQpO319fVsnX2FkZExvYWROb2RlJ10oXzB4NGE4ZjdhLF8weDM0NmRiMCl7fVsnX3NldE5vZGVFeHBhbmRhYmxlU3RhdGUnXShfMHgxYzZmZDEpe31bXzB4MWFlOWRlKDB4MWRlKV0oXzB4MTIxMWU5KXt2YXIgXzB4MzkwM2I1PV8weDFhZTlkZTtyZXR1cm4gQXJyYXlbXzB4MzkwM2I1KDB4MjA4KV0oXzB4MTIxMWU5KXx8dHlwZW9mIF8weDEyMTFlOT09J29iamVjdCcmJnRoaXNbXzB4MzkwM2I1KDB4MjFhKV0oXzB4MTIxMWU5KT09PSdbb2JqZWN0XFxcXHgyMEFycmF5XSc7fVtfMHgxYWU5ZGUoMHgxZDApXShfMHgzMTFlOGMsXzB4NjlmOGYwKXt9W18weDFhZTlkZSgweDI1MyldKF8weDFmYjVhZCl7dmFyIF8weDRlNTE2YT1fMHgxYWU5ZGU7ZGVsZXRlIF8weDFmYjVhZFtfMHg0ZTUxNmEoMHgxZmMpXSxkZWxldGUgXzB4MWZiNWFkWydfaGFzU2V0T25JdHNQYXRoJ10sZGVsZXRlIF8weDFmYjVhZFsnX2hhc01hcE9uSXRzUGF0aCddO31bJ19zZXROb2RlRXhwcmVzc2lvblBhdGgnXShfMHgxZjQzZjAsXzB4NWRjMThjKXt9fWxldCBfMHg0NGUwOTc9bmV3IF8weDM5YWVlMygpLF8weDU1NTkzMz17J3Byb3BzJzoweDY0LCdlbGVtZW50cyc6MHg2NCwnc3RyTGVuZ3RoJzoweDQwMCoweDMyLCd0b3RhbFN0ckxlbmd0aCc6MHg0MDAqMHgzMiwnYXV0b0V4cGFuZExpbWl0JzoweDEzODgsJ2F1dG9FeHBhbmRNYXhEZXB0aCc6MHhhfSxfMHg1ZWY0YmI9eydwcm9wcyc6MHg1LCdlbGVtZW50cyc6MHg1LCdzdHJMZW5ndGgnOjB4MTAwLCd0b3RhbFN0ckxlbmd0aCc6MHgxMDAqMHgzLCdhdXRvRXhwYW5kTGltaXQnOjB4MWUsJ2F1dG9FeHBhbmRNYXhEZXB0aCc6MHgyfTtmdW5jdGlvbiBfMHg0N2FlZTAoXzB4NWY1MTliLF8weDM2ZTFjMixfMHgzOGE1YjIsXzB4MjQ1YTMzLF8weDMzODQyZSxfMHg0N2Y5OWQpe3ZhciBfMHgxYjZkYzk9XzB4MWFlOWRlO2xldCBfMHg0ZTkwOTcsXzB4MmQ1ZjA4O3RyeXtfMHgyZDVmMDg9XzB4NWY0MjU0KCksXzB4NGU5MDk3PV8weDM5YmUwMVtfMHgzNmUxYzJdLCFfMHg0ZTkwOTd8fF8weDJkNWYwOC1fMHg0ZTkwOTdbJ3RzJ10+MHgxZjQmJl8weDRlOTA5N1tfMHgxYjZkYzkoMHgxZWIpXSYmXzB4NGU5MDk3W18weDFiNmRjOSgweDIwOSldL18weDRlOTA5N1tfMHgxYjZkYzkoMHgxZWIpXTwweDY0PyhfMHgzOWJlMDFbXzB4MzZlMWMyXT1fMHg0ZTkwOTc9eydjb3VudCc6MHgwLCd0aW1lJzoweDAsJ3RzJzpfMHgyZDVmMDh9LF8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXT17fSk6XzB4MmQ1ZjA4LV8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsndHMnXT4weDMyJiZfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ2NvdW50J10mJl8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsndGltZSddL18weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVtfMHgxYjZkYzkoMHgxZWIpXTwweDY0JiYoXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldPXt9KTtsZXQgXzB4MzIxYzVlPVtdLF8weDEwMzg3MT1fMHg0ZTkwOTdbJ3JlZHVjZUxpbWl0cyddfHxfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ3JlZHVjZUxpbWl0cyddP18weDVlZjRiYjpfMHg1NTU5MzMsXzB4MWU0YWVjPV8weDExZjAwYj0+e3ZhciBfMHgxZDkzYzM9XzB4MWI2ZGM5O2xldCBfMHgzOTcwYzU9e307cmV0dXJuIF8weDM5NzBjNVsncHJvcHMnXT1fMHgxMWYwMGJbXzB4MWQ5M2MzKDB4MWU5KV0sXzB4Mzk3MGM1W18weDFkOTNjMygweDIyZCldPV8weDExZjAwYltfMHgxZDkzYzMoMHgyMmQpXSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MjY4KV09XzB4MTFmMDBiW18weDFkOTNjMygweDI2OCldLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxYWEpXT1fMHgxMWYwMGJbXzB4MWQ5M2MzKDB4MWFhKV0sXzB4Mzk3MGM1W18weDFkOTNjMygweDI0MSldPV8weDExZjAwYlsnYXV0b0V4cGFuZExpbWl0J10sXzB4Mzk3MGM1W18weDFkOTNjMygweDFmMSldPV8weDExZjAwYlsnYXV0b0V4cGFuZE1heERlcHRoJ10sXzB4Mzk3MGM1W18weDFkOTNjMygweDFkNildPSEweDEsXzB4Mzk3MGM1Wydub0Z1bmN0aW9ucyddPSFfMHg1YmUwNzIsXzB4Mzk3MGM1W18weDFkOTNjMygweDFkMSldPTB4MSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWQzKV09MHgwLF8weDM5NzBjNVsnZXhwSWQnXT1fMHgxZDkzYzMoMHgyNTUpLF8weDM5NzBjNVsncm9vdEV4cHJlc3Npb24nXT1fMHgxZDkzYzMoMHgxYmEpLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyMmMpXT0hMHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyMmUpXT1bXSxfMHgzOTcwYzVbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J109MHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxYmUpXT0hMHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxZTMpXT0weDAsXzB4Mzk3MGM1W18weDFkOTNjMygweDI4YyldPXsnY3VycmVudCc6dm9pZCAweDAsJ3BhcmVudCc6dm9pZCAweDAsJ2luZGV4JzoweDB9LF8weDM5NzBjNTt9O2Zvcih2YXIgXzB4NGUwNjZlPTB4MDtfMHg0ZTA2NmU8XzB4MzM4NDJlW18weDFiNmRjOSgweDI0ZCldO18weDRlMDY2ZSsrKV8weDMyMWM1ZVtfMHgxYjZkYzkoMHgyMDQpXShfMHg0NGUwOTdbXzB4MWI2ZGM5KDB4MjNkKV0oeyd0aW1lTm9kZSc6XzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MjA5KXx8dm9pZCAweDB9LF8weDMzODQyZVtfMHg0ZTA2NmVdLF8weDFlNGFlYyhfMHgxMDM4NzEpLHt9KSk7aWYoXzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MWEzKXx8XzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MjJhKSl7bGV0IF8weDQyMjNhMD1FcnJvclsnc3RhY2tUcmFjZUxpbWl0J107dHJ5e0Vycm9yW18weDFiNmRjOSgweDI3OCldPTB4MS8weDAsXzB4MzIxYzVlW18weDFiNmRjOSgweDIwNCldKF8weDQ0ZTA5N1tfMHgxYjZkYzkoMHgyM2QpXSh7J3N0YWNrTm9kZSc6ITB4MH0sbmV3IEVycm9yKClbXzB4MWI2ZGM5KDB4MjZiKV0sXzB4MWU0YWVjKF8weDEwMzg3MSkseydzdHJMZW5ndGgnOjB4MS8weDB9KSk7fWZpbmFsbHl7RXJyb3JbXzB4MWI2ZGM5KDB4Mjc4KV09XzB4NDIyM2EwO319cmV0dXJueydtZXRob2QnOl8weDFiNmRjOSgweDIzMCksJ3ZlcnNpb24nOl8weDVhNTc0NSwnYXJncyc6W3sndHMnOl8weDM4YTViMiwnc2Vzc2lvbic6XzB4MjQ1YTMzLCdhcmdzJzpfMHgzMjFjNWUsJ2lkJzpfMHgzNmUxYzIsJ2NvbnRleHQnOl8weDQ3Zjk5ZH1dfTt9Y2F0Y2goXzB4NWIyOGVlKXtyZXR1cm57J21ldGhvZCc6XzB4MWI2ZGM5KDB4MjMwKSwndmVyc2lvbic6XzB4NWE1NzQ1LCdhcmdzJzpbeyd0cyc6XzB4MzhhNWIyLCdzZXNzaW9uJzpfMHgyNDVhMzMsJ2FyZ3MnOlt7J3R5cGUnOid1bmtub3duJywnZXJyb3InOl8weDViMjhlZSYmXzB4NWIyOGVlW18weDFiNmRjOSgweDIyMildfV0sJ2lkJzpfMHgzNmUxYzIsJ2NvbnRleHQnOl8weDQ3Zjk5ZH1dfTt9ZmluYWxseXt0cnl7aWYoXzB4NGU5MDk3JiZfMHgyZDVmMDgpe2xldCBfMHgxZDY1YzY9XzB4NWY0MjU0KCk7XzB4NGU5MDk3Wydjb3VudCddKyssXzB4NGU5MDk3W18weDFiNmRjOSgweDIwOSldKz1fMHgzNDkxM2IoXzB4MmQ1ZjA4LF8weDFkNjVjNiksXzB4NGU5MDk3Wyd0cyddPV8weDFkNjVjNixfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ2NvdW50J10rKyxfMHgzOWJlMDFbJ2hpdHMnXVtfMHgxYjZkYzkoMHgyMDkpXSs9XzB4MzQ5MTNiKF8weDJkNWYwOCxfMHgxZDY1YzYpLF8weDM5YmUwMVsnaGl0cyddWyd0cyddPV8weDFkNjVjNiwoXzB4NGU5MDk3W18weDFiNmRjOSgweDFlYildPjB4MzJ8fF8weDRlOTA5N1tfMHgxYjZkYzkoMHgyMDkpXT4weDY0KSYmKF8weDRlOTA5N1sncmVkdWNlTGltaXRzJ109ITB4MCksKF8weDM5YmUwMVsnaGl0cyddWydjb3VudCddPjB4M2U4fHxfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bXzB4MWI2ZGM5KDB4MjA5KV0+MHgxMmMpJiYoXzB4MzliZTAxWydoaXRzJ11bXzB4MWI2ZGM5KDB4MjNhKV09ITB4MCk7fX1jYXRjaHt9fX1yZXR1cm4gXzB4NDdhZWUwO30oKF8weDJhYmIwMCxfMHg3NDEzMjYsXzB4MjY4ODE2LF8weDgzMTY5NCxfMHgxNzIyYTEsXzB4MmRlMTlmLF8weDFlMzAyYSxfMHgzNjNiOGQsXzB4YTBhMzAzLF8weDVlNTVmMSxfMHgzMDZhYjMpPT57dmFyIF8weDMxMzQ0ND1fMHhmZTVlNDQ7aWYoXzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldKXJldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV07aWYoIUgoXzB4MmFiYjAwLF8weDM2M2I4ZCxfMHgxNzIyYTEpKXJldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV09eydjb25zb2xlTG9nJzooKT0+e30sJ2NvbnNvbGVUcmFjZSc6KCk9Pnt9LCdjb25zb2xlVGltZSc6KCk9Pnt9LCdjb25zb2xlVGltZUVuZCc6KCk9Pnt9LCdhdXRvTG9nJzooKT0+e30sJ2F1dG9Mb2dNYW55JzooKT0+e30sJ2F1dG9UcmFjZU1hbnknOigpPT57fSwnY292ZXJhZ2UnOigpPT57fSwnYXV0b1RyYWNlJzooKT0+e30sJ2F1dG9UaW1lJzooKT0+e30sJ2F1dG9UaW1lRW5kJzooKT0+e319LF8weDJhYmIwMFtfMHgzMTM0NDQoMHgyNGMpXTtsZXQgXzB4M2I3ZDhkPUIoXzB4MmFiYjAwKSxfMHg0ZDlmNDc9XzB4M2I3ZDhkW18weDMxMzQ0NCgweDFiMSldLF8weGZjNmY2Yz1fMHgzYjdkOGRbXzB4MzEzNDQ0KDB4MjEyKV0sXzB4MTc1ZjJiPV8weDNiN2Q4ZFtfMHgzMTM0NDQoMHgyNDkpXSxfMHgxMjg3MjU9eydoaXRzJzp7fSwndHMnOnt9fSxfMHg0MmQ2Y2U9WChfMHgyYWJiMDAsXzB4YTBhMzAzLF8weDEyODcyNSxfMHgyZGUxOWYpLF8weDU0MWI0ZT1fMHgxODdjOGQ9PntfMHgxMjg3MjVbJ3RzJ11bXzB4MTg3YzhkXT1fMHhmYzZmNmMoKTt9LF8weDQ5ZWEwOD0oXzB4Mjk2NWY3LF8weDU0ZTBiNCk9PntsZXQgXzB4YTNhN2ExPV8weDEyODcyNVsndHMnXVtfMHg1NGUwYjRdO2lmKGRlbGV0ZSBfMHgxMjg3MjVbJ3RzJ11bXzB4NTRlMGI0XSxfMHhhM2E3YTEpe2xldCBfMHgzNzk5YTU9XzB4NGQ5ZjQ3KF8weGEzYTdhMSxfMHhmYzZmNmMoKSk7XzB4NDhhODk2KF8weDQyZDZjZSgndGltZScsXzB4Mjk2NWY3LF8weDE3NWYyYigpLF8weDFjOTZjYSxbXzB4Mzc5OWE1XSxfMHg1NGUwYjQpKTt9fSxfMHgxY2E5NWY9XzB4NTU2ZTJlPT57dmFyIF8weDYzNGM2ZD1fMHgzMTM0NDQsXzB4M2E3OGY5O3JldHVybiBfMHgxNzIyYTE9PT1fMHg2MzRjNmQoMHgyMzcpJiZfMHgyYWJiMDBbXzB4NjM0YzZkKDB4MWE3KV0mJigoXzB4M2E3OGY5PV8weDU1NmUyZT09bnVsbD92b2lkIDB4MDpfMHg1NTZlMmVbXzB4NjM0YzZkKDB4MWY2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDNhNzhmOVtfMHg2MzRjNmQoMHgyNGQpXSkmJihfMHg1NTZlMmVbJ2FyZ3MnXVsweDBdW18weDYzNGM2ZCgweDFhNyldPV8weDJhYmIwMFtfMHg2MzRjNmQoMHgxYTcpXSksXzB4NTU2ZTJlO307XzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldPXsnY29uc29sZUxvZyc6KF8weDFkOTA0NCxfMHgzZGEzYWIpPT57dmFyIF8weDU3OGExZT1fMHgzMTM0NDQ7XzB4MmFiYjAwW18weDU3OGExZSgweDIyNyldWydsb2cnXVtfMHg1NzhhMWUoMHgyMWIpXSE9PV8weDU3OGExZSgweDI3ZCkmJl8weDQ4YTg5NihfMHg0MmQ2Y2UoJ2xvZycsXzB4MWQ5MDQ0LF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHgzZGEzYWIpKTt9LCdjb25zb2xlVHJhY2UnOihfMHgzODQ2OGQsXzB4NTBiNTQ4KT0+e3ZhciBfMHgxNDQxMjM9XzB4MzEzNDQ0LF8weDJjMGEzYixfMHg0MWJkMzA7XzB4MmFiYjAwWydjb25zb2xlJ11bXzB4MTQ0MTIzKDB4MjMwKV1bXzB4MTQ0MTIzKDB4MjFiKV0hPT1fMHgxNDQxMjMoMHgyN2EpJiYoKF8weDQxYmQzMD0oXzB4MmMwYTNiPV8weDJhYmIwMFtfMHgxNDQxMjMoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4MmMwYTNiW18weDE0NDEyMygweDI2ZildKSE9bnVsbCYmXzB4NDFiZDMwW18weDE0NDEyMygweDI4YyldJiYoXzB4MmFiYjAwW18weDE0NDEyMygweDFlMSldPSEweDApLF8weDQ4YTg5NihfMHgxY2E5NWYoXzB4NDJkNmNlKCd0cmFjZScsXzB4Mzg0NjhkLF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHg1MGI1NDgpKSkpO30sJ2NvbnNvbGVFcnJvcic6KF8weGU4M2MwMixfMHg1MjgyNmUpPT57dmFyIF8weDE0ZGNjYT1fMHgzMTM0NDQ7XzB4MmFiYjAwW18weDE0ZGNjYSgweDFlMSldPSEweDAsXzB4NDhhODk2KF8weDFjYTk1ZihfMHg0MmQ2Y2UoXzB4MTRkY2NhKDB4MjJhKSxfMHhlODNjMDIsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDUyODI2ZSkpKTt9LCdjb25zb2xlVGltZSc6XzB4NWNhZjNmPT57XzB4NTQxYjRlKF8weDVjYWYzZik7fSwnY29uc29sZVRpbWVFbmQnOihfMHgyN2Q4YzUsXzB4NDE3NDc0KT0+e18weDQ5ZWEwOChfMHg0MTc0NzQsXzB4MjdkOGM1KTt9LCdhdXRvTG9nJzooXzB4ODVjNmRmLF8weDdmMzlhMik9Pnt2YXIgXzB4NDBiYjQ5PV8weDMxMzQ0NDtfMHg0OGE4OTYoXzB4NDJkNmNlKF8weDQwYmI0OSgweDIzMCksXzB4N2YzOWEyLF8weDE3NWYyYigpLF8weDFjOTZjYSxbXzB4ODVjNmRmXSkpO30sJ2F1dG9Mb2dNYW55JzooXzB4NTE1OGMwLF8weDdiOTlkMik9PntfMHg0OGE4OTYoXzB4NDJkNmNlKCdsb2cnLF8weDUxNThjMCxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsXzB4N2I5OWQyKSk7fSwnYXV0b1RyYWNlJzooXzB4MWJjMTFkLF8weDU2NWNjOSk9PntfMHg0OGE4OTYoXzB4MWNhOTVmKF8weDQyZDZjZSgndHJhY2UnLF8weDU2NWNjOSxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsW18weDFiYzExZF0pKSk7fSwnYXV0b1RyYWNlTWFueSc6KF8weDM1MjM0NSxfMHg0YzdmOTUpPT57dmFyIF8weDM3OGUxMD1fMHgzMTM0NDQ7XzB4NDhhODk2KF8weDFjYTk1ZihfMHg0MmQ2Y2UoXzB4Mzc4ZTEwKDB4MWEzKSxfMHgzNTIzNDUsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDRjN2Y5NSkpKTt9LCdhdXRvVGltZSc6KF8weDUzNTlmYSxfMHgyNTk5MGEsXzB4MzIzZDY4KT0+e18weDU0MWI0ZShfMHgzMjNkNjgpO30sJ2F1dG9UaW1lRW5kJzooXzB4NWJlOWJjLF8weDVkYmUwYSxfMHhiYTQ0NWYpPT57XzB4NDllYTA4KF8weDVkYmUwYSxfMHhiYTQ0NWYpO30sJ2NvdmVyYWdlJzpfMHgyN2JlNDE9Pnt2YXIgXzB4MjBhZmZlPV8weDMxMzQ0NDtfMHg0OGE4OTYoeydtZXRob2QnOl8weDIwYWZmZSgweDFkMiksJ3ZlcnNpb24nOl8weDJkZTE5ZiwnYXJncyc6W3snaWQnOl8weDI3YmU0MX1dfSk7fX07bGV0IF8weDQ4YTg5Nj1xKF8weDJhYmIwMCxfMHg3NDEzMjYsXzB4MjY4ODE2LF8weDgzMTY5NCxfMHgxNzIyYTEsXzB4NWU1NWYxLF8weDMwNmFiMyksXzB4MWM5NmNhPV8weDJhYmIwMFsnX2NvbnNvbGVfbmluamFfc2Vzc2lvbiddO3JldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV07fSkoZ2xvYmFsVGhpcywnMTI3LjAuMC4xJywnNjA1OTEnLF8weGZlNWU0NCgweDFjZSksJ3dlYnBhY2snLF8weGZlNWU0NCgweDI2YyksXzB4ZmU1ZTQ0KDB4Mjg2KSxfMHhmZTVlNDQoMHgyMWMpLF8weGZlNWU0NCgweDFjZCksXzB4ZmU1ZTQ0KDB4Mjc1KSxfMHhmZTVlNDQoMHgyNDQpKTtcIik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSB9XHJcbjsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fb28oaSwgLi4udikgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlTG9nKGksIHYpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb19vbzsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fdHIoaSwgLi4udikgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlVHJhY2UoaSwgdik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX3RyOyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb190eChpLCAuLi52KSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVFcnJvcihpLCB2KTtcclxufVxyXG5jYXRjaCAoZSkgeyB9IHJldHVybiB2OyB9XHJcbjtcclxub29fdHg7IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbmZ1bmN0aW9uIG9vX3RzKHYpIHsgdHJ5IHtcclxuICAgIG9vX2NtKCkuY29uc29sZVRpbWUodik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX3RzOyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb190ZSh2LCBpKSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVUaW1lRW5kKHYsIGkpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb190ZTsgLyplc2xpbnQgdW5pY29ybi9uby1hYnVzaXZlLWVzbGludC1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvZGlzYWJsZS1lbmFibGUtcGFpcjosZXNsaW50LWNvbW1lbnRzL25vLXVubGltaXRlZC1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvbm8tYWdncmVnYXRpbmctZW5hYmxlOixlc2xpbnQtY29tbWVudHMvbm8tZHVwbGljYXRlLWRpc2FibGU6LGVzbGludC1jb21tZW50cy9uby11bnVzZWQtZGlzYWJsZTosZXNsaW50LWNvbW1lbnRzL25vLXVudXNlZC1lbmFibGU6LCovXHJcbiIsImltcG9ydCB7IEJBQ0tHUk9VTkRfQVNTRVRfTElTVCwgY3JlYXRlQmFja2dyb3VuZCwgbG9hZER5bmFtaWNCZ0Fzc2V0cywgfSBmcm9tIFwiQGNvbXBvc2l0aW9ucy9iYWNrZ3JvdW5kXCI7XHJcbmV4cG9ydCBjbGFzcyBCYWNrZ3JvdW5kQ29tcG9uZW50IHtcclxuICAgIHdpZHRoO1xyXG4gICAgaGVpZ2h0O1xyXG4gICAgY29udGV4dDtcclxuICAgIGxldmVsTnVtYmVyO1xyXG4gICAgYmFja2dyb3VuZDtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIHdpZHRoLCBoZWlnaHQsIGxldmVsTnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XHJcbiAgICAgICAgdGhpcy5sZXZlbE51bWJlciA9IGxldmVsTnVtYmVyO1xyXG4gICAgICAgIHRoaXMuc2V0dXBCZygpO1xyXG4gICAgfVxyXG4gICAgc2V0dXBCZyA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zdCB7IEJHX0dST1VQX0lNR1MsIGRyYXcgfSA9IGxvYWREeW5hbWljQmdBc3NldHModGhpcy5sZXZlbE51bWJlciwgQkFDS0dST1VORF9BU1NFVF9MSVNUKTtcclxuICAgICAgICBjb25zdCBiYWNrZ3JvdW5kID0gYXdhaXQgY3JlYXRlQmFja2dyb3VuZCh0aGlzLmNvbnRleHQsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCBCR19HUk9VUF9JTUdTLCBkcmF3KTtcclxuICAgICAgICByZXR1cm4geyAuLi5iYWNrZ3JvdW5kIH07XHJcbiAgICB9O1xyXG59XHJcbiIsImltcG9ydCB7IGlzQ2xpY2tJbnNpZGVCdXR0b24sIGxvYWRJbWFnZXMgfSBmcm9tIFwiQGNvbW1vblwiO1xyXG5pbXBvcnQgeyBDQU5DRUxfQlROX0lNRyB9IGZyb20gXCJAY29uc3RhbnRzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhbmNlbEJ1dHRvbiB7XHJcbiAgICBwb3NYO1xyXG4gICAgcG9zWTtcclxuICAgIGNvbnRleHQ7XHJcbiAgICBjYW52YXM7XHJcbiAgICBpbWFnZXNMb2FkZWQgPSBmYWxzZTtcclxuICAgIGNhbmNlbF9idXR0b25faW1hZ2U7XHJcbiAgICBidG5TaXplQW5pbWF0aW9uO1xyXG4gICAgYnRuT3JpZ2luYWxTaXplO1xyXG4gICAgb3JpZ25hbFBvcztcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIGNhbnZhcykge1xyXG4gICAgICAgIHRoaXMucG9zWCA9IGNhbnZhcy53aWR0aCAqIDAuMSArIChjYW52YXMud2lkdGggKiAwLjE1KSAvIDI7XHJcbiAgICAgICAgdGhpcy5wb3NZID0gY2FudmFzLmhlaWdodCAqIDAuMjtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIGxvYWRJbWFnZXMoeyBjYW5jZWxfYnV0dG9uX2ltYWdlOiBDQU5DRUxfQlROX0lNRyB9LCAoaW1hZ2VzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2FuY2VsX2J1dHRvbl9pbWFnZSA9IGltYWdlc1tcImNhbmNlbF9idXR0b25faW1hZ2VcIl07XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSAwLjE1O1xyXG4gICAgICAgIHRoaXMuYnRuT3JpZ2luYWxTaXplID0gdGhpcy5idG5TaXplQW5pbWF0aW9uO1xyXG4gICAgICAgIHRoaXMub3JpZ25hbFBvcyA9IHsgeDogdGhpcy5wb3NYLCB5OiB0aGlzLnBvc1kgfTtcclxuICAgIH1cclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW1hZ2VzTG9hZGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5jYW5jZWxfYnV0dG9uX2ltYWdlLCB0aGlzLnBvc1gsIHRoaXMucG9zWSwgdGhpcy5jYW52YXMud2lkdGggKiB0aGlzLmJ0blNpemVBbmltYXRpb24sIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5TaXplQW5pbWF0aW9uKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA8IDAuMTUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA9IHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiArIDAuMDAwNTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucG9zWCA9IHRoaXMub3JpZ25hbFBvcy54O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb3NZID0gdGhpcy5vcmlnbmFsUG9zLnk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvbkNsaWNrKHhDbGljaywgeUNsaWNrKSB7XHJcbiAgICAgICAgY29uc3QgaXNJbnNpZGUgPSBpc0NsaWNrSW5zaWRlQnV0dG9uKHhDbGljaywgeUNsaWNrLCB0aGlzLnBvc1gsIHRoaXMucG9zWSwgdGhpcy5jYW52YXMud2lkdGggKiB0aGlzLmJ0bk9yaWdpbmFsU2l6ZSwgdGhpcy5jYW52YXMud2lkdGggKiB0aGlzLmJ0bk9yaWdpbmFsU2l6ZSwgdHJ1ZSAvLyBCdXR0b24gaXMgY2lyY3VsYXJcclxuICAgICAgICApO1xyXG4gICAgICAgIGlmIChpc0luc2lkZSkge1xyXG4gICAgICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSAwLjE0O1xyXG4gICAgICAgICAgICB0aGlzLnBvc1ggPSB0aGlzLnBvc1ggKyAxO1xyXG4gICAgICAgICAgICB0aGlzLnBvc1kgPSB0aGlzLnBvc1kgKyAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaXNJbnNpZGU7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgaXNDbGlja0luc2lkZUJ1dHRvbiwgbG9hZEltYWdlcyB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IE1BUF9CVE5fSU1HIH0gZnJvbSBcIkBjb25zdGFudHNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2xvc2VCdXR0b24ge1xyXG4gICAgcG9zWDtcclxuICAgIHBvc1k7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgY2FudmFzO1xyXG4gICAgaW1hZ2VzTG9hZGVkID0gZmFsc2U7XHJcbiAgICBjbG9zZV9idXR0b25faW1hZ2U7XHJcbiAgICBidG5TaXplQW5pbWF0aW9uO1xyXG4gICAgYnRuT3JpZ2luYWxTaXplO1xyXG4gICAgb3JpZ25hbFBvcztcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIGNhbnZhcywgcG9zWCwgcG9zWSkge1xyXG4gICAgICAgIHRoaXMucG9zWCA9IHBvc1g7XHJcbiAgICAgICAgdGhpcy5wb3NZID0gcG9zWTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIGxvYWRJbWFnZXMoeyBjbG9zZV9idXR0b25faW1hZ2U6IE1BUF9CVE5fSU1HIH0sIChpbWFnZXMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZV9idXR0b25faW1hZ2UgPSBpbWFnZXNbXCJjbG9zZV9idXR0b25faW1hZ2VcIl07XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSAwLjE5O1xyXG4gICAgICAgIHRoaXMuYnRuT3JpZ2luYWxTaXplID0gdGhpcy5idG5TaXplQW5pbWF0aW9uO1xyXG4gICAgICAgIHRoaXMub3JpZ25hbFBvcyA9IHsgeDogcG9zWCwgeTogcG9zWSB9O1xyXG4gICAgfVxyXG4gICAgZHJhdygpIHtcclxuICAgICAgICBpZiAodGhpcy5pbWFnZXNMb2FkZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmNsb3NlX2J1dHRvbl9pbWFnZSwgdGhpcy5wb3NYLCB0aGlzLnBvc1ksIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5TaXplQW5pbWF0aW9uLCB0aGlzLmNhbnZhcy53aWR0aCAqIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJ0blNpemVBbmltYXRpb24gPCAwLjE5KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSB0aGlzLmJ0blNpemVBbmltYXRpb24gKyAwLjAwMDU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBvc1ggPSB0aGlzLm9yaWduYWxQb3MueDtcclxuICAgICAgICAgICAgICAgIHRoaXMucG9zWSA9IHRoaXMub3JpZ25hbFBvcy55O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgb25DbGljayh4Q2xpY2ssIHlDbGljaykge1xyXG4gICAgICAgIGNvbnN0IGlzSW5zaWRlID0gaXNDbGlja0luc2lkZUJ1dHRvbih4Q2xpY2ssIHlDbGljaywgdGhpcy5wb3NYLCB0aGlzLnBvc1ksIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5PcmlnaW5hbFNpemUsIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5PcmlnaW5hbFNpemUsIHRydWUgLy8gQnV0dG9uIGlzIGNpcmN1bGFyXHJcbiAgICAgICAgKTtcclxuICAgICAgICBpZiAoaXNJbnNpZGUpIHtcclxuICAgICAgICAgICAgdGhpcy5idG5TaXplQW5pbWF0aW9uID0gMC4xODtcclxuICAgICAgICAgICAgdGhpcy5wb3NYID0gdGhpcy5wb3NYICsgMTtcclxuICAgICAgICAgICAgdGhpcy5wb3NZID0gdGhpcy5wb3NZICsgMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGlzSW5zaWRlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IERlYnVnZ2VyLCBmb250LCB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IFNQRUNJQUxfTEVWRUxTLCB9IGZyb20gXCJAY29uc3RhbnRzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExldmVsQmxvb25CdXR0b24ge1xyXG4gICAgY29udGV4dDtcclxuICAgIGxldmVsRGF0YTtcclxuICAgIHBvc1g7XHJcbiAgICBwb3NZO1xyXG4gICAgb3JpZ2luYWxQb3NYO1xyXG4gICAgb3JpZ2luYWxQb3NZO1xyXG4gICAgc2l6ZTtcclxuICAgIHJhZGl1c09mZlNldDtcclxuICAgIGJsb29uU2l6ZTtcclxuICAgIGJ0blNpemU7XHJcbiAgICBsb2NrU2l6ZTtcclxuICAgIHRleHRGb250U2l6ZTtcclxuICAgIGNvbnN0cnVjdG9yKGNhbnZhcywgY29udGV4dCwgbGV2ZWxEYXRhKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcclxuICAgICAgICB0aGlzLmxldmVsRGF0YSA9IGxldmVsRGF0YTtcclxuICAgICAgICB0aGlzLnBvc1ggPSB0aGlzLmxldmVsRGF0YS54O1xyXG4gICAgICAgIHRoaXMucG9zWSA9IHRoaXMubGV2ZWxEYXRhLnk7XHJcbiAgICAgICAgdGhpcy5vcmlnaW5hbFBvc1ggPSB0aGlzLnBvc1g7XHJcbiAgICAgICAgdGhpcy5vcmlnaW5hbFBvc1kgPSB0aGlzLnBvc1k7XHJcbiAgICAgICAgdGhpcy5zaXplID0gY2FudmFzLmhlaWdodCAvIDU7XHJcbiAgICAgICAgdGhpcy5yYWRpdXNPZmZTZXQgPSBjYW52YXMuaGVpZ2h0IC8gMjA7XHJcbiAgICAgICAgdGhpcy5ibG9vblNpemUgPSB0aGlzLmlzTGV2ZWxTcGVjaWFsKHRoaXMuc2l6ZSk7XHJcbiAgICAgICAgdGhpcy5idG5TaXplID0gdGhpcy5ibG9vblNpemU7XHJcbiAgICAgICAgdGhpcy5sb2NrU2l6ZSA9IGNhbnZhcy5oZWlnaHQgLyAxMztcclxuICAgICAgICB0aGlzLnRleHRGb250U2l6ZSA9ICh0aGlzLnNpemUpIC8gNjtcclxuICAgIH1cclxuICAgIGlzU3BlY2lhbExldmVsKGluZGV4KSB7XHJcbiAgICAgICAgcmV0dXJuIFNQRUNJQUxfTEVWRUxTLmluY2x1ZGVzKGluZGV4KTtcclxuICAgIH1cclxuICAgIDtcclxuICAgIGlzTGV2ZWxTcGVjaWFsKHNpemUpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5sZXZlbERhdGE/LmlzU3BlY2lhbFxyXG4gICAgICAgICAgICA/IHNpemUgKiAwLjlcclxuICAgICAgICAgICAgOiBzaXplO1xyXG4gICAgfVxyXG4gICAgZHJhdyhsZXZlbFNlbGVjdGlvblBhZ2VJbmRleCwgdW5sb2NrTGV2ZWxJbmRleCwgZ2FtZUxldmVsRGF0YSwgdG90YWxHYW1lTGV2ZWxzKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxldmVsRGF0YT8uYmFsbG9vbkltZywgdGhpcy5wb3NYLCB0aGlzLnBvc1ksIHRoaXMuYnRuU2l6ZSwgdGhpcy5idG5TaXplKTtcclxuICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJ3aGl0ZVwiO1xyXG4gICAgICAgIHRoaXMuY29udGV4dC5mb250ID0gdGhpcy50ZXh0Rm9udFNpemUgKyBgcHggJHtmb250fSwgbW9ub3NwYWNlYDtcclxuICAgICAgICB0aGlzLmNvbnRleHQudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcclxuICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFRleHQoYCR7dGhpcy5sZXZlbERhdGEuaW5kZXggKyBsZXZlbFNlbGVjdGlvblBhZ2VJbmRleH1gLCB0aGlzLmxldmVsRGF0YS54ICsgdGhpcy5zaXplIC8gMy41LCB0aGlzLmxldmVsRGF0YS55ICsgdGhpcy5zaXplIC8gMyk7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmZvbnQgPSB0aGlzLnRleHRGb250U2l6ZSAtICh0aGlzLnNpemUpIC8gMzAgKyBgcHggJHtmb250fSwgbW9ub3NwYWNlYDtcclxuICAgICAgICBpZiAodGhpcy5idG5TaXplIDwgdGhpcy5ibG9vblNpemUpIHtcclxuICAgICAgICAgICAgdGhpcy5idG5TaXplID0gdGhpcy5idG5TaXplICsgMC41MDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnRuU2l6ZSA9IHRoaXMuYmxvb25TaXplO1xyXG4gICAgICAgICAgICB0aGlzLnBvc1ggPSB0aGlzLmxldmVsRGF0YS54O1xyXG4gICAgICAgICAgICB0aGlzLnBvc1kgPSB0aGlzLmxldmVsRGF0YS55O1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmRyYXdJY29ucyhsZXZlbFNlbGVjdGlvblBhZ2VJbmRleCwgdW5sb2NrTGV2ZWxJbmRleCwgZ2FtZUxldmVsRGF0YSwgdG90YWxHYW1lTGV2ZWxzKTtcclxuICAgIH1cclxuICAgIGFwcGx5UHVsc2VFZmZlY3QoKSB7XHJcbiAgICAgICAgY29uc3QgUHVsc2VEdXJhdGlvbiA9IDE1MDA7XHJcbiAgICAgICAgY29uc3QgR3Jvd1BoYXNlVGhyZXNob2xkID0gMC43O1xyXG4gICAgICAgIGNvbnN0IEJhc2VTaGFkb3dTaXplID0gMTU7XHJcbiAgICAgICAgY29uc3QgTWF4U2hhZG93U2l6ZSA9IDQ1O1xyXG4gICAgICAgIGNvbnN0IE1heE9wYWNpdHkgPSAwLjU7XHJcbiAgICAgICAgY29uc3QgQmFzZUNvbG9yUmdiYSA9ICcyNTUsIDI1NSwgMjU1JztcclxuICAgICAgICBjb25zdCBhbmltYXRpb25Qcm9ncmVzcyA9IChEYXRlLm5vdygpICUgUHVsc2VEdXJhdGlvbikgLyBQdWxzZUR1cmF0aW9uO1xyXG4gICAgICAgIGNvbnN0IGdyb3dQaGFzZSA9IGFuaW1hdGlvblByb2dyZXNzIDw9IEdyb3dQaGFzZVRocmVzaG9sZDtcclxuICAgICAgICBjb25zdCBwaGFzZUR1cmF0aW9uID0gZ3Jvd1BoYXNlID8gR3Jvd1BoYXNlVGhyZXNob2xkIDogKDEgLSBHcm93UGhhc2VUaHJlc2hvbGQpO1xyXG4gICAgICAgIGNvbnN0IHByb2dyZXNzID0gZ3Jvd1BoYXNlID8gYW5pbWF0aW9uUHJvZ3Jlc3MgLyBHcm93UGhhc2VUaHJlc2hvbGQgOiAoYW5pbWF0aW9uUHJvZ3Jlc3MgLSBHcm93UGhhc2VUaHJlc2hvbGQpIC8gcGhhc2VEdXJhdGlvbjtcclxuICAgICAgICBjb25zdCBzaGFkb3dTaXplID0gZ3Jvd1BoYXNlID8gcHJvZ3Jlc3MgKiBCYXNlU2hhZG93U2l6ZSA6IEJhc2VTaGFkb3dTaXplICsgcHJvZ3Jlc3MgKiBNYXhTaGFkb3dTaXplO1xyXG4gICAgICAgIGNvbnN0IHNoYWRvd09wYWNpdHkgPSBncm93UGhhc2UgPyBNYXhPcGFjaXR5ICogKDEgLSBwcm9ncmVzcykgOiAwO1xyXG4gICAgICAgIGlmIChzaGFkb3dPcGFjaXR5IDw9IDApXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBjb25zdCB7IHg6IHNjYWxlWCwgeTogc2NhbGVZLCByYWRpdXM6IHNjYWxlUmFkaXVzIH0gPSB0aGlzLmxldmVsRGF0YT8uaXNTcGVjaWFsXHJcbiAgICAgICAgICAgID8geyB4OiAzLCB5OiAyLjUsIHJhZGl1czogMi4yIH1cclxuICAgICAgICAgICAgOiB7IHg6IDMuNCwgeTogMy44LCByYWRpdXM6IDMuMiB9O1xyXG4gICAgICAgIGNvbnN0IGNlbnRlclggPSB0aGlzLnBvc1ggKyB0aGlzLmJ0blNpemUgLyBzY2FsZVg7XHJcbiAgICAgICAgY29uc3QgY2VudGVyWSA9IHRoaXMucG9zWSArIHRoaXMuYnRuU2l6ZSAvIHNjYWxlWTtcclxuICAgICAgICBjb25zdCByYWRpdXMgPSB0aGlzLmJ0blNpemUgLyBzY2FsZVJhZGl1cyArIHNoYWRvd1NpemU7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnNhdmUoKTtcclxuICAgICAgICB0aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmFyYyhjZW50ZXJYLCBjZW50ZXJZLCByYWRpdXMsIDAsIDIgKiBNYXRoLlBJKTtcclxuICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gYHJnYmEoJHtCYXNlQ29sb3JSZ2JhfSwgJHtzaGFkb3dPcGFjaXR5fSlgO1xyXG4gICAgICAgIHRoaXMuY29udGV4dC5maWxsKCk7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnJlc3RvcmUoKTtcclxuICAgIH1cclxuICAgIGRyYXdJY29ucyhwYWdlSW5kZXgsIHVubG9ja0xldmVsSW5kZXgsIGdhbWVMZXZlbERhdGEsIHRvdGFsR2FtZUxldmVscykge1xyXG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5sZXZlbERhdGEuaW5kZXg7XHJcbiAgICAgICAgaWYgKCFEZWJ1Z2dlci5EZWJ1Z01vZGUpIHtcclxuICAgICAgICAgICAgKGluZGV4ICsgcGFnZUluZGV4IC0gMSA+IHVubG9ja0xldmVsSW5kZXggKyAxKSAmJiB0aGlzLmRyYXdMb2NrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChnYW1lTGV2ZWxEYXRhLmxlbmd0aCAmJiBpbmRleCArIHBhZ2VJbmRleCA8PSB0b3RhbEdhbWVMZXZlbHMpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBnYW1lTGV2ZWxEYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggLSAxICsgcGFnZUluZGV4ID09PVxyXG4gICAgICAgICAgICAgICAgICAgIHBhcnNlSW50KGdhbWVMZXZlbERhdGFbaV0ubGV2ZWxOdW1iZXIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVja1N0YXJzKGdhbWVMZXZlbERhdGFbaV0uc3RhckNvdW50KTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRyYXdMb2NrKCkge1xyXG4gICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sZXZlbERhdGE/LmxvY2tJbWcsIHRoaXMubGV2ZWxEYXRhLngsIHRoaXMubGV2ZWxEYXRhLnksIHRoaXMubG9ja1NpemUsIHRoaXMubG9ja1NpemUpO1xyXG4gICAgfVxyXG4gICAgY2hlY2tTdGFycyhzdGFyQ291bnQpIHtcclxuICAgICAgICBjb25zdCBwb3NYID0gdGhpcy5sZXZlbERhdGEueDtcclxuICAgICAgICBjb25zdCBwb3NZID0gdGhpcy5sZXZlbERhdGEueTtcclxuICAgICAgICBjb25zdCBzaXplID0gdGhpcy5zaXplO1xyXG4gICAgICAgIGlmIChzdGFyQ291bnQgPj0gMSkge1xyXG4gICAgICAgICAgICB0aGlzLmRyYXdTdGFyKHBvc1gsIHBvc1kgLSBzaXplICogMC4wMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChzdGFyQ291bnQgPiAxKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhd1N0YXIocG9zWCArIHNpemUgLyAyLjUsIHBvc1kgLSBzaXplICogMC4wMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChzdGFyQ291bnQgPT09IDMpIHtcclxuICAgICAgICAgICAgdGhpcy5kcmF3U3Rhcihwb3NYICsgc2l6ZSAvIDUsIHBvc1kgLSBzaXplICogMC4xKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBkcmF3U3Rhcihwb3NYLCBwb3NZKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxldmVsRGF0YT8uc3RhckltZywgcG9zWCwgcG9zWSwgdGhpcy5zaXplIC8gNSwgdGhpcy5zaXplIC8gNSk7XHJcbiAgICB9XHJcbiAgICBvbkNsaWNrKHhDbGljaywgeUNsaWNrLCBsZXZlbFNlbGVjdGlvblBhZ2VJbmRleCwgdW5sb2NrTGV2ZWxJbmRleCwgY2FsbEJhY2spIHtcclxuICAgICAgICBjb25zdCBkaXN0YW5jZSA9IE1hdGguc3FydCgoeENsaWNrIC0gdGhpcy5sZXZlbERhdGEueCAtIHRoaXMucmFkaXVzT2ZmU2V0KSAqXHJcbiAgICAgICAgICAgICh4Q2xpY2sgLSB0aGlzLmxldmVsRGF0YS54IC0gdGhpcy5yYWRpdXNPZmZTZXQpICtcclxuICAgICAgICAgICAgKHlDbGljayAtIHRoaXMubGV2ZWxEYXRhLnkgLSB0aGlzLnJhZGl1c09mZlNldCkgKlxyXG4gICAgICAgICAgICAgICAgKHlDbGljayAtIHRoaXMubGV2ZWxEYXRhLnkgLSB0aGlzLnJhZGl1c09mZlNldCkpO1xyXG4gICAgICAgIGlmIChkaXN0YW5jZSA8IDQ1KSB7XHJcbiAgICAgICAgICAgIGlmIChEZWJ1Z2dlci5EZWJ1Z01vZGUgfHwgKHRoaXMubGV2ZWxEYXRhLmluZGV4ICsgbGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXggPD0gdW5sb2NrTGV2ZWxJbmRleCkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnRuU2l6ZSA9IHRoaXMuYmxvb25TaXplIC0gNDtcclxuICAgICAgICAgICAgICAgIHRoaXMucG9zWCA9IHRoaXMub3JpZ2luYWxQb3NYICsgMC41O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb3NZID0gdGhpcy5vcmlnaW5hbFBvc1kgKyAxO1xyXG4gICAgICAgICAgICAgICAgY2FsbEJhY2sodGhpcy5sZXZlbERhdGEuaW5kZXgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IGlzQ2xpY2tJbnNpZGVCdXR0b24sIGxvYWRJbWFnZXMgfSBmcm9tIFwiQGNvbW1vblwiO1xyXG5pbXBvcnQgeyBORVhUX0JUTl9JTUcgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXh0QnV0dG9uIHtcclxuICAgIHBvc1g7XHJcbiAgICBwb3NZO1xyXG4gICAgY29udGV4dDtcclxuICAgIHdpZHRoO1xyXG4gICAgaGVpZ2h0O1xyXG4gICAgaW1hZ2VzTG9hZGVkID0gZmFsc2U7XHJcbiAgICBuZXh0X2J1dHRvbl9pbWFnZTtcclxuICAgIGJ0blNpemVBbmltYXRpb247XHJcbiAgICBidG5PcmlnaW5hbFNpemU7XHJcbiAgICBvcmlnbmFsUG9zO1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCwgd2lkdGgsIGhlaWdodCwgcG9zWCwgcG9zWSkge1xyXG4gICAgICAgIHRoaXMucG9zWCA9IHBvc1g7XHJcbiAgICAgICAgdGhpcy5wb3NZID0gcG9zWTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcclxuICAgICAgICBsb2FkSW1hZ2VzKHsgbmV4dF9idXR0b25faW1hZ2U6IE5FWFRfQlROX0lNRyB9LCAoaW1hZ2VzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubmV4dF9idXR0b25faW1hZ2UgPSBpbWFnZXNbXCJuZXh0X2J1dHRvbl9pbWFnZVwiXTtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZXNMb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA9IDAuMTk7XHJcbiAgICAgICAgdGhpcy5idG5PcmlnaW5hbFNpemUgPSB0aGlzLmJ0blNpemVBbmltYXRpb247XHJcbiAgICAgICAgdGhpcy5vcmlnbmFsUG9zID0geyB4OiB0aGlzLnBvc1gsIHk6IHRoaXMucG9zWSB9O1xyXG4gICAgfVxyXG4gICAgZHJhdygpIHtcclxuICAgICAgICBpZiAodGhpcy5pbWFnZXNMb2FkZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLm5leHRfYnV0dG9uX2ltYWdlLCB0aGlzLnBvc1gsIHRoaXMucG9zWSwgdGhpcy53aWR0aCAqIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiwgdGhpcy53aWR0aCAqIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJ0blNpemVBbmltYXRpb24gPCAwLjE5KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSB0aGlzLmJ0blNpemVBbmltYXRpb24gKyAwLjAwMDU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBvc1ggPSB0aGlzLm9yaWduYWxQb3MueDtcclxuICAgICAgICAgICAgICAgIHRoaXMucG9zWSA9IHRoaXMub3JpZ25hbFBvcy55O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgb25DbGljayh4Q2xpY2ssIHlDbGljaykge1xyXG4gICAgICAgIGNvbnN0IGlzSW5zaWRlID0gaXNDbGlja0luc2lkZUJ1dHRvbih4Q2xpY2ssIHlDbGljaywgdGhpcy5wb3NYLCB0aGlzLnBvc1ksIHRoaXMud2lkdGggKiB0aGlzLmJ0bk9yaWdpbmFsU2l6ZSwgdGhpcy53aWR0aCAqIHRoaXMuYnRuT3JpZ2luYWxTaXplLCB0cnVlIC8vIEJ1dHRvbiBpcyBjaXJjdWxhclxyXG4gICAgICAgICk7XHJcbiAgICAgICAgaWYgKGlzSW5zaWRlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA9IDAuMTg7XHJcbiAgICAgICAgICAgIHRoaXMucG9zWCA9IHRoaXMucG9zWCArIDE7XHJcbiAgICAgICAgICAgIHRoaXMucG9zWSA9IHRoaXMucG9zWSArIDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBpc0luc2lkZTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBpc0NsaWNrSW5zaWRlQnV0dG9uLCBsb2FkSW1hZ2VzIH0gZnJvbSBcIkBjb21tb25cIjtcclxuaW1wb3J0IHsgQ0FOQ0VMX0JUTl9JTUcgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb0J1dHRvbiB7XHJcbiAgICBwb3NYO1xyXG4gICAgcG9zWTtcclxuICAgIGNvbnRleHQ7XHJcbiAgICBjYW52YXM7XHJcbiAgICBpbWFnZXNMb2FkZWQgPSBmYWxzZTtcclxuICAgIG5vX2J1dHRvbl9pbWFnZTtcclxuICAgIGJ0blNpemVBbmltYXRpb247XHJcbiAgICBidG5PcmlnaW5hbFNpemU7XHJcbiAgICBvcmlnbmFsUG9zO1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCwgY2FudmFzLCBwb3NYLCBwb3NZKSB7XHJcbiAgICAgICAgdGhpcy5wb3NYID0gcG9zWCArIDU7XHJcbiAgICAgICAgdGhpcy5wb3NZID0gcG9zWSArIDEwO1xyXG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XHJcbiAgICAgICAgdGhpcy5jYW52YXMgPSBjYW52YXM7XHJcbiAgICAgICAgbG9hZEltYWdlcyh7IG5vX2J1dHRvbl9pbWFnZTogQ0FOQ0VMX0JUTl9JTUcgfSwgKGltYWdlcykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm5vX2J1dHRvbl9pbWFnZSA9IGltYWdlc1tcIm5vX2J1dHRvbl9pbWFnZVwiXTtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZXNMb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA9IDAuMTg7XHJcbiAgICAgICAgdGhpcy5idG5PcmlnaW5hbFNpemUgPSB0aGlzLmJ0blNpemVBbmltYXRpb247XHJcbiAgICAgICAgdGhpcy5vcmlnbmFsUG9zID0geyB4OiB0aGlzLnBvc1gsIHk6IHRoaXMucG9zWSB9O1xyXG4gICAgfVxyXG4gICAgZHJhdygpIHtcclxuICAgICAgICBpZiAodGhpcy5pbWFnZXNMb2FkZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLm5vX2J1dHRvbl9pbWFnZSwgdGhpcy5wb3NYLCB0aGlzLnBvc1ksIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5TaXplQW5pbWF0aW9uLCB0aGlzLmNhbnZhcy53aWR0aCAqIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJ0blNpemVBbmltYXRpb24gPCAwLjE4KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSB0aGlzLmJ0blNpemVBbmltYXRpb24gKyAwLjAwMDU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBvc1ggPSB0aGlzLm9yaWduYWxQb3MueDtcclxuICAgICAgICAgICAgICAgIHRoaXMucG9zWSA9IHRoaXMub3JpZ25hbFBvcy55O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgb25DbGljayh4Q2xpY2ssIHlDbGljaykge1xyXG4gICAgICAgIGNvbnN0IGlzSW5zaWRlID0gaXNDbGlja0luc2lkZUJ1dHRvbih4Q2xpY2ssIHlDbGljaywgdGhpcy5wb3NYLCB0aGlzLnBvc1ksIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5PcmlnaW5hbFNpemUsIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5PcmlnaW5hbFNpemUsIHRydWUgLy8gQnV0dG9uIGlzIGNpcmN1bGFyXHJcbiAgICAgICAgKTtcclxuICAgICAgICBpZiAoaXNJbnNpZGUpIHtcclxuICAgICAgICAgICAgdGhpcy5idG5TaXplQW5pbWF0aW9uID0gMC4xNztcclxuICAgICAgICAgICAgdGhpcy5wb3NYID0gdGhpcy5wb3NYICsgMTtcclxuICAgICAgICAgICAgdGhpcy5wb3NZID0gdGhpcy5wb3NZICsgMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGlzSW5zaWRlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IGlzQ2xpY2tJbnNpZGVCdXR0b24sIGxvYWRJbWFnZXMgfSBmcm9tIFwiQGNvbW1vblwiO1xyXG5pbXBvcnQgeyBQQVVTRV9CVE5fSU1HIH0gZnJvbSBcIkBjb25zdGFudHNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGF1c2VCdXR0b24ge1xyXG4gICAgcG9zWDtcclxuICAgIHBvc1k7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgY2FudmFzO1xyXG4gICAgaW1hZ2VzTG9hZGVkID0gZmFsc2U7XHJcbiAgICBwYXVzZV9idXR0b25faW1hZ2U7XHJcbiAgICBidG5TaXplQW5pbWF0aW9uO1xyXG4gICAgYnRuT3JpZ2luYWxTaXplO1xyXG4gICAgb3JpZ25hbFBvcztcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIGNhbnZhcykge1xyXG4gICAgICAgIHRoaXMucG9zWCA9IGNhbnZhcy53aWR0aCAtIGNhbnZhcy5oZWlnaHQgKiAwLjA5O1xyXG4gICAgICAgIHRoaXMucG9zWSA9IDA7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcclxuICAgICAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgICAgICBsb2FkSW1hZ2VzKHsgcGF1c2VfYnV0dG9uX2ltYWdlOiBQQVVTRV9CVE5fSU1HIH0sIChpbWFnZXMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5wYXVzZV9idXR0b25faW1hZ2UgPSBpbWFnZXNbXCJwYXVzZV9idXR0b25faW1hZ2VcIl07XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSAwLjA5O1xyXG4gICAgICAgIHRoaXMuYnRuT3JpZ2luYWxTaXplID0gdGhpcy5idG5TaXplQW5pbWF0aW9uO1xyXG4gICAgICAgIHRoaXMub3JpZ25hbFBvcyA9IHsgeDogdGhpcy5wb3NYLCB5OiB0aGlzLnBvc1kgfTtcclxuICAgIH1cclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW1hZ2VzTG9hZGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5wYXVzZV9idXR0b25faW1hZ2UsIHRoaXMucG9zWCwgdGhpcy5wb3NZLCB0aGlzLmNhbnZhcy5oZWlnaHQgKiB0aGlzLmJ0blNpemVBbmltYXRpb24sIHRoaXMuY2FudmFzLmhlaWdodCAqIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJ0blNpemVBbmltYXRpb24gPCAwLjA5KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSB0aGlzLmJ0blNpemVBbmltYXRpb24gKyAwLjAwMDI1O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb3NYID0gdGhpcy5vcmlnbmFsUG9zLng7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBvc1kgPSB0aGlzLm9yaWduYWxQb3MueTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uQ2xpY2soeENsaWNrLCB5Q2xpY2spIHtcclxuICAgICAgICBjb25zdCBpc0luc2lkZSA9IGlzQ2xpY2tJbnNpZGVCdXR0b24oeENsaWNrLCB5Q2xpY2ssIHRoaXMucG9zWCwgdGhpcy5wb3NZLCB0aGlzLmNhbnZhcy5oZWlnaHQgKiB0aGlzLmJ0bk9yaWdpbmFsU2l6ZSwgdGhpcy5jYW52YXMuaGVpZ2h0ICogdGhpcy5idG5PcmlnaW5hbFNpemUsIHRydWUgLy8gQnV0dG9uIGlzIGNpcmN1bGFyXHJcbiAgICAgICAgKTtcclxuICAgICAgICBpZiAoaXNJbnNpZGUpIHtcclxuICAgICAgICAgICAgdGhpcy5idG5TaXplQW5pbWF0aW9uID0gMC4wODU7XHJcbiAgICAgICAgICAgIHRoaXMucG9zWCA9IHRoaXMucG9zWCArIDAuOTtcclxuICAgICAgICAgICAgdGhpcy5wb3NZID0gdGhpcy5wb3NZICsgMC45O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaXNJbnNpZGU7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgUExBWV9CVE5fSU1HIH0gZnJvbSBcIkBjb25zdGFudHNcIjtcclxuaW1wb3J0IHsgRmlyZWJhc2VJbnRlZ3JhdGlvbiB9IGZyb20gXCIuLi8uLi9GaXJlYmFzZS9maXJlYmFzZS1pbnRlZ3JhdGlvblwiO1xyXG5pbXBvcnQgeyBsb2FkSW1hZ2VzLCBwc2V1ZG9JZCwgbGFuZyB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IGdldERhdGEgfSBmcm9tIFwiQGRhdGFcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheUJ1dHRvbiB7XHJcbiAgICBwb3NYO1xyXG4gICAgcG9zWTtcclxuICAgIGNvbnRleHQ7XHJcbiAgICBjYW52YXM7XHJcbiAgICBpbWFnZXM7XHJcbiAgICBsb2FkZWRJbWFnZXM7XHJcbiAgICBpbWFnZXNMb2FkZWQgPSBmYWxzZTtcclxuICAgIG1halZlcnNpb247XHJcbiAgICBtaW5WZXJzaW9uO1xyXG4gICAgZmlyZWJhc2VJbnRlZ3JhdGlvbjtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIGNhbnZhcywgcG9zWCwgcG9zWSkge1xyXG4gICAgICAgIHRoaXMucG9zWCA9IHBvc1g7XHJcbiAgICAgICAgdGhpcy5wb3NZID0gcG9zWTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIHRoaXMuZmlyZWJhc2VJbnRlZ3JhdGlvbiA9IG5ldyBGaXJlYmFzZUludGVncmF0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICAgICAgdGhpcy5pbWFnZXMgPSB7XHJcbiAgICAgICAgICAgIHBhdXNlX2J1dHRvbl9pbWFnZTogUExBWV9CVE5fSU1HXHJcbiAgICAgICAgfTtcclxuICAgICAgICBsb2FkSW1hZ2VzKHRoaXMuaW1hZ2VzLCAoaW1hZ2VzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZGVkSW1hZ2VzID0gT2JqZWN0LmFzc2lnbih7fSwgaW1hZ2VzKTtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZXNMb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgYXN5bmMgaW5pdCgpIHtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0RGF0YSgpO1xyXG4gICAgICAgIHRoaXMubWFqVmVyc2lvbiA9IGRhdGEubWFqdmVyc2lvbjtcclxuICAgICAgICB0aGlzLm1pblZlcnNpb24gPSBkYXRhLm1pbnZlcnNpb247XHJcbiAgICB9XHJcbiAgICBkcmF3KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmltYWdlc0xvYWRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLnBhdXNlX2J1dHRvbl9pbWFnZSwgdGhpcy5wb3NYLCB0aGlzLnBvc1ksIHRoaXMuY2FudmFzLndpZHRoIC8gMywgdGhpcy5jYW52YXMud2lkdGggLyAzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvbkNsaWNrKHhDbGljaywgeUNsaWNrKSB7XHJcbiAgICAgICAgY29uc3QgZGlzdGFuY2UgPSBNYXRoLnNxcnQoKHhDbGljayAtIHRoaXMucG9zWCAtIHRoaXMuY2FudmFzLndpZHRoIC8gNikgKlxyXG4gICAgICAgICAgICAoeENsaWNrIC0gdGhpcy5wb3NYIC0gdGhpcy5jYW52YXMud2lkdGggLyA2KSArXHJcbiAgICAgICAgICAgICh5Q2xpY2sgLSB0aGlzLnBvc1kgLSB0aGlzLmNhbnZhcy53aWR0aCAvIDYpICpcclxuICAgICAgICAgICAgICAgICh5Q2xpY2sgLSB0aGlzLnBvc1kgLSB0aGlzLmNhbnZhcy53aWR0aCAvIDYpKTtcclxuICAgICAgICB0aGlzLmxvZ1RhcHBlZFN0YXJ0RmlyZWJhc2VFdmVudCgpO1xyXG4gICAgICAgIGlmIChkaXN0YW5jZSA8IHRoaXMuY2FudmFzLndpZHRoIC8gOCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBsb2dUYXBwZWRTdGFydEZpcmViYXNlRXZlbnQoKSB7XHJcbiAgICAgICAgbGV0IGVuZFRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIGNvbnN0IHRhcHBlZFN0YXJ0RGF0YSA9IHtcclxuICAgICAgICAgICAgY3JfdXNlcl9pZDogcHNldWRvSWQsXHJcbiAgICAgICAgICAgIGZ0bV9sYW5ndWFnZTogbGFuZyxcclxuICAgICAgICAgICAgcHJvZmlsZV9udW1iZXI6IDAsXHJcbiAgICAgICAgICAgIHZlcnNpb25fbnVtYmVyOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZlcnNpb24taW5mby1pZFwiKS5pbm5lckhUTUwsXHJcbiAgICAgICAgICAgIGpzb25fdmVyc2lvbl9udW1iZXI6ICEhdGhpcy5tYWpWZXJzaW9uICYmICEhdGhpcy5taW5WZXJzaW9uID8gdGhpcy5tYWpWZXJzaW9uLnRvU3RyaW5nKCkgKyBcIi5cIiArIHRoaXMubWluVmVyc2lvbi50b1N0cmluZygpIDogXCJcIixcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuZmlyZWJhc2VJbnRlZ3JhdGlvbi5zZW5kVGFwcGVkU3RhcnRFdmVudCh0YXBwZWRTdGFydERhdGEpO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IGlzQ2xpY2tJbnNpZGVCdXR0b24sIGxvYWRJbWFnZXMgfSBmcm9tIFwiQGNvbW1vblwiO1xyXG5pbXBvcnQgeyBSRVRSWV9CVE5fSU1HIH0gZnJvbSBcIkBjb25zdGFudHNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmV0cnlCdXR0b24ge1xyXG4gICAgcG9zWDtcclxuICAgIHBvc1k7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgY2FudmFzO1xyXG4gICAgaW1hZ2VzTG9hZGVkID0gZmFsc2U7XHJcbiAgICByZXRyeV9idXR0b25faW1hZ2U7XHJcbiAgICBidG5TaXplQW5pbWF0aW9uO1xyXG4gICAgYnRuT3JpZ2luYWxTaXplO1xyXG4gICAgb3JpZ25hbFBvcztcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIGNhbnZhcywgcG9zWCwgcG9zWSkge1xyXG4gICAgICAgIHRoaXMucG9zWCA9IHBvc1g7XHJcbiAgICAgICAgdGhpcy5wb3NZID0gcG9zWTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIGxvYWRJbWFnZXMoeyByZXRyeV9idXR0b25faW1hZ2U6IFJFVFJZX0JUTl9JTUcgfSwgKGltYWdlcykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnJldHJ5X2J1dHRvbl9pbWFnZSA9IGltYWdlc1tcInJldHJ5X2J1dHRvbl9pbWFnZVwiXTtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZXNMb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA9IDAuMTk7XHJcbiAgICAgICAgdGhpcy5idG5PcmlnaW5hbFNpemUgPSB0aGlzLmJ0blNpemVBbmltYXRpb247XHJcbiAgICAgICAgdGhpcy5vcmlnbmFsUG9zID0geyB4OiBwb3NYLCB5OiBwb3NZIH07XHJcbiAgICB9XHJcbiAgICBkcmF3KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmltYWdlc0xvYWRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMucmV0cnlfYnV0dG9uX2ltYWdlLCB0aGlzLnBvc1gsIHRoaXMucG9zWSwgdGhpcy5jYW52YXMud2lkdGggKiB0aGlzLmJ0blNpemVBbmltYXRpb24sIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5TaXplQW5pbWF0aW9uKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA8IDAuMTkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA9IHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiArIDAuMDAwNTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucG9zWCA9IHRoaXMub3JpZ25hbFBvcy54O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb3NZID0gdGhpcy5vcmlnbmFsUG9zLnk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvbkNsaWNrKHhDbGljaywgeUNsaWNrKSB7XHJcbiAgICAgICAgY29uc3QgaXNJbnNpZGUgPSBpc0NsaWNrSW5zaWRlQnV0dG9uKHhDbGljaywgeUNsaWNrLCB0aGlzLnBvc1gsIHRoaXMucG9zWSwgdGhpcy5jYW52YXMud2lkdGggKiB0aGlzLmJ0bk9yaWdpbmFsU2l6ZSwgdGhpcy5jYW52YXMud2lkdGggKiB0aGlzLmJ0bk9yaWdpbmFsU2l6ZSwgdHJ1ZSAvLyBCdXR0b24gaXMgY2lyY3VsYXJcclxuICAgICAgICApO1xyXG4gICAgICAgIGlmIChpc0luc2lkZSkge1xyXG4gICAgICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSAwLjE4O1xyXG4gICAgICAgICAgICB0aGlzLnBvc1ggPSB0aGlzLnBvc1ggKyAxO1xyXG4gICAgICAgICAgICB0aGlzLnBvc1kgPSB0aGlzLnBvc1kgKyAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaXNJbnNpZGU7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgaXNDbGlja0luc2lkZUJ1dHRvbiwgbG9hZEltYWdlcyB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IFlFU19CVE5fSU1HIH0gZnJvbSBcIkBjb25zdGFudHNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgWWVzQnV0dG9uIHtcclxuICAgIHBvc1g7XHJcbiAgICBwb3NZO1xyXG4gICAgY29udGV4dDtcclxuICAgIGNhbnZhcztcclxuICAgIGltYWdlc0xvYWRlZCA9IGZhbHNlO1xyXG4gICAgeWVzX2J1dHRvbl9pbWFnZTtcclxuICAgIGJ0blNpemVBbmltYXRpb247XHJcbiAgICBidG5PcmlnaW5hbFNpemU7XHJcbiAgICBvcmlnbmFsUG9zO1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCwgY2FudmFzLCBwb3NYLCBwb3NZKSB7XHJcbiAgICAgICAgdGhpcy5wb3NYID0gcG9zWCAtIDU7XHJcbiAgICAgICAgdGhpcy5wb3NZID0gcG9zWTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIGxvYWRJbWFnZXMoeyB5ZXNfYnV0dG9uX2ltYWdlOiBZRVNfQlROX0lNRyB9LCAoaW1hZ2VzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMueWVzX2J1dHRvbl9pbWFnZSA9IGltYWdlc1tcInllc19idXR0b25faW1hZ2VcIl07XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmJ0blNpemVBbmltYXRpb24gPSAwLjIwNTtcclxuICAgICAgICB0aGlzLmJ0bk9yaWdpbmFsU2l6ZSA9IHRoaXMuYnRuU2l6ZUFuaW1hdGlvbjtcclxuICAgICAgICB0aGlzLm9yaWduYWxQb3MgPSB7IHg6IHRoaXMucG9zWCwgeTogdGhpcy5wb3NZIH07XHJcbiAgICB9XHJcbiAgICBkcmF3KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmltYWdlc0xvYWRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMueWVzX2J1dHRvbl9pbWFnZSwgdGhpcy5wb3NYLCB0aGlzLnBvc1ksIHRoaXMuY2FudmFzLndpZHRoICogdGhpcy5idG5TaXplQW5pbWF0aW9uLCB0aGlzLmNhbnZhcy53aWR0aCAqIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJ0blNpemVBbmltYXRpb24gPCAwLjIwNSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5idG5TaXplQW5pbWF0aW9uID0gdGhpcy5idG5TaXplQW5pbWF0aW9uICsgMC4wMDA1O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wb3NYID0gdGhpcy5vcmlnbmFsUG9zLng7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBvc1kgPSB0aGlzLm9yaWduYWxQb3MueTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uQ2xpY2soeENsaWNrLCB5Q2xpY2spIHtcclxuICAgICAgICBjb25zdCBpc0luc2lkZSA9IGlzQ2xpY2tJbnNpZGVCdXR0b24oeENsaWNrLCB5Q2xpY2ssIHRoaXMucG9zWCwgdGhpcy5wb3NZLCB0aGlzLmNhbnZhcy53aWR0aCAqIHRoaXMuYnRuT3JpZ2luYWxTaXplLCB0aGlzLmNhbnZhcy53aWR0aCAqIHRoaXMuYnRuT3JpZ2luYWxTaXplLCB0cnVlIC8vIEJ1dHRvbiBpcyBjaXJjdWxhclxyXG4gICAgICAgICk7XHJcbiAgICAgICAgaWYgKGlzSW5zaWRlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnRuU2l6ZUFuaW1hdGlvbiA9IDAuMTk7XHJcbiAgICAgICAgICAgIHRoaXMucG9zWCA9IHRoaXMucG9zWCArIDE7XHJcbiAgICAgICAgICAgIHRoaXMucG9zWSA9IHRoaXMucG9zWSArIDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBpc0luc2lkZTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBoaWRlRWxlbWVudCB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmV4cG9ydCBjbGFzcyBGZWVkYmFja1RleHRFZmZlY3RzIHtcclxuICAgIGZlZWRiYWNrVGV4dEVsZW1lbnQ7XHJcbiAgICBoaWRlVGltZW91dElkO1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5mZWVkYmFja1RleHRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmZWVkYmFjay10ZXh0XCIpO1xyXG4gICAgICAgIHRoaXMuaGlkZVRpbWVvdXRJZCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5pbml0aWFsaXplKCk7XHJcbiAgICB9XHJcbiAgICBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5pc0ZlZWRiYWNrRWxlbWVudEF2YWlsYWJsZSgpKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpc0ZlZWRiYWNrRWxlbWVudEF2YWlsYWJsZSgpIHtcclxuICAgICAgICByZXR1cm4gISF0aGlzLmZlZWRiYWNrVGV4dEVsZW1lbnQ7XHJcbiAgICB9XHJcbiAgICB3cmFwVGV4dCh0ZXh0KSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzRmVlZGJhY2tFbGVtZW50QXZhaWxhYmxlKCkpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB0aGlzLmZlZWRiYWNrVGV4dEVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0O1xyXG4gICAgICAgIGhpZGVFbGVtZW50KGZhbHNlLCB0aGlzLmZlZWRiYWNrVGV4dEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuc2V0SGlkZVRpbWVvdXQoKTtcclxuICAgIH1cclxuICAgIHNldEhpZGVUaW1lb3V0KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmhpZGVUaW1lb3V0SWQpIHtcclxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuaGlkZVRpbWVvdXRJZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaGlkZVRpbWVvdXRJZCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgaGlkZUVsZW1lbnQodHJ1ZSwgdGhpcy5mZWVkYmFja1RleHRFbGVtZW50KTtcclxuICAgICAgICAgICAgdGhpcy5oaWRlVGltZW91dElkID0gbnVsbDtcclxuICAgICAgICB9LCA0MDAwKTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBsb2FkSW1hZ2VzIH0gZnJvbSBcIkBjb21tb25cIjtcclxuaW1wb3J0IHsgQkFSX0VNUFRZLCBCQVJfRlVMTCwgTEVWRUxfSU5ESUNBVE9SIH0gZnJvbSBcIkBjb25zdGFudHNcIjtcclxuaW1wb3J0IHsgRXZlbnRNYW5hZ2VyIH0gZnJvbSBcIkBldmVudHNcIjtcclxuZXhwb3J0IGNsYXNzIExldmVsSW5kaWNhdG9ycyBleHRlbmRzIEV2ZW50TWFuYWdlciB7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgY2FudmFzO1xyXG4gICAgYWN0aXZlSW5kaWNhdG9ycztcclxuICAgIGltYWdlcztcclxuICAgIGxvYWRlZEltYWdlcztcclxuICAgIGltYWdlc0xvYWRlZCA9IGZhbHNlO1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCwgY2FudmFzLCBhY3RpdmVJbmRpY2F0b3JzKSB7XHJcbiAgICAgICAgc3VwZXIoe1xyXG4gICAgICAgICAgICBzdG9uZURyb3BDYWxsYmFja0hhbmRsZXI6IChldmVudCkgPT4gdGhpcy5oYW5kbGVTdG9uZURyb3AoZXZlbnQpLFxyXG4gICAgICAgICAgICBsb2FkUHV6emxlQ2FsbGJhY2tIYW5kbGVyOiAoZXZlbnQpID0+IHRoaXMuaGFuZGxlTG9hZFB1enpsZShldmVudClcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIHRoaXMuYWN0aXZlSW5kaWNhdG9ycyA9IGFjdGl2ZUluZGljYXRvcnM7XHJcbiAgICAgICAgdGhpcy5pbWFnZXMgPSB7XHJcbiAgICAgICAgICAgIGxldmVsX2luZGljYXRvcjogTEVWRUxfSU5ESUNBVE9SLFxyXG4gICAgICAgICAgICBiYXJfZW1wdHk6IEJBUl9FTVBUWSxcclxuICAgICAgICAgICAgYmFyX2Z1bGw6IEJBUl9GVUxMXHJcbiAgICAgICAgfTtcclxuICAgICAgICBsb2FkSW1hZ2VzKHRoaXMuaW1hZ2VzLCAoaW1hZ2VzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZGVkSW1hZ2VzID0gT2JqZWN0LmFzc2lnbih7fSwgaW1hZ2VzKTtcclxuICAgICAgICAgICAgdGhpcy5pbWFnZXNMb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgc2V0SW5kaWNhdG9ycyhpbmRpY2F0b3JDb3VudCkge1xyXG4gICAgICAgIHRoaXMuYWN0aXZlSW5kaWNhdG9ycyA9IGluZGljYXRvckNvdW50O1xyXG4gICAgfVxyXG4gICAgYWRkRHJvcFN0b25lRXZlbnQoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZHJvcHN0b25lJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0SW5kaWNhdG9ycygyKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW1hZ2VzTG9hZGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMubGV2ZWxfaW5kaWNhdG9yLCB0aGlzLmNhbnZhcy53aWR0aCAqIDAuMTUsIDAsIHRoaXMuY2FudmFzLndpZHRoICogMC4zNSwgdGhpcy5jYW52YXMuaGVpZ2h0ICogMC4wOSk7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmJhcl9lbXB0eSwgKCh0aGlzLmNhbnZhcy53aWR0aCAqIDAuMzUpIC8gNykgKiAoaSArIDEpICtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCAqIDAuMTUsICh0aGlzLmNhbnZhcy5oZWlnaHQgKiAwLjA5KSAvIDIgLSAodGhpcy5jYW52YXMuaGVpZ2h0ICogMC4wOSkgLyA2LCAodGhpcy5jYW52YXMud2lkdGggKiAwLjM1KSAvIDEwLCAodGhpcy5jYW52YXMuaGVpZ2h0ICogMC4wOSkgLyAzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYWN0aXZlSW5kaWNhdG9yczsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmJhcl9mdWxsLCAoKHRoaXMuY2FudmFzLndpZHRoICogMC4zNSkgLyA3KSAqIChpICsgMSkgKyB0aGlzLmNhbnZhcy53aWR0aCAqIDAuMTUsICh0aGlzLmNhbnZhcy5oZWlnaHQgKiAwLjA5KSAvIDIgLSAodGhpcy5jYW52YXMuaGVpZ2h0ICogMC4wOSkgLyA2LCAodGhpcy5jYW52YXMud2lkdGggKiAwLjM1KSAvIDEwLCAodGhpcy5jYW52YXMuaGVpZ2h0ICogMC4wOSkgLyAzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRpc3Bvc2UoKSB7XHJcbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyRXZlbnRMaXN0ZW5lcigpO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlU3RvbmVEcm9wKGV2ZW50KSB7XHJcbiAgICB9XHJcbiAgICBoYW5kbGVMb2FkUHV6emxlKGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5zZXRJbmRpY2F0b3JzKGV2ZW50LmRldGFpbC5jb3VudGVyKTtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBsb2FkSW1hZ2VzIH0gZnJvbSBcIkBjb21tb25cIjtcclxuaW1wb3J0IHsgRXZlbnRNYW5hZ2VyIH0gZnJvbSBcIkBldmVudHNcIjtcclxuZXhwb3J0IGNsYXNzIE1vbnN0ZXIgZXh0ZW5kcyBFdmVudE1hbmFnZXIge1xyXG4gICAgemluZGV4O1xyXG4gICAgd2lkdGg7XHJcbiAgICBoZWlnaHQ7XHJcbiAgICBpbWFnZTtcclxuICAgIGZyYW1lWDtcclxuICAgIGZyYW1lWTtcclxuICAgIG1heEZyYW1lO1xyXG4gICAgeDtcclxuICAgIHk7XHJcbiAgICBmcHM7XHJcbiAgICBjb3VudEZyYW1lO1xyXG4gICAgZnJhbWVJbnRlcnZhbDtcclxuICAgIGZyYW1lVGltZXI7XHJcbiAgICBjYW52YXNTdGFjaztcclxuICAgIGNhbmF2c0VsZW1lbnQ7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgZ2FtZTtcclxuICAgIGltYWdlcztcclxuICAgIGxvYWRlZEltYWdlcztcclxuICAgIGltYWdlc0xvYWRlZCA9IGZhbHNlO1xyXG4gICAgbW9uc3RlclBoYXNlO1xyXG4gICAgY29uc3RydWN0b3IoZ2FtZSwgbW9uc3RlclBoYXNlLCBjYWxsQmFja0Z1bmN0aW9uKSB7XHJcbiAgICAgICAgc3VwZXIoe1xyXG4gICAgICAgICAgICBzdG9uZURyb3BDYWxsYmFja0hhbmRsZXI6IChldmVudCkgPT4gdGhpcy5oYW5kbGVTdG9uZURyb3AoZXZlbnQpLFxyXG4gICAgICAgICAgICBsb2FkUHV6emxlQ2FsbGJhY2tIYW5kbGVyOiAoZXZlbnQpID0+IHRoaXMuaGFuZGxlTG9hZFB1enpsZShldmVudCksXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5nYW1lID0gZ2FtZTtcclxuICAgICAgICB0aGlzLm1vbnN0ZXJQaGFzZSA9IG1vbnN0ZXJQaGFzZTtcclxuICAgICAgICB0aGlzLndpZHRoID0gdGhpcy5nYW1lLndpZHRoO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5nYW1lLmhlaWdodDtcclxuICAgICAgICB0aGlzLmNhbmF2c0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSB0aGlzLmNhbmF2c0VsZW1lbnQuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG4gICAgICAgIHRoaXMuaW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vbnN0ZXJcIik7XHJcbiAgICAgICAgdGhpcy5mcmFtZVggPSAwO1xyXG4gICAgICAgIHRoaXMuZnJhbWVZID0gMDtcclxuICAgICAgICB0aGlzLm1heEZyYW1lID0gNjtcclxuICAgICAgICB0aGlzLnggPSB0aGlzLmdhbWUud2lkdGggLyAyIC0gdGhpcy5nYW1lLndpZHRoICogMC4yNDM7XHJcbiAgICAgICAgdGhpcy55ID0gdGhpcy5nYW1lLndpZHRoIC8gMztcclxuICAgICAgICB0aGlzLmZwcyA9IDEwO1xyXG4gICAgICAgIHRoaXMuY291bnRGcmFtZSA9IDA7XHJcbiAgICAgICAgdGhpcy5mcmFtZUludGVydmFsID0gMTAwMCAvIHRoaXMuZnBzO1xyXG4gICAgICAgIHRoaXMuZnJhbWVUaW1lciA9IDA7XHJcbiAgICAgICAgdGhpcy5pbWFnZXMgPSB7XHJcbiAgICAgICAgICAgIGVhdEltZzogXCIuL2Fzc2V0cy9pbWFnZXMvZWF0MVwiICsgdGhpcy5tb25zdGVyUGhhc2UgKyBcIi5wbmdcIixcclxuICAgICAgICAgICAgaWRsZUltZzogXCIuL2Fzc2V0cy9pbWFnZXMvaWRsZTFcIiArIHRoaXMubW9uc3RlclBoYXNlICsgXCIucG5nXCIsXHJcbiAgICAgICAgICAgIHNwaXRJbWc6IFwiLi9hc3NldHMvaW1hZ2VzL3NwaXQxXCIgKyB0aGlzLm1vbnN0ZXJQaGFzZSArIFwiLnBuZ1wiLFxyXG4gICAgICAgICAgICBkcmFnSW1nOiBcIi4vYXNzZXRzL2ltYWdlcy9kcmFnMVwiICsgdGhpcy5tb25zdGVyUGhhc2UgKyBcIi5wbmdcIixcclxuICAgICAgICB9O1xyXG4gICAgICAgIGxvYWRJbWFnZXModGhpcy5pbWFnZXMsIChpbWFnZXMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5sb2FkZWRJbWFnZXMgPSBPYmplY3QuYXNzaWduKHt9LCBpbWFnZXMpO1xyXG4gICAgICAgICAgICB0aGlzLmNoYW5nZVRvSWRsZUFuaW1hdGlvbigpO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlc0xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmIChjYWxsQmFja0Z1bmN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsQmFja0Z1bmN0aW9uKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHVwZGF0ZShkZWx0YVRpbWUpIHtcclxuICAgICAgICBpZiAodGhpcy5mcmFtZVRpbWVyID49IHRoaXMuZnJhbWVJbnRlcnZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lVGltZXIgPSAwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5mcmFtZVggPCB0aGlzLm1heEZyYW1lKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZyYW1lWCsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mcmFtZVggPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lVGltZXIgKz0gZGVsdGFUaW1lO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmRyYXcoKTtcclxuICAgIH1cclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW1hZ2VzTG9hZGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5pbWFnZSwgNzcwICogdGhpcy5mcmFtZVgsIDEzODYgKiB0aGlzLmZyYW1lWSwgNzY4LCAxMzg2LCB0aGlzLnggKiAwLjUsIHRoaXMueSAqIDAuMSwgKHRoaXMud2lkdGggLyAyKSAqIDEuNSwgKHRoaXMuaGVpZ2h0IC8gMS41KSAqIDEuNSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgY2hhbmdlSW1hZ2Uoc3JjKSB7XHJcbiAgICAgICAgdGhpcy5pbWFnZS5zcmMgPSBzcmM7XHJcbiAgICB9XHJcbiAgICBjaGFuZ2VUb0RyYWdBbmltYXRpb24oKSB7XHJcbiAgICAgICAgdGhpcy5tYXhGcmFtZSA9IDY7XHJcbiAgICAgICAgdGhpcy5pbWFnZSA9IHRoaXMubG9hZGVkSW1hZ2VzLmRyYWdJbWc7XHJcbiAgICB9XHJcbiAgICBjaGFuZ2VUb0VhdEFuaW1hdGlvbigpIHtcclxuICAgICAgICB0aGlzLm1heEZyYW1lID0gMTI7XHJcbiAgICAgICAgdGhpcy5pbWFnZSA9IHRoaXMubG9hZGVkSW1hZ2VzLmVhdEltZztcclxuICAgIH1cclxuICAgIGNoYW5nZVRvSWRsZUFuaW1hdGlvbigpIHtcclxuICAgICAgICB0aGlzLm1heEZyYW1lID0gNjtcclxuICAgICAgICB0aGlzLmltYWdlID0gdGhpcy5sb2FkZWRJbWFnZXMuaWRsZUltZztcclxuICAgIH1cclxuICAgIGNoYW5nZVRvU3BpdEFuaW1hdGlvbigpIHtcclxuICAgICAgICB0aGlzLm1heEZyYW1lID0gMTI7XHJcbiAgICAgICAgdGhpcy5pbWFnZSA9IHRoaXMubG9hZGVkSW1hZ2VzLnNwaXRJbWc7XHJcbiAgICB9XHJcbiAgICBoYW5kbGVTdG9uZURyb3AoZXZlbnQpIHtcclxuICAgICAgICBpZiAoZXZlbnQuZGV0YWlsLmlzQ29ycmVjdCkge1xyXG4gICAgICAgICAgICB0aGlzLmNoYW5nZVRvRWF0QW5pbWF0aW9uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmNoYW5nZVRvU3BpdEFuaW1hdGlvbigpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGhhbmRsZUxvYWRQdXp6bGUoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmNoYW5nZVRvSWRsZUFuaW1hdGlvbigpO1xyXG4gICAgfVxyXG4gICAgZGlzcG9zZSgpIHtcclxuICAgICAgICB0aGlzLnVucmVnaXN0ZXJFdmVudExpc3RlbmVyKCk7XHJcbiAgICB9XHJcbiAgICBvbkNsaWNrKHhDbGljaywgeUNsaWNrKSB7XHJcbiAgICAgICAgY29uc3QgZGlzdGFuY2UgPSBNYXRoLnNxcnQoKHhDbGljayAtIHRoaXMueCAtIHRoaXMud2lkdGggLyA0KSAqICh4Q2xpY2sgLSB0aGlzLnggLSB0aGlzLndpZHRoIC8gNCkgK1xyXG4gICAgICAgICAgICAoeUNsaWNrIC0gdGhpcy55IC0gdGhpcy5oZWlnaHQgLyAyLjIpICpcclxuICAgICAgICAgICAgICAgICh5Q2xpY2sgLSB0aGlzLnkgLSB0aGlzLmhlaWdodCAvIDIuMikpO1xyXG4gICAgICAgIGlmIChkaXN0YW5jZSA8PSAxMDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IENsb3NlQnV0dG9uLCBDYW5jZWxCdXR0b24sIFJldHJ5QnV0dG9uIH0gZnJvbSBcIkBidXR0b25zXCI7XHJcbmltcG9ydCB7IENMSUNLLCBsYW5nLCBsb2FkSW1hZ2VzIH0gZnJvbSBcIkBjb21tb25cIjtcclxuaW1wb3J0IHsgQXVkaW9QbGF5ZXIgfSBmcm9tIFwiQGNvbXBvbmVudHNcIjtcclxuaW1wb3J0IEFyZVlvdVN1cmVQb3BVcCBmcm9tIFwiQHBvcHVwcy9zdXJlLXBvcHVwXCI7XHJcbmltcG9ydCB7IEFVRElPX0FSRV9ZT1VfU1VSRSwgUE9QVVBfQkdfSU1HIH0gZnJvbSBcIkBjb25zdGFudHNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGF1c2VQb3BVcCB7XHJcbiAgICBjYW52YXM7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgY2FuY2VsQnV0dG9uO1xyXG4gICAgcmV0cnlCdXR0b247XHJcbiAgICBjbG9zZUJ1dHRvbjtcclxuICAgIGltYWdlc0xvYWRlZCA9IGZhbHNlO1xyXG4gICAgcG9wX3VwX2ltYWdlO1xyXG4gICAgY2FsbGJhY2s7XHJcbiAgICBzd2l0Y2hUb0xldmVsU2VsZWN0aW9uO1xyXG4gICAgcmVsb2FkU2NlbmU7XHJcbiAgICBnYW1lcGxheURhdGE7XHJcbiAgICBhdWRpb1BsYXllcjtcclxuICAgIHJldHJ5U3VyZVBvcHVwO1xyXG4gICAgQ2xvc2VTdXJlUG9wdXA7XHJcbiAgICBpc1JldHJ5QnV0dG9uQ2xpY2tlZCA9IGZhbHNlO1xyXG4gICAgaXNDbG9zZUJ1dHRvbkNsaWNrZWQgPSBmYWxzZTtcclxuICAgIGNvbnN0cnVjdG9yKGNhbnZhcywgY2FsbGJhY2ssIHN3aXRjaFRvTGV2ZWxTZWxlY3Rpb24sIHJlbG9hZFNjZW5lLCBnYW1lcGxheURhdGEpIHtcclxuICAgICAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XHJcbiAgICAgICAgdGhpcy5nYW1lcGxheURhdGEgPSBnYW1lcGxheURhdGE7XHJcbiAgICAgICAgdGhpcy5zd2l0Y2hUb0xldmVsU2VsZWN0aW9uID0gc3dpdGNoVG9MZXZlbFNlbGVjdGlvbjtcclxuICAgICAgICB0aGlzLnJlbG9hZFNjZW5lID0gcmVsb2FkU2NlbmU7XHJcbiAgICAgICAgY29uc3Qgc2VsZklkRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIHRoaXMuY29udGV4dCA9IHNlbGZJZEVsZW1lbnQuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIgPSBuZXcgQXVkaW9QbGF5ZXIoKTtcclxuICAgICAgICB0aGlzLmNhbmNlbEJ1dHRvbiA9IG5ldyBDYW5jZWxCdXR0b24odGhpcy5jb250ZXh0LCB0aGlzLmNhbnZhcyk7XHJcbiAgICAgICAgdGhpcy5yZXRyeUJ1dHRvbiA9IG5ldyBSZXRyeUJ1dHRvbih0aGlzLmNvbnRleHQsIHRoaXMuY2FudmFzLCB0aGlzLmNhbnZhcy53aWR0aCAqIDAuNTUsIHRoaXMuY2FudmFzLmhlaWdodCAqIDAuMiArXHJcbiAgICAgICAgICAgIHRoaXMuY2FudmFzLndpZHRoICogMC40IC1cclxuICAgICAgICAgICAgKHRoaXMuY2FudmFzLndpZHRoICogMC4xOSkgLyAyKTtcclxuICAgICAgICB0aGlzLmNsb3NlQnV0dG9uID0gbmV3IENsb3NlQnV0dG9uKHRoaXMuY29udGV4dCwgdGhpcy5jYW52YXMsIHRoaXMuY2FudmFzLndpZHRoICogMC4yNSwgdGhpcy5jYW52YXMuaGVpZ2h0ICogMC4yICtcclxuICAgICAgICAgICAgdGhpcy5jYW52YXMud2lkdGggKiAwLjQgLVxyXG4gICAgICAgICAgICAodGhpcy5jYW52YXMud2lkdGggKiAwLjE5KSAvIDIpO1xyXG4gICAgICAgIGxvYWRJbWFnZXMoeyBwb3BfdXBfaW1hZ2U6IFBPUFVQX0JHX0lNRyB9LCAoaW1hZ2VzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucG9wX3VwX2ltYWdlID0gaW1hZ2VzW1wicG9wX3VwX2ltYWdlXCJdO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlc0xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5yZXRyeVN1cmVQb3B1cCA9IG5ldyBBcmVZb3VTdXJlUG9wVXAodGhpcy5jYW52YXMsIHRoaXMueWVzUmV0cnlDYWxsYmFjaywgdGhpcy5ub1JldHJ5Q2FsbGJhY2spO1xyXG4gICAgICAgIHRoaXMuQ2xvc2VTdXJlUG9wdXAgPSBuZXcgQXJlWW91U3VyZVBvcFVwKHRoaXMuY2FudmFzLCB0aGlzLnN3aXRjaFRvTGV2ZWxTZWxlY3Rpb24sIHRoaXMubm9DbG9zZUNhbGxiYWNrKTtcclxuICAgIH1cclxuICAgIHllc1JldHJ5Q2FsbGJhY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5wbGF5Q2xpY2tTb3VuZCgpO1xyXG4gICAgICAgIHRoaXMucmVsb2FkU2NlbmUodGhpcy5nYW1lcGxheURhdGEsIFwiR2FtZVBsYXlcIik7XHJcbiAgICB9O1xyXG4gICAgbm9SZXRyeUNhbGxiYWNrID0gKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLmlzUmV0cnlCdXR0b25DbGlja2VkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNSZXRyeUJ1dHRvbkNsaWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5jYWxsYmFjaygpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBub0Nsb3NlQ2FsbGJhY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNDbG9zZUJ1dHRvbkNsaWNrZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5pc0Nsb3NlQnV0dG9uQ2xpY2tlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGFkZExpc3RuZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpXHJcbiAgICAgICAgICAgIC5hZGRFdmVudExpc3RlbmVyKENMSUNLLCB0aGlzLmhhbmRsZU1vdXNlQ2xpY2ssIGZhbHNlKTtcclxuICAgIH07XHJcbiAgICBoYW5kbGVNb3VzZUNsaWNrID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgY29uc3Qgc2VsZkVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHZhciByZWN0ID0gc2VsZkVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XHJcbiAgICAgICAgY29uc3QgeSA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcclxuICAgICAgICBpZiAodGhpcy5jYW5jZWxCdXR0b24ub25DbGljayh4LCB5KSkge1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlDbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2soKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMucmV0cnlCdXR0b24ub25DbGljayh4LCB5KSkge1xyXG4gICAgICAgICAgICBpZiAobGFuZyA9PSBcImVuZ2xpc2hcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5Q2xpY2tTb3VuZCgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwb3NlKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlzUmV0cnlCdXR0b25DbGlja2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMucmV0cnlTdXJlUG9wdXAuYWRkTGlzdG5lcigpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5QXJlWW91U3VyZVNvdW5kKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXlDbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2UoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVsb2FkU2NlbmUodGhpcy5nYW1lcGxheURhdGEsIFwiR2FtZVBsYXlcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuY2xvc2VCdXR0b24ub25DbGljayh4LCB5KSkge1xyXG4gICAgICAgICAgICBpZiAobGFuZyA9PSBcImVuZ2xpc2hcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5Q2xpY2tTb3VuZCgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwb3NlKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlzQ2xvc2VCdXR0b25DbGlja2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2xvc2VTdXJlUG9wdXAuYWRkTGlzdG5lcigpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5QXJlWW91U3VyZVNvdW5kKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXlDbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3Bvc2UoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3dpdGNoVG9MZXZlbFNlbGVjdGlvbihcIkdhbWVQbGF5XCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW1hZ2VzTG9hZGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcInJnYmEoMCwwLDAsMC41KVwiO1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFJlY3QoMCwgMCwgdGhpcy5jYW52YXMud2lkdGgsIHRoaXMuY2FudmFzLmhlaWdodCk7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5wb3BfdXBfaW1hZ2UsIHRoaXMuY2FudmFzLndpZHRoICogMC4xLCB0aGlzLmNhbnZhcy5oZWlnaHQgKiAwLjIsIHRoaXMuY2FudmFzLndpZHRoICogMC44LCB0aGlzLmNhbnZhcy53aWR0aCAqIDAuOCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2FuY2VsQnV0dG9uLmRyYXcoKTtcclxuICAgICAgICAgICAgdGhpcy5yZXRyeUJ1dHRvbi5kcmF3KCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2VCdXR0b24uZHJhdygpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc1JldHJ5QnV0dG9uQ2xpY2tlZCA9PSB0cnVlICYmIGxhbmcgPT0gXCJlbmdsaXNoXCIpXHJcbiAgICAgICAgICAgICAgICB0aGlzLnJldHJ5U3VyZVBvcHVwLmRyYXcoKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNDbG9zZUJ1dHRvbkNsaWNrZWQgPT0gdHJ1ZSAmJiBsYW5nID09IFwiZW5nbGlzaFwiKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5DbG9zZVN1cmVQb3B1cC5kcmF3KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcGxheUNsaWNrU291bmQgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5QnV0dG9uQ2xpY2tTb3VuZCgpO1xyXG4gICAgfTtcclxuICAgIHBsYXlBcmVZb3VTdXJlU291bmQgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5QXVkaW8oQVVESU9fQVJFX1lPVV9TVVJFKTtcclxuICAgIH07XHJcbiAgICBkaXNwb3NlID0gKCkgPT4ge1xyXG4gICAgICAgIGRvY3VtZW50XHJcbiAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKVxyXG4gICAgICAgICAgICAucmVtb3ZlRXZlbnRMaXN0ZW5lcihDTElDSywgdGhpcy5oYW5kbGVNb3VzZUNsaWNrLCBmYWxzZSk7XHJcbiAgICB9O1xyXG59XHJcbiIsImltcG9ydCB7IENMSUNLLCBsb2FkSW1hZ2VzIH0gZnJvbSBcIkBjb21tb25cIjtcclxuaW1wb3J0IHsgQXVkaW9QbGF5ZXIgfSBmcm9tIFwiQGNvbXBvbmVudHNcIjtcclxuaW1wb3J0IHsgWWVzQnV0dG9uLCBOb0J1dHRvbiB9IGZyb20gXCJAYnV0dG9uc1wiO1xyXG5pbXBvcnQgeyBQT1BVUF9CR19JTUcgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBcmVZb3VTdXJlUG9wVXAge1xyXG4gICAgY2FudmFzO1xyXG4gICAgY29udGV4dDtcclxuICAgIHllc0J1dHRvbjtcclxuICAgIG5vQnV0dG9uO1xyXG4gICAgaW1hZ2VzTG9hZGVkID0gZmFsc2U7XHJcbiAgICBwb3BfdXBfaW1hZ2U7XHJcbiAgICB5ZXNDYWxsYmFjaztcclxuICAgIG5vQ2FsbGJhY2s7XHJcbiAgICBhdWRpb1BsYXllcjtcclxuICAgIGNvbnN0cnVjdG9yKGNhbnZhcywgeWVzQ2FsbGJhY2ssIG5vQ2FsbGJhY2spIHtcclxuICAgICAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgICAgICB0aGlzLnllc0NhbGxiYWNrID0geWVzQ2FsbGJhY2s7XHJcbiAgICAgICAgdGhpcy5ub0NhbGxiYWNrID0gbm9DYWxsYmFjaztcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllciA9IG5ldyBBdWRpb1BsYXllcigpO1xyXG4gICAgICAgIHRoaXMueWVzQnV0dG9uID0gbmV3IFllc0J1dHRvbih0aGlzLmNvbnRleHQsIHRoaXMuY2FudmFzLCB0aGlzLmNhbnZhcy53aWR0aCAqIDAuNTUsIHRoaXMuY2FudmFzLmhlaWdodCAqIDAuMiArXHJcbiAgICAgICAgICAgIHRoaXMuY2FudmFzLndpZHRoICogMC40IC1cclxuICAgICAgICAgICAgKHRoaXMuY2FudmFzLndpZHRoICogMC4xNSkgLyAyKTtcclxuICAgICAgICB0aGlzLm5vQnV0dG9uID0gbmV3IE5vQnV0dG9uKHRoaXMuY29udGV4dCwgdGhpcy5jYW52YXMsIHRoaXMuY2FudmFzLndpZHRoICogMC4yNSwgdGhpcy5jYW52YXMuaGVpZ2h0ICogMC4yICtcclxuICAgICAgICAgICAgdGhpcy5jYW52YXMud2lkdGggKiAwLjQgLVxyXG4gICAgICAgICAgICAodGhpcy5jYW52YXMud2lkdGggKiAwLjE1KSAvIDIpO1xyXG4gICAgICAgIGxvYWRJbWFnZXMoeyBwb3BfdXBfaW1hZ2U6IFBPUFVQX0JHX0lNRyB9LCAoaW1hZ2VzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucG9wX3VwX2ltYWdlID0gaW1hZ2VzW1wicG9wX3VwX2ltYWdlXCJdO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlc0xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBhZGRMaXN0bmVyID0gKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoQ0xJQ0ssIHRoaXMuaGFuZGxlTW91c2VDbGljaywgZmFsc2UpO1xyXG4gICAgfTtcclxuICAgIGhhbmRsZU1vdXNlQ2xpY2sgPSAoZXZlbnQpID0+IHtcclxuICAgICAgICBjb25zdCBzZWxmRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgdmFyIHJlY3QgPSBzZWxmRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBjb25zdCB4ID0gZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdDtcclxuICAgICAgICBjb25zdCB5ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xyXG4gICAgICAgIGlmICh0aGlzLnllc0J1dHRvbi5vbkNsaWNrKHgsIHkpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGxheUNsaWNrU291bmQoKTtcclxuICAgICAgICAgICAgdGhpcy5kaXNwb3NlKCk7XHJcbiAgICAgICAgICAgIHRoaXMueWVzQ2FsbGJhY2soKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMubm9CdXR0b24ub25DbGljayh4LCB5KSkge1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlDbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZGlzcG9zZSgpO1xyXG4gICAgICAgICAgICB0aGlzLm5vQ2FsbGJhY2soKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgZHJhdygpIHtcclxuICAgICAgICBpZiAodGhpcy5pbWFnZXNMb2FkZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwicmdiYSgwLDAsMCwwLjUpXCI7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KTtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLnBvcF91cF9pbWFnZSwgdGhpcy5jYW52YXMud2lkdGggKiAwLjEsIHRoaXMuY2FudmFzLmhlaWdodCAqIDAuMiwgdGhpcy5jYW52YXMud2lkdGggKiAwLjgsIHRoaXMuY2FudmFzLndpZHRoICogMC44KTtcclxuICAgICAgICAgICAgY29uc3QgdGV4dFkgPSB0aGlzLmNhbnZhcy5oZWlnaHQgKiAwLjIgKyA4MDtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZvbnQgPSBcIjI0cHggQXJpYWxcIjtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxUZXh0KFwiQXJlIHlvdSBzdXJlP1wiLCB0aGlzLmNhbnZhcy53aWR0aCAvIDIsIHRoaXMuY2FudmFzLmhlaWdodCAvIDIuOCk7XHJcbiAgICAgICAgICAgIHRoaXMueWVzQnV0dG9uLmRyYXcoKTtcclxuICAgICAgICAgICAgdGhpcy5ub0J1dHRvbi5kcmF3KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcGxheUNsaWNrU291bmQgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5QnV0dG9uQ2xpY2tTb3VuZCgpO1xyXG4gICAgfTtcclxuICAgIGRpc3Bvc2UgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihDTElDSywgdGhpcy5oYW5kbGVNb3VzZUNsaWNrLCBmYWxzZSk7XHJcbiAgICB9O1xyXG59XHJcbiIsImltcG9ydCB7IEV2ZW50TWFuYWdlciB9IGZyb20gXCJAZXZlbnRzXCI7XHJcbmltcG9ydCB7IFV0aWxzLCBmb250LCBWSVNJQklMSVRZX0NIQU5HRSB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IEF1ZGlvUGxheWVyIH0gZnJvbSBcIkBjb21wb25lbnRzXCI7XHJcbmltcG9ydCB7IFBST01QVF9QTEFZX0JVVFRPTiwgUFJPTVBUX1RFWFRfQkcgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5leHBvcnQgY2xhc3MgUHJvbXB0VGV4dCBleHRlbmRzIEV2ZW50TWFuYWdlciB7XHJcbiAgICB3aWR0aDtcclxuICAgIGhlaWdodDtcclxuICAgIGxldmVsRGF0YTtcclxuICAgIGN1cnJlbnRQcm9tcHRUZXh0O1xyXG4gICAgY3VycmVudFB1enpsZURhdGE7XHJcbiAgICBjYW5hdnNFbGVtZW50O1xyXG4gICAgY29udGV4dDtcclxuICAgIHByb21wdF9pbWFnZTtcclxuICAgIHRhcmdldFN0b25lcztcclxuICAgIHJpZ2h0VG9MZWZ0O1xyXG4gICAgaW1hZ2VzTG9hZGVkID0gZmFsc2U7XHJcbiAgICBhdWRpb1BsYXllcjtcclxuICAgIGlzU3RvbmVEcm9wcGVkID0gZmFsc2U7XHJcbiAgICBkcm9wcGVkU3RvbmVzID0gMDtcclxuICAgIHRpbWUgPSAwO1xyXG4gICAgcHJvbXB0SW1hZ2VXaWR0aCA9IDA7XHJcbiAgICBpc0FwcEZvcmVncm91bmQgPSB0cnVlO1xyXG4gICAgc2NhbGUgPSAxO1xyXG4gICAgaXNTY2FsaW5nVXAgPSB0cnVlO1xyXG4gICAgc2NhbGVGYWN0b3IgPSAwLjAwMDUwO1xyXG4gICAgcHJvbXB0SW1hZ2VIZWlnaHQgPSAwO1xyXG4gICAgcHJvbXB0UGxheUJ1dHRvbjtcclxuICAgIGNvbnN0cnVjdG9yKHdpZHRoLCBoZWlnaHQsIGN1cnJlbnRQdXp6bGVEYXRhLCBsZXZlbERhdGEsIHJpZ2h0VG9MZWZ0KSB7XHJcbiAgICAgICAgc3VwZXIoe1xyXG4gICAgICAgICAgICBzdG9uZURyb3BDYWxsYmFja0hhbmRsZXI6IChldmVudCkgPT4gdGhpcy5oYW5kbGVTdG9uZURyb3AoZXZlbnQpLFxyXG4gICAgICAgICAgICBsb2FkUHV6emxlQ2FsbGJhY2tIYW5kbGVyOiAoZXZlbnQpID0+IHRoaXMuaGFuZGxlTG9hZFB1enpsZShldmVudClcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5sZXZlbERhdGEgPSBsZXZlbERhdGE7XHJcbiAgICAgICAgdGhpcy5yaWdodFRvTGVmdCA9IHJpZ2h0VG9MZWZ0O1xyXG4gICAgICAgIHRoaXMuY3VycmVudFByb21wdFRleHQgPSBjdXJyZW50UHV6emxlRGF0YS5wcm9tcHQucHJvbXB0VGV4dDtcclxuICAgICAgICB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhID0gY3VycmVudFB1enpsZURhdGE7XHJcbiAgICAgICAgdGhpcy50YXJnZXRTdG9uZXMgPSB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhLnRhcmdldFN0b25lcztcclxuICAgICAgICB0aGlzLmNhbmF2c0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSB0aGlzLmNhbmF2c0VsZW1lbnQuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIgPSBuZXcgQXVkaW9QbGF5ZXIoKTtcclxuICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnByZWxvYWRQcm9tcHRBdWRpbyh0aGlzLmdldFByb21wdEF1ZGlvVXJsKCkpO1xyXG4gICAgICAgIHRoaXMucHJvbXB0X2ltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgdGhpcy5wcm9tcHRQbGF5QnV0dG9uID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgdGhpcy5sb2FkSW1hZ2VzKCk7XHJcbiAgICAgICAgdGhpcy50aW1lID0gMDtcclxuICAgICAgICB0aGlzLnByb21wdEltYWdlV2lkdGggPSB0aGlzLndpZHRoICogMC42NTtcclxuICAgICAgICB0aGlzLnByb21wdEltYWdlSGVpZ2h0ID0gdGhpcy5oZWlnaHQgKiAwLjM7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihWSVNJQklMSVRZX0NIQU5HRSwgdGhpcy5oYW5kbGVWaXNpYmlsaXR5Q2hhbmdlLCBmYWxzZSk7XHJcbiAgICB9XHJcbiAgICBoYW5kbGVNb3VzZURvd24gPSAoZXZlbnQpID0+IHtcclxuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgY29uc3Qgc2VsZkVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHZhciByZWN0ID0gc2VsZkVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XHJcbiAgICAgICAgY29uc3QgeSA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcclxuICAgICAgICBpZiAoc2VsZi5vbkNsaWNrKHgsIHkpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGxheVNvdW5kKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGdldFByb21wdEF1ZGlvVXJsID0gKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBVdGlscy5nZXRDb252ZXJ0ZWREZXZQcm9kVVJMKHRoaXMuY3VycmVudFB1enpsZURhdGEucHJvbXB0LnByb21wdEF1ZGlvKTtcclxuICAgIH07XHJcbiAgICBwbGF5U291bmQgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNBcHBGb3JlZ3JvdW5kKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheVByb21wdEF1ZGlvKFV0aWxzLmdldENvbnZlcnRlZERldlByb2RVUkwodGhpcy5jdXJyZW50UHV6emxlRGF0YS5wcm9tcHQucHJvbXB0QXVkaW8pKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgb25DbGljayh4Q2xpY2ssIHlDbGljaykge1xyXG4gICAgICAgIHJldHVybiBNYXRoLnNxcnQoeENsaWNrIC0gdGhpcy53aWR0aCAvIDMpIDwgMTIgJiYgTWF0aC5zcXJ0KHlDbGljayAtIHRoaXMuaGVpZ2h0IC8gNS41KSA8IDEwO1xyXG4gICAgfVxyXG4gICAgc2V0Q3VycnJlbnRQdXp6bGVEYXRhKGRhdGEpIHtcclxuICAgICAgICB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhID0gZGF0YTtcclxuICAgICAgICB0aGlzLmN1cnJlbnRQcm9tcHRUZXh0ID0gZGF0YS5wcm9tcHQucHJvbXB0VGV4dDtcclxuICAgICAgICB0aGlzLnRhcmdldFN0b25lcyA9IHRoaXMuY3VycmVudFB1enpsZURhdGEudGFyZ2V0U3RvbmVzO1xyXG4gICAgfVxyXG4gICAgZHJhd1JUTExhbmcoKSB7XHJcbiAgICAgICAgdmFyIHggPSB0aGlzLndpZHRoIC8gMjtcclxuICAgICAgICBjb25zdCB5ID0gdGhpcy5oZWlnaHQgKiAwLjI2O1xyXG4gICAgICAgIHRoaXMuY29udGV4dC50ZXh0QWxpZ24gPSBcImNlbnRlclwiO1xyXG4gICAgICAgIHZhciBmb250U2l6ZSA9IHRoaXMuY2FsY3VsYXRlRm9udCgpO1xyXG4gICAgICAgIGNvbnN0IHNjYWxlZFdpZHRoID0gdGhpcy5wcm9tcHRJbWFnZVdpZHRoO1xyXG4gICAgICAgIGNvbnN0IHNjYWxlZEhlaWdodCA9IHRoaXMucHJvbXB0SW1hZ2VIZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmZvbnQgPSBgJHtmb250U2l6ZX1weCAke2ZvbnR9LCBtb25vc3BhY2VgO1xyXG4gICAgICAgIGlmICh0aGlzLmxldmVsRGF0YS5sZXZlbE1ldGEubGV2ZWxUeXBlID09IFwiTGV0dGVySW5Xb3JkXCIpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMubGV2ZWxEYXRhLmxldmVsTWV0YS5wcm90b1R5cGUgPT0gXCJWaXNpYmxlXCIpIHtcclxuICAgICAgICAgICAgICAgIHZhciBsZXR0ZXJJbldvcmQgPSB0aGlzLmN1cnJlbnRQcm9tcHRUZXh0LnJlcGxhY2UobmV3IFJlZ0V4cCh0aGlzLmN1cnJlbnRQdXp6bGVEYXRhLnRhcmdldFN0b25lc1swXSwgXCJnXCIpLCBcIlwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcInJlZFwiO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxUZXh0KHRoaXMudGFyZ2V0U3RvbmVzWzBdLCB4ICsgdGhpcy5jb250ZXh0Lm1lYXN1cmVUZXh0KGxldHRlckluV29yZCkud2lkdGggLyAyLCB5KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcImJsYWNrXCI7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFRleHQobGV0dGVySW5Xb3JkLCB4IC0gdGhpcy5jb250ZXh0Lm1lYXN1cmVUZXh0KHRoaXMudGFyZ2V0U3RvbmVzWzBdKS53aWR0aCAvIDIsIHkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLnByb21wdFBsYXlCdXR0b24sIHRoaXMud2lkdGggLyAyLjQsIHkgLyAxLjE1LCBzY2FsZWRXaWR0aCAvIDQsIHNjYWxlZEhlaWdodCAvIDQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMubGV2ZWxEYXRhLmxldmVsTWV0YS5sZXZlbFR5cGUgPT0gXCJXb3JkXCIpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMubGV2ZWxEYXRhLmxldmVsTWV0YS5wcm90b1R5cGUgPT0gXCJWaXNpYmxlXCIpIHtcclxuICAgICAgICAgICAgICAgIHggPSB4IC0gdGhpcy5jb250ZXh0Lm1lYXN1cmVUZXh0KHRoaXMuY3VycmVudFByb21wdFRleHQpLndpZHRoICogMC41O1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IHRoaXMudGFyZ2V0U3RvbmVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZHJvcHBlZFN0b25lcyA+IGkgfHwgdGhpcy5kcm9wcGVkU3RvbmVzID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJibGFja1wiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFRleHQodGhpcy50YXJnZXRTdG9uZXNbaV0sIHgsIHkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwicmVkXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsVGV4dCh0aGlzLnRhcmdldFN0b25lc1tpXSwgeCwgeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHggPSB4ICsgdGhpcy5jb250ZXh0Lm1lYXN1cmVUZXh0KHRoaXMudGFyZ2V0U3RvbmVzW2ldKS53aWR0aCArIDU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMucHJvbXB0UGxheUJ1dHRvbiwgdGhpcy53aWR0aCAvIDIuNCwgeSAvIDEuMTUsIHNjYWxlZFdpZHRoIC8gNCwgc2NhbGVkSGVpZ2h0IC8gNCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5sZXZlbERhdGEubGV2ZWxNZXRhLmxldmVsVHlwZSA9PSBcImF1ZGlvUGxheWVyV29yZFwiKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldFggPSAodGhpcy53aWR0aCAtIHNjYWxlZFdpZHRoKSAqIDEuMjU7XHJcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldFkgPSAodGhpcy5oZWlnaHQgLSBzY2FsZWRIZWlnaHQpICogMC4zMztcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLnByb21wdFBsYXlCdXR0b24sIG9mZnNldFgsIG9mZnNldFksIHNjYWxlZFdpZHRoIC8gNCwgc2NhbGVkSGVpZ2h0IC8gNCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5sZXZlbERhdGEubGV2ZWxNZXRhLnByb3RvVHlwZSA9PSBcIlZpc2libGVcIikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwiYmxhY2tcIjtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsVGV4dCh0aGlzLmN1cnJlbnRQcm9tcHRUZXh0LCB4LCB5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5wcm9tcHRQbGF5QnV0dG9uLCB0aGlzLndpZHRoIC8gMi40LCB5IC8gMS4xNSwgc2NhbGVkV2lkdGggLyA0LCBzY2FsZWRIZWlnaHQgLyA0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRyYXdPdGhlcnMoKSB7XHJcbiAgICAgICAgY29uc3QgcHJvbXB0VGV4dExldHRlcnMgPSB0aGlzLmN1cnJlbnRQcm9tcHRUZXh0LnNwbGl0KFwiXCIpO1xyXG4gICAgICAgIGNvbnN0IHggPSB0aGlzLndpZHRoIC8gMjtcclxuICAgICAgICBjb25zdCB5ID0gdGhpcy5oZWlnaHQgKiAwLjI4O1xyXG4gICAgICAgIGNvbnN0IHNjYWxlZFdpZHRoID0gdGhpcy5wcm9tcHRJbWFnZVdpZHRoO1xyXG4gICAgICAgIGNvbnN0IHNjYWxlZEhlaWdodCA9IHRoaXMucHJvbXB0SW1hZ2VIZWlnaHQ7XHJcbiAgICAgICAgdmFyIGZvbnRTaXplID0gdGhpcy5jYWxjdWxhdGVGb250KCk7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmZvbnQgPSBgJHtmb250U2l6ZX1weCAke2ZvbnR9LCBtb25vc3BhY2VgO1xyXG4gICAgICAgIGxldCBzdGFydFByb21wdHRleHRYID0gdGhpcy53aWR0aCAvIDIgLVxyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQubWVhc3VyZVRleHQodGhpcy5jdXJyZW50UHJvbXB0VGV4dCkud2lkdGggLyAyO1xyXG4gICAgICAgIGxldCBjdXJyZW50V29yZFdpZHRoID0gMDtcclxuICAgICAgICB2YXIgbGV0dGVySGlnaGxpZ2h0ID0gdGhpcy5jdXJyZW50UHV6emxlRGF0YS50YXJnZXRTdG9uZXNbMF0uc3BsaXQoXCJcIik7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9tcHRUZXh0TGV0dGVycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBzd2l0Y2ggKHRoaXMubGV2ZWxEYXRhLmxldmVsTWV0YS5sZXZlbFR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJMZXR0ZXJJbldvcmRcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmxldmVsRGF0YS5sZXZlbE1ldGEucHJvdG9UeXBlID09IFwiVmlzaWJsZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsZXR0ZXJIaWdobGlnaHQuaW5jbHVkZXMocHJvbXB0VGV4dExldHRlcnNbaV0pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXR0ZXJIaWdobGlnaHQgPSBsZXR0ZXJIaWdobGlnaHQuc2xpY2UoMSwgbGV0dGVySGlnaGxpZ2h0Lmxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJyZWRcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsVGV4dChwcm9tcHRUZXh0TGV0dGVyc1tpXSwgc3RhcnRQcm9tcHR0ZXh0WCwgeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJibGFja1wiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxUZXh0KHByb21wdFRleHRMZXR0ZXJzW2ldLCBzdGFydFByb21wdHRleHRYLCB5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5wcm9tcHRQbGF5QnV0dG9uLCB0aGlzLndpZHRoIC8gMi40LCB5IC8gMS4yNSwgc2NhbGVkV2lkdGggLyA0LCBzY2FsZWRIZWlnaHQgLyA0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiV29yZFwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubGV2ZWxEYXRhLmxldmVsTWV0YS5wcm90b1R5cGUgPT0gXCJWaXNpYmxlXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZHJvcHBlZFN0b25lcyA+IGkgfHwgdGhpcy5kcm9wcGVkU3RvbmVzID09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwiYmxhY2tcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsVGV4dChwcm9tcHRUZXh0TGV0dGVyc1tpXSwgc3RhcnRQcm9tcHR0ZXh0WCwgeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJyZWRcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsVGV4dChwcm9tcHRUZXh0TGV0dGVyc1tpXSwgc3RhcnRQcm9tcHR0ZXh0WCwgeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMucHJvbXB0UGxheUJ1dHRvbiwgdGhpcy53aWR0aCAvIDIuNCwgeSAvIDEuMjUsIHNjYWxlZFdpZHRoIC8gNCwgc2NhbGVkSGVpZ2h0IC8gNCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2FzZSBcIlNvdW5kV29yZFwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLnByb21wdFBsYXlCdXR0b24sIHRoaXMud2lkdGggLyAyLjQsIHkgLyAxLjI1LCBzY2FsZWRXaWR0aCAvIDQsIHNjYWxlZEhlaWdodCAvIDQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDoge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmxldmVsRGF0YS5sZXZlbE1ldGEucHJvdG9UeXBlID09IFwiVmlzaWJsZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcImJsYWNrXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsVGV4dCh0aGlzLmN1cnJlbnRQcm9tcHRUZXh0LCB0aGlzLndpZHRoIC8gMi4xLCB5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMucHJvbXB0UGxheUJ1dHRvbiwgdGhpcy53aWR0aCAvIDIuNCwgeSAvIDEuMjUsIHNjYWxlZFdpZHRoIC8gNCwgc2NhbGVkSGVpZ2h0IC8gNCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN1cnJlbnRXb3JkV2lkdGggPSAodGhpcy5jb250ZXh0Lm1lYXN1cmVUZXh0KHByb21wdFRleHRMZXR0ZXJzW2ldKS53aWR0aCArIHRoaXMuY29udGV4dC5tZWFzdXJlVGV4dChwcm9tcHRUZXh0TGV0dGVyc1tpICsgMV0pLndpZHRoKSAvIDI7XHJcbiAgICAgICAgICAgIHN0YXJ0UHJvbXB0dGV4dFggKz0gY3VycmVudFdvcmRXaWR0aDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBkcmF3KGRlbHRhVGltZSkge1xyXG4gICAgICAgIHRoaXMudXBkYXRlU2NhbGluZygpO1xyXG4gICAgICAgIHRoaXMudGltZSA9IChkZWx0YVRpbWUgPCAxNykgPyB0aGlzLnRpbWUgKyBNYXRoLmZsb29yKGRlbHRhVGltZSkgOiB0aGlzLnRpbWUgKyAxNjtcclxuICAgICAgICBpZiAoTWF0aC5mbG9vcih0aGlzLnRpbWUpID49IDE5MTAgJiYgTWF0aC5mbG9vcih0aGlzLnRpbWUpIDw9IDE5MjYpIHtcclxuICAgICAgICAgICAgdGhpcy5wbGF5U291bmQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzU3RvbmVEcm9wcGVkKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNjYWxlZFdpZHRoID0gdGhpcy5wcm9tcHRJbWFnZVdpZHRoICogdGhpcy5zY2FsZTtcclxuICAgICAgICAgICAgY29uc3Qgc2NhbGVkSGVpZ2h0ID0gdGhpcy5wcm9tcHRJbWFnZUhlaWdodCAqIHRoaXMuc2NhbGU7XHJcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldFggPSAodGhpcy53aWR0aCAtIHNjYWxlZFdpZHRoKSAvIDI7XHJcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldFkgPSAodGhpcy5oZWlnaHQgLSBzY2FsZWRIZWlnaHQpIC8gNTtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLnByb21wdF9pbWFnZSwgb2Zmc2V0WCwgb2Zmc2V0WSwgc2NhbGVkV2lkdGgsIHNjYWxlZEhlaWdodCk7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcImJsYWNrXCI7XHJcbiAgICAgICAgICAgIHRoaXMucmlnaHRUb0xlZnRcclxuICAgICAgICAgICAgICAgID8gdGhpcy5kcmF3UlRMTGFuZygpXHJcbiAgICAgICAgICAgICAgICA6IHRoaXMuZHJhd090aGVycygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGhhbmRsZVN0b25lRHJvcChldmVudCkge1xyXG4gICAgICAgIHRoaXMuaXNTdG9uZURyb3BwZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlTG9hZFB1enpsZShldmVudCkge1xyXG4gICAgICAgIHRoaXMuZHJvcHBlZFN0b25lcyA9IDA7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50UHV6emxlRGF0YSA9IHRoaXMubGV2ZWxEYXRhLnB1enpsZXNbZXZlbnQuZGV0YWlsLmNvdW50ZXJdO1xyXG4gICAgICAgIHRoaXMuY3VycmVudFByb21wdFRleHQgPSB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhLnByb21wdC5wcm9tcHRUZXh0O1xyXG4gICAgICAgIHRoaXMudGFyZ2V0U3RvbmVzID0gdGhpcy5jdXJyZW50UHV6emxlRGF0YS50YXJnZXRTdG9uZXM7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wcmVsb2FkUHJvbXB0QXVkaW8odGhpcy5nZXRQcm9tcHRBdWRpb1VybCgpKTtcclxuICAgICAgICB0aGlzLmlzU3RvbmVEcm9wcGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50aW1lID0gMDtcclxuICAgIH1cclxuICAgIGRpc3Bvc2UoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihWSVNJQklMSVRZX0NIQU5HRSwgdGhpcy5oYW5kbGVWaXNpYmlsaXR5Q2hhbmdlLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyRXZlbnRMaXN0ZW5lcigpO1xyXG4gICAgfVxyXG4gICAgZHJvcHBlZFN0b25lSW5kZXgoaW5kZXgpIHtcclxuICAgICAgICB0aGlzLmRyb3BwZWRTdG9uZXMgPSBpbmRleDtcclxuICAgIH1cclxuICAgIGNhbGN1bGF0ZUZvbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuICh0aGlzLnByb21wdEltYWdlV2lkdGggLyB0aGlzLmN1cnJlbnRQcm9tcHRUZXh0Lmxlbmd0aCA+IDM1KSA/IDM1IDogdGhpcy53aWR0aCAqIDAuNjUgLyB0aGlzLmN1cnJlbnRQcm9tcHRUZXh0Lmxlbmd0aDtcclxuICAgIH1cclxuICAgIHVwZGF0ZVNjYWxpbmcoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNTY2FsaW5nVXApIHtcclxuICAgICAgICAgICAgdGhpcy5zY2FsZSArPSB0aGlzLnNjYWxlRmFjdG9yO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zY2FsZSA+PSAxLjA1KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlzU2NhbGluZ1VwID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2NhbGUgLT0gdGhpcy5zY2FsZUZhY3RvcjtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2NhbGUgPD0gMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zY2FsZSA9IDE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmlzU2NhbGluZ1VwID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGhhbmRsZVZpc2liaWxpdHlDaGFuZ2UgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA9PSBcImhpZGRlblwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIuc3RvcEFsbEF1ZGlvcygpO1xyXG4gICAgICAgICAgICB0aGlzLmlzQXBwRm9yZWdyb3VuZCA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlID09IFwidmlzaWJsZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNBcHBGb3JlZ3JvdW5kID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgYXN5bmMgbG9hZEltYWdlcygpIHtcclxuICAgICAgICBjb25zdCBpbWFnZTFQcm9taXNlID0gdGhpcy5sb2FkSW1hZ2UodGhpcy5wcm9tcHRfaW1hZ2UsIFBST01QVF9URVhUX0JHKTtcclxuICAgICAgICBjb25zdCBpbWFnZTJQcm9taXNlID0gdGhpcy5sb2FkSW1hZ2UodGhpcy5wcm9tcHRQbGF5QnV0dG9uLCBQUk9NUFRfUExBWV9CVVRUT04pO1xyXG4gICAgICAgIGF3YWl0IFByb21pc2UuYWxsKFtpbWFnZTFQcm9taXNlLCBpbWFnZTJQcm9taXNlXSk7XHJcbiAgICAgICAgdGhpcy5pbWFnZXNMb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgIC8vIFlvdSBjYW4gZG8gYWRkaXRpb25hbCBhY3Rpb25zIGhlcmUgYWZ0ZXIgYm90aCBpbWFnZXMgYXJlIGxvYWRlZC5cclxuICAgIH1cclxuICAgIGxvYWRJbWFnZShpbWFnZSwgc3JjKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgaW1hZ2Uub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBpbWFnZS5zcmMgPSBzcmM7XHJcbiAgICAgICAgICAgIGltYWdlLm9uZXJyb3IgPSAoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgU3RvbmVDb25maWcsIFZJU0lCSUxJVFlfQ0hBTkdFLCBVdGlscyB9IGZyb20gJ0Bjb21tb24nO1xyXG5pbXBvcnQgeyBFdmVudE1hbmFnZXIgfSBmcm9tIFwiQGV2ZW50c1wiO1xyXG5pbXBvcnQgeyBUdXRvcmlhbCwgQXVkaW9QbGF5ZXIgfSBmcm9tIFwiQGNvbXBvbmVudHNcIjtcclxuaW1wb3J0IHsgR2FtZVNjb3JlIH0gZnJvbSBcIkBkYXRhXCI7XHJcbmltcG9ydCB7IEFVRElPX1BBVEhfRUFUUywgQVVESU9fUEFUSF9NT05TVEVSX1NQSVQsIEFVRElPX1BBVEhfTU9OU1RFUl9ESVNTQVBPSU5URUQsIEFVRElPX1BBVEhfUE9JTlRTX0FERCwgQVVESU9fUEFUSF9DT1JSRUNUX1NUT05FLCBBVURJT19QQVRIX0NIRUVSSU5HX0ZVTkMsIEFTU0VUU19QQVRIX1NUT05FX1BJTktfQkcgfSBmcm9tICcuLi9jb25zdGFudHMnO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdG9uZUhhbmRsZXIgZXh0ZW5kcyBFdmVudE1hbmFnZXIge1xyXG4gICAgY29udGV4dDtcclxuICAgIGNhbnZhcztcclxuICAgIGN1cnJlbnRQdXp6bGVEYXRhO1xyXG4gICAgdGFyZ2V0U3RvbmVzO1xyXG4gICAgc3RvbmVQb3M7XHJcbiAgICBwaWNrZWRTdG9uZTtcclxuICAgIGZvaWxTdG9uZXMgPSBuZXcgQXJyYXkoKTtcclxuICAgIGFuc3dlciA9IFwiXCI7XHJcbiAgICBwdXp6bGVOdW1iZXI7XHJcbiAgICBsZXZlbERhdGE7XHJcbiAgICBjb3JyZWN0QW5zd2VyO1xyXG4gICAgcHV6emxlU3RhcnRUaW1lO1xyXG4gICAgc2hvd1R1dG9yaWFsID0gR2FtZVNjb3JlLmdldERhdGFmcm9tU3RvcmFnZSgpLmxlbmd0aCA9PSB1bmRlZmluZWQgPyB0cnVlIDogZmFsc2U7XHJcbiAgICBjb3JyZWN0U3RvbmVBdWRpbztcclxuICAgIHR1dG9yaWFsO1xyXG4gICAgY29ycmVjdFRhcmdldFN0b25lO1xyXG4gICAgc3RvbmViZztcclxuICAgIGF1ZGlvUGxheWVyO1xyXG4gICAgZmVlZGJhY2tBdWRpb3M7XHJcbiAgICB0aW1lclRpY2tpbmdJbnN0YW5jZTtcclxuICAgIGlzR2FtZVBhdXNlZCA9IGZhbHNlO1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCwgY2FudmFzLCBwdXp6bGVOdW1iZXIsIGxldmVsRGF0YSwgZmVlZGJhY2tBdWRpb3MsIHRpbWVyVGlja2luZ0luc3RhbmNlKSB7XHJcbiAgICAgICAgc3VwZXIoe1xyXG4gICAgICAgICAgICBzdG9uZURyb3BDYWxsYmFja0hhbmRsZXI6IChldmVudCkgPT4gdGhpcy5oYW5kbGVTdG9uZURyb3AoZXZlbnQpLFxyXG4gICAgICAgICAgICBsb2FkUHV6emxlQ2FsbGJhY2tIYW5kbGVyOiAoZXZlbnQpID0+IHRoaXMuaGFuZGxlTG9hZFB1enpsZShldmVudCksXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcclxuICAgICAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgICAgICB0aGlzLnB1enpsZU51bWJlciA9IHB1enpsZU51bWJlcjtcclxuICAgICAgICB0aGlzLmxldmVsRGF0YSA9IGxldmVsRGF0YTtcclxuICAgICAgICB0aGlzLnNldFRhcmdldFN0b25lKHRoaXMucHV6emxlTnVtYmVyKTtcclxuICAgICAgICB0aGlzLmluaXRpYWxpemVTdG9uZVBvcygpO1xyXG4gICAgICAgIHRoaXMuY29ycmVjdFN0b25lQXVkaW8gPSBuZXcgQXVkaW8oQVVESU9fUEFUSF9DT1JSRUNUX1NUT05FKTtcclxuICAgICAgICB0aGlzLmNvcnJlY3RTdG9uZUF1ZGlvLmxvb3AgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmZlZWRiYWNrQXVkaW9zID0gdGhpcy5jb252ZXJ0RmVlZEJhY2tBdWRpb3NUb0xpc3QoZmVlZGJhY2tBdWRpb3MpO1xyXG4gICAgICAgIHRoaXMucHV6emxlU3RhcnRUaW1lID0gbmV3IERhdGUoKTtcclxuICAgICAgICB0aGlzLnR1dG9yaWFsID0gbmV3IFR1dG9yaWFsKGNvbnRleHQsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCwgcHV6emxlTnVtYmVyKTtcclxuICAgICAgICB0aGlzLnN0b25lYmcgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICB0aGlzLnN0b25lYmcuc3JjID0gQVNTRVRTX1BBVEhfU1RPTkVfUElOS19CRztcclxuICAgICAgICB0aGlzLmF1ZGlvUGxheWVyID0gbmV3IEF1ZGlvUGxheWVyKCk7XHJcbiAgICAgICAgdGhpcy5zdG9uZWJnLm9ubG9hZCA9IChlKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlU3RvbmVzKHRoaXMuc3RvbmViZyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmF1ZGlvUGxheWVyID0gbmV3IEF1ZGlvUGxheWVyKCk7XHJcbiAgICAgICAgdGhpcy50aW1lclRpY2tpbmdJbnN0YW5jZSA9IHRpbWVyVGlja2luZ0luc3RhbmNlO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoVklTSUJJTElUWV9DSEFOR0UsIHRoaXMuaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSwgZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlU3RvbmVzKGltZykge1xyXG4gICAgICAgIGNvbnN0IGZvaWxTdG9uZXMgPSB0aGlzLmdldEZvaWxTdG9uZXMoKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZvaWxTdG9uZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGZvaWxTdG9uZXNbaV0gPT0gdGhpcy5jb3JyZWN0VGFyZ2V0U3RvbmUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudHV0b3JpYWwudXBkYXRlVGFyZ2V0U3RvbmVQb3NpdGlvbnModGhpcy5zdG9uZVBvc1tpXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5mb2lsU3RvbmVzLnB1c2gobmV3IFN0b25lQ29uZmlnKHRoaXMuY29udGV4dCwgdGhpcy5jYW52YXMud2lkdGgsIHRoaXMuY2FudmFzLmhlaWdodCwgZm9pbFN0b25lc1tpXSwgdGhpcy5zdG9uZVBvc1tpXVswXSwgdGhpcy5zdG9uZVBvc1tpXVsxXSwgaW1nLCB0aGlzLnRpbWVyVGlja2luZ0luc3RhbmNlLCBpID09IGZvaWxTdG9uZXMubGVuZ3RoIC0gMSA/IHRoaXMudHV0b3JpYWwgOiBudWxsKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZHJhdyhkZWx0YVRpbWUpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZm9pbFN0b25lcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB0aGlzLmZvaWxTdG9uZXNbaV0uZHJhdyhkZWx0YVRpbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5mb2lsU3RvbmVzW3RoaXMuZm9pbFN0b25lcy5sZW5ndGggLSAxXS5mcmFtZSA+PSAxMDAgJiZcclxuICAgICAgICAgICAgIXRoaXMuaXNHYW1lUGF1c2VkKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGltZXJUaWNraW5nSW5zdGFuY2UudXBkYXRlKGRlbHRhVGltZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZHJhd1dvcmRQdXp6bGVMZXR0ZXJzKGRlbHRhVGltZSwgc2hvdWxkSGlkZVN0b25lQ2hlY2tlciwgZ3JvdXBlZExldHRlcnMpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZm9pbFN0b25lcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoc2hvdWxkSGlkZVN0b25lQ2hlY2tlcihpKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mb2lsU3RvbmVzW2ldLmRyYXcoZGVsdGFUaW1lLCBPYmplY3Qua2V5cyhncm91cGVkTGV0dGVycykubGVuZ3RoID4gMSAmJiBncm91cGVkTGV0dGVyc1tpXSAhPT0gdW5kZWZpbmVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5mb2lsU3RvbmVzW3RoaXMuZm9pbFN0b25lcy5sZW5ndGggLSAxXS5mcmFtZSA+PSAxMDAgJiZcclxuICAgICAgICAgICAgIXRoaXMuaXNHYW1lUGF1c2VkKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGltZXJUaWNraW5nSW5zdGFuY2UudXBkYXRlKGRlbHRhVGltZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaW5pdGlhbGl6ZVN0b25lUG9zKCkge1xyXG4gICAgICAgIGxldCBvZmZzZXRDb29yZGluYXRlVmFsdWUgPSAzMjtcclxuICAgICAgICB0aGlzLnN0b25lUG9zID0gW1xyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIDUgLSBvZmZzZXRDb29yZGluYXRlVmFsdWUsXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgLyAxLjkgLSBvZmZzZXRDb29yZGluYXRlVmFsdWUsXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FudmFzLndpZHRoIC8gMiAtIG9mZnNldENvb3JkaW5hdGVWYWx1ZSxcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FudmFzLmhlaWdodCAvIDEuMTUgLSBvZmZzZXRDb29yZGluYXRlVmFsdWUsXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FudmFzLndpZHRoIC8gMy41ICsgdGhpcy5jYW52YXMud2lkdGggLyAyIC0gb2Zmc2V0Q29vcmRpbmF0ZVZhbHVlLFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMS4yIC0gb2Zmc2V0Q29vcmRpbmF0ZVZhbHVlLFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIDQgLSBvZmZzZXRDb29yZGluYXRlVmFsdWUsXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgLyAxLjI4IC0gb2Zmc2V0Q29vcmRpbmF0ZVZhbHVlLFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIDcgLSBvZmZzZXRDb29yZGluYXRlVmFsdWUsXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgLyAxLjUgLSBvZmZzZXRDb29yZGluYXRlVmFsdWUsXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FudmFzLndpZHRoIC8gMi4zICtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIDIuMSAtXHJcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0Q29vcmRpbmF0ZVZhbHVlLFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMS45IC0gb2Zmc2V0Q29vcmRpbmF0ZVZhbHVlLFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIDIuMyArXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW52YXMud2lkdGggLyAyLjEgLVxyXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldENvb3JkaW5hdGVWYWx1ZSxcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FudmFzLmhlaWdodCAvIDEuNDIgLSBvZmZzZXRDb29yZGluYXRlVmFsdWUsXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FudmFzLndpZHRoIC8gNiAtIG9mZnNldENvb3JkaW5hdGVWYWx1ZSxcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FudmFzLmhlaWdodCAvIDEuMSAtIG9mZnNldENvb3JkaW5hdGVWYWx1ZSxcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICBdO1xyXG4gICAgICAgIHRoaXMuc3RvbmVQb3MgPSB0aGlzLnN0b25lUG9zLnNvcnQoKCkgPT4gTWF0aC5yYW5kb20oKSAtIDAuNSk7XHJcbiAgICB9XHJcbiAgICBzZXRUYXJnZXRTdG9uZShwdXp6bGVOdW1iZXIpIHtcclxuICAgICAgICB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhID0gdGhpcy5sZXZlbERhdGEucHV6emxlc1twdXp6bGVOdW1iZXJdO1xyXG4gICAgICAgIHRoaXMudGFyZ2V0U3RvbmVzID0gWy4uLnRoaXMuY3VycmVudFB1enpsZURhdGEudGFyZ2V0U3RvbmVzXTtcclxuICAgICAgICB0aGlzLmNvcnJlY3RUYXJnZXRTdG9uZSA9IHRoaXMudGFyZ2V0U3RvbmVzLmpvaW4oXCJcIik7XHJcbiAgICB9XHJcbiAgICBoYW5kbGVTdG9uZURyb3AoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmZvaWxTdG9uZXMgPSBbXTtcclxuICAgIH1cclxuICAgIGhhbmRsZUxvYWRQdXp6bGUoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmZvaWxTdG9uZXMgPSBbXTtcclxuICAgICAgICB0aGlzLnR1dG9yaWFsLnNldFB1enpsZU51bWJlcihldmVudC5kZXRhaWwuY291bnRlcik7XHJcbiAgICAgICAgdGhpcy5wdXp6bGVOdW1iZXIgPSBldmVudC5kZXRhaWwuY291bnRlcjtcclxuICAgICAgICB0aGlzLnNldFRhcmdldFN0b25lKHRoaXMucHV6emxlTnVtYmVyKTtcclxuICAgICAgICB0aGlzLmluaXRpYWxpemVTdG9uZVBvcygpO1xyXG4gICAgICAgIHRoaXMuY3JlYXRlU3RvbmVzKHRoaXMuc3RvbmViZyk7XHJcbiAgICB9XHJcbiAgICBkaXNwb3NlKCkge1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoVklTSUJJTElUWV9DSEFOR0UsIHRoaXMuaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMudW5yZWdpc3RlckV2ZW50TGlzdGVuZXIoKTtcclxuICAgIH1cclxuICAgIGlzU3RvbmVMZXR0ZXJEcm9wQ29ycmVjdChkcm9wcGVkU3RvbmUsIGZlZWRCYWNrSW5kZXgsIGlzV29yZCA9IGZhbHNlKSB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVG8gRG86IE5lZWQgdG8gcmVmYWN0b3Igb3IgcmV2b21lIHRoaXMgY29tcGxldGVseSBhbmQgcGxhY2Ugc29tZXRoaW5nXHJcbiAgICAgICAgICogdGhhdCBpcyB0YWlsb3JlZCB0byBzaW5nbGUgbGV0dGVyIHB1enpsZSBzaW5jZSB3b3JkIHB1enpsZSBubyBsb25nZXIgdXNlcyB0aGlzLlxyXG4gICAgICAgICAqIFdpbGwgbGVhdmUgdGhpcyBmb3Igbm93IHRvIGF2b2lkIG1lc3Npbmcgd2l0aHQgdGhlIHNpbmdsZSBsZXR0ZXIgcHV6emxlLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGNvbnN0IGlzTGV0dGVyRHJvcENvcnJlY3QgPSBpc1dvcmRcclxuICAgICAgICAgICAgPyBkcm9wcGVkU3RvbmUgPT0gdGhpcy5jb3JyZWN0VGFyZ2V0U3RvbmUuc3Vic3RyaW5nKDAsIGRyb3BwZWRTdG9uZS5sZW5ndGgpXHJcbiAgICAgICAgICAgIDogZHJvcHBlZFN0b25lID09IHRoaXMuY29ycmVjdFRhcmdldFN0b25lO1xyXG4gICAgICAgIHRoaXMucHJvY2Vzc0xldHRlckRyb3BGZWVkYmFja0F1ZGlvKGZlZWRCYWNrSW5kZXgsIGlzTGV0dGVyRHJvcENvcnJlY3QsIGlzV29yZCwgZHJvcHBlZFN0b25lKTtcclxuICAgICAgICByZXR1cm4gaXNMZXR0ZXJEcm9wQ29ycmVjdDtcclxuICAgIH1cclxuICAgIHByb2Nlc3NMZXR0ZXJEcm9wRmVlZGJhY2tBdWRpbyhmZWVkQmFja0luZGV4LCBpc0xldHRlckRyb3BDb3JyZWN0LCBpc1dvcmQsIGRyb3BwZWRTdG9uZSkge1xyXG4gICAgICAgIGlmIChpc0xldHRlckRyb3BDb3JyZWN0KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvbmRpdGlvbiA9IGlzV29yZFxyXG4gICAgICAgICAgICAgICAgPyBkcm9wcGVkU3RvbmUgPT09IHRoaXMuZ2V0Q29ycmVjdFRhcmdldFN0b25lKCkgLy8gY29uZGl0aW9uIGZvciB3b3JkIHB1enpsZVxyXG4gICAgICAgICAgICAgICAgOiBpc0xldHRlckRyb3BDb3JyZWN0OyAvLyBmb3IgbGV0dGVyIGFuZCBsZXR0ZXIgZm9yIHdvcmQgcHV6emxlXHJcbiAgICAgICAgICAgIGlmIChjb25kaXRpb24pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucGxheUNvcnJlY3RBbnN3ZXJGZWVkYmFja1NvdW5kKGZlZWRCYWNrSW5kZXgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5RmVlZGJhY2tBdWRpb3MoZmFsc2UsIEFVRElPX1BBVEhfRUFUUywgQVVESU9fUEFUSF9DSEVFUklOR19GVU5DKDIpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5RmVlZGJhY2tBdWRpb3MoZmFsc2UsIEFVRElPX1BBVEhfRUFUUywgQVVESU9fUEFUSF9NT05TVEVSX1NQSVQsIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSkgPiAwID8gQVVESU9fUEFUSF9NT05TVEVSX0RJU1NBUE9JTlRFRCA6IG51bGwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGdldENvcnJlY3RUYXJnZXRTdG9uZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb3JyZWN0VGFyZ2V0U3RvbmU7XHJcbiAgICB9XHJcbiAgICBnZXRGb2lsU3RvbmVzKCkge1xyXG4gICAgICAgIHRoaXMuY3VycmVudFB1enpsZURhdGEudGFyZ2V0U3RvbmVzLmZvckVhY2goKGUpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhLmZvaWxTdG9uZXMuaW5kZXhPZihlKTtcclxuICAgICAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50UHV6emxlRGF0YS5mb2lsU3RvbmVzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCB0b3RhbFN0b25lc0NvdW50ID0gdGhpcy5jdXJyZW50UHV6emxlRGF0YS50YXJnZXRTdG9uZXMubGVuZ3RoICtcclxuICAgICAgICAgICAgdGhpcy5jdXJyZW50UHV6emxlRGF0YS5mb2lsU3RvbmVzLmxlbmd0aDtcclxuICAgICAgICBpZiAodG90YWxTdG9uZXNDb3VudCA+IDgpIHtcclxuICAgICAgICAgICAgY29uc3QgZXh0cmFTdG9uZXNDb3VudCA9IHRvdGFsU3RvbmVzQ291bnQgLSA4O1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhLmZvaWxTdG9uZXMuc3BsaWNlKDAsIGV4dHJhU3RvbmVzQ291bnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhLnRhcmdldFN0b25lcy5mb3JFYWNoKChlKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFB1enpsZURhdGEuZm9pbFN0b25lcy5wdXNoKGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRQdXp6bGVEYXRhLmZvaWxTdG9uZXMuc29ydCgoKSA9PiBNYXRoLnJhbmRvbSgpIC0gMC41KTtcclxuICAgIH1cclxuICAgIGhhbmRsZVZpc2liaWxpdHlDaGFuZ2UgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5zdG9wQWxsQXVkaW9zKCk7XHJcbiAgICAgICAgdGhpcy5jb3JyZWN0U3RvbmVBdWRpby5wYXVzZSgpO1xyXG4gICAgfTtcclxuICAgIGNvbnZlcnRGZWVkQmFja0F1ZGlvc1RvTGlzdChmZWVkYmFja0F1ZGlvcykge1xyXG4gICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgIGZlZWRiYWNrQXVkaW9zW1wiZmFudGFzdGljXCJdLFxyXG4gICAgICAgICAgICBmZWVkYmFja0F1ZGlvc1tcImdyZWF0XCJdLFxyXG4gICAgICAgICAgICBmZWVkYmFja0F1ZGlvc1tcImFtYXppbmdcIl1cclxuICAgICAgICBdO1xyXG4gICAgfVxyXG4gICAgc2V0R2FtZVBhdXNlKGlzR2FtZVBhdXNlZCkge1xyXG4gICAgICAgIHRoaXMuaXNHYW1lUGF1c2VkID0gaXNHYW1lUGF1c2VkO1xyXG4gICAgfVxyXG4gICAgcGxheUNvcnJlY3RBbnN3ZXJGZWVkYmFja1NvdW5kKGZlZWRCYWNrSW5kZXgpIHtcclxuICAgICAgICBjb25zdCByYW5kb21OdW1iZXIgPSBVdGlscy5nZXRSYW5kb21OdW1iZXIoMSwgMykudG9TdHJpbmcoKTtcclxuICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlGZWVkYmFja0F1ZGlvcyhmYWxzZSwgQVVESU9fUEFUSF9FQVRTLCBBVURJT19QQVRIX0NIRUVSSU5HX0ZVTkMocmFuZG9tTnVtYmVyKSwgQVVESU9fUEFUSF9QT0lOVFNfQURELCBVdGlscy5nZXRDb252ZXJ0ZWREZXZQcm9kVVJMKHRoaXMuZmVlZGJhY2tBdWRpb3NbZmVlZEJhY2tJbmRleF0pKTtcclxuICAgICAgICAvLyB0byBwbGF5IHRoZSBhdWRpbyBwYXJyYWxsZWx5LlxyXG4gICAgICAgIHRoaXMuY29ycmVjdFN0b25lQXVkaW8ucGxheSgpO1xyXG4gICAgfVxyXG4gICAgcmVzZXRTdG9uZVBvc2l0aW9uKHdpZHRoLCBwaWNrZWRTdG9uZSwgcGlja2VkU3RvbmVPYmplY3QpIHtcclxuICAgICAgICBjb25zdCBzdG9uZSA9IHBpY2tlZFN0b25lO1xyXG4gICAgICAgIGNvbnN0IHN0b25lT2JqID0gcGlja2VkU3RvbmVPYmplY3Q7XHJcbiAgICAgICAgLy9SZXNldHMgdGhlIHByZXZpb3VzIHN0b25lIGxldHRlciB0byBpdHMgb3JpZ2luYWwgcG9zaXRpb24uXHJcbiAgICAgICAgaWYgKHN0b25lICYmXHJcbiAgICAgICAgICAgIHN0b25lT2JqICYmXHJcbiAgICAgICAgICAgIHN0b25lLnRleHQgJiZcclxuICAgICAgICAgICAgdHlwZW9mIHN0b25lT2JqLm9yaWd4ID09PSBcIm51bWJlclwiICYmXHJcbiAgICAgICAgICAgIHR5cGVvZiBzdG9uZU9iai5vcmlneSA9PT0gXCJudW1iZXJcIikge1xyXG4gICAgICAgICAgICBjb25zdCB4TGltaXQgPSA1MDtcclxuICAgICAgICAgICAgY29uc3QgaGFsZldpZHRoID0gd2lkdGggLyAyO1xyXG4gICAgICAgICAgICBzdG9uZS54ID0gc3RvbmUudGV4dC5sZW5ndGggPD0gMyAmJlxyXG4gICAgICAgICAgICAgICAgc3RvbmVPYmoub3JpZ3ggPCB4TGltaXQgJiZcclxuICAgICAgICAgICAgICAgIHN0b25lT2JqLm9yaWd4IDwgaGFsZldpZHRoXHJcbiAgICAgICAgICAgICAgICA/IHN0b25lT2JqLm9yaWd4ICsgMjVcclxuICAgICAgICAgICAgICAgIDogc3RvbmVPYmoub3JpZ3g7XHJcbiAgICAgICAgICAgIHN0b25lLnkgPSBzdG9uZU9iai5vcmlneTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHN0b25lO1xyXG4gICAgfVxyXG4gICAgY29tcHV0ZUN1cnNvckRpc3RhbmNlKHBvc1gsIHBvc1ksIHNjKSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguc3FydCgocG9zWCAtIHNjLngpICoqIDIgKyAocG9zWSAtIHNjLnkpICoqIDIpO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlUGlja1N0b25lVXAocG9zWCwgcG9zWSkge1xyXG4gICAgICAgIGxldCBzdG9uZUxldHRlciA9IG51bGw7XHJcbiAgICAgICAgbGV0IGN0ciA9IDA7XHJcbiAgICAgICAgZm9yIChsZXQgc2Mgb2YgdGhpcy5mb2lsU3RvbmVzKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRpc3RhbmNlID0gdGhpcy5jb21wdXRlQ3Vyc29yRGlzdGFuY2UocG9zWCwgcG9zWSwgc2MpO1xyXG4gICAgICAgICAgICBpZiAoZGlzdGFuY2UgPD0gNDApIHtcclxuICAgICAgICAgICAgICAgIHN0b25lTGV0dGVyID0gc2M7XHJcbiAgICAgICAgICAgICAgICAvKiBBZGRzIGEgdW5pcXVlIGlkZW50aWZpZXIgdG8gdGVsbCB3aGljaCBsZXR0ZXIgaXMgd2hpY2ggaW4gY2FzZSB0aGVyZSBhcmUgdHdvIG9yIG1vcmUgb2YgdGhlIHNhbWUgbGV0dGVyLiovXHJcbiAgICAgICAgICAgICAgICBzdG9uZUxldHRlclsnZm9pbFN0b25lSW5kZXgnXSA9IGN0cjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN0cisrO1xyXG4gICAgICAgIH1cclxuICAgICAgICA7XHJcbiAgICAgICAgcmV0dXJuIHN0b25lTGV0dGVyO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlSG92ZXJpbmdUb0Fub3RoZXJTdG9uZShwb3NYLCBwb3NZLCBzaG91bGRHcm91cExldHRlcikge1xyXG4gICAgICAgIC8qIEhhbmRsZSBob3ZlcmluZyBvZiBzdG9uZXMgZm9yIHdvcmQgcHV6emxlIG11bHRpLWxldHRlciBzZWxlY3QuKi9cclxuICAgICAgICBsZXQgc3RvbmVMZXR0ZXIgPSBudWxsO1xyXG4gICAgICAgIGxldCBjdHIgPSAwO1xyXG4gICAgICAgIGZvciAobGV0IHNjIG9mIHRoaXMuZm9pbFN0b25lcykge1xyXG4gICAgICAgICAgICBjb25zdCBkaXN0YW5jZSA9IHRoaXMuY29tcHV0ZUN1cnNvckRpc3RhbmNlKHBvc1gsIHBvc1ksIHNjKTtcclxuICAgICAgICAgICAgaWYgKGRpc3RhbmNlIDw9IDQwICYmIHNob3VsZEdyb3VwTGV0dGVyKHNjLnRleHQsIGN0cikpIHtcclxuICAgICAgICAgICAgICAgIHN0b25lTGV0dGVyID0gc2M7XHJcbiAgICAgICAgICAgICAgICAvKiBBZGRzIGEgdW5pcXVlIGlkZW50aWZpZXIgdG8gdGVsbCB3aGljaCBsZXR0ZXIgaXMgd2hpY2ggaW4gY2FzZSB0aGVyZSBhcmUgdHdvIG9yIG1vcmUgb2YgdGhlIHNhbWUgbGV0dGVyLiovXHJcbiAgICAgICAgICAgICAgICBzdG9uZUxldHRlclsnZm9pbFN0b25lSW5kZXgnXSA9IGN0cjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN0cisrO1xyXG4gICAgICAgIH1cclxuICAgICAgICA7XHJcbiAgICAgICAgcmV0dXJuIHN0b25lTGV0dGVyO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlTW92aW5nU3RvbmVMZXR0ZXIoZHJhZ2dpbmdTdG9uZSwgcG9zWCwgcG9zWSkge1xyXG4gICAgICAgIGNvbnN0IHVwZGF0ZWRTdG9uZUNvb3JkaW5hdGVzID0gZHJhZ2dpbmdTdG9uZTtcclxuICAgICAgICBjb25zdCByZWN0ID0gdGhpcy5jYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgdXBkYXRlZFN0b25lQ29vcmRpbmF0ZXMueCA9IHBvc1ggLSByZWN0LmxlZnQ7XHJcbiAgICAgICAgdXBkYXRlZFN0b25lQ29vcmRpbmF0ZXMueSA9IHBvc1kgLSByZWN0LnRvcDtcclxuICAgICAgICByZXR1cm4gdXBkYXRlZFN0b25lQ29vcmRpbmF0ZXM7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgbG9hZEltYWdlcyB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IEV2ZW50TWFuYWdlciB9IGZyb20gXCJAZXZlbnRzXCI7XHJcbmltcG9ydCB7IEF1ZGlvUGxheWVyIH0gZnJvbSBcIkBjb21wb25lbnRzXCI7XHJcbmltcG9ydCB7IFRJTUVSX0VNUFRZLCBST1RBVElOR19DTE9DSywgVElNRVJfRlVMTCwgQVVESU9fVElNRU9VVCB9IGZyb20gXCJAY29uc3RhbnRzXCI7XHJcbmV4cG9ydCBjbGFzcyBUaW1lclRpY2tpbmcgZXh0ZW5kcyBFdmVudE1hbmFnZXIge1xyXG4gICAgd2lkdGg7XHJcbiAgICBoZWlnaHQ7XHJcbiAgICB0aW1lcldpZHRoO1xyXG4gICAgdGltZXJIZWlnaHQ7XHJcbiAgICB3aWR0aFRvQ2xlYXI7XHJcbiAgICB0aW1lcjtcclxuICAgIGlzVGltZXJTdGFydGVkO1xyXG4gICAgaXNUaW1lckVuZGVkO1xyXG4gICAgaXNUaW1lclJ1bm5pbmdPdXQ7XHJcbiAgICBjYW5hdnNFbGVtZW50O1xyXG4gICAgY29udGV4dDtcclxuICAgIHRpbWVyX2Z1bGw7XHJcbiAgICBwYXVzZUJ1dHRvbkNsaWNrZWQ7XHJcbiAgICBpbWFnZXM7XHJcbiAgICBsb2FkZWRJbWFnZXM7XHJcbiAgICBjYWxsYmFjaztcclxuICAgIGltYWdlc0xvYWRlZCA9IGZhbHNlO1xyXG4gICAgc3RhcnRNeVRpbWVyID0gdHJ1ZTtcclxuICAgIGlzTXlUaW1lck92ZXIgPSBmYWxzZTtcclxuICAgIGlzU3RvbmVEcm9wcGVkID0gZmFsc2U7XHJcbiAgICBhdWRpb1BsYXllcjtcclxuICAgIHBsYXlMZXZlbEVuZEF1ZGlvT25jZSA9IHRydWU7XHJcbiAgICBjb25zdHJ1Y3Rvcih3aWR0aCwgaGVpZ2h0LCBjYWxsYmFjaykge1xyXG4gICAgICAgIHN1cGVyKHtcclxuICAgICAgICAgICAgc3RvbmVEcm9wQ2FsbGJhY2tIYW5kbGVyOiAoZXZlbnQpID0+IHRoaXMuaGFuZGxlU3RvbmVEcm9wKGV2ZW50KSxcclxuICAgICAgICAgICAgbG9hZFB1enpsZUNhbGxiYWNrSGFuZGxlcjogKGV2ZW50KSA9PiB0aGlzLmhhbmRsZUxvYWRQdXp6bGUoZXZlbnQpXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMud2lkdGhUb0NsZWFyID0gdGhpcy53aWR0aCAvIDMuNDtcclxuICAgICAgICB0aGlzLnRpbWVySGVpZ2h0ID0gMTEyO1xyXG4gICAgICAgIHRoaXMudGltZXJXaWR0aCA9IDg4ODtcclxuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XHJcbiAgICAgICAgdGhpcy5jYW5hdnNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gdGhpcy5jYW5hdnNFbGVtZW50LmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgICAgICB0aGlzLnRpbWVyID0gMDtcclxuICAgICAgICB0aGlzLmlzVGltZXJTdGFydGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5pc1RpbWVyRW5kZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmlzVGltZXJSdW5uaW5nT3V0ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllciA9IG5ldyBBdWRpb1BsYXllcigpO1xyXG4gICAgICAgIHRoaXMucGxheUxldmVsRW5kQXVkaW9PbmNlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmltYWdlcyA9IHtcclxuICAgICAgICAgICAgdGltZXJfZW1wdHk6IFRJTUVSX0VNUFRZLFxyXG4gICAgICAgICAgICByb3RhdGluZ19jbG9jazogUk9UQVRJTkdfQ0xPQ0ssXHJcbiAgICAgICAgICAgIHRpbWVyX2Z1bGw6IFRJTUVSX0ZVTExcclxuICAgICAgICB9O1xyXG4gICAgICAgIGxvYWRJbWFnZXModGhpcy5pbWFnZXMsIChpbWFnZXMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5sb2FkZWRJbWFnZXMgPSBPYmplY3QuYXNzaWduKHt9LCBpbWFnZXMpO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlc0xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBzdGFydFRpbWVyKCkge1xyXG4gICAgICAgIC8vIGl0IHdpbGwgc3RhcnQgdGltZXIgaW1tZWRpYXRseVxyXG4gICAgICAgIHRoaXMucmVhZHlUaW1lcigpO1xyXG4gICAgICAgIHRoaXMuc3RhcnRNeVRpbWVyID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmlzTXlUaW1lck92ZXIgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIHJlYWR5VGltZXIoKSB7XHJcbiAgICAgICAgLy8gbWFrZSB0aW1lciBsb29rIGZ1bGwgc28gYXMgaXQgZ2V0IHN0YXJ0IHNpZ25hbC4uLi4uIGl0IHdpbGwgc3RhcnQgZGVjcmVhc2luZ1xyXG4gICAgICAgIHRoaXMudGltZXIgPSAwO1xyXG4gICAgfVxyXG4gICAgdXBkYXRlKGRlbHRhVGltZSkge1xyXG4gICAgICAgIGlmICh0aGlzLnN0YXJ0TXlUaW1lciAmJiAhdGhpcy5pc1N0b25lRHJvcHBlZCkge1xyXG4gICAgICAgICAgICB0aGlzLnRpbWVyICs9IGRlbHRhVGltZSAqIDAuMDA4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoTWF0aC5mbG9vcih0aGlzLndpZHRoICogMC44NyAtICh0aGlzLndpZHRoICogMC44NyAqIHRoaXMudGltZXIgKiAwLjAxKSkgPT0gNDAgJiYgIXRoaXMuaXNNeVRpbWVyT3Zlcikge1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlMZXZlbEVuZEF1ZGlvT25jZSA/IHRoaXMuYXVkaW9QbGF5ZXIucGxheUF1ZGlvKEFVRElPX1RJTUVPVVQpIDogbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5wbGF5TGV2ZWxFbmRBdWRpb09uY2UgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCh0aGlzLndpZHRoICogMC44NyAtICh0aGlzLndpZHRoICogMC44NyAqIHRoaXMudGltZXIgKiAwLjAxKSkgPCAwICYmICF0aGlzLmlzTXlUaW1lck92ZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5pc015VGltZXJPdmVyID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5jYWxsYmFjayh0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBkcmF3KCkge1xyXG4gICAgICAgIGlmICh0aGlzLmltYWdlc0xvYWRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLnRpbWVyX2VtcHR5LCAwLCB0aGlzLmhlaWdodCAqIDAuMSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQgKiAwLjA1KTtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxvYWRlZEltYWdlcy5yb3RhdGluZ19jbG9jaywgMCwgdGhpcy5oZWlnaHQgKiAwLjA5LCB0aGlzLndpZHRoICogMC4xNCwgdGhpcy5oZWlnaHQgKiAwLjA2NSk7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMudGltZXJfZnVsbCwgMCwgMCwgdGhpcy50aW1lcldpZHRoIC0gKHRoaXMudGltZXJXaWR0aCAqIHRoaXMudGltZXIgKiAwLjAxKSwgdGhpcy50aW1lckhlaWdodCwgdGhpcy53aWR0aCAqIDAuMTQsIHRoaXMuaGVpZ2h0ICogMC4wOTksIHRoaXMud2lkdGggKiAwLjg3IC0gKHRoaXMud2lkdGggKiAwLjg3ICogdGhpcy50aW1lciAqIDAuMDEpLCB0aGlzLmhlaWdodCAqIDAuMDUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGhhbmRsZVN0b25lRHJvcChldmVudCkge1xyXG4gICAgICAgIHRoaXMuaXNTdG9uZURyb3BwZWQgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlTG9hZFB1enpsZShldmVudCkge1xyXG4gICAgICAgIHRoaXMucGxheUxldmVsRW5kQXVkaW9PbmNlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmlzU3RvbmVEcm9wcGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zdGFydFRpbWVyKCk7XHJcbiAgICB9XHJcbiAgICBkaXNwb3NlKCkge1xyXG4gICAgICAgIHRoaXMudW5yZWdpc3RlckV2ZW50TGlzdGVuZXIoKTtcclxuICAgIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBUcmFpbEVmZmVjdCB7XHJcbiAgICBjdHg7XHJcbiAgICBwYXJ0aWNsZXM7XHJcbiAgICBtb3VzZTtcclxuICAgIGlzRGlhbW9uZDtcclxuICAgIGNvbnN0cnVjdG9yKGNhbnZhcykge1xyXG4gICAgICAgIHRoaXMuY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgICAgICB0aGlzLnBhcnRpY2xlcyA9IFtdO1xyXG4gICAgICAgIHRoaXMubW91c2UgPSB7XHJcbiAgICAgICAgICAgIHg6IHVuZGVmaW5lZCxcclxuICAgICAgICAgICAgeTogdW5kZWZpbmVkXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmlzRGlhbW9uZCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICB0aGlzLmRyYXcoKTtcclxuICAgIH1cclxuICAgIGRyYXcoKSB7XHJcbiAgICAgICAgdGhpcy5kcmF3VHJhaWwoKTtcclxuICAgICAgICBsZXQgdGVtcCA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5wYXJ0aWNsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMucGFydGljbGVzW2ldLnRpbWUgPD0gdGhpcy5wYXJ0aWNsZXNbaV0udHRsKSB7XHJcbiAgICAgICAgICAgICAgICB0ZW1wLnB1c2godGhpcy5wYXJ0aWNsZXNbaV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucGFydGljbGVzID0gdGVtcDtcclxuICAgIH1cclxuICAgIGRyYXdUcmFpbCgpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucGFydGljbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGFydGljbGVzW2ldLnVwZGF0ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLmlzRGlhbW9uZCA9ICF0aGlzLmlzRGlhbW9uZDtcclxuICAgICAgICAgICAgdGhpcy5wYXJ0aWNsZXNbaV0uZHJhdyh0aGlzLmlzRGlhbW9uZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgYWRkVHJhaWxQYXJ0aWNsZXNPbk1vdmUoeCwgeSkge1xyXG4gICAgICAgIHRoaXMubW91c2UueCA9IHg7XHJcbiAgICAgICAgdGhpcy5tb3VzZS55ID0geTtcclxuICAgICAgICB0aGlzLnBhcnRpY2xlcy5wdXNoKG5ldyBQYXJ0aWNsZXModGhpcy5jdHgsIHRoaXMubW91c2UpKTtcclxuICAgIH1cclxuICAgIHJlc2V0UGFydGljbGVzKCkge1xyXG4gICAgICAgIHRoaXMubW91c2UueCA9IHVuZGVmaW5lZDtcclxuICAgICAgICB0aGlzLm1vdXNlLnkgPSB1bmRlZmluZWQ7XHJcbiAgICB9XHJcbn1cclxuO1xyXG5jbGFzcyBQYXJ0aWNsZXMge1xyXG4gICAgY3R4O1xyXG4gICAgc3RhcnQ7XHJcbiAgICBlbmQ7XHJcbiAgICBzaXplO1xyXG4gICAgc3R5bGU7XHJcbiAgICB0aW1lO1xyXG4gICAgdHRsO1xyXG4gICAgeDtcclxuICAgIHk7XHJcbiAgICByZ2I7XHJcbiAgICBoeXA7XHJcbiAgICBzdGFyWDtcclxuICAgIHN0YXJZO1xyXG4gICAgc3RhckFuZ2xlO1xyXG4gICAgY29uc3RydWN0b3IoY3R4LCBtb3VzZSkge1xyXG4gICAgICAgIGNvbnN0IHN0YXJ0UG9zWCA9IHRoaXMuZGV0ZXJtaW5lVmFsdWVCeVNjcmVlbldpZHRoKDMwLCAxNSk7XHJcbiAgICAgICAgY29uc3Qgc3RhcnRQb3NZID0gdGhpcy5kZXRlcm1pbmVWYWx1ZUJ5U2NyZWVuV2lkdGgoMzAsIDE1KTtcclxuICAgICAgICBjb25zdCBlbmRQb3NYID0gdGhpcy5kZXRlcm1pbmVWYWx1ZUJ5U2NyZWVuV2lkdGgoMywgMC41KTtcclxuICAgICAgICBjb25zdCBlbmRQb3NZID0gdGhpcy5kZXRlcm1pbmVWYWx1ZUJ5U2NyZWVuV2lkdGgoMiwgMC41KTtcclxuICAgICAgICB0aGlzLmN0eCA9IGN0eDtcclxuICAgICAgICB0aGlzLnJnYiA9IFtcclxuICAgICAgICAgICAgXCJyZ2IoMjU1LDI1NSwyNTUpXCIsXHJcbiAgICAgICAgICAgIFwicmdiKDI0OSwyMTcsMTcwKVwiLFxyXG4gICAgICAgICAgICBcInJnYigyNDQsMTgyLDgxKVwiLFxyXG4gICAgICAgICAgICBcInJnYigyNDQsMTU5LDM0KVwiLFxyXG4gICAgICAgIF07XHJcbiAgICAgICAgdGhpcy5zdGFydCA9IHtcclxuICAgICAgICAgICAgeDogbW91c2UueCArIHRoaXMuZ2V0UmFuZG9tSW50KC1zdGFydFBvc1gsIHN0YXJ0UG9zWCksXHJcbiAgICAgICAgICAgIHk6IG1vdXNlLnkgKyB0aGlzLmdldFJhbmRvbUludCgtc3RhcnRQb3NZLCBzdGFydFBvc1kpLFxyXG4gICAgICAgICAgICBzaXplOiB0aGlzLmRldGVybWluZVZhbHVlQnlTY3JlZW5XaWR0aCgzLCAyKVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5lbmQgPSB7XHJcbiAgICAgICAgICAgIHg6IHRoaXMuc3RhcnQueCArIHRoaXMuZ2V0UmFuZG9tSW50KC1lbmRQb3NYLCBlbmRQb3NYKSxcclxuICAgICAgICAgICAgeTogdGhpcy5zdGFydC55ICsgdGhpcy5nZXRSYW5kb21JbnQoLWVuZFBvc1ksIGVuZFBvc1kpXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLnggPSB0aGlzLnN0YXJ0Lng7XHJcbiAgICAgICAgdGhpcy55ID0gdGhpcy5zdGFydC55O1xyXG4gICAgICAgIHRoaXMuc2l6ZSA9IHRoaXMuc3RhcnQuc2l6ZTtcclxuICAgICAgICB0aGlzLnN0eWxlID0gdGhpcy5yZ2JbdGhpcy5nZXRSYW5kb21JbnQoMCwgdGhpcy5yZ2IubGVuZ3RoIC0gMSldO1xyXG4gICAgICAgIHRoaXMudGltZSA9IDA7XHJcbiAgICAgICAgdGhpcy50dGwgPSA3NTtcclxuICAgICAgICB0aGlzLmh5cCA9IDA7XHJcbiAgICAgICAgdGhpcy5zdGFyWCA9IDA7XHJcbiAgICAgICAgdGhpcy5zdGFyWSA9IDA7XHJcbiAgICAgICAgdGhpcy5zdGFyQW5nbGUgPSAwO1xyXG4gICAgfVxyXG4gICAgZGV0ZXJtaW5lVmFsdWVCeVNjcmVlbldpZHRoKGJnU2NyZWVuVmFsLCBzbWFsbFNjcmVlblZhbCkge1xyXG4gICAgICAgIC8qIDc2OCBpcyB0aGUgbG93ZXN0IHdpZHRoIHNpemUgb2YgdGFibGV0ICovXHJcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5zY3JlZW4ud2lkdGggPiA3NjggPyBiZ1NjcmVlblZhbCA6IHNtYWxsU2NyZWVuVmFsO1xyXG4gICAgfVxyXG4gICAgdXBkYXRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnRpbWUgPD0gdGhpcy50dGwpIHtcclxuICAgICAgICAgICAgY29uc3QgcHJvZ3Jlc3MgPSAxIC0gKHRoaXMudHRsIC0gdGhpcy50aW1lKSAvIHRoaXMudHRsO1xyXG4gICAgICAgICAgICB0aGlzLnNpemUgPSB0aGlzLnN0YXJ0LnNpemUgKiAoMSAtIHRoaXMuZWFzZU91dFF1YXJ0KHByb2dyZXNzKSk7XHJcbiAgICAgICAgICAgIHRoaXMueCA9IHRoaXMueCArICh0aGlzLmVuZC54IC0gdGhpcy54KSAqIDAuMDE7XHJcbiAgICAgICAgICAgIHRoaXMueSA9IHRoaXMueSArICh0aGlzLmVuZC55IC0gdGhpcy55KSAqIDAuMDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudGltZSsrO1xyXG4gICAgfVxyXG4gICAgZHJhdyhpc0RyYXdEaWFtb25kKSB7XHJcbiAgICAgICAgaWYgKGlzRHJhd0RpYW1vbmQpIHtcclxuICAgICAgICAgICAgdGhpcy5zdGFyUGFydGljbGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2lyY2xlUGFydGljbGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgO1xyXG4gICAgfVxyXG4gICAgY2lyY2xlUGFydGljbGUoKSB7XHJcbiAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gdGhpcy5zdHlsZTtcclxuICAgICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICB0aGlzLmN0eC5hcmModGhpcy54LCB0aGlzLnksIHRoaXMuc2l6ZSwgMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgICAgIHRoaXMuY3R4LmNsb3NlUGF0aCgpO1xyXG4gICAgICAgIHRoaXMuY3R4LmZpbGwoKTtcclxuICAgIH1cclxuICAgIHN0YXJQYXJ0aWNsZSgpIHtcclxuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSB0aGlzLnN0eWxlO1xyXG4gICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIHRoaXMuY3R4Lm1vdmVUbyh0aGlzLngsIHRoaXMueSAtIHRoaXMuc2l6ZSk7IC8vIFRvcCBwb2ludFxyXG4gICAgICAgIHRoaXMuY3R4LmxpbmVUbyh0aGlzLnggKyB0aGlzLnNpemUsIHRoaXMueSk7IC8vIFJpZ2h0IHBvaW50XHJcbiAgICAgICAgdGhpcy5jdHgubGluZVRvKHRoaXMueCwgdGhpcy55ICsgdGhpcy5zaXplKTsgLy8gQm90dG9tIHBvaW50XHJcbiAgICAgICAgdGhpcy5jdHgubGluZVRvKHRoaXMueCAtIHRoaXMuc2l6ZSwgdGhpcy55KTsgLy8gTGVmdCBwb2ludFxyXG4gICAgICAgIHRoaXMuY3R4LmNsb3NlUGF0aCgpO1xyXG4gICAgICAgIHRoaXMuY3R4LmZpbGwoKTtcclxuICAgIH1cclxuICAgIGdldFJhbmRvbUludChtaW4sIG1heCkge1xyXG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkgKyBtaW47XHJcbiAgICB9XHJcbiAgICBlYXNlT3V0UXVhcnQoeCkge1xyXG4gICAgICAgIHJldHVybiAxIC0gTWF0aC5wb3coMSAtIHgsIDQpO1xyXG4gICAgfVxyXG59XHJcbjtcclxuIiwiaW1wb3J0IHsgY3JlYXRlUmlwcGxlRWZmZWN0IH0gZnJvbSBcIkBjb21tb25cIjtcclxuaW1wb3J0IHsgVFVUT1JJQUxfSEFORCB9IGZyb20gXCJAY29uc3RhbnRzXCI7XHJcbmltcG9ydCB7IEdhbWVTY29yZSB9IGZyb20gXCJAZGF0YVwiO1xyXG5leHBvcnQgY2xhc3MgVHV0b3JpYWwge1xyXG4gICAgd2lkdGg7XHJcbiAgICBoZWlnaHQ7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgdHV0b3JpYWxJbWc7XHJcbiAgICBpbWFnZXNMb2FkZWQgPSBmYWxzZTtcclxuICAgIHRhcmdldFN0b25lUG9zaXRpb25zO1xyXG4gICAgc3RhcnR4O1xyXG4gICAgc3RhcnR5O1xyXG4gICAgZW5keDtcclxuICAgIGVuZHk7XHJcbiAgICBlbmRUdXRvcmlhbCA9IGZhbHNlO1xyXG4gICAgcHV6emxlTnVtYmVyO1xyXG4gICAgcGxheU1uc3RyQ2xrVHRybEFuaW0gPSB0cnVlO1xyXG4gICAgdG90YWxUaW1lID0gMDtcclxuICAgIG1vbnN0ZXJTdG9uZURpZmZlcmVuY2UgPSAwO1xyXG4gICAgeDtcclxuICAgIHk7XHJcbiAgICBkeDtcclxuICAgIGR5O1xyXG4gICAgYWJzZHg7XHJcbiAgICBhYnNkeTtcclxuICAgIHN0YXJ0UmlwcGxlID0gZmFsc2U7XHJcbiAgICBkcmF3UmlwcGxlO1xyXG4gICAgY29uc3RydWN0b3IoY29udGV4dCwgd2lkdGgsIGhlaWdodCwgcHV6emxlTnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XHJcbiAgICAgICAgdGhpcy5zdGFydHggPSAwO1xyXG4gICAgICAgIHRoaXMuc3RhcnR5ID0gMDtcclxuICAgICAgICB0aGlzLmVuZHggPSB0aGlzLndpZHRoIC8gMjtcclxuICAgICAgICB0aGlzLmVuZHkgPSB0aGlzLmhlaWdodCAvIDI7XHJcbiAgICAgICAgdGhpcy5wdXp6bGVOdW1iZXIgPSAocHV6emxlTnVtYmVyID49IDApID8gcHV6emxlTnVtYmVyIDogbnVsbDtcclxuICAgICAgICB0aGlzLnR1dG9yaWFsSW1nID0gbmV3IEltYWdlKCk7XHJcbiAgICAgICAgdGhpcy50dXRvcmlhbEltZy5zcmMgPSBUVVRPUklBTF9IQU5EO1xyXG4gICAgICAgIHRoaXMuZHJhd1JpcHBsZSA9IGNyZWF0ZVJpcHBsZUVmZmVjdCh0aGlzLmNvbnRleHQpO1xyXG4gICAgICAgIHRoaXMudHV0b3JpYWxJbWcub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlc0xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIHVwZGF0ZVRhcmdldFN0b25lUG9zaXRpb25zKHRhcmdldFN0b25lUG9zaXRpb24pIHtcclxuICAgICAgICB0aGlzLnN0YXJ0eCA9IHRhcmdldFN0b25lUG9zaXRpb25bMF0gLSAyMjtcclxuICAgICAgICB0aGlzLnN0YXJ0eSA9IHRhcmdldFN0b25lUG9zaXRpb25bMV0gLSA1MDtcclxuICAgICAgICB0aGlzLm1vbnN0ZXJTdG9uZURpZmZlcmVuY2UgPSBNYXRoLnNxcnQoKHRoaXMuc3RhcnR4IC0gdGhpcy5lbmR4KSAqICh0aGlzLnN0YXJ0eCAtIHRoaXMuZW5keCkgKyAodGhpcy5zdGFydHkgLSB0aGlzLmVuZHkpICogKHRoaXMuc3RhcnR5IC0gdGhpcy5lbmR5KSk7XHJcbiAgICAgICAgdGhpcy5hbmltYXRlSW1hZ2UoKTtcclxuICAgIH1cclxuICAgIGlzTW9iaWxlKCkge1xyXG4gICAgICAgIHJldHVybiAvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XHJcbiAgICB9XHJcbiAgICBzZXRUdXRvcmlhbEVuZChlbmRUdXRvcmlhbCkge1xyXG4gICAgICAgIHRoaXMuZW5kVHV0b3JpYWwgPSBlbmRUdXRvcmlhbDtcclxuICAgIH1cclxuICAgIGFuaW1hdGVJbWFnZSgpIHtcclxuICAgICAgICB0aGlzLnggPSB0aGlzLnN0YXJ0eDtcclxuICAgICAgICB0aGlzLnkgPSB0aGlzLnN0YXJ0eTtcclxuICAgICAgICB0aGlzLmR4ID0gKHRoaXMuZW5keCAtIHRoaXMuc3RhcnR4KSAvIDUwMDA7XHJcbiAgICAgICAgdGhpcy5keSA9ICh0aGlzLmVuZHkgLSB0aGlzLnN0YXJ0eSkgLyA1MDAwO1xyXG4gICAgICAgIHRoaXMuYWJzZHggPSB0aGlzLmlzTW9iaWxlKCkgPyBNYXRoLmFicyh0aGlzLmR4KSAqIDMgOiBNYXRoLmFicyh0aGlzLmR4KTtcclxuICAgICAgICB0aGlzLmFic2R5ID0gdGhpcy5pc01vYmlsZSgpID8gTWF0aC5hYnModGhpcy5keSkgKiAzIDogTWF0aC5hYnModGhpcy5keSk7XHJcbiAgICAgICAgdGhpcy5zZXRUdXRvcmlhbEVuZChmYWxzZSk7XHJcbiAgICB9XHJcbiAgICBkcmF3KGRlbHRhVGltZSwgaW1nLCBpbWFnZVNpemUpIHtcclxuICAgICAgICBpZiAodGhpcy5pbWFnZXNMb2FkZWQgJiYgIXRoaXMuZW5kVHV0b3JpYWwgJiYgdGhpcy5zaG91bGRQbGF5VHV0b3JpYWwoKSkge1xyXG4gICAgICAgICAgICB0aGlzLnggPVxyXG4gICAgICAgICAgICAgICAgdGhpcy5keCA+PSAwXHJcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLnggKyB0aGlzLmFic2R4ICogZGVsdGFUaW1lXHJcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzLnggLSB0aGlzLmFic2R4ICogZGVsdGFUaW1lO1xyXG4gICAgICAgICAgICB0aGlzLnkgPVxyXG4gICAgICAgICAgICAgICAgdGhpcy5keSA+PSAwXHJcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLnkgKyB0aGlzLmFic2R5ICogZGVsdGFUaW1lXHJcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzLnkgLSB0aGlzLmFic2R5ICogZGVsdGFUaW1lO1xyXG4gICAgICAgICAgICBjb25zdCBkaXN4ID0gdGhpcy54IC0gdGhpcy5lbmR4ICsgdGhpcy5hYnNkeDtcclxuICAgICAgICAgICAgY29uc3QgZGlzeSA9IHRoaXMueSAtIHRoaXMuZW5keSArIHRoaXMuYWJzZHk7XHJcbiAgICAgICAgICAgIGNvbnN0IGRpc3RhbmNlID0gTWF0aC5zcXJ0KGRpc3ggKiBkaXN4ICsgZGlzeSAqIGRpc3kpO1xyXG4gICAgICAgICAgICBsZXQgbW9uc3RlclN0b25lRGlmZmVyZW5jZUluUGVyY2VudGFnZSA9ICgxMDAgKiBkaXN0YW5jZSAvIHRoaXMubW9uc3RlclN0b25lRGlmZmVyZW5jZSk7XHJcbiAgICAgICAgICAgIGlmIChtb25zdGVyU3RvbmVEaWZmZXJlbmNlSW5QZXJjZW50YWdlIDwgMTUpIHtcclxuICAgICAgICAgICAgICAgIGlmIChtb25zdGVyU3RvbmVEaWZmZXJlbmNlSW5QZXJjZW50YWdlID4gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlSGFuZFNjYWxlQW5pbWF0aW9uKGRlbHRhVGltZSwgdGhpcy5lbmR4LCB0aGlzLmVuZHkgKyAzMCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnggPSB0aGlzLnN0YXJ0eDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnkgPSB0aGlzLnN0YXJ0eTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChtb25zdGVyU3RvbmVEaWZmZXJlbmNlSW5QZXJjZW50YWdlID4gODApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlSGFuZFNjYWxlQW5pbWF0aW9uKGRlbHRhVGltZSwgdGhpcy5zdGFydHggKyAxNSwgdGhpcy5zdGFydHkgKyAxMCwgZmFsc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGV0IHByZXZpb3VzQWxwaGEgPSB0aGlzLmNvbnRleHQuZ2xvYmFsQWxwaGE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZ2xvYmFsQWxwaGEgPSAwLjQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKGltZywgdGhpcy54LCB0aGlzLnkgKyAyMCwgaW1hZ2VTaXplLCBpbWFnZVNpemUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0Lmdsb2JhbEFscGhhID0gcHJldmlvdXNBbHBoYTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy50dXRvcmlhbEltZywgdGhpcy54ICsgMTUsIHRoaXMueSArIDEwKTsgLy9kcmF3cyB0aGUgaGFuZCBzdG9uZSBkcmFnIGFuaW1hdGlvbiFcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNyZWF0ZUhhbmRTY2FsZUFuaW1hdGlvbihkZWx0YVRpbWUsIG9mZnNldFgsIG9mZnNldFksIHNob3VsZENyZWF0ZVJpcHBsZSkge1xyXG4gICAgICAgIHRoaXMudG90YWxUaW1lICs9IE1hdGguZmxvb3IoZGVsdGFUaW1lKTtcclxuICAgICAgICBjb25zdCB0cmFuc2l0aW9uRHVyYXRpb24gPSA1MDA7XHJcbiAgICAgICAgY29uc3Qgc2NhbGVGYWN0b3IgPSB0aGlzLnNpbnVzb2lkYWxJbnRlcnBvbGF0aW9uKHRoaXMudG90YWxUaW1lLCAxLCAxLjUsIHRyYW5zaXRpb25EdXJhdGlvbik7XHJcbiAgICAgICAgY29uc3Qgc2NhbGVkV2lkdGggPSB0aGlzLnR1dG9yaWFsSW1nLndpZHRoICogc2NhbGVGYWN0b3I7XHJcbiAgICAgICAgY29uc3Qgc2NhbGVkSGVpZ2h0ID0gdGhpcy50dXRvcmlhbEltZy5oZWlnaHQgKiBzY2FsZUZhY3RvcjtcclxuICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMudHV0b3JpYWxJbWcsIG9mZnNldFgsIG9mZnNldFksIHNjYWxlZFdpZHRoLCBzY2FsZWRIZWlnaHQpO1xyXG4gICAgICAgIHNob3VsZENyZWF0ZVJpcHBsZSA/IChudWxsKSA6ICh0aGlzLmRyYXdSaXBwbGUob2Zmc2V0WCArIHRoaXMud2lkdGggKiAwLjAyLCBvZmZzZXRZICsgdGhpcy50dXRvcmlhbEltZy5oZWlnaHQgLyAyLCBmYWxzZSkpO1xyXG4gICAgfVxyXG4gICAgc2ludXNvaWRhbEludGVycG9sYXRpb24odGltZSwgbWluU2NhbGUsIG1heFNjYWxlLCBkdXJhdGlvbikge1xyXG4gICAgICAgIGNvbnN0IGFtcGxpdHVkZSA9IChtYXhTY2FsZSAtIG1pblNjYWxlKSAvIDI7XHJcbiAgICAgICAgY29uc3QgZnJlcXVlbmN5ID0gTWF0aC5QSSAvIGR1cmF0aW9uO1xyXG4gICAgICAgIHJldHVybiBtaW5TY2FsZSArIGFtcGxpdHVkZSAqIE1hdGguc2luKGZyZXF1ZW5jeSAqIHRpbWUpO1xyXG4gICAgfVxyXG4gICAgY2xpY2tPbk1vbnN0ZXJUdXRvcmlhbChkZWx0YVRpbWUpIHtcclxuICAgICAgICBpZiAodGhpcy5zaG91bGRQbGF5TW9uc3RlckNsaWNrVHV0b3JpYWxBbmltYXRpb24oKSkge1xyXG4gICAgICAgICAgICBjb25zdCB0cmFuc2l0aW9uRHVyYXRpb24gPSAyMDAwO1xyXG4gICAgICAgICAgICBjb25zdCBib3R0b21Qb3NpdGlvbiA9IHRoaXMuaGVpZ2h0IC8gMS45ICsgKHRoaXMudHV0b3JpYWxJbWcuaGVpZ2h0IC8gMC44KTtcclxuICAgICAgICAgICAgY29uc3QgdG9wUG9zaXRpb24gPSB0aGlzLmhlaWdodCAvIDEuOSArICh0aGlzLnR1dG9yaWFsSW1nLmhlaWdodCAvIDAuOCkgLSB0aGlzLnR1dG9yaWFsSW1nLmhlaWdodDtcclxuICAgICAgICAgICAgbGV0IGN1cnJlbnRPZmZzZXRZO1xyXG4gICAgICAgICAgICBjb25zdCBvZmZzZXRYID0gdGhpcy5lbmR4O1xyXG4gICAgICAgICAgICBpZiAodGhpcy50b3RhbFRpbWUgPCB0cmFuc2l0aW9uRHVyYXRpb24gLyAyKSB7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50T2Zmc2V0WSA9IHRvcFBvc2l0aW9uICsgKHRoaXMudG90YWxUaW1lIC8gKHRyYW5zaXRpb25EdXJhdGlvbiAvIDIpKSAqIChib3R0b21Qb3NpdGlvbiAtIHRvcFBvc2l0aW9uKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZHJhd1JpcHBsZShvZmZzZXRYLCB0aGlzLmhlaWdodCAvIDEuOSArICh0aGlzLnR1dG9yaWFsSW1nLmhlaWdodCAvIDEuNSksIHRydWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudE9mZnNldFkgPSBib3R0b21Qb3NpdGlvbiAtICgodGhpcy50b3RhbFRpbWUgLSB0cmFuc2l0aW9uRHVyYXRpb24gLyAyKSAvICh0cmFuc2l0aW9uRHVyYXRpb24gLyAyKSkgKiAoYm90dG9tUG9zaXRpb24gLSB0b3BQb3NpdGlvbik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRyYXdSaXBwbGUob2Zmc2V0WCwgdGhpcy5oZWlnaHQgLyAxLjkgKyAodGhpcy50dXRvcmlhbEltZy5oZWlnaHQgLyAxLjIpICsgdGhpcy50dXRvcmlhbEltZy5oZWlnaHQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy50dXRvcmlhbEltZywgb2Zmc2V0WCwgY3VycmVudE9mZnNldFksIHRoaXMudHV0b3JpYWxJbWcud2lkdGgsIHRoaXMudHV0b3JpYWxJbWcuaGVpZ2h0KTtcclxuICAgICAgICAgICAgaWYgKGN1cnJlbnRPZmZzZXRZIDw9IHRvcFBvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRvdGFsVGltZSA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy50b3RhbFRpbWUgKz0gZGVsdGFUaW1lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNob3VsZFBsYXlUdXRvcmlhbCgpIHtcclxuICAgICAgICBsZXQgcGxheURyYWdBbmltYXRpb25Gb3JGaXJzdFB1enpsZSA9IEdhbWVTY29yZS5nZXRBbGxHYW1lTGV2ZWxJbmZvKCkubGVuZ3RoIDw9IDAgJiYgdGhpcy5wdXp6bGVOdW1iZXIgPT0gMDtcclxuICAgICAgICByZXR1cm4gcGxheURyYWdBbmltYXRpb25Gb3JGaXJzdFB1enpsZTtcclxuICAgIH1cclxuICAgIHNob3VsZFBsYXlNb25zdGVyQ2xpY2tUdXRvcmlhbEFuaW1hdGlvbigpIHtcclxuICAgICAgICBsZXQgcGxheURyYWdBbmltYXRpb25Gb3JGaXJzdFB1enpsZSA9IEdhbWVTY29yZS5nZXRBbGxHYW1lTGV2ZWxJbmZvKCkubGVuZ3RoIDw9IDAgJiYgdGhpcy5wbGF5TW5zdHJDbGtUdHJsQW5pbTtcclxuICAgICAgICByZXR1cm4gcGxheURyYWdBbmltYXRpb25Gb3JGaXJzdFB1enpsZTtcclxuICAgIH1cclxuICAgIHNldFB1enpsZU51bWJlcihwdXp6bGVOdW1lcikge1xyXG4gICAgICAgIHRoaXMucHV6emxlTnVtYmVyID0gcHV6emxlTnVtZXI7XHJcbiAgICB9XHJcbiAgICBzZXRQbGF5TW9uc3RlckNsaWNrQW5pbWF0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5wbGF5TW5zdHJDbGtUdHJsQW5pbSA9IHZhbHVlO1xyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IHN5bmNMb2FkaW5nSW1hZ2VzIH0gZnJvbSAnQGNvbW1vbic7XHJcbmltcG9ydCB7IERFRkFVTFRfQkdfR1JPVVBfSU1HUywgQVVUVU1OX0JHX0dST1VQX0lNR1MsIFdJTlRFUl9CR19HUk9VUF9JTUdTIH0gZnJvbSAnQGNvbnN0YW50cyc7XHJcbmNvbnN0IGJhY2tncm91bmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJhY2tncm91bmRcIik7XHJcbmV4cG9ydCBjb25zdCBCQUNLR1JPVU5EX0FTU0VUX0xJU1QgPSB7XHJcbiAgICBzdW1tZXI6IHsgQkdfR1JPVVBfSU1HUzogREVGQVVMVF9CR19HUk9VUF9JTUdTLCBkcmF3OiBkZWZhdWx0QmdEcmF3aW5nIH0sXHJcbiAgICBhdXR1bW46IHsgQkdfR1JPVVBfSU1HUzogQVVUVU1OX0JHX0dST1VQX0lNR1MsIGRyYXc6IGF1dHVtQmdEcmF3aW5nIH0sXHJcbiAgICB3aW50ZXI6IHsgQkdfR1JPVVBfSU1HUzogV0lOVEVSX0JHX0dST1VQX0lNR1MsIGRyYXc6IHdpbnRlckJnRHJhd2luZyB9LFxyXG59O1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQmFja2dyb3VuZChjb250ZXh0LCB3aWR0aCwgaGVpZ2h0LCBiYWNrZ3JvdW5kSW1nLCBkcmF3TWV0aG9kKSB7XHJcbiAgICBjb25zdCBsb2FkZWRJbWFnZXMgPSB7IC4uLmF3YWl0IHN5bmNMb2FkaW5nSW1hZ2VzKGJhY2tncm91bmRJbWcpIH07XHJcbiAgICBjb25zdCBvYmogPSB7XHJcbiAgICAgICAgLi4uZHJhd01ldGhvZChjb250ZXh0LCB3aWR0aCwgaGVpZ2h0LCBsb2FkZWRJbWFnZXMpXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuICh7IC4uLm9iaiB9KTtcclxufVxyXG47XHJcbmV4cG9ydCBjb25zdCBsb2FkRHluYW1pY0JnQXNzZXRzID0gKGxldmVsTnVtYmVyLCBhc3NldHNMaXN0KSA9PiB7XHJcbiAgICBjb25zdCBhcnIgPSBPYmplY3Qua2V5cyhhc3NldHNMaXN0KTsgLy9hdmFpbGFibGVCYWNrZ3JvdW5kVHlwZXNcclxuICAgIGxldCBiYWNrZ3JvdW5kVHlwZSA9IE1hdGguZmxvb3IobGV2ZWxOdW1iZXIgLyAxMCkgJSBhcnIubGVuZ3RoO1xyXG4gICAgaWYgKGxldmVsTnVtYmVyID49IDMwKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZFR5cGUgPSBiYWNrZ3JvdW5kVHlwZSAlIDM7XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyAuLi5hc3NldHNMaXN0W2FycltiYWNrZ3JvdW5kVHlwZV1dIH07XHJcbn07XHJcbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0QmdEcmF3aW5nKGNvbnRleHQsIHdpZHRoLCBoZWlnaHQsIGJnSW1hZ2VzKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGRyYXc6ICgpID0+IHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC5jbGFzc05hbWUgPSBcIlwiO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLmNsYXNzTGlzdC5hZGQoXCJzdW1tZXItYmdcIik7XHJcbiAgICAgICAgICAgIGNvbnRleHQuZHJhd0ltYWdlKGJnSW1hZ2VzPy5BU1NFVFNfUEFUSF9UT1RFTSwgd2lkdGggKiAwLjYsIGhlaWdodCAvIDYsIHdpZHRoLCBoZWlnaHQgLyAyKTtcclxuICAgICAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UoYmdJbWFnZXM/LkFTU0VUU19QQVRIX0ZFTkNFLCAtd2lkdGggKiAwLjQsIGhlaWdodCAvIDMsIHdpZHRoLCBoZWlnaHQgLyAzKTtcclxuICAgICAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UoYmdJbWFnZXM/LkFTU0VUU19QQVRIX0hJTEwsIC13aWR0aCAqIDAuMjUsIGhlaWdodCAvIDIsIHdpZHRoICogMS41LCBoZWlnaHQgLyAyKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbjtcclxuZXhwb3J0IGZ1bmN0aW9uIGF1dHVtQmdEcmF3aW5nKGNvbnRleHQsIHdpZHRoLCBoZWlnaHQsIGJnSW1hZ2VzKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGRyYXc6ICgpID0+IHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC5jbGFzc05hbWUgPSBcIlwiO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLmNsYXNzTGlzdC5hZGQoXCJhdXR1bW4tYmdcIik7XHJcbiAgICAgICAgICAgIGNvbnRleHQuZHJhd0ltYWdlKGJnSW1hZ2VzLkFVVFVNTl9QSUxMQVJfMSwgd2lkdGggKiAwLjM4LCBoZWlnaHQgLyA2LCB3aWR0aCAvIDEuMiwgaGVpZ2h0IC8gMik7XHJcbiAgICAgICAgICAgIGNvbnRleHQuZHJhd0ltYWdlKGJnSW1hZ2VzLkFVVFVNTl9GRU5DRV8xLCAtd2lkdGggKiAwLjQsIGhlaWdodCAvIDQsIHdpZHRoLCBoZWlnaHQgLyAyKTtcclxuICAgICAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UoYmdJbWFnZXMuQVVUVU1OX0hJTExfMSwgLXdpZHRoICogMC4yNSwgaGVpZ2h0IC8gMiwgd2lkdGggKiAxLjUsIGhlaWdodCAvIDIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuO1xyXG5leHBvcnQgZnVuY3Rpb24gd2ludGVyQmdEcmF3aW5nKGNvbnRleHQsIHdpZHRoLCBoZWlnaHQsIGJnSW1hZ2VzKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGRyYXc6ICgpID0+IHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC5jbGFzc05hbWUgPSBcIlwiO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLmNsYXNzTGlzdC5hZGQoXCJ3aW50ZXItYmdcIik7XHJcbiAgICAgICAgICAgIGNvbnRleHQuZHJhd0ltYWdlKGJnSW1hZ2VzLldJTlRFUl9QSUxMQVJfMSwgd2lkdGggKiAwLjM4LCBoZWlnaHQgLyA2LCB3aWR0aCAvIDEuMiwgaGVpZ2h0IC8gMik7XHJcbiAgICAgICAgICAgIGNvbnRleHQuZHJhd0ltYWdlKGJnSW1hZ2VzLldJTlRFUl9GRU5DRV8xLCAtd2lkdGggKiAwLjQsIGhlaWdodCAvIDQsIHdpZHRoLCBoZWlnaHQgLyAyKTtcclxuICAgICAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UoYmdJbWFnZXMuV0lOVEVSX0hJTExfMSwgLXdpZHRoICogMC4yNSwgaGVpZ2h0IC8gMiwgd2lkdGggKiAxLjUsIGhlaWdodCAvIDIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuO1xyXG5leHBvcnQgZnVuY3Rpb24gbGV2ZWxTZWxlY3RCZ0RyYXdpbmcoY29udGV4dCwgd2lkdGgsIGhlaWdodCwgYmdJbWFnZXMpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgZHJhdzogKCkgPT4ge1xyXG4gICAgICAgICAgICBjb250ZXh0LmRyYXdJbWFnZShiZ0ltYWdlcz8uTEVWRUxfU0VMRUNUSU9OX0JBQ0tHUk9VTkQsIDAsIDAsIHdpZHRoLCBoZWlnaHQpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuO1xyXG4iLCJpbXBvcnQgeyBNQVBfSUNPTl9JTUcsIE1BUF9JQ09OX1NQRUNJQUxfSU1HLCBNQVBfTE9DS19JTUcsIFNUQVJfSU1HLCBTUEVDSUFMX0xFVkVMUywgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBzeW5jTG9hZGluZ0ltYWdlcyB9IGZyb20gJ0Bjb21tb24nO1xyXG5jb25zdCBpc1NwZWNpYWxMZXZlbCA9IChpbmRleCkgPT4gU1BFQ0lBTF9MRVZFTFMuaW5jbHVkZXMoaW5kZXgpO1xyXG5leHBvcnQgY29uc3QgZ2V0ZGVmYXVsdENsb3VkQnRuc1BvcyA9IChjYW52YXMpID0+IHtcclxuICAgIHJldHVybiBbXHJcbiAgICAgICAgW1xyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICBjYW52YXMud2lkdGggLyAxMCxcclxuICAgICAgICAgICAgICAgIGNhbnZhcy5oZWlnaHQgLyAxMFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICBjYW52YXMud2lkdGggLyAyLjUsXHJcbiAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0IC8gMTBcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgY2FudmFzLndpZHRoIC8gMyArIGNhbnZhcy53aWR0aCAvIDIuOCxcclxuICAgICAgICAgICAgICAgIGNhbnZhcy5oZWlnaHQgLyAxMCxcclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgY2FudmFzLndpZHRoIC8gMTAsXHJcbiAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0IC8gM1xyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICBjYW52YXMud2lkdGggLyAyLjUsXHJcbiAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0IC8gM1xyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICBjYW52YXMud2lkdGggLyAzICsgY2FudmFzLndpZHRoIC8gMi44LFxyXG4gICAgICAgICAgICAgICAgY2FudmFzLmhlaWdodCAvIDMsXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIGNhbnZhcy53aWR0aCAvIDEwLFxyXG4gICAgICAgICAgICAgICAgY2FudmFzLmhlaWdodCAvIDEuOFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICBjYW52YXMud2lkdGggLyAyLjUsXHJcbiAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0IC8gMS44XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIGNhbnZhcy53aWR0aCAvIDMgKyBjYW52YXMud2lkdGggLyAyLjgsXHJcbiAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0IC8gMS44LFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBbXHJcbiAgICAgICAgICAgICAgICBjYW52YXMud2lkdGggLyAyLjUsXHJcbiAgICAgICAgICAgICAgICBjYW52YXMuaGVpZ2h0IC8gMS4zXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgXSxcclxuICAgIF07XHJcbn07XHJcbmV4cG9ydCBjb25zdCBsb2FkTGV2ZWxJbWFnZXMgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gc3luY0xvYWRpbmdJbWFnZXMoe1xyXG4gICAgICAgIGJhbGxvb25JbWc6IE1BUF9JQ09OX0lNRyxcclxuICAgICAgICBzcGVjaWFsQmxvb25JbWc6IE1BUF9JQ09OX1NQRUNJQUxfSU1HLFxyXG4gICAgICAgIGxvY2tJbWc6IE1BUF9MT0NLX0lNRyxcclxuICAgICAgICBzdGFySW1nOiBTVEFSX0lNR1xyXG4gICAgfSk7XHJcbn07XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVMZXZlbE9iamVjdCh4UG9zLCB5UG9zLCBpbmRleCwgaW1hZ2VzKSB7XHJcbiAgICBjb25zdCBpc1NwZWNpYWwgPSBpc1NwZWNpYWxMZXZlbChpbmRleCk7XHJcbiAgICBjb25zdCBvYmogPSB7XHJcbiAgICAgICAgeDogeFBvcyxcclxuICAgICAgICB5OiB5UG9zLFxyXG4gICAgICAgIGluZGV4LFxyXG4gICAgICAgIGlzU3BlY2lhbCxcclxuICAgICAgICAuLi5pbWFnZXMsXHJcbiAgICAgICAgYmFsbG9vbkltZzogaXNTcGVjaWFsID8gaW1hZ2VzPy5zcGVjaWFsQmxvb25JbWcgOiBpbWFnZXM/LmJhbGxvb25JbWdcclxuICAgIH07XHJcbiAgICByZXR1cm4gKHsgLi4ub2JqIH0pO1xyXG59XHJcbiIsImV4cG9ydCBjb25zdCBGaXJlYmFzZVVzZXJDbGlja2VkID0gXCJ1c2VyX2NsaWNrZWRcIjtcclxuZXhwb3J0IGNvbnN0IEZpcmViYXNlVXNlckluc3RhbGwgPSBcInVzZXJfaW5zdGFsbGVkXCI7XHJcbmV4cG9ydCBjb25zdCBQV0FJbnN0YWxsU3RhdHVzID0gXCJwd2FfaW5zdGFsbGVkX3N0YXR1c1wiO1xyXG5leHBvcnQgY29uc3QgVXNlckNhbmNlbGxlZCA9IFwidXNlcl9jYW5jZWxfaW5zdGFsbGF0aW9uXCI7XHJcbmV4cG9ydCBjb25zdCBOYXRpdmVQbGF5QnV0dG9uID0gXCJuYXRpdmVfcGxheWJ1dHRvbl9jbGlja2VkXCI7XHJcbmV4cG9ydCBjb25zdCBQcmV2aW91c1BsYXllZExldmVsID0gXCJzdG9yZVByZXZpb3VzUGxheWVkTGV2ZWxcIjtcclxuZXhwb3J0IGNvbnN0IFN0b3JlTW9uc3RlclBoYXNlTnVtYmVyID0gXCJzdG9yZU1vbnN0ZXJQaGFzZU51bWJlclwiO1xyXG5leHBvcnQgY29uc3QgSXNDYWNoZWQgPSBcImlzX2NhY2hlZFwiO1xyXG5leHBvcnQgY29uc3QgTW9uc3RlckF1ZGlvID0gXCJtb25zdGVyX2F1ZGlvXCI7XHJcbmV4cG9ydCBjb25zdCBGZWVkYmFja0F1ZGlvID0gXCJmZWVkYmFja19hdWRpb1wiO1xyXG5leHBvcnQgY29uc3QgSW50cm9NdXNpYyA9IFwiaW50cm9fbXVzaWNcIjtcclxuZXhwb3J0IGNvbnN0IFByb21wdEF1ZGlvID0gXCJwcm9tcHRfYXVkaW9cIjtcclxuZXhwb3J0IGNvbnN0IEJ1dHRvbkNsaWNrID0gXCJidXR0b25fY2xpY2tcIjtcclxuZXhwb3J0IGNvbnN0IFRpbWVPdmVyID0gXCJ0aW1lX292ZXJcIjtcclxuZXhwb3J0IGNvbnN0IFN0b25lTXVzaWMgPSBcInN0b25lX211c2ljXCI7XHJcbmV4cG9ydCBjb25zdCBQaHJhc2VBdWRpbyA9IFwicGhyYXNlX2F1ZGlvXCI7XHJcbmV4cG9ydCBjb25zdCBMZXZlbEVuZEF1ZGlvID0gXCJsZXZlbF9lbmRfYXVkaW9cIjtcclxuZXhwb3J0IGNvbnN0IFVybFN1YnN0cmluZyA9IFwiL2ZlZWR0aGVtb25zdGVyXCI7XHJcbmV4cG9ydCBjb25zdCBEZXZlbG9wbWVudFNlcnZlciA9IFwiaHR0cHM6Ly9mZWVkdGhlbW9uc3RlcmRldi5jdXJpb3VzY29udGVudC5vcmdcIjtcclxuZXhwb3J0IGNvbnN0IFN0YXJ0U2NlbmUxID0gXCJTdGFydFNjZW5lMVwiO1xyXG5leHBvcnQgY29uc3QgTGV2ZWxTZWxlY3Rpb24xID0gXCJMZXZlbFNlbGVjdGlvbjFcIjtcclxuZXhwb3J0IGNvbnN0IEdhbWVTY2VuZTEgPSBcIkdhbWVTY2VuZTFcIjtcclxuZXhwb3J0IGNvbnN0IEVuZFNjZW5lMSA9IFwiRW5kU2NlbmUxXCI7XHJcbmV4cG9ydCBjb25zdCBGT05UX0JBU0VfUEFUSCA9ICcuL2Fzc2V0cy9mb250cy8nO1xyXG4vL0F1ZGlvIHBhdGhzXHJcbmV4cG9ydCBjb25zdCBBVURJT19QQVRIX0VBVFMgPSBcIi4vYXNzZXRzL2F1ZGlvcy9FYXQubXAzXCI7XHJcbmV4cG9ydCBjb25zdCBBVURJT19QQVRIX01PTlNURVJfU1BJVCA9IFwiLi9hc3NldHMvYXVkaW9zL01vbnN0ZXJTcGl0Lm1wM1wiO1xyXG5leHBvcnQgY29uc3QgQVVESU9fUEFUSF9NT05TVEVSX0RJU1NBUE9JTlRFRCA9IFwiLi9hc3NldHMvYXVkaW9zL0Rpc2Fwb2ludGVkLTA1Lm1wM1wiO1xyXG5leHBvcnQgY29uc3QgQVVESU9fUEFUSF9QT0lOVFNfQUREID0gXCJhc3NldHMvYXVkaW9zL1BvaW50c0FkZC53YXZcIjtcclxuZXhwb3J0IGNvbnN0IEFVRElPX1BBVEhfQ09SUkVDVF9TVE9ORSA9IFwiYXNzZXRzL2F1ZGlvcy9Db3JyZWN0U3RvbmVGaW5hbC5tcDNcIjtcclxuZXhwb3J0IGNvbnN0IEFVRElPX1BBVEhfQ0hFRVJJTkdfRlVOQyA9IChyYW5kb21OdW1iZXIpID0+IGAuL2Fzc2V0cy9hdWRpb3MvQ2hlZXJpbmctMCR7cmFuZG9tTnVtYmVyfS5tcDNgO1xyXG5leHBvcnQgY29uc3QgQVVESU9fUEFUSF9CVE5fQ0xJQ0sgPSBcIi4vYXNzZXRzL2F1ZGlvcy9CdXR0b25DbGljay5tcDNcIjtcclxuZXhwb3J0IGNvbnN0IEFVRElPX1BBVEhfT05fRFJBRyA9IFwiLi9hc3NldHMvYXVkaW9zL29uRHJhZy5tcDNcIjtcclxuZXhwb3J0IGNvbnN0IEFVRElPX0FSRV9ZT1VfU1VSRSA9IFwiLi9hc3NldHMvYXVkaW9zL2FyZS15b3Utc3VyZS5tcDNcIjtcclxuZXhwb3J0IGNvbnN0IEFVRElPX1RJTUVPVVQgPSBcIi4vYXNzZXRzL2F1ZGlvcy90aW1lb3V0Lm1wM1wiO1xyXG5leHBvcnQgY29uc3QgQVVESU9fSU5UUk8gPSBcIi4vYXNzZXRzL2F1ZGlvcy9pbnRyby5tcDNcIjtcclxuZXhwb3J0IGNvbnN0IEFVRElPX0xFVkVMX0xPU0UgPSBcIi4vYXNzZXRzL2F1ZGlvcy9MZXZlbExvc2VGYW5mYXJlLm1wM1wiO1xyXG5leHBvcnQgY29uc3QgQVVESU9fTEVWRUxfV0lOID0gXCIuL2Fzc2V0cy9hdWRpb3MvTGV2ZWxXaW5GYW5mYXJlLm1wM1wiO1xyXG5leHBvcnQgY29uc3QgQVVESU9fVVJMX1BSRUxPQUQgPSBbXHJcbiAgICBcIi4vYXNzZXRzL2F1ZGlvcy9pbnRyby5tcDNcIixcclxuICAgIFwiLi9hc3NldHMvYXVkaW9zL0NoZWVyaW5nLTAyLm1wM1wiLFxyXG4gICAgXCIuL2Fzc2V0cy9hdWRpb3MvQ2hlZXJpbmctMDMubXAzXCIsXHJcbiAgICBcIi4vYXNzZXRzL2F1ZGlvcy9DaGVlcmluZy0wMS5tcDNcIixcclxuICAgIFwiLi9hc3NldHMvYXVkaW9zL29uRHJhZy5tcDNcIixcclxuICAgIFwiLi9hc3NldHMvYXVkaW9zL3RpbWVvdXQubXAzXCIsXHJcbiAgICBcIi4vYXNzZXRzL2F1ZGlvcy9MZXZlbFdpbkZhbmZhcmUubXAzXCIsXHJcbiAgICBcIi4vYXNzZXRzL2F1ZGlvcy9MZXZlbExvc2VGYW5mYXJlLm1wM1wiLFxyXG4gICAgXCIuL2Fzc2V0cy9hdWRpb3MvQnV0dG9uQ2xpY2subXAzXCIsXHJcbiAgICBcIi4vYXNzZXRzL2F1ZGlvcy9Nb25zdGVyIFNwaXRzIHdyb25nIHN0b25lcy0wMS5tcDNcIixcclxuICAgIFwiLi9hc3NldHMvYXVkaW9zL0Rpc2Fwb2ludGVkLTA1Lm1wM1wiLFxyXG4gICAgXCIuL2Fzc2V0cy9hdWRpb3MvTW9uc3RlclNwaXQubXAzXCIsXHJcbiAgICBcIi4vYXNzZXRzL2F1ZGlvcy9FYXQubXAzXCIsXHJcbiAgICBcIi4vYXNzZXRzL2F1ZGlvcy9Qb2ludHNBZGQud2F2XCIsXHJcbiAgICBcIi4vYXNzZXRzL2F1ZGlvcy9hcmUteW91LXN1cmUubXAzXCIsXHJcbl07XHJcbi8vSW1hZ2UgcGF0aHNcclxuZXhwb3J0IGNvbnN0IEFTU0VUU19QQVRIX1NUT05FX1BJTktfQkcgPSBcIi4vYXNzZXRzL2ltYWdlcy9zdG9uZV9waW5rLndlYnBcIjsgLy9zdG9uZV9waW5rX3YwMi5wbmdcclxuZXhwb3J0IGNvbnN0IEFTU0VUU19QQVRIX1RPVEVNID0gXCIuL2Fzc2V0cy9pbWFnZXMvVG90ZW1fdjAyX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBBU1NFVFNfUEFUSF9CR18wMSA9IFwiLi9hc3NldHMvaW1hZ2VzL2JnX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBBU1NFVFNfUEFUSF9ISUxMID0gXCIuL2Fzc2V0cy9pbWFnZXMvaGlsbF92MDEud2VicFwiO1xyXG5leHBvcnQgY29uc3QgQVNTRVRTX1BBVEhfRkVOQ0UgPSBcIi4vYXNzZXRzL2ltYWdlcy9mZW5jZV92MDEud2VicFwiO1xyXG5leHBvcnQgY29uc3QgQVNTRVRTX1BBVEhfTU9OU1RFUl9JRExFID0gXCIuL2Fzc2V0cy9pbWFnZXMvaWRsZTQucG5nXCI7XHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX0JBQ0tHUk9VTkRfMSA9IFwiLi9hc3NldHMvaW1hZ2VzL2JnX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBBVVRVTU5fQkFDS0dST1VORF8xID0gXCIuL2Fzc2V0cy9pbWFnZXMvQXV0dW1uX2JnX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBBVVRVTU5fSElMTF8xID0gXCIuL2Fzc2V0cy9pbWFnZXMvQXV0dW1uX2hpbGxfdjAxLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IEFVVFVNTl9QSUxMQVJfMSA9IFwiLi9hc3NldHMvaW1hZ2VzL0F1dHVtbl9zaWduX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBBVVRVTU5fU0lHTl8xID0gXCIuL2Fzc2V0cy9pbWFnZXMvQXV0dW1uX3NpZ25fdjAxLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IEFVVFVNTl9GRU5DRV8xID0gXCIuL2Fzc2V0cy9pbWFnZXMvQXV0dW1uX2ZlbmNlX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBXSU5URVJfQkFDS0dST1VORF8xID0gXCIuL2Fzc2V0cy9pbWFnZXMvV2ludGVyX2JnXzAxLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IFdJTlRFUl9ISUxMXzEgPSBcIi4vYXNzZXRzL2ltYWdlcy9XaW50ZXJfaGlsbF92MDEud2VicFwiO1xyXG5leHBvcnQgY29uc3QgV0lOVEVSX1NJR05fMSA9IFwiLi9hc3NldHMvaW1hZ2VzL1dpbnRlcl9zaWduX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBXSU5URVJfRkVOQ0VfMSA9IFwiLi9hc3NldHMvaW1hZ2VzL1dpbnRlcl9mZW5jZV92MDEud2VicFwiO1xyXG5leHBvcnQgY29uc3QgV0lOVEVSX1BJTExBUl8xID0gXCIuL2Fzc2V0cy9pbWFnZXMvV2ludGVyX3NpZ25fdjAxLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IExFVkVMX1NFTEVDVElPTl9CQUNLR1JPVU5EID0gXCIuL2Fzc2V0cy9pbWFnZXMvbWFwLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IFBST01QVF9URVhUX0JHID0gXCIuL2Fzc2V0cy9pbWFnZXMvcHJvbXB0VGV4dEJnLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IFBST01QVF9QTEFZX0JVVFRPTiA9IFwiLi9hc3NldHMvaW1hZ2VzL3Byb21wdFBsYXlCdXR0b24ud2VicFwiO1xyXG5leHBvcnQgY29uc3QgTEVWRUxfSU5ESUNBVE9SID0gXCIuL2Fzc2V0cy9pbWFnZXMvbGV2ZWxzX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBCQVJfRU1QVFkgPSBcIi4vYXNzZXRzL2ltYWdlcy9iYXJfZW1wdHlfdjAxLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IEJBUl9GVUxMID0gXCIuL2Fzc2V0cy9pbWFnZXMvYmFyX2Z1bGxfdjAxLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IFRJTUVSX0VNUFRZID0gXCIuL2Fzc2V0cy9pbWFnZXMvdGltZXJfZW1wdHkud2VicFwiO1xyXG5leHBvcnQgY29uc3QgUk9UQVRJTkdfQ0xPQ0sgPSBcIi4vYXNzZXRzL2ltYWdlcy90aW1lci53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBUSU1FUl9GVUxMID0gXCIuL2Fzc2V0cy9pbWFnZXMvdGltZXJfZnVsbC5wbmdcIjtcclxuZXhwb3J0IGNvbnN0IFRVVE9SSUFMX0hBTkQgPSBcIi4vYXNzZXRzL2ltYWdlcy90dXRvcmlhbF9oYW5kLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IFdJTl9CRyA9IFwiLi9hc3NldHMvaW1hZ2VzL1dJTl9zY3JlZW5fYmcud2VicFwiO1xyXG5leHBvcnQgY29uc3QgUElOX1NUQVJfMSA9IFwiLi9hc3NldHMvaW1hZ2VzL3BpblN0YXIxLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IFBJTl9TVEFSXzIgPSBcIi4vYXNzZXRzL2ltYWdlcy9waW5TdGFyMi53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBQSU5fU1RBUl8zID0gXCIuL2Fzc2V0cy9pbWFnZXMvcGluU3RhcjMud2VicFwiO1xyXG5leHBvcnQgY29uc3QgQ0xPVURfNiA9IFwiLi9hc3NldHMvaW1hZ2VzL2Nsb3VkXzAxLnBuZ1wiO1xyXG5leHBvcnQgY29uc3QgQ0xPVURfNyA9IFwiLi9hc3NldHMvaW1hZ2VzL2Nsb3VkXzAyLnBuZ1wiO1xyXG5leHBvcnQgY29uc3QgQ0xPVURfOCA9IFwiLi9hc3NldHMvaW1hZ2VzL2Nsb3VkXzAzLnBuZ1wiO1xyXG5leHBvcnQgY29uc3QgUExBWV9CVE5fSU1HID0gXCIuL2Fzc2V0cy9pbWFnZXMvUGxheV9idXR0b24ud2VicFwiO1xyXG5leHBvcnQgY29uc3QgUEFVU0VfQlROX0lNRyA9IFwiLi9hc3NldHMvaW1hZ2VzL3BhdXNlX3YwMS53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBNQVBfQlROX0lNRyA9IFwiLi9hc3NldHMvaW1hZ2VzL21hcF9idG4ud2VicFwiO1xyXG5leHBvcnQgY29uc3QgTUFQX0lDT05fSU1HID0gXCIuL2Fzc2V0cy9pbWFnZXMvbWFwSWNvbi53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBNQVBfSUNPTl9TUEVDSUFMX0lNRyA9IFwiLi9hc3NldHMvaW1hZ2VzL21hcF9pY29uX21vbnN0ZXJfbGV2ZWxfdjAxLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IE1BUF9MT0NLX0lNRyA9IFwiLi9hc3NldHMvaW1hZ2VzL21hcExvY2sud2VicFwiO1xyXG5leHBvcnQgY29uc3QgU1RBUl9JTUcgPSBcIi4vYXNzZXRzL2ltYWdlcy9zdGFyLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IE5FWFRfQlROX0lNRyA9IFwiLi9hc3NldHMvaW1hZ2VzL25leHRfYnRuLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IEJBQ0tfQlROX0lNRyA9IFwiLi9hc3NldHMvaW1hZ2VzL2JhY2tfYnRuLndlYnBcIjtcclxuZXhwb3J0IGNvbnN0IFJFVFJZX0JUTl9JTUcgPSBcIi4vYXNzZXRzL2ltYWdlcy9yZXRyeV9idG4ud2VicFwiO1xyXG5leHBvcnQgY29uc3QgQ0FOQ0VMX0JUTl9JTUcgPSBcIi4vYXNzZXRzL2ltYWdlcy9jbG9zZV9idG4ud2VicFwiO1xyXG5leHBvcnQgY29uc3QgWUVTX0JUTl9JTUcgPSBcIi4vYXNzZXRzL2ltYWdlcy9jb25maXJtX2J0bi53ZWJwXCI7XHJcbmV4cG9ydCBjb25zdCBQT1BVUF9CR19JTUcgPSBcIi4vYXNzZXRzL2ltYWdlcy9wb3B1cF9iZ192MDEud2VicFwiO1xyXG4vL0JhY2tncm91bmQgR3JvdXAgSW1hZ2VzXHJcbmV4cG9ydCBjb25zdCBHQU1FUExBWV9CR19HUk9VUF9JTUdTID0ge1xyXG4gICAgQVNTRVRTX1BBVEhfVE9URU0sXHJcbiAgICBERUZBVUxUX0JBQ0tHUk9VTkRfMSxcclxuICAgIEFTU0VUU19QQVRIX0hJTEwsXHJcbiAgICBBU1NFVFNfUEFUSF9GRU5DRSxcclxuICAgIEFTU0VUU19QQVRIX01PTlNURVJfSURMRSxcclxufTtcclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQkdfR1JPVVBfSU1HUyA9IHtcclxuICAgIERFRkFVTFRfQkFDS0dST1VORF8xLFxyXG4gICAgQVNTRVRTX1BBVEhfSElMTCxcclxuICAgIEFTU0VUU19QQVRIX1RPVEVNLFxyXG4gICAgQVNTRVRTX1BBVEhfRkVOQ0UsXHJcbn07XHJcbmV4cG9ydCBjb25zdCBBVVRVTU5fQkdfR1JPVVBfSU1HUyA9IHtcclxuICAgIEFVVFVNTl9CQUNLR1JPVU5EXzEsXHJcbiAgICBBVVRVTU5fSElMTF8xLFxyXG4gICAgQVVUVU1OX1BJTExBUl8xLFxyXG4gICAgQVVUVU1OX1NJR05fMSxcclxuICAgIEFVVFVNTl9GRU5DRV8xLFxyXG59O1xyXG5leHBvcnQgY29uc3QgV0lOVEVSX0JHX0dST1VQX0lNR1MgPSB7XHJcbiAgICBXSU5URVJfQkFDS0dST1VORF8xLFxyXG4gICAgV0lOVEVSX0hJTExfMSxcclxuICAgIFdJTlRFUl9TSUdOXzEsXHJcbiAgICBXSU5URVJfRkVOQ0VfMSxcclxuICAgIFdJTlRFUl9QSUxMQVJfMSxcclxufTtcclxuLy9TY2VuZSBOYW1lc1xyXG5leHBvcnQgY29uc3QgU0NFTkVfTkFNRV9TVEFSVCA9IFwiU3RhcnRTY2VuZVwiO1xyXG5leHBvcnQgY29uc3QgU0NFTkVfTkFNRV9MRVZFTF9TRUxFQ1QgPSBcIkxldmVsU2VsZWN0aW9uXCI7XHJcbmV4cG9ydCBjb25zdCBTQ0VORV9OQU1FX0dBTUVfUExBWSA9IFwiR2FtZVBsYXlcIjtcclxuZXhwb3J0IGNvbnN0IFNDRU5FX05BTUVfTEVWRUxfRU5EID0gXCJMZXZlbEVuZFwiO1xyXG4vL0xldmVsc1xyXG5leHBvcnQgY29uc3QgU1BFQ0lBTF9MRVZFTFMgPSBbNSwgMTMsIDIwLCAzMCwgNDJdO1xyXG4iLCJpbXBvcnQgeyBsYW5nIH0gZnJvbSBcIkBjb21tb25cIjtcclxuZXhwb3J0IGNvbnN0IFVSTCA9IFwiLi9sYW5nL1wiICsgbGFuZyArIFwiL2Z0bV9cIiArIGxhbmcgKyBcIi5qc29uXCI7XHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRGdG1EYXRhKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKFVSTCwge1xyXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHJlcy5qc29uKCkudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfSkpO1xyXG59XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXREYXRhKCkge1xyXG4gICAgcmV0dXJuIGF3YWl0IGdldEZ0bURhdGEoKTtcclxufVxyXG4iLCJleHBvcnQgY29uc3QgY3VzdG9tRm9udHMgPSB7XHJcbiAgICBkZWZhdWx0OiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIGVuZ2xpc2g6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgc3dhaGlsaTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICB3b2xvZjogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICB0YWppazogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBtYXJhdGhpOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIGFtaGFyaWM6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgcHVuamFiaTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICB0YW1pbDogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBzZXBlZGk6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgZ3VqYXJhdGk6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgdGVsdWd1OiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIHRzb25nYTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBtYWxheTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBuZGViZWxlOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIHZlbmRhOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIHNpc3dhdGk6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgdHN3YW5hOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIHRoYWk6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgZnVsYTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBmYXJzaTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBidXJtZXNlOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIGJlbmdhbGk6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgQXplcmJhaWphbmk6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgU2Vzb3RobzogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBHZW9yZ2lhbjogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBCcmF6aWxpYW5Qb3J0dWd1ZXNlOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIFNvbWFsaTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBIYXVzYTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBJZ2JvOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIEhhdGlhbkNyZW9sZTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBPcm9tbzogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBMdWdhbmRhOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIFlvcnViYTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBLaG1lcjogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBKYXZhbmVzZTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBVcmR1OiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIEtpbnlhcndhbmRhOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIFNob25hOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIEt1cmRpc2g6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgRnJlbmNoOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIGlzaVhob3NhOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIEFmcmlrYWFuczogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBOZXBhbGk6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgVWtyYWluaWFuOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIEhpbmRpOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIFRhZ2Fsb2c6IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgVmlldG5hbWVzZTogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbiAgICBQYXNodG86IFwiQXRtYS1TZW1pQm9sZFwiLFxyXG4gICAgVHdpOiBcIkF0bWEtU2VtaUJvbGRcIixcclxuICAgIEFyYWJpYzogXCJBdG1hLVNlbWlCb2xkXCIsXHJcbn07XHJcbiIsImV4cG9ydCBjbGFzcyBEYXRhTW9kYWwge1xyXG4gICAgdGl0bGU7XHJcbiAgICBvdGhlckF1ZGlvcztcclxuICAgIGxldmVscztcclxuICAgIEZlZWRiYWNrVGV4dHM7XHJcbiAgICBGZWVkYmFja0F1ZGlvcztcclxuICAgIHJpZ2h0VG9MZWZ0O1xyXG4gICAgbWFqVmVyc2lvbjtcclxuICAgIG1pblZlcnNpb247XHJcbiAgICB2ZXJzaW9uO1xyXG4gICAgY29uc3RydWN0b3IodGl0bGUsIG90aGVyQXVkaW9zLCBsZXZlbHMsIGZlZWRiYWNrVGV4dHMsIHJpZ2h0VG9MZWZ0LCBmZWVkYmFja0F1ZGlvcywgbWFqVmVyc2lvbiwgbWluVmVyc2lvbiwgdmVyc2lvbikge1xyXG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcclxuICAgICAgICB0aGlzLm90aGVyQXVkaW9zID0gbmV3IE90aGVyQXVkaW9zKG90aGVyQXVkaW9zKTtcclxuICAgICAgICB0aGlzLmxldmVscyA9IHRoaXMuZ2V0TGV2ZWxzKGxldmVscyk7XHJcbiAgICAgICAgdGhpcy5GZWVkYmFja1RleHRzID0gbmV3IEZlZWRiYWNrVGV4dHMoZmVlZGJhY2tUZXh0cyk7XHJcbiAgICAgICAgdGhpcy5GZWVkYmFja0F1ZGlvcyA9IG5ldyBGZWVkYmFja0F1ZGlvcyhmZWVkYmFja0F1ZGlvcyk7XHJcbiAgICAgICAgdGhpcy5yaWdodFRvTGVmdCA9IHJpZ2h0VG9MZWZ0O1xyXG4gICAgICAgIHRoaXMubWFqVmVyc2lvbiA9IG1halZlcnNpb247XHJcbiAgICAgICAgdGhpcy5taW5WZXJzaW9uID0gbWluVmVyc2lvbjtcclxuICAgICAgICB0aGlzLnZlcnNpb24gPSB2ZXJzaW9uO1xyXG4gICAgfVxyXG4gICAgZ2V0TGV2ZWxzKGxldmVscykge1xyXG4gICAgICAgIGxldCBsZXZlbEFycmF5ID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZXZlbHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbGV2ZWxBcnJheS5wdXNoKG5ldyBMZXZlbHMobGV2ZWxzW2ldKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBsZXZlbEFycmF5O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBPdGhlckF1ZGlvcyB7XHJcbiAgICBzZWxjdFlvdXJQbGF5ZXI7XHJcbiAgICB3YXRjaE1lR3JvdztcclxuICAgIGFyZVlvdVN1cmU7XHJcbiAgICBjb25zdHJ1Y3RvcihvdGhlckF1ZGlvcykge1xyXG4gICAgICAgIHRoaXMuc2VsY3RZb3VyUGxheWVyID0gb3RoZXJBdWRpb3NbXCJTZWxlY3QgeW91ciBwbGF5ZXJcIl07XHJcbiAgICAgICAgdGhpcy53YXRjaE1lR3JvdyA9IG90aGVyQXVkaW9zW1wiV2F0Y2ggbWUgZ3Jvd1wiXTtcclxuICAgICAgICB0aGlzLmFyZVlvdVN1cmUgPSBvdGhlckF1ZGlvc1tcIkFyZSB5b3Ugc3VyZVwiXTtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgRmVlZGJhY2tUZXh0cyB7XHJcbiAgICBmYW50YXN0aWM7XHJcbiAgICBncmVhdDtcclxuICAgIGFtYXppbmc7XHJcbiAgICBjb25zdHJ1Y3RvcihmZWVkYmFja1RleHRzKSB7XHJcbiAgICAgICAgaWYgKGZlZWRiYWNrVGV4dHMubGVuZ3RoID49IDEpIHtcclxuICAgICAgICAgICAgdGhpcy5mYW50YXN0aWMgPSBmZWVkYmFja1RleHRzWzBdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZmVlZGJhY2tUZXh0cy5sZW5ndGggPj0gMikge1xyXG4gICAgICAgICAgICB0aGlzLmdyZWF0ID0gZmVlZGJhY2tUZXh0c1sxXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGZlZWRiYWNrVGV4dHMubGVuZ3RoID49IDMpIHtcclxuICAgICAgICAgICAgdGhpcy5hbWF6aW5nID0gZmVlZGJhY2tUZXh0c1syXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEZlZWRiYWNrQXVkaW9zIHtcclxuICAgIGZhbnRhc3RpYztcclxuICAgIGdyZWF0O1xyXG4gICAgYW1hemluZztcclxuICAgIGNvbnN0cnVjdG9yKGZlZWRiYWNrQXVkaW9zKSB7XHJcbiAgICAgICAgaWYgKGZlZWRiYWNrQXVkaW9zLmxlbmd0aCA+PSAxKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZmFudGFzdGljID0gZmVlZGJhY2tBdWRpb3NbMF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChmZWVkYmFja0F1ZGlvcy5sZW5ndGggPj0gMikge1xyXG4gICAgICAgICAgICB0aGlzLmdyZWF0ID0gZmVlZGJhY2tBdWRpb3NbMV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChmZWVkYmFja0F1ZGlvcy5sZW5ndGggPj0gMykge1xyXG4gICAgICAgICAgICB0aGlzLmFtYXppbmcgPSBmZWVkYmFja0F1ZGlvc1syXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIExldmVscyB7XHJcbiAgICBwdXp6bGVzO1xyXG4gICAgbGV2ZWxNZXRhO1xyXG4gICAgbGV2ZWxOdW1iZXI7XHJcbiAgICBjb25zdHJ1Y3RvcihsZXZlbHMpIHtcclxuICAgICAgICB0aGlzLnB1enpsZXMgPSB0aGlzLmdldFB1enpsZURhdGEobGV2ZWxzKTtcclxuICAgICAgICB0aGlzLmxldmVsTWV0YSA9IG5ldyBMZXZlbE1ldGEobGV2ZWxzLkxldmVsTWV0YSk7XHJcbiAgICAgICAgdGhpcy5sZXZlbE51bWJlciA9IGxldmVscy5MZXZlbE51bWJlcjtcclxuICAgIH1cclxuICAgIGdldFB1enpsZURhdGEobGV2ZWxzKSB7XHJcbiAgICAgICAgbGV0IHB1enpsZU9iamVjdHMgPSBbXTtcclxuICAgICAgICBsZXZlbHMuUHV6emxlcy5tYXAoKHB1enpsZURhdGEsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIHB1enpsZU9iamVjdHMucHVzaChuZXcgUHV6emxlcyhwdXp6bGVEYXRhKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHB1enpsZU9iamVjdHM7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIFB1enpsZXMge1xyXG4gICAgc2VnbWVudE51bWJlcjtcclxuICAgIHByb21wdDtcclxuICAgIGZvaWxTdG9uZXM7XHJcbiAgICB0YXJnZXRTdG9uZXM7XHJcbiAgICBjb25zdHJ1Y3RvcihwdXp6bGUpIHtcclxuICAgICAgICB0aGlzLnNlZ21lbnROdW1iZXIgPSBwdXp6bGUuU2VnbWVudE51bWJlcjtcclxuICAgICAgICB0aGlzLnByb21wdCA9IG5ldyBQcm9tcHQocHV6emxlLnByb21wdCk7XHJcbiAgICAgICAgdGhpcy5mb2lsU3RvbmVzID0gdGhpcy5nZXRGb2lsU3RvbmVzKHB1enpsZSk7XHJcbiAgICAgICAgdGhpcy50YXJnZXRTdG9uZXMgPSB0aGlzLmdldFRhcmdldFN0b25lcyhwdXp6bGUpO1xyXG4gICAgfVxyXG4gICAgZ2V0Rm9pbFN0b25lcyhwdXp6bGUpIHtcclxuICAgICAgICBsZXQgZm9pbFN0b25lQXJyYXkgPSBbXTtcclxuICAgICAgICBwdXp6bGUuZm9pbHN0b25lcy5tYXAoKHN0b25lcywgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgZm9pbFN0b25lQXJyYXkucHVzaChzdG9uZXMuU3RvbmVUZXh0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gZm9pbFN0b25lQXJyYXk7XHJcbiAgICB9XHJcbiAgICBnZXRUYXJnZXRTdG9uZXMocHV6emxlKSB7XHJcbiAgICAgICAgbGV0IHRhcmdldFN0b25lQXJyYXkgPSBbXTtcclxuICAgICAgICBwdXp6bGUudGFyZ2V0c3RvbmVzLm1hcCgoc3RvbmVzLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICB0YXJnZXRTdG9uZUFycmF5LnB1c2goc3RvbmVzLlN0b25lVGV4dCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRhcmdldFN0b25lQXJyYXk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEZvaWxTdG9uZSB7XHJcbiAgICBzdG9uZVRleHQ7XHJcbiAgICBjb25zdHJ1Y3RvcihzdG9uZVRleHQpIHtcclxuICAgICAgICB0aGlzLnN0b25lVGV4dCA9IHN0b25lVGV4dDtcclxuICAgIH1cclxufVxyXG5leHBvcnQgY2xhc3MgVGFyZ2V0U3RvbmUge1xyXG4gICAgc3RvbmVUZXh0O1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5zdG9uZVRleHQ7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIFByb21wdCB7XHJcbiAgICBwcm9tcHRUZXh0O1xyXG4gICAgcHJvbXB0QXVkaW87XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9tcHQpIHtcclxuICAgICAgICB0aGlzLnByb21wdFRleHQgPSBwcm9tcHQuUHJvbXB0VGV4dDtcclxuICAgICAgICB0aGlzLnByb21wdEF1ZGlvID0gcHJvbXB0LlByb21wdEF1ZGlvO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBjbGFzcyBMZXZlbE1ldGEge1xyXG4gICAgcHJvbXB0RmFkZU91dDtcclxuICAgIGxldHRlckdyb3VwO1xyXG4gICAgbGV2ZWxOdW1iZXI7XHJcbiAgICBwcm90b1R5cGU7XHJcbiAgICBsZXZlbFR5cGU7XHJcbiAgICBjb25zdHJ1Y3RvcihsZXZlbE1ldGEpIHtcclxuICAgICAgICB0aGlzLnByb21wdEZhZGVPdXQgPSBsZXZlbE1ldGEuUHJvbXB0RmFkZW91dDtcclxuICAgICAgICB0aGlzLmxldHRlckdyb3VwID0gbGV2ZWxNZXRhLkxldHRlckdyb3VwO1xyXG4gICAgICAgIHRoaXMubGV2ZWxOdW1iZXIgPSBsZXZlbE1ldGEuTGV2ZWxOdW1iZXI7XHJcbiAgICAgICAgdGhpcy5wcm90b1R5cGUgPSBsZXZlbE1ldGEuUHJvbXB0VHlwZTtcclxuICAgICAgICB0aGlzLmxldmVsVHlwZSA9IGxldmVsTWV0YS5MZXZlbFR5cGU7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgRGVidWdnZXIsIGxhbmcgfSBmcm9tIFwiQGNvbW1vblwiO1xyXG5leHBvcnQgY2xhc3MgR2FtZVNjb3JlIHtcclxuICAgIHN0YXRpYyBjdXJyZW50bGFuZ3VhZ2UgPSBsYW5nO1xyXG4gICAgc3RhdGljIHNldEdhbWVMZXZlbFNjb3JlKGN1cnJlbnRMZXZlbEluZm8sIHNjb3JlKSB7XHJcbiAgICAgICAgbGV0IHN0YXJzR2FpbmVkID0gdGhpcy5jYWxjdWxhdGVTdGFyQ291bnQoc2NvcmUpO1xyXG4gICAgICAgIGxldCBsZXZlbFBsYXllZEluZm8gPSB7XHJcbiAgICAgICAgICAgIGxldmVsTmFtZTogY3VycmVudExldmVsSW5mby5sZXZlbE1ldGEubGV2ZWxUeXBlLFxyXG4gICAgICAgICAgICBsZXZlbE51bWJlcjogY3VycmVudExldmVsSW5mby5sZXZlbE1ldGEubGV2ZWxOdW1iZXIsXHJcbiAgICAgICAgICAgIHNjb3JlOiBzY29yZSxcclxuICAgICAgICAgICAgc3RhckNvdW50OiBzdGFyc0dhaW5lZCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuc2V0VG90YWxTdGFyQ291bnQoc3RhcnNHYWluZWQpO1xyXG4gICAgICAgIGxldCBhbGxHYW1lbGV2ZWxJbmZvID0gdGhpcy5nZXRBbGxHYW1lTGV2ZWxJbmZvKCk7XHJcbiAgICAgICAgbGV0IGluZGV4ID0gLTE7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxHYW1lbGV2ZWxJbmZvLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChhbGxHYW1lbGV2ZWxJbmZvW2ldLmxldmVsTnVtYmVyID09PSBsZXZlbFBsYXllZEluZm8ubGV2ZWxOdW1iZXIpIHtcclxuICAgICAgICAgICAgICAgIGluZGV4ID0gaTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpbmRleCAhPT0gLTEgJiYgbGV2ZWxQbGF5ZWRJbmZvLnNjb3JlID4gYWxsR2FtZWxldmVsSW5mb1tpbmRleF0uc2NvcmUpIHtcclxuICAgICAgICAgICAgYWxsR2FtZWxldmVsSW5mb1tpbmRleF0gPSBsZXZlbFBsYXllZEluZm87XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBhbGxHYW1lbGV2ZWxJbmZvLnB1c2gobGV2ZWxQbGF5ZWRJbmZvKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5jdXJyZW50bGFuZ3VhZ2UgKyBcImdhbWVQbGF5ZWRJbmZvXCIsIEpTT04uc3RyaW5naWZ5KGFsbEdhbWVsZXZlbEluZm8pKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBnZXRBbGxHYW1lTGV2ZWxJbmZvKCkge1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmN1cnJlbnRsYW5ndWFnZSArIFwiZ2FtZVBsYXllZEluZm9cIik7XHJcbiAgICAgICAgcmV0dXJuIGRhdGEgPT0gdW5kZWZpbmVkID8gW10gOiBKU09OLnBhcnNlKGRhdGEpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIHNldFRvdGFsU3RhckNvdW50KHN0YXJzR2FpbmVkKSB7XHJcbiAgICAgICAgbGV0IHN0YXJDb3VudCA9IHRoaXMuZ2V0VG90YWxTdGFyQ291bnQoKTtcclxuICAgICAgICBsZXQgdG90YWxTdGFyQ291bnQgPSBzdGFyQ291bnQgKyBzdGFyc0dhaW5lZDtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLmN1cnJlbnRsYW5ndWFnZSArIFwidG90YWxTdGFyQ291bnRcIiwgdG90YWxTdGFyQ291bnQpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGdldFRvdGFsU3RhckNvdW50KCkge1xyXG4gICAgICAgIGNvbnN0IHN0YXJDb3VudCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuY3VycmVudGxhbmd1YWdlICsgXCJ0b3RhbFN0YXJDb3VudFwiKTtcclxuICAgICAgICByZXR1cm4gc3RhckNvdW50ID09IHVuZGVmaW5lZCA/IDAgOiBwYXJzZUludChzdGFyQ291bnQpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGNhbGN1bGF0ZVN0YXJDb3VudChzY29yZSkge1xyXG4gICAgICAgIHJldHVybiBzY29yZSA9PSAyMDBcclxuICAgICAgICAgICAgPyAxXHJcbiAgICAgICAgICAgIDogc2NvcmUgPT0gMzAwXHJcbiAgICAgICAgICAgICAgICA/IDJcclxuICAgICAgICAgICAgICAgIDogc2NvcmUgPT0gNDAwXHJcbiAgICAgICAgICAgICAgICAgICAgPyAyXHJcbiAgICAgICAgICAgICAgICAgICAgOiBzY29yZSA9PSA1MDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgPyAzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDogMDtcclxuICAgIH1cclxuICAgIHN0YXRpYyBnZXREYXRhZnJvbVN0b3JhZ2UoKSB7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IERlYnVnZ2VyLkRlYnVnTW9kZVxyXG4gICAgICAgICAgICA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0obGFuZyArIFwiUHJvZmlsZURlYnVnXCIpIHx8IFwie31cIilcclxuICAgICAgICAgICAgOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxhbmcgKyBcIlByb2ZpbGVcIikgfHwgXCJ7fVwiKTtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH1cclxufVxyXG4iLCJleHBvcnQgY29uc3QgbGFuZ3VhZ2VGb250TWFwcGluZyA9IHtcclxuICAgIGVuZ2xpc2g6IFwiQ29uc29sYXNcIixcclxuICAgIHN3YWhpbGk6IFwiQ29uc29sYXNcIixcclxuICAgIHdvbG9mOiBcIkNvbnNvbGFzXCIsXHJcbiAgICB0YWppazogXCJDb25zb2xhc1wiLFxyXG4gICAgbWFyYXRoaTogXCJDb25zb2xhc1wiLFxyXG4gICAgYW1oYXJpYzogXCJDb25zb2xhc1wiLFxyXG4gICAgcHVuamFiaTogXCJDb25zb2xhc1wiLFxyXG4gICAgdGFtaWw6IFwiQ29uc29sYXNcIixcclxuICAgIHNlcGVkaTogXCJDb25zb2xhc1wiLFxyXG4gICAgZ3VqYXJhdGk6IFwiQ29uc29sYXNcIixcclxuICAgIHRlbHVndTogXCJDb25zb2xhc1wiLFxyXG4gICAgdHNvbmdhOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBtYWxheTogXCJDb25zb2xhc1wiLFxyXG4gICAgbmRlYmVsZTogXCJDb25zb2xhc1wiLFxyXG4gICAgdmVuZGE6IFwiTm90b1NhbnMtUmVndWxhclwiLFxyXG4gICAgc2lzd2F0aTogXCJDb25zb2xhc1wiLFxyXG4gICAgdHN3YW5hOiBcIkNvbnNvbGFzXCIsXHJcbiAgICB0aGFpOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBmdWxhOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBmYXJzaTogXCJDb25zb2xhc1wiLFxyXG4gICAgYnVybWVzZTogXCJDb25zb2xhc1wiLFxyXG4gICAgYmVuZ2FsaTogXCJDb25zb2xhc1wiLFxyXG4gICAgQXplcmJhaWphbmk6IFwiTm90b1NhbnMtUmVndWxhclwiLFxyXG4gICAgU2Vzb3RobzogXCJDb25zb2xhc1wiLFxyXG4gICAgR2VvcmdpYW46IFwiQ29uc29sYXNcIixcclxuICAgIEJyYXppbGlhblBvcnR1Z3Vlc2U6IFwiQ29uc29sYXNcIixcclxuICAgIFNvbWFsaTogXCJDb25zb2xhc1wiLFxyXG4gICAgSGF1c2E6IFwiTm90b1NhbnMtUmVndWxhclwiLFxyXG4gICAgSWdibzogXCJDb25zb2xhc1wiLFxyXG4gICAgSGF0aWFuQ3Jlb2xlOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBPcm9tbzogXCJDb25zb2xhc1wiLFxyXG4gICAgTHVnYW5kYTogXCJDb25zb2xhc1wiLFxyXG4gICAgWW9ydWJhOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBLaG1lcjogXCJDb25zb2xhc1wiLFxyXG4gICAgSmF2YW5lc2U6IFwiQ29uc29sYXNcIixcclxuICAgIFVyZHU6IFwiQ29uc29sYXNcIixcclxuICAgIEtpbnlhcndhbmRhOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBTaG9uYTogXCJDb25zb2xhc1wiLFxyXG4gICAgS3VyZGlzaDogXCJDb25zb2xhc1wiLFxyXG4gICAgRnJlbmNoOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBpc2lYaG9zYTogXCJDb25zb2xhc1wiLFxyXG4gICAgQWZyaWthYW5zOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBOZXBhbGk6IFwiQ29uc29sYXNcIixcclxuICAgIFVrcmFpbmlhbjogXCJDb25zb2xhc1wiLFxyXG4gICAgSGluZGk6IFwiQ29uc29sYXNcIixcclxuICAgIFRhZ2Fsb2c6IFwiQ29uc29sYXNcIixcclxuICAgIFZpZXRuYW1lc2U6IFwiTm90b1NhbnMtUmVndWxhclwiLFxyXG4gICAgUGFzaHRvOiBcIkNvbnNvbGFzXCIsXHJcbiAgICBUd2k6IFwiTm90b1NhbnMtUmVndWxhclwiLFxyXG4gICAgQXJhYmljOiBcIkFkb2JlLUFyYWJpYy1Cb2xkXCJcclxufTtcclxuIiwiaW1wb3J0IHsgTE9BRFBVWlpMRSwgU1RPTkVEUk9QIH0gZnJvbSBcIkBjb21tb25cIjtcclxuZXhwb3J0IGNsYXNzIEV2ZW50TWFuYWdlciB7XHJcbiAgICBoYW5kbGVyO1xyXG4gICAgc3RvbmVEcm9wQ2FsbGJhY2tIYW5kbGVyO1xyXG4gICAgbG9hZFB1enpsZUNhbGxiYWNrSGFuZGxlcjtcclxuICAgIGNvbnN0cnVjdG9yKGhhbmRsZXIpIHtcclxuICAgICAgICB0aGlzLmhhbmRsZXIgPSBoYW5kbGVyO1xyXG4gICAgICAgIHRoaXMuc3RvbmVEcm9wQ2FsbGJhY2tIYW5kbGVyID0gaGFuZGxlci5zdG9uZURyb3BDYWxsYmFja0hhbmRsZXI7XHJcbiAgICAgICAgdGhpcy5sb2FkUHV6emxlQ2FsbGJhY2tIYW5kbGVyID0gaGFuZGxlci5sb2FkUHV6emxlQ2FsbGJhY2tIYW5kbGVyO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoU1RPTkVEUk9QLCB0aGlzLmhhbmRsZVN0b25lRHJvcHBlZEV2ZW50LCBmYWxzZSk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihMT0FEUFVaWkxFLCB0aGlzLmhhbmRsZUxvYWRQdXp6bGVFdmVudCwgZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlU3RvbmVEcm9wcGVkRXZlbnQgPSAoZXZlbnQpID0+IHtcclxuICAgICAgICB0aGlzLnN0b25lRHJvcENhbGxiYWNrSGFuZGxlcihldmVudCk7XHJcbiAgICB9O1xyXG4gICAgaGFuZGxlTG9hZFB1enpsZUV2ZW50ID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgdGhpcy5sb2FkUHV6emxlQ2FsbGJhY2tIYW5kbGVyKGV2ZW50KTtcclxuICAgIH07XHJcbiAgICB1bnJlZ2lzdGVyRXZlbnRMaXN0ZW5lciA9ICgpID0+IHtcclxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFNUT05FRFJPUCwgdGhpcy5oYW5kbGVTdG9uZURyb3BwZWRFdmVudCwgZmFsc2UpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoTE9BRFBVWlpMRSwgdGhpcy5oYW5kbGVMb2FkUHV6emxlRXZlbnQsIGZhbHNlKTtcclxuICAgIH07XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgV29yZFB1enpsZUxvZ2ljIHtcclxuICAgIC8qKlxyXG4gICAgICAgIHB1enpsZU51bWJlciAtIFB1enpsZSBzdGFnZSBsZXZlbCBvZiBjdXJyZW50IChVcCB0byA1IHN0YWdlIGxldmVscykgZ2FtZSBsZXZlbC5cclxuICAgICAgICBncm91cGVkTGV0dGVycyAtIFN0cmluZyBzZXF1ZW5jZSBvZiBsZXR0ZXJzIHdoZW4gcGVyZm9ybWluZyB0aGUgbXVsdGktbGV0dGVyIHNlbGVjaXRvbi5cclxuICAgICAgICBkcm9wcGVkTGV0dGVycyAtIFN0cmluZyBzZXF1ZW5jZSBvZiBsZXR0ZXJzIHdoZW4gZ3JvdXAgb2YgbGV0dGVycyB3YXMgZmVkIHRvIHRoZSBtb25zdGVyLlxyXG4gICAgICAgIGdyb3VwZWRPYmogLSBPYmplY3Qgd2l0aCBrZXkgcHJvcGVydGllcyBvZiBzdG9uZSBsZXR0ZXIgaW5kZXgsIHVzZWQgZm9yIHZhbGlkYXRpbmcgZHVwbGljYXRlIGxldHRlcnMgd2hpbGUgaG92ZXJpbmcuXHJcbiAgICAgICAgZHJvcHBlZEhpc3RvcnkgLSBPYmplY3Qgd2l0aCBrZXkgcHJvcGVydGllcyBvZiBzdG9uZSBsZXR0ZXIgaW5kZXggdGhhdCB3YXMgZmVkIHRvIHRoZSBtb25zdGVyLlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VkIHRvIHByZXNlcnZlIHRoZSBsaXN0IGZvciBoaWRpbmcgdGhlIHN0b25lIGxldHRlcnMuXHJcbiAgICAgICAgaGlkZUxpc3RPYmogLSBPYmplY3Qgd2l0aCBrZXkgcHJvcGVydGllcyBvZiBzdG9uZSBsZXR0ZXIgaW5kZXguXHJcbiAgICAgICAgICAgICAgICAgICAgVXNlZCB0byBoaWRlIHN0b25lcyB0aGF0IGlzIHBhcnQgb2YgdGhlIGdyb3VwIG9yIHN0b25lcyB0aGF0IHdhcyBhbHJlYWR5IGZlZCB0byB0aGUgbW9uc3Rlci5cclxuICAgICoqL1xyXG4gICAgbGV2ZWxEYXRhO1xyXG4gICAgcHV6emxlTnVtYmVyO1xyXG4gICAgZ3JvdXBlZExldHRlcnM7XHJcbiAgICBkcm9wcGVkTGV0dGVycztcclxuICAgIGdyb3VwZWRPYmo7XHJcbiAgICBkcm9wcGVkSGlzdG9yeTtcclxuICAgIGhpZGVMaXN0T2JqO1xyXG4gICAgY29uc3RydWN0b3IobGV2ZWxEYXRhLCBwdXp6bGVOdW1iZXIpIHtcclxuICAgICAgICB0aGlzLmxldmVsRGF0YSA9IGxldmVsRGF0YTtcclxuICAgICAgICB0aGlzLnB1enpsZU51bWJlciA9IHB1enpsZU51bWJlcjtcclxuICAgICAgICB0aGlzLmdyb3VwZWRMZXR0ZXJzID0gJyc7XHJcbiAgICAgICAgdGhpcy5kcm9wcGVkTGV0dGVycyA9ICcnO1xyXG4gICAgICAgIHRoaXMuZ3JvdXBlZE9iaiA9IHt9O1xyXG4gICAgICAgIHRoaXMuZHJvcHBlZEhpc3RvcnkgPSB7fTtcclxuICAgICAgICB0aGlzLmhpZGVMaXN0T2JqID0ge307XHJcbiAgICB9XHJcbiAgICBnZXRUYXJnZXRXb3JkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxldmVsRGF0YS5wdXp6bGVzW3RoaXMucHV6emxlTnVtYmVyXT8ucHJvbXB0Py5wcm9tcHRUZXh0O1xyXG4gICAgfVxyXG4gICAgZ2V0VmFsdWVzKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGdyb3VwZWRMZXR0ZXJzOiB0aGlzLmdyb3VwZWRMZXR0ZXJzLFxyXG4gICAgICAgICAgICBkcm9wcGVkTGV0dGVyczogdGhpcy5kcm9wcGVkTGV0dGVycyxcclxuICAgICAgICAgICAgZ3JvdXBlZE9iajogeyAuLi50aGlzLmdyb3VwZWRPYmogfSxcclxuICAgICAgICAgICAgZHJvcHBlZEhpc3Rvcnk6IHsgLi4udGhpcy5kcm9wcGVkSGlzdG9yeSB9LFxyXG4gICAgICAgICAgICBoaWRlTGlzdE9iajogeyAuLi50aGlzLmhpZGVMaXN0T2JqIH0sXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIGNoZWNrSXNXb3JkUHV6emxlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxldmVsRGF0YT8ubGV2ZWxNZXRhPy5sZXZlbFR5cGUgPT09ICdXb3JkJztcclxuICAgIH1cclxuICAgIHVwZGF0ZVB1enpsZUxldmVsKHB1enpsZU51bWJlcikge1xyXG4gICAgICAgIHRoaXMuY2xlYXJBbGxWYWx1ZXMoKTtcclxuICAgICAgICB0aGlzLnB1enpsZU51bWJlciA9IHB1enpsZU51bWJlcjtcclxuICAgIH1cclxuICAgIGNsZWFyUGlja2VkVXAoKSB7XHJcbiAgICAgICAgdGhpcy5ncm91cGVkTGV0dGVycyA9ICcnO1xyXG4gICAgICAgIHRoaXMuZ3JvdXBlZE9iaiA9IHt9O1xyXG4gICAgICAgIHRoaXMuaGlkZUxpc3RPYmogPSB7IC4uLnRoaXMuZHJvcHBlZEhpc3RvcnkgfTtcclxuICAgIH1cclxuICAgIGNsZWFyQWxsVmFsdWVzKCkge1xyXG4gICAgICAgIHRoaXMuZ3JvdXBlZExldHRlcnMgPSAnJztcclxuICAgICAgICB0aGlzLmRyb3BwZWRMZXR0ZXJzID0gJyc7XHJcbiAgICAgICAgdGhpcy5ncm91cGVkT2JqID0ge307XHJcbiAgICAgICAgdGhpcy5kcm9wcGVkSGlzdG9yeSA9IHt9O1xyXG4gICAgICAgIHRoaXMuaGlkZUxpc3RPYmogPSB7fTtcclxuICAgICAgICB0aGlzLnB1enpsZU51bWJlciA9IDA7XHJcbiAgICB9XHJcbiAgICB2YWxpZGF0ZVNob3VsZEhpZGVMZXR0ZXIoZm9pbFN0b25lSW5kZXgpIHtcclxuICAgICAgICAvL0lmIHN0b25lIGtleSBpbmRleCBpcyBsaXN0ZWQgaW4gaGlkZUxpc3RPYmogaXQgc2hvdWxkIG5vdCBiZSBkcmF3bi5cclxuICAgICAgICByZXR1cm4gIXRoaXMuaGlkZUxpc3RPYmpbZm9pbFN0b25lSW5kZXhdO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlQ2hlY2tIb3ZlcmVkU3RvbmUoZm9pbFN0b25lVGV4dCwgZm9pbFN0b25lSW5kZXgpIHtcclxuICAgICAgICBjb25zdCBjb21iaW5lZExldHRlcnMgPSB0aGlzLmdyb3VwZWRMZXR0ZXJzO1xyXG4gICAgICAgIGNvbnN0IHRhcmdldFdvcmQgPSB0aGlzLmdldFRhcmdldFdvcmQoKTtcclxuICAgICAgICAvKiBHb2VzIGluc2lkZSBoZXJlIGlmIHRoZXJlIGFyZSBubyBwcmV2aW91cyBsZXR0ZXIocykgd2VyZSBkcm9wcGVkXHJcbiAgICAgICAgYW5kIGdyb3VwaW5nIG9mIGxldHRlcnMgc3RhcnRzIGluIGEgaW5jb3JyZWN0IGxldHRlci4gKi9cclxuICAgICAgICBpZiAoKCF0aGlzLmRyb3BwZWRMZXR0ZXJzLmxlbmd0aCAmJiB0YXJnZXRXb3JkWzBdICE9PSBjb21iaW5lZExldHRlcnNbMF0pKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLypcclxuICAgICAgICBpc0xldHRlckFscmVhZHlBZGRlZCAtIElmIHRoZSBuZXcgc3RvbmUgdGV4dCBpcyBOT1QgYWxyZWFkeSBpbmNsdWRlZFxyXG4gICAgICAgIGlzU2FtZUxldHRlclVuaXF1ZSAtSWYgdGhlcmUgaXMgYWxyZWFkeSBvZiB0aGUgc2FtZSBsZXR0ZXIgZXhpc3QgaW4gZ3JvdXAsIHZhbGlkYXRlIHVzaW5nIHVuaXFlIGlkZW50aWZpZXIgd2hpY2ggaXMgdGhlIGFycmF5IGluZGV4IGtleSBpbiBncm91cCBvYmplY3QuXHJcbiAgICAgICAgKi9cclxuICAgICAgICBjb25zdCBpc0xldHRlckFscmVhZHlBZGRlZCA9ICFjb21iaW5lZExldHRlcnMuaW5jbHVkZXMoZm9pbFN0b25lVGV4dCk7XHJcbiAgICAgICAgY29uc3QgaXNTYW1lTGV0dGVyVW5pcXVlID0gIXRoaXMuZ3JvdXBlZE9ialtmb2lsU3RvbmVJbmRleF07XHJcbiAgICAgICAgY29uc3QgaXNNYXRjaFRhcmdldFdvcmQgPSB0YXJnZXRXb3JkLmluY2x1ZGVzKGAke3RoaXMuZHJvcHBlZExldHRlcnN9JHtjb21iaW5lZExldHRlcnN9JHtmb2lsU3RvbmVUZXh0fWApO1xyXG4gICAgICAgIHJldHVybiBpc01hdGNoVGFyZ2V0V29yZCAmJiAoaXNMZXR0ZXJBbHJlYWR5QWRkZWQgfHwgaXNTYW1lTGV0dGVyVW5pcXVlKTtcclxuICAgIH1cclxuICAgIHZhbGlkYXRlRmVkTGV0dGVycygpIHtcclxuICAgICAgICBjb25zdCB0YXJnZXRXb3JkID0gdGhpcy5nZXRUYXJnZXRXb3JkKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZHJvcHBlZExldHRlcnMgPT09IHRhcmdldFdvcmQuc3Vic3RyaW5nKDAsIHRoaXMuZHJvcHBlZExldHRlcnMubGVuZ3RoKTtcclxuICAgIH1cclxuICAgIHZhbGlkYXRlV29yZFB1enpsZSgpIHtcclxuICAgICAgICBjb25zdCB0YXJnZXRXb3JkID0gdGhpcy5nZXRUYXJnZXRXb3JkKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZHJvcHBlZExldHRlcnMgPT09IHRhcmdldFdvcmQ7XHJcbiAgICB9XHJcbiAgICBzZXRHcm91cFRvRHJvcHBlZCgpIHtcclxuICAgICAgICB0aGlzLmRyb3BwZWRMZXR0ZXJzID0gYCR7dGhpcy5kcm9wcGVkTGV0dGVyc30ke3RoaXMuZ3JvdXBlZExldHRlcnN9YDtcclxuICAgICAgICB0aGlzLmRyb3BwZWRIaXN0b3J5ID0ge1xyXG4gICAgICAgICAgICAuLi50aGlzLmRyb3BwZWRIaXN0b3J5LFxyXG4gICAgICAgICAgICAuLi50aGlzLmdyb3VwZWRPYmpcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgc2V0UGlja1VwTGV0dGVyKGxldHRlciwgYXJyRm9pbFN0b25lSW5kZXgpIHtcclxuICAgICAgICB0aGlzLmhpZGVMaXN0T2JqID0ge1xyXG4gICAgICAgICAgICAuLi50aGlzLmhpZGVMaXN0T2JqLFxyXG4gICAgICAgICAgICAuLi50aGlzLmdyb3VwZWRPYmpcclxuICAgICAgICB9OyAvL0hpZGUgdGhlIHByZXZpb3VzIGxldHRlcnMgZXhjZXB0IHRoZSBuZXcgb25lLlxyXG4gICAgICAgIHRoaXMuZ3JvdXBlZExldHRlcnMgPSBgJHt0aGlzLmdyb3VwZWRMZXR0ZXJzfSR7bGV0dGVyfWA7XHJcbiAgICAgICAgdGhpcy5ncm91cGVkT2JqW2FyckZvaWxTdG9uZUluZGV4XSA9IGxldHRlcjtcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBTdGFydFNjZW5lLCBMZXZlbFNlbGVjdGlvblNjcmVlbiwgR2FtZXBsYXlTY2VuZSwgTG9hZGluZ1NjZW5lLCBMZXZlbEVuZFNjZW5lLCB9IGZyb20gXCJAc2NlbmVzXCI7XHJcbmltcG9ydCB7IEdhbWVTY29yZSB9IGZyb20gXCJAZGF0YVwiO1xyXG5pbXBvcnQgeyBEZWJ1Z2dlciB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IFNDRU5FX05BTUVfU1RBUlQsIFNDRU5FX05BTUVfTEVWRUxfU0VMRUNULCBTQ0VORV9OQU1FX0dBTUVfUExBWSwgU0NFTkVfTkFNRV9MRVZFTF9FTkQsIFBXQUluc3RhbGxTdGF0dXMsIFN0YXJ0U2NlbmUxLCBMZXZlbFNlbGVjdGlvbjEsIEdhbWVTY2VuZTEsIEVuZFNjZW5lMSwgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5leHBvcnQgY2xhc3MgU2NlbmVIYW5kbGVyIHtcclxuICAgIGNhbnZhcztcclxuICAgIGRhdGE7XHJcbiAgICB3aWR0aDtcclxuICAgIGhlaWdodDtcclxuICAgIHN0YXJ0U2NlbmU7XHJcbiAgICBsZXZlbFNlbGVjdGlvblNjZW5lO1xyXG4gICAgZ2FtZXBsYXlTY2VuZTtcclxuICAgIGxldmVsRW5kU2NlbmU7XHJcbiAgICBjYW5hdnNFbGVtZW50O1xyXG4gICAgY29udGV4dDtcclxuICAgIHN0YXRpYyBTY2VuZU5hbWU7XHJcbiAgICBsb2FkaW5nU2NyZWVuO1xyXG4gICAgbG9hZGluZyA9IGZhbHNlO1xyXG4gICAgbGFzdFRpbWUgPSAwO1xyXG4gICAgdG9nZ2xlQnRuO1xyXG4gICAgdGl0bGVUZXh0RWxlbWVudDtcclxuICAgIGNvbnN0cnVjdG9yKGNhbnZhcywgZGF0YSkge1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IGNhbnZhcy53aWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5jYW5hdnNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvZ2dsZS1idG5cIik7XHJcbiAgICAgICAgdGhpcy50aXRsZVRleHRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aXRsZVwiKTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImJlZm9yZWluc3RhbGxwcm9tcHRcIiwgdGhpcy5oYW5kbGVJbnN0YWxsUHJvbXB0KTtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSB0aGlzLmNhbmF2c0VsZW1lbnQuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG4gICAgICAgIHRoaXMuc3RhcnRTY2VuZSA9IG5ldyBTdGFydFNjZW5lKGNhbnZhcywgZGF0YSwgdGhpcy5zd2l0Y2hTY2VuZVRvTGV2ZWxTZWxlY3Rpb24pO1xyXG4gICAgICAgIFNjZW5lSGFuZGxlci5TY2VuZU5hbWUgPSBTdGFydFNjZW5lMTtcclxuICAgICAgICB0aGlzLmxvYWRpbmdTY3JlZW4gPSBuZXcgTG9hZGluZ1NjZW5lKHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCB0aGlzLnJlbW92ZUxvYWRpbmcpO1xyXG4gICAgICAgIHRoaXMuc3RhcnRBbmltYXRpb25Mb29wKCk7XHJcbiAgICB9XHJcbiAgICBzdGFydEFuaW1hdGlvbkxvb3AoKSB7XHJcbiAgICAgICAgY29uc3QgYW5pbWF0ZSA9ICh0aW1lU3RhbXApID0+IHtcclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb24odGltZVN0YW1wKTtcclxuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xyXG4gICAgfVxyXG4gICAgZGV2VG9nZ2xlKCkge1xyXG4gICAgICAgIHRoaXMudG9nZ2xlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMudG9nZ2xlQnRuLmNsYXNzTGlzdC50b2dnbGUoXCJvblwiKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMudG9nZ2xlQnRuLmNsYXNzTGlzdC5jb250YWlucyhcIm9uXCIpKSB7XHJcbiAgICAgICAgICAgICAgICBEZWJ1Z2dlci5EZWJ1Z01vZGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50b2dnbGVCdG4uaW5uZXJUZXh0ID0gXCJEZXZcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIERlYnVnZ2VyLkRlYnVnTW9kZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50b2dnbGVCdG4uaW5uZXJUZXh0ID0gXCJEZXZcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgY2hlY2tNb25zdGVyUGhhc2VVcGRhdGlvbigpIHtcclxuICAgICAgICBsZXQgdG90YWxTdGFyQ291bnQgPSBHYW1lU2NvcmUuZ2V0VG90YWxTdGFyQ291bnQoKTtcclxuICAgICAgICBsZXQgbW9uc3RlclBoYXNlTnVtYmVyID0gTWF0aC5mbG9vcih0b3RhbFN0YXJDb3VudCAvIDEyKSArIDEgfHwgMTtcclxuICAgICAgICByZXR1cm4gbW9uc3RlclBoYXNlTnVtYmVyIDw9IDQgPyBtb25zdGVyUGhhc2VOdW1iZXIgOiA0O1xyXG4gICAgfVxyXG4gICAgYW5pbWF0aW9uID0gKHRpbWVTdGFtcCkgPT4ge1xyXG4gICAgICAgIGxldCBkZWx0YVRpbWUgPSB0aW1lU3RhbXAgLSB0aGlzLmxhc3RUaW1lO1xyXG4gICAgICAgIHRoaXMubGFzdFRpbWUgPSB0aW1lU3RhbXA7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmNsZWFyUmVjdCgwLCAwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgICAgICAgdGhpcy5sb2FkaW5nID8gdGhpcy5sb2FkaW5nU2NyZWVuLmRyYXcoZGVsdGFUaW1lKSA6IG51bGw7XHJcbiAgICAgICAgaWYgKFNjZW5lSGFuZGxlci5TY2VuZU5hbWUgPT09IFN0YXJ0U2NlbmUxKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnRTY2VuZS5hbmltYXRpb24oZGVsdGFUaW1lKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoU2NlbmVIYW5kbGVyLlNjZW5lTmFtZSA9PT0gTGV2ZWxTZWxlY3Rpb24xKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGV2ZWxTZWxlY3Rpb25TY2VuZS5kcmF3TGV2ZWxTZWxlY3Rpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoU2NlbmVIYW5kbGVyLlNjZW5lTmFtZSA9PT0gR2FtZVNjZW5lMSkge1xyXG4gICAgICAgICAgICB0aGlzLmdhbWVwbGF5U2NlbmUuZHJhdyhkZWx0YVRpbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChTY2VuZUhhbmRsZXIuU2NlbmVOYW1lID09PSBFbmRTY2VuZTEpIHtcclxuICAgICAgICAgICAgdGhpcy5sZXZlbEVuZFNjZW5lLmRyYXcoZGVsdGFUaW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgc3dpdGNoU2NlbmVUb0dhbWVwbGF5ID0gKGdhbWVQbGF5RGF0YSwgY2hhbmdlU2NlbmVSZXF1ZXN0RnJvbSkgPT4ge1xyXG4gICAgICAgIHRoaXMuc2hvd0xvYWRpbmcoKTtcclxuICAgICAgICB0aGlzLmRpc3Bvc2UoY2hhbmdlU2NlbmVSZXF1ZXN0RnJvbSk7XHJcbiAgICAgICAgbGV0IGpzb25WZXJzaW9uTnVtYmVyID0gISF0aGlzLmRhdGEubWFqVmVyc2lvbiAmJiAhIXRoaXMuZGF0YS5taW5WZXJzaW9uXHJcbiAgICAgICAgICAgID8gdGhpcy5kYXRhLm1halZlcnNpb24udG9TdHJpbmcoKSArXHJcbiAgICAgICAgICAgICAgICBcIi5cIiArXHJcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGEubWluVmVyc2lvbi50b1N0cmluZygpXHJcbiAgICAgICAgICAgIDogXCJcIjtcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5nYW1lcGxheVNjZW5lID0gbmV3IEdhbWVwbGF5U2NlbmUodGhpcy5jYW52YXMsIGdhbWVQbGF5RGF0YS5jdXJyZW50TGV2ZWxEYXRhLCB0aGlzLmNoZWNrTW9uc3RlclBoYXNlVXBkYXRpb24oKSwgdGhpcy5kYXRhLkZlZWRiYWNrVGV4dHMsIHRoaXMuZGF0YS5yaWdodFRvTGVmdCwgdGhpcy5zd2l0Y2hTY2VuZVRvRW5kTGV2ZWwsIGdhbWVQbGF5RGF0YS5zZWxlY3RlZExldmVsTnVtYmVyLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN3aXRjaFNjZW5lVG9MZXZlbFNlbGVjdGlvbihTQ0VORV9OQU1FX0dBTUVfUExBWSk7XHJcbiAgICAgICAgICAgIH0sIHRoaXMuc3dpdGNoU2NlbmVUb0dhbWVwbGF5LCBqc29uVmVyc2lvbk51bWJlciwgdGhpcy5kYXRhLkZlZWRiYWNrQXVkaW9zKTtcclxuICAgICAgICAgICAgU2NlbmVIYW5kbGVyLlNjZW5lTmFtZSA9IEdhbWVTY2VuZTE7XHJcbiAgICAgICAgfSwgODAwKTtcclxuICAgIH07XHJcbiAgICBzd2l0Y2hTY2VuZVRvRW5kTGV2ZWwgPSAoc3RhckNvdW50LCBtb25zdGVyUGhhc2VOdW1iZXIsIGN1cnJlbnRMZXZlbE51bWJlciwgaXNUaW1lckVuZGVkKSA9PiB7XHJcbiAgICAgICAgdGhpcy5sb2FkaW5nU2NyZWVuLmluaXRDbG91ZCgpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmRpc3Bvc2UoU0NFTkVfTkFNRV9HQU1FX1BMQVkpO1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsRW5kU2NlbmUgPSBuZXcgTGV2ZWxFbmRTY2VuZSh0aGlzLmNhbnZhcywgdGhpcy5oZWlnaHQsIHRoaXMud2lkdGgsIHRoaXMuY29udGV4dCwgc3RhckNvdW50LCBjdXJyZW50TGV2ZWxOdW1iZXIsIHRoaXMuc3dpdGNoU2NlbmVUb0dhbWVwbGF5LCB0aGlzLnN3aXRjaFNjZW5lVG9MZXZlbFNlbGVjdGlvbiwgdGhpcy5kYXRhLCBtb25zdGVyUGhhc2VOdW1iZXIpO1xyXG4gICAgICAgICAgICBTY2VuZUhhbmRsZXIuU2NlbmVOYW1lID0gRW5kU2NlbmUxO1xyXG4gICAgICAgIH0sIGlzVGltZXJFbmRlZCA/IDAgOiA0MDAwKTtcclxuICAgIH07XHJcbiAgICBzd2l0Y2hTY2VuZVRvTGV2ZWxTZWxlY3Rpb24gPSAoY2hhbmdlU2NlbmVSZXF1ZXN0RnJvbSkgPT4ge1xyXG4gICAgICAgIHRoaXMuc2hvd0xvYWRpbmcoKTtcclxuICAgICAgICB0aGlzLmRpc3Bvc2UoY2hhbmdlU2NlbmVSZXF1ZXN0RnJvbSk7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubGV2ZWxTZWxlY3Rpb25TY2VuZSA9IG5ldyBMZXZlbFNlbGVjdGlvblNjcmVlbih0aGlzLmNhbnZhcywgdGhpcy5kYXRhLCB0aGlzLnN3aXRjaFNjZW5lVG9HYW1lcGxheSk7XHJcbiAgICAgICAgICAgIFNjZW5lSGFuZGxlci5TY2VuZU5hbWUgPSBMZXZlbFNlbGVjdGlvbjE7XHJcbiAgICAgICAgICAgIHRoaXMudGl0bGVUZXh0RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgfSwgODAwKTtcclxuICAgIH07XHJcbiAgICBkaXNwb3NlID0gKGxhc3RTY2VuZU5hbWUpID0+IHtcclxuICAgICAgICBpZiAobGFzdFNjZW5lTmFtZSA9PSBTQ0VORV9OQU1FX0xFVkVMX1NFTEVDVCkge1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsU2VsZWN0aW9uU2NlbmUuZGlzcG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChsYXN0U2NlbmVOYW1lID09PSBTQ0VORV9OQU1FX0dBTUVfUExBWSkge1xyXG4gICAgICAgICAgICB0aGlzLmdhbWVwbGF5U2NlbmUuZGlzcG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChsYXN0U2NlbmVOYW1lID09PSBTQ0VORV9OQU1FX1NUQVJUKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnRTY2VuZS5kaXNwb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGxhc3RTY2VuZU5hbWUgPT0gU0NFTkVfTkFNRV9MRVZFTF9FTkQpIHtcclxuICAgICAgICAgICAgdGhpcy5sZXZlbEVuZFNjZW5lLmRpc3Bvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgc2hvd0xvYWRpbmcgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5sb2FkaW5nU2NyZWVuLmluaXRDbG91ZCgpO1xyXG4gICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2FkaW5nXCIpLnN0eWxlLnpJbmRleCA9IFwiM1wiO1xyXG4gICAgfTtcclxuICAgIHJlbW92ZUxvYWRpbmcgPSAoKSA9PiB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2FkaW5nXCIpLnN0eWxlLnpJbmRleCA9IFwiLTFcIjtcclxuICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcclxuICAgIH07XHJcbiAgICBoYW5kbGVJbnN0YWxsUHJvbXB0ID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgLy9jdXJyZW50bHkgbm90IGluIHVzZVxyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oUFdBSW5zdGFsbFN0YXR1cywgXCJmYWxzZVwiKTtcclxuICAgIH07XHJcbn1cclxuIiwiaW1wb3J0IHsgTW9uc3RlciwgVGltZXJUaWNraW5nLCBQcm9tcHRUZXh0LCBQYXVzZUJ1dHRvbiwgTGV2ZWxJbmRpY2F0b3JzLCBTdG9uZUhhbmRsZXIsIFR1dG9yaWFsLCBCYWNrZ3JvdW5kQ29tcG9uZW50LCBGZWVkYmFja1RleHRFZmZlY3RzLCBBdWRpb1BsYXllciwgVHJhaWxFZmZlY3QsIH0gZnJvbSBcIkBjb21wb25lbnRzXCI7XHJcbmltcG9ydCBQYXVzZVBvcFVwIGZyb20gXCJAcG9wdXBzL3BhdXNlLXBvcHVwXCI7XHJcbmltcG9ydCB7IGxvYWRJbWFnZXMsIENMSUNLLCBMT0FEUFVaWkxFLCBNT1VTRURPV04sIE1PVVNFTU9WRSwgTU9VU0VVUCwgU1RPTkVEUk9QLCBUT1VDSEVORCwgVE9VQ0hNT1ZFLCBUT1VDSFNUQVJULCBWSVNJQklMSVRZX0NIQU5HRSwgRGVidWdnZXIsIGxhbmcsIHBzZXVkb0lkLCB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IEdhbWVTY29yZSB9IGZyb20gXCJAZGF0YVwiO1xyXG5pbXBvcnQgeyBGaXJlYmFzZUludGVncmF0aW9uIH0gZnJvbSBcIi4uL0ZpcmViYXNlL2ZpcmViYXNlLWludGVncmF0aW9uXCI7XHJcbmltcG9ydCB7IEFVRElPX1BBVEhfT05fRFJBRywgQVNTRVRTX1BBVEhfTU9OU1RFUl9JRExFLCBQcmV2aW91c1BsYXllZExldmVsLCB9IGZyb20gXCJAY29uc3RhbnRzXCI7XHJcbmltcG9ydCB7IFdvcmRQdXp6bGVMb2dpYyB9IGZyb20gJ0BnYW1lcHV6emxlcyc7XHJcbmV4cG9ydCBjbGFzcyBHYW1lcGxheVNjZW5lIHtcclxuICAgIHdpZHRoO1xyXG4gICAgaGVpZ2h0O1xyXG4gICAgbW9uc3RlcjtcclxuICAgIGpzb25WZXJzaW9uTnVtYmVyO1xyXG4gICAgY2FudmFzO1xyXG4gICAgbGV2ZWxEYXRhO1xyXG4gICAgdGltZXJUaWNraW5nO1xyXG4gICAgcHJvbXB0VGV4dDtcclxuICAgIHBhdXNlQnV0dG9uO1xyXG4gICAgdHV0b3JpYWw7XHJcbiAgICBwdXp6bGVEYXRhO1xyXG4gICAgaWQ7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgbGV2ZWxJbmRpY2F0b3JzO1xyXG4gICAgc3RvbmVzQ291bnQgPSAxO1xyXG4gICAgbW9uc3RlclBoYXNlTnVtYmVyO1xyXG4gICAgcGlja2VkU3RvbmU7XHJcbiAgICBwdXp6bGVTdGFydFRpbWU7XHJcbiAgICBzaG93VHV0b3JpYWw7XHJcbiAgICBmZWVkQmFja1RleHRzO1xyXG4gICAgaXNQdXp6bGVDb21wbGV0ZWQ7XHJcbiAgICByaWdodFRvTGVmdDtcclxuICAgIGltYWdlc0xvYWRlZCA9IGZhbHNlO1xyXG4gICAgc3dpdGNoU2NlbmVUb0VuZDtcclxuICAgIGxldmVsTnVtYmVyO1xyXG4gICAgbG9hZGVkSW1hZ2VzO1xyXG4gICAgc3RvbmVIYW5kbGVyO1xyXG4gICAgY291bnRlciA9IDA7XHJcbiAgICBpbWFnZXM7XHJcbiAgICBoYW5kbGVyO1xyXG4gICAgcGlja2VkU3RvbmVPYmplY3Q7XHJcbiAgICBwYXVzZVBvcHVwO1xyXG4gICAgaXNQYXVzZUJ1dHRvbkNsaWNrZWQgPSBmYWxzZTtcclxuICAgIGJhY2tncm91bmQ7XHJcbiAgICBmZWVkQmFja1RleHRDYW5hdnNFbGVtZW50O1xyXG4gICAgZmVlZGJhY2tUZXh0RWZmZWN0cztcclxuICAgIGlzR2FtZVN0YXJ0ZWQgPSBmYWxzZTtcclxuICAgIHRpbWUgPSAwO1xyXG4gICAgc2NvcmUgPSAwO1xyXG4gICAgc3dpdGNoVG9MZXZlbFNlbGVjdGlvbjtcclxuICAgIHJlbG9hZFNjZW5lO1xyXG4gICAgYXVkaW9QbGF5ZXI7XHJcbiAgICBmaXJlYmFzZUludGVncmF0aW9uO1xyXG4gICAgc3RhcnRUaW1lO1xyXG4gICAgcHV6emxlVGltZTtcclxuICAgIGlzRGlzcG9zaW5nO1xyXG4gICAgcmVzZXRBbmltYXRpb25JRDtcclxuICAgIHRyYWlsUGFydGljbGVzO1xyXG4gICAgY2xpY2tUcmFpbFRvZ2dsZTtcclxuICAgIGhhc0ZlZDtcclxuICAgIHdvcmRQdXp6bGVMb2dpYztcclxuICAgIGNvbnN0cnVjdG9yKGNhbnZhcywgbGV2ZWxEYXRhLCBtb25zdGVyUGhhc2VOdW1iZXIsIGZlZWRCYWNrVGV4dHMsIHJpZ2h0VG9MZWZ0LCBzd2l0Y2hTY2VuZVRvRW5kLCBsZXZlbE51bWJlciwgc3dpdGNoVG9MZXZlbFNlbGVjdGlvbiwgcmVsb2FkU2NlbmUsIGpzb25WZXJzaW9uTnVtYmVyLCBmZWVkYmFja0F1ZGlvcykge1xyXG4gICAgICAgIHRoaXMud2lkdGggPSBjYW52YXMud2lkdGg7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBjYW52YXMuaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMucmlnaHRUb0xlZnQgPSByaWdodFRvTGVmdDtcclxuICAgICAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIiwgeyB3aWxsUmVhZEZyZXF1ZW50bHk6IHRydWUgfSk7XHJcbiAgICAgICAgdGhpcy50cmFpbFBhcnRpY2xlcyA9IG5ldyBUcmFpbEVmZmVjdChjYW52YXMpO1xyXG4gICAgICAgIHRoaXMubW9uc3RlclBoYXNlTnVtYmVyID0gbW9uc3RlclBoYXNlTnVtYmVyIHx8IDE7XHJcbiAgICAgICAgdGhpcy5sZXZlbERhdGEgPSBsZXZlbERhdGE7XHJcbiAgICAgICAgdGhpcy5zd2l0Y2hTY2VuZVRvRW5kID0gc3dpdGNoU2NlbmVUb0VuZDtcclxuICAgICAgICB0aGlzLmxldmVsTnVtYmVyID0gbGV2ZWxOdW1iZXI7XHJcbiAgICAgICAgdGhpcy5zd2l0Y2hUb0xldmVsU2VsZWN0aW9uID0gc3dpdGNoVG9MZXZlbFNlbGVjdGlvbjtcclxuICAgICAgICB0aGlzLnJlbG9hZFNjZW5lID0gcmVsb2FkU2NlbmU7XHJcbiAgICAgICAgdGhpcy5qc29uVmVyc2lvbk51bWJlciA9IGpzb25WZXJzaW9uTnVtYmVyO1xyXG4gICAgICAgIHRoaXMuc3RhcnRHYW1lVGltZSgpO1xyXG4gICAgICAgIHRoaXMuc3RhcnRQdXp6bGVUaW1lKCk7XHJcbiAgICAgICAgdGhpcy5pc0Rpc3Bvc2luZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucGF1c2VCdXR0b24gPSBuZXcgUGF1c2VCdXR0b24odGhpcy5jb250ZXh0LCB0aGlzLmNhbnZhcyk7XHJcbiAgICAgICAgdGhpcy50aW1lclRpY2tpbmcgPSBuZXcgVGltZXJUaWNraW5nKHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCB0aGlzLmxvYWRQdXp6bGUpO1xyXG4gICAgICAgIHRoaXMuc3RvbmVIYW5kbGVyID0gbmV3IFN0b25lSGFuZGxlcih0aGlzLmNvbnRleHQsIHRoaXMuY2FudmFzLCB0aGlzLmNvdW50ZXIsIHRoaXMubGV2ZWxEYXRhLCBmZWVkYmFja0F1ZGlvcywgdGhpcy50aW1lclRpY2tpbmcpO1xyXG4gICAgICAgIHRoaXMudHV0b3JpYWwgPSBuZXcgVHV0b3JpYWwodGhpcy5jb250ZXh0LCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xyXG4gICAgICAgIHRoaXMucHJvbXB0VGV4dCA9IG5ldyBQcm9tcHRUZXh0KHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCB0aGlzLmxldmVsRGF0YS5wdXp6bGVzW3RoaXMuY291bnRlcl0sIHRoaXMubGV2ZWxEYXRhLCB0aGlzLnJpZ2h0VG9MZWZ0KTtcclxuICAgICAgICB0aGlzLmxldmVsSW5kaWNhdG9ycyA9IG5ldyBMZXZlbEluZGljYXRvcnModGhpcy5jb250ZXh0LCB0aGlzLmNhbnZhcywgMCk7XHJcbiAgICAgICAgdGhpcy5sZXZlbEluZGljYXRvcnMuc2V0SW5kaWNhdG9ycyh0aGlzLmNvdW50ZXIpO1xyXG4gICAgICAgIHRoaXMubW9uc3RlciA9IG5ldyBNb25zdGVyKHRoaXMuY2FudmFzLCB0aGlzLm1vbnN0ZXJQaGFzZU51bWJlcik7XHJcbiAgICAgICAgdGhpcy5wYXVzZVBvcHVwID0gbmV3IFBhdXNlUG9wVXAodGhpcy5jYW52YXMsIHRoaXMucmVzdW1lR2FtZSwgdGhpcy5zd2l0Y2hUb0xldmVsU2VsZWN0aW9uLCB0aGlzLnJlbG9hZFNjZW5lLCB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRMZXZlbERhdGE6IGxldmVsRGF0YSxcclxuICAgICAgICAgICAgc2VsZWN0ZWRMZXZlbE51bWJlcjogbGV2ZWxOdW1iZXIsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5maXJlYmFzZUludGVncmF0aW9uID0gbmV3IEZpcmViYXNlSW50ZWdyYXRpb24oKTtcclxuICAgICAgICB0aGlzLmZlZWRiYWNrVGV4dEVmZmVjdHMgPSBuZXcgRmVlZGJhY2tUZXh0RWZmZWN0cygpO1xyXG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIgPSBuZXcgQXVkaW9QbGF5ZXIoKTtcclxuICAgICAgICB0aGlzLmhhbmRsZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcclxuICAgICAgICB0aGlzLnB1enpsZURhdGEgPSBsZXZlbERhdGEucHV6emxlcztcclxuICAgICAgICB0aGlzLmZlZWRCYWNrVGV4dHMgPSBmZWVkQmFja1RleHRzO1xyXG4gICAgICAgIHRoaXMuaW1hZ2VzID0ge1xyXG4gICAgICAgICAgICBwcm9maWxlTW9uc3RlcjogQVNTRVRTX1BBVEhfTU9OU1RFUl9JRExFLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgbG9hZEltYWdlcyh0aGlzLmltYWdlcywgKGltYWdlcykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRlZEltYWdlcyA9IE9iamVjdC5hc3NpZ24oe30sIGltYWdlcyk7XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB2YXIgcHJldmlvdXNQbGF5ZWRMZXZlbCA9IHRoaXMubGV2ZWxEYXRhLmxldmVsTWV0YS5sZXZlbE51bWJlcjtcclxuICAgICAgICBEZWJ1Z2dlci5EZWJ1Z01vZGVcclxuICAgICAgICAgICAgPyBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShQcmV2aW91c1BsYXllZExldmVsICsgbGFuZyArIFwiRGVidWdcIiwgcHJldmlvdXNQbGF5ZWRMZXZlbClcclxuICAgICAgICAgICAgOiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShQcmV2aW91c1BsYXllZExldmVsICsgbGFuZywgcHJldmlvdXNQbGF5ZWRMZXZlbCk7XHJcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMucmVzZXRBbmltYXRpb25JRCA9IDA7XHJcbiAgICAgICAgdGhpcy5zZXR1cEJnKCk7XHJcbiAgICAgICAgdGhpcy50cmFpbFBhcnRpY2xlcz8uaW5pdCgpO1xyXG4gICAgICAgIHRoaXMuY2xpY2tUcmFpbFRvZ2dsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuaGFzRmVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy53b3JkUHV6emxlTG9naWMgPSBuZXcgV29yZFB1enpsZUxvZ2ljKGxldmVsRGF0YSwgdGhpcy5jb3VudGVyKTtcclxuICAgIH1cclxuICAgIHNldHVwQmcgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kID0gbmV3IEJhY2tncm91bmRDb21wb25lbnQodGhpcy5jb250ZXh0LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCwgdGhpcy5sZXZlbERhdGEubGV2ZWxNZXRhLmxldmVsTnVtYmVyKTtcclxuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBhd2FpdCB0aGlzLmJhY2tncm91bmQuc2V0dXBCZygpO1xyXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZD8uZHJhdygpO1xyXG4gICAgfTtcclxuICAgIHJlc3VtZUdhbWUgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuaXNQYXVzZUJ1dHRvbkNsaWNrZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnN0b25lSGFuZGxlci5zZXRHYW1lUGF1c2UoZmFsc2UpO1xyXG4gICAgICAgIHRoaXMucGF1c2VQb3B1cC5kaXNwb3NlKCk7XHJcbiAgICB9O1xyXG4gICAgZ2V0UmFuZG9tRmVlZEJhY2tUZXh0KHJhbmRvbUluZGV4KSB7XHJcbiAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMuZmVlZEJhY2tUZXh0cyk7XHJcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRLZXkgPSBrZXlzW3JhbmRvbUluZGV4XTtcclxuICAgICAgICByZXR1cm4gdGhpcy5mZWVkQmFja1RleHRzW3NlbGVjdGVkS2V5XTtcclxuICAgIH1cclxuICAgIGdldFJhbmRvbUludChtaW4sIG1heCkge1xyXG4gICAgICAgIGNvbnN0IGZlZWRiYWNrVmFsdWVzID0gT2JqZWN0LnZhbHVlcyh0aGlzLmZlZWRCYWNrVGV4dHMpO1xyXG4gICAgICAgIGNvbnN0IGRlZmluZWRWYWx1ZXNNYXhDb3VudCA9IGZlZWRiYWNrVmFsdWVzLmZpbHRlcigodmFsdWUpID0+IHZhbHVlICE9IHVuZGVmaW5lZCkubGVuZ3RoIC0gMTtcclxuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGRlZmluZWRWYWx1ZXNNYXhDb3VudCAtIG1pbiArIDEpKSArIG1pbjtcclxuICAgIH1cclxuICAgIGhhbmRsZU1vdXNlVXAgPSAoZXZlbnQpID0+IHtcclxuICAgICAgICAvLyBSZW1vdmUgdW5uZWNlc3NhcnkgbG9nZ2luZ1xyXG4gICAgICAgIGxldCByZWN0ID0gdGhpcy5jYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XHJcbiAgICAgICAgY29uc3QgeSA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcclxuICAgICAgICAvLyBDaGVjayBpZiB0aGUgY2xpY2sgaXMgd2l0aGluIHJhbmdlIG9mIHRoZSBtb25zdGVyXHJcbiAgICAgICAgY29uc3QgZGlzdGFuY2UgPSBNYXRoLnNxcnQoKHggLSB0aGlzLm1vbnN0ZXIueCAtIHRoaXMuY2FudmFzLndpZHRoIC8gNCkgKiogMiArXHJcbiAgICAgICAgICAgICh5IC0gdGhpcy5tb25zdGVyLnkgLSB0aGlzLmNhbnZhcy5oZWlnaHQgLyAyLjIpICoqIDIpO1xyXG4gICAgICAgIGlmIChkaXN0YW5jZSA8PSAxMDAgJiYgdGhpcy5waWNrZWRTdG9uZSkge1xyXG4gICAgICAgICAgICBjb25zdCB7IHRleHQgfSA9IHRoaXMucGlja2VkU3RvbmU7IC8vIFVzZSBkZXN0cnVjdHVyaW5nIGZvciBjbGFyaXR5XHJcbiAgICAgICAgICAgIHN3aXRjaCAodGhpcy5sZXZlbERhdGEubGV2ZWxNZXRhLmxldmVsVHlwZSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcIkxldHRlck9ubHlcIjpcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJMZXR0ZXJJbldvcmRcIjpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxldHRlclB1enpsZSh0ZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJXb3JkXCI6XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiU291bmRXb3JkXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy53b3JkUHV6emxlKHRoaXMucGlja2VkU3RvbmUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvKlxyXG4gICAgICAgICAgICAgIE5vdGU6IFRPIERPOiBTaG91bGQgdXNlIHN0b25lLWhhbmRsZXIudHMgbWV0aG9kIHJlc2V0U3RvbmVQb3NpdGlvbi5cclxuICAgICAgICAgICAgKi9cclxuICAgICAgICAgICAgaWYgKHRoaXMucGlja2VkU3RvbmUgJiZcclxuICAgICAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmVPYmplY3QgJiZcclxuICAgICAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmUudGV4dCAmJlxyXG4gICAgICAgICAgICAgICAgdHlwZW9mIHRoaXMucGlja2VkU3RvbmVPYmplY3Qub3JpZ3ggPT09IFwibnVtYmVyXCIgJiZcclxuICAgICAgICAgICAgICAgIHR5cGVvZiB0aGlzLnBpY2tlZFN0b25lT2JqZWN0Lm9yaWd5ID09PSBcIm51bWJlclwiKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB4TGltaXQgPSA1MDtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGhhbGZXaWR0aCA9IHRoaXMud2lkdGggLyAyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5waWNrZWRTdG9uZS54ID1cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBpY2tlZFN0b25lLnRleHQubGVuZ3RoIDw9IDMgJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5waWNrZWRTdG9uZU9iamVjdC5vcmlneCA8IHhMaW1pdCAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBpY2tlZFN0b25lT2JqZWN0Lm9yaWd4IDwgaGFsZldpZHRoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gdGhpcy5waWNrZWRTdG9uZU9iamVjdC5vcmlneCArIDI1XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDogdGhpcy5waWNrZWRTdG9uZU9iamVjdC5vcmlneDtcclxuICAgICAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmUueSA9IHRoaXMucGlja2VkU3RvbmVPYmplY3Qub3JpZ3k7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5waWNrZWRTdG9uZSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy53b3JkUHV6emxlTG9naWMuY2xlYXJQaWNrZWRVcCgpO1xyXG4gICAgICAgIHRoaXMuY2xpY2tUcmFpbFRvZ2dsZSA9IGZhbHNlO1xyXG4gICAgfTtcclxuICAgIC8vIEV2ZW50IHRvIGlkZW50aWZ5IG1vdXNlIG1vdmVkIGRvd24gb24gdGhlIGNhbnZhc1xyXG4gICAgaGFuZGxlTW91c2VEb3duID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgbGV0IHJlY3QgPSB0aGlzLmNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBjb25zdCB4ID0gZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdDtcclxuICAgICAgICBjb25zdCB5ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xyXG4gICAgICAgIGlmICghdGhpcy53b3JkUHV6emxlTG9naWMuY2hlY2tJc1dvcmRQdXp6bGUoKSkge1xyXG4gICAgICAgICAgICAvKlRvIERvOiBNb3ZlIGFsbCBsb2dpYyByZWxhdGluZyB0byBzdG9uZSBoYW5kbGluZyBpbmNsdWRpbmcgdXBkYXRpbmcgaXRzIGNvb3JkbmF0ZXMgdG8gc3RvbmUtaGFuZGxlci50c1xyXG4gICAgICAgICAgICAgIE5vdGU6IFdpbGwgaGF2ZSB0byBldmVudHVhbGx5IHJlbW92ZSB0aGlzIGFuZCB1c2UgdGhlIGhhbmRsZVBpY2tTdG9uZVVwIGluIHN0b25lLWhhbmRsZXIudHNcclxuICAgICAgICAgICAgICBXaWxsIGxlYXZlIHRoaXMgZm9yIG5vdyB0byBhdm9pZCBhZmZlY3RpbmcgTGV0dGVyIE9ubHkgcHV6emxlcyB3aXRoIFdvcmQgcGxheSBwdXp6bGVzIGltcGxlbWVudGF0aW9uIG9mIG11bHRpLWxldHRlciBmZWF0dXJlLlxyXG4gICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICBmb3IgKGxldCBzYyBvZiB0aGlzLnN0b25lSGFuZGxlci5mb2lsU3RvbmVzKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkaXN0YW5jZSA9IE1hdGguc3FydCgoeCAtIHNjLngpICoqIDIgKyAoeSAtIHNjLnkpICoqIDIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRpc3RhbmNlIDw9IDQwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5waWNrZWRTdG9uZU9iamVjdCA9IHNjO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmUgPSBzYztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlBdWRpbyhBVURJT19QQVRIX09OX0RSQUcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNldFBpY2tlZFVwKHgsIHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNsaWNrVHJhaWxUb2dnbGUgPSB0cnVlO1xyXG4gICAgfTtcclxuICAgIHNldFBpY2tlZFVwKHgsIHkpIHtcclxuICAgICAgICBjb25zdCBzdG9uZUxldHRlciA9IHRoaXMuc3RvbmVIYW5kbGVyLmhhbmRsZVBpY2tTdG9uZVVwKHgsIHkpO1xyXG4gICAgICAgIGlmIChzdG9uZUxldHRlcikge1xyXG4gICAgICAgICAgICB0aGlzLnBpY2tlZFN0b25lT2JqZWN0ID0gc3RvbmVMZXR0ZXI7XHJcbiAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmUgPSBzdG9uZUxldHRlcjtcclxuICAgICAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5QXVkaW8oQVVESU9fUEFUSF9PTl9EUkFHKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMubGV2ZWxEYXRhPy5sZXZlbE1ldGE/LmxldmVsVHlwZSA9PT0gJ1dvcmQnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLndvcmRQdXp6bGVMb2dpYy5zZXRQaWNrVXBMZXR0ZXIoc3RvbmVMZXR0ZXI/LnRleHQsIHN0b25lTGV0dGVyPy5mb2lsU3RvbmVJbmRleCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBoYW5kbGVNb3VzZU1vdmUgPSAoZXZlbnQpID0+IHtcclxuICAgICAgICBsZXQgdHJhaWxYID0gZXZlbnQuY2xpZW50WDtcclxuICAgICAgICBsZXQgdHJhaWxZID0gZXZlbnQuY2xpZW50WTtcclxuICAgICAgICBpZiAodGhpcy5waWNrZWRTdG9uZSkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMud29yZFB1enpsZUxvZ2ljLmNoZWNrSXNXb3JkUHV6emxlKCkpIHtcclxuICAgICAgICAgICAgICAgIC8qVG8gRG86IE1vdmUgYWxsIGxvZ2ljIHJlbGF0aW5nIHRvIHN0b25lIGhhbmRsaW5nIGluY2x1ZGluZyB1cGRhdGluZyBpdHMgY29vcmRuYXRlcyB0byBzdG9uZS1oYW5kbGVyLnRzXHJcbiAgICAgICAgICAgICAgICAgTm90ZTogV2lsbCBoYXZlIHRvIGV2ZW50dWFsbHkgcmVtb3ZlIHRoaXMgYW5kIHVzZSB0aGUgaGFuZGxlTW92aW5nU3RvbmVMZXR0ZXIgaW4gc3RvbmUtaGFuZGxlci50c1xyXG4gICAgICAgICAgICAgICAgIFdpbGwgbGVhdmUgdGhpcyBmb3Igbm93IHRvIGF2b2lkIGFmZmVjdGluZyBMZXR0ZXIgT25seSBwdXp6bGVzIHdpdGggV29yZCBwbGF5IHB1enpsZXMgaW1wbGVtZW50YXRpb24gb2YgbXVsdGktbGV0dGVyIGZlYXR1cmUuXHJcbiAgICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgICAgICBsZXQgcmVjdCA9IHRoaXMuY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB5ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tb25zdGVyLmNoYW5nZVRvRHJhZ0FuaW1hdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5waWNrZWRTdG9uZS54ID0geDtcclxuICAgICAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmUueSA9IHk7XHJcbiAgICAgICAgICAgICAgICB0cmFpbFggPSB4O1xyXG4gICAgICAgICAgICAgICAgdHJhaWxZID0geTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1N0b25lQ29vcmRpbmF0ZXMgPSB0aGlzLnN0b25lSGFuZGxlci5oYW5kbGVNb3ZpbmdTdG9uZUxldHRlcih0aGlzLnBpY2tlZFN0b25lLCBldmVudC5jbGllbnRYLCBldmVudC5jbGllbnRZKTtcclxuICAgICAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmUgPSBuZXdTdG9uZUNvb3JkaW5hdGVzO1xyXG4gICAgICAgICAgICAgICAgdHJhaWxYID0gbmV3U3RvbmVDb29yZGluYXRlcy54O1xyXG4gICAgICAgICAgICAgICAgdHJhaWxZID0gbmV3U3RvbmVDb29yZGluYXRlcy55O1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMud29yZFB1enpsZUxvZ2ljLmNoZWNrSXNXb3JkUHV6emxlKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdTdG9uZUxldHRlciA9IHRoaXMuc3RvbmVIYW5kbGVyLmhhbmRsZUhvdmVyaW5nVG9Bbm90aGVyU3RvbmUodHJhaWxYLCB0cmFpbFksIChmb2lsU3RvbmVUZXh0LCBmb2lsU3RvbmVJbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy53b3JkUHV6emxlTG9naWMuaGFuZGxlQ2hlY2tIb3ZlcmVkU3RvbmUoZm9pbFN0b25lVGV4dCwgZm9pbFN0b25lSW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXdTdG9uZUxldHRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLndvcmRQdXp6bGVMb2dpYy5zZXRQaWNrVXBMZXR0ZXIobmV3U3RvbmVMZXR0ZXI/LnRleHQsIG5ld1N0b25lTGV0dGVyPy5mb2lsU3RvbmVJbmRleCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmUgPSB0aGlzLnN0b25lSGFuZGxlci5yZXNldFN0b25lUG9zaXRpb24odGhpcy53aWR0aCwgdGhpcy5waWNrZWRTdG9uZSwgdGhpcy5waWNrZWRTdG9uZU9iamVjdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vQWZ0ZXIgcmVzZXR0aW5nIGl0cyBvcmlnaW5hbCBwb3NpdGlvbiByZXBsYWNlIGl0IHdpdGggdGhlIG5ldyBsZXR0ZXIuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGlja2VkU3RvbmVPYmplY3QgPSBuZXdTdG9uZUxldHRlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5waWNrZWRTdG9uZSA9IG5ld1N0b25lTGV0dGVyO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm1vbnN0ZXIuY2hhbmdlVG9EcmFnQW5pbWF0aW9uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2xpY2tUcmFpbFRvZ2dsZSAmJlxyXG4gICAgICAgICAgICB0aGlzLnRyYWlsUGFydGljbGVzPy5hZGRUcmFpbFBhcnRpY2xlc09uTW92ZSh0cmFpbFgsIHRyYWlsWSk7XHJcbiAgICB9O1xyXG4gICAgaGFuZGxlTW91c2VDbGljayA9IChldmVudCkgPT4ge1xyXG4gICAgICAgIGxldCByZWN0ID0gdGhpcy5jYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XHJcbiAgICAgICAgY29uc3QgeSA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcclxuICAgICAgICBpZiAodGhpcy5tb25zdGVyLm9uQ2xpY2soeCwgeSkpIHtcclxuICAgICAgICAgICAgdGhpcy5pc0dhbWVTdGFydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy50aW1lID0gMDtcclxuICAgICAgICAgICAgdGhpcy50dXRvcmlhbC5zZXRQbGF5TW9uc3RlckNsaWNrQW5pbWF0aW9uKGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMucGF1c2VCdXR0b24ub25DbGljayh4LCB5KSkge1xyXG4gICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlCdXR0b25DbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgIHRoaXMucGF1c2VHYW1lUGxheSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5wcm9tcHRUZXh0Lm9uQ2xpY2soeCwgeSkpIHtcclxuICAgICAgICAgICAgdGhpcy5wcm9tcHRUZXh0LnBsYXlTb3VuZCgpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvLyBFdmVudCB0byBpZGVudGlmeSB0b3VjaCBvbiB0aGUgY2FudmFzXHJcbiAgICBoYW5kbGVUb3VjaFN0YXJ0ID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgY29uc3QgdG91Y2ggPSBldmVudC50b3VjaGVzWzBdO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlTW91c2VEb3duKHsgY2xpZW50WDogdG91Y2guY2xpZW50WCwgY2xpZW50WTogdG91Y2guY2xpZW50WSB9KTtcclxuICAgICAgICB0aGlzLnRyYWlsUGFydGljbGVzPy5yZXNldFBhcnRpY2xlcygpO1xyXG4gICAgfTtcclxuICAgIGhhbmRsZVRvdWNoTW92ZSA9IChldmVudCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHRvdWNoID0gZXZlbnQudG91Y2hlc1swXTtcclxuICAgICAgICB0aGlzLmhhbmRsZU1vdXNlTW92ZSh7IGNsaWVudFg6IHRvdWNoLmNsaWVudFgsIGNsaWVudFk6IHRvdWNoLmNsaWVudFkgfSk7XHJcbiAgICAgICAgdGhpcy50cmFpbFBhcnRpY2xlcz8uYWRkVHJhaWxQYXJ0aWNsZXNPbk1vdmUodG91Y2guY2xpZW50WCwgdG91Y2guY2xpZW50WSk7XHJcbiAgICB9O1xyXG4gICAgaGFuZGxlVG91Y2hFbmQgPSAoZXZlbnQpID0+IHtcclxuICAgICAgICBjb25zdCB0b3VjaCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlTW91c2VVcCh7IGNsaWVudFg6IHRvdWNoLmNsaWVudFgsIGNsaWVudFk6IHRvdWNoLmNsaWVudFkgfSk7XHJcbiAgICAgICAgaWYgKCF0aGlzLmhhc0ZlZCkge1xyXG4gICAgICAgICAgICB0aGlzLm1vbnN0ZXIuY2hhbmdlVG9JZGxlQW5pbWF0aW9uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudHJhaWxQYXJ0aWNsZXM/LnJlc2V0UGFydGljbGVzKCk7XHJcbiAgICB9O1xyXG4gICAgZHJhdyhkZWx0YVRpbWUpIHtcclxuICAgICAgICBpZiAoIXRoaXMuaXNHYW1lU3RhcnRlZCAmJiAhdGhpcy5pc1BhdXNlQnV0dG9uQ2xpY2tlZCkge1xyXG4gICAgICAgICAgICB0aGlzLnRpbWUgPSB0aGlzLnRpbWUgKyBkZWx0YVRpbWU7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnRpbWUgPj0gNTAwMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pc0dhbWVTdGFydGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMudGltZSA9IDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnR1dG9yaWFsLnNldFBsYXlNb25zdGVyQ2xpY2tBbmltYXRpb24oZmFsc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucGF1c2VCdXR0b24uZHJhdygpO1xyXG4gICAgICAgIHRoaXMubGV2ZWxJbmRpY2F0b3JzLmRyYXcoKTtcclxuICAgICAgICB0aGlzLnByb21wdFRleHQuZHJhdyhkZWx0YVRpbWUpO1xyXG4gICAgICAgIHRoaXMubW9uc3Rlci51cGRhdGUoZGVsdGFUaW1lKTtcclxuICAgICAgICB0aGlzLnRpbWVyVGlja2luZy5kcmF3KCk7XHJcbiAgICAgICAgdGhpcy50cmFpbFBhcnRpY2xlcz8uZHJhdygpO1xyXG4gICAgICAgIGlmICh0aGlzLmlzUGF1c2VCdXR0b25DbGlja2VkICYmIHRoaXMuaXNHYW1lU3RhcnRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmhhbmRsZVN0b25lTGV0dGVyRHJhd2luZyhkZWx0YVRpbWUpO1xyXG4gICAgICAgICAgICB0aGlzLnBhdXNlUG9wdXAuZHJhdygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXRoaXMuaXNQYXVzZUJ1dHRvbkNsaWNrZWQgJiYgIXRoaXMuaXNHYW1lU3RhcnRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvdW50ZXIgPT0gMFxyXG4gICAgICAgICAgICAgICAgPyB0aGlzLnR1dG9yaWFsLmNsaWNrT25Nb25zdGVyVHV0b3JpYWwoZGVsdGFUaW1lKVxyXG4gICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmlzUGF1c2VCdXR0b25DbGlja2VkICYmICF0aGlzLmlzR2FtZVN0YXJ0ZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5wYXVzZVBvcHVwLmRyYXcoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzUGF1c2VCdXR0b25DbGlja2VkICYmIHRoaXMuaXNHYW1lU3RhcnRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmhhbmRsZVN0b25lTGV0dGVyRHJhd2luZyhkZWx0YVRpbWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGhhbmRsZVN0b25lTGV0dGVyRHJhd2luZyhkZWx0YVRpbWUpIHtcclxuICAgICAgICBpZiAodGhpcy53b3JkUHV6emxlTG9naWMuY2hlY2tJc1dvcmRQdXp6bGUoKSkge1xyXG4gICAgICAgICAgICBjb25zdCB7IGdyb3VwZWRPYmogfSA9IHRoaXMud29yZFB1enpsZUxvZ2ljLmdldFZhbHVlcygpO1xyXG4gICAgICAgICAgICB0aGlzLnN0b25lSGFuZGxlci5kcmF3V29yZFB1enpsZUxldHRlcnMoZGVsdGFUaW1lLCAoZm9pbFN0b25lSW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLndvcmRQdXp6bGVMb2dpYy52YWxpZGF0ZVNob3VsZEhpZGVMZXR0ZXIoZm9pbFN0b25lSW5kZXgpO1xyXG4gICAgICAgICAgICB9LCBncm91cGVkT2JqKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RvbmVIYW5kbGVyLmRyYXcoZGVsdGFUaW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBhZGRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLmhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcihNT1VTRVVQLCB0aGlzLmhhbmRsZU1vdXNlVXAsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcihNT1VTRU1PVkUsIHRoaXMuaGFuZGxlTW91c2VNb3ZlLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVyLmFkZEV2ZW50TGlzdGVuZXIoTU9VU0VET1dOLCB0aGlzLmhhbmRsZU1vdXNlRG93biwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5hZGRFdmVudExpc3RlbmVyKFRPVUNIU1RBUlQsIHRoaXMuaGFuZGxlVG91Y2hTdGFydCwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5hZGRFdmVudExpc3RlbmVyKFRPVUNITU9WRSwgdGhpcy5oYW5kbGVUb3VjaE1vdmUsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcihUT1VDSEVORCwgdGhpcy5oYW5kbGVUb3VjaEVuZCwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5hZGRFdmVudExpc3RlbmVyKENMSUNLLCB0aGlzLmhhbmRsZU1vdXNlQ2xpY2ssIGZhbHNlKTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFZJU0lCSUxJVFlfQ0hBTkdFLCB0aGlzLmhhbmRsZVZpc2liaWxpdHlDaGFuZ2UsIGZhbHNlKTtcclxuICAgIH1cclxuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIC8vIFJlbW92ZSBldmVudCBsaXN0ZW5lcnMgdXNpbmcgdGhlIGRlZmluZWQgZnVuY3Rpb25zXHJcbiAgICAgICAgdGhpcy5oYW5kbGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoQ0xJQ0ssIHRoaXMuaGFuZGxlTW91c2VDbGljaywgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCB0aGlzLmhhbmRsZU1vdXNlVXAsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmhhbmRsZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCB0aGlzLmhhbmRsZU1vdXNlTW92ZSwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMuaGFuZGxlTW91c2VEb3duLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsIHRoaXMuaGFuZGxlVG91Y2hTdGFydCwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIHRoaXMuaGFuZGxlVG91Y2hNb3ZlLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLCB0aGlzLmhhbmRsZVRvdWNoRW5kLCBmYWxzZSk7XHJcbiAgICB9XHJcbiAgICBsb2FkUHV6emxlID0gKGlzVGltZXJFbmRlZCkgPT4ge1xyXG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLnN0b25lc0NvdW50ID0gMTtcclxuICAgICAgICBjb25zdCB0aW1lckVuZGVkID0gQm9vbGVhbihpc1RpbWVyRW5kZWQpO1xyXG4gICAgICAgIGlmICh0aW1lckVuZGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nUHV6emxlRW5kRmlyZWJhc2VFdmVudChmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY291bnRlciArPSAxOyAvL2luY3JlbWVudCBQdXp6bGVcclxuICAgICAgICB0aGlzLmlzR2FtZVN0YXJ0ZWQgPSBmYWxzZTtcclxuICAgICAgICBpZiAodGhpcy5jb3VudGVyID09PSB0aGlzLmxldmVsRGF0YS5wdXp6bGVzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsSW5kaWNhdG9ycy5zZXRJbmRpY2F0b3JzKHRoaXMuY291bnRlcik7XHJcbiAgICAgICAgICAgIHRoaXMubG9nTGV2ZWxFbmRGaXJlYmFzZUV2ZW50KCk7XHJcbiAgICAgICAgICAgIEdhbWVTY29yZS5zZXRHYW1lTGV2ZWxTY29yZSh0aGlzLmxldmVsRGF0YSwgdGhpcy5zY29yZSk7XHJcbiAgICAgICAgICAgIHRoaXMuc3dpdGNoU2NlbmVUb0VuZChHYW1lU2NvcmUuY2FsY3VsYXRlU3RhckNvdW50KHRoaXMuc2NvcmUpLCB0aGlzLm1vbnN0ZXJQaGFzZU51bWJlciwgdGhpcy5sZXZlbE51bWJlciwgdGltZXJFbmRlZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBsb2FkUHV6emxlRXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoTE9BRFBVWlpMRSwge1xyXG4gICAgICAgICAgICAgICAgZGV0YWlsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY291bnRlcjogdGhpcy5jb3VudGVyLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzRGlzcG9zaW5nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbml0TmV3UHV6emxlKGxvYWRQdXp6bGVFdmVudCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sIHRpbWVyRW5kZWQgPyAwIDogNDUwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGRpc3Bvc2UgPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5pc0Rpc3Bvc2luZyA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5zdG9wQWxsQXVkaW9zKCk7XHJcbiAgICAgICAgdGhpcy5tb25zdGVyLmRpc3Bvc2UoKTtcclxuICAgICAgICB0aGlzLnRpbWVyVGlja2luZy5kaXNwb3NlKCk7XHJcbiAgICAgICAgdGhpcy5sZXZlbEluZGljYXRvcnMuZGlzcG9zZSgpO1xyXG4gICAgICAgIHRoaXMuc3RvbmVIYW5kbGVyLmRpc3Bvc2UoKTtcclxuICAgICAgICB0aGlzLnByb21wdFRleHQuZGlzcG9zZSgpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoVklTSUJJTElUWV9DSEFOR0UsIHRoaXMuaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH07XHJcbiAgICBjaGVja1N0b25lRHJvcHBlZChzdG9uZSwgZmVlZEJhY2tJbmRleCwgaXNXb3JkID0gZmFsc2UpIHtcclxuICAgICAgICB0aGlzLmhhc0ZlZCA9IHRydWU7IC8vVG8gcHJldmVudCBpZGxlIGFuaW1hdGlvbiBmcm9tIGZpcmluZyB3aGVuIHN0b25lIGlzIGRyb3BwZWQuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RvbmVIYW5kbGVyLmlzU3RvbmVMZXR0ZXJEcm9wQ29ycmVjdChzdG9uZSwgZmVlZEJhY2tJbmRleCwgaXNXb3JkKTtcclxuICAgIH1cclxuICAgIGxldHRlclB1enpsZShkcm9wcGVkU3RvbmUpIHtcclxuICAgICAgICBjb25zdCBmZWVkQmFja0luZGV4ID0gdGhpcy5nZXRSYW5kb21JbnQoMCwgMSk7XHJcbiAgICAgICAgY29uc3QgaXNDb3JyZWN0ID0gdGhpcy5jaGVja1N0b25lRHJvcHBlZChkcm9wcGVkU3RvbmUsIGZlZWRCYWNrSW5kZXgpO1xyXG4gICAgICAgIGlmIChpc0NvcnJlY3QpIHtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVDb3JyZWN0U3RvbmVEcm9wKGZlZWRCYWNrSW5kZXgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmhhbmRsZVN0b25lRHJvcEVuZChpc0NvcnJlY3QpO1xyXG4gICAgfVxyXG4gICAgd29yZFB1enpsZShkcm9wcGVkU3RvbmVJbnN0YW5jZSkge1xyXG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIuc3RvcEZlZWRiYWNrQXVkaW8oKTtcclxuICAgICAgICBkcm9wcGVkU3RvbmVJbnN0YW5jZS54ID0gLTk5OTtcclxuICAgICAgICBkcm9wcGVkU3RvbmVJbnN0YW5jZS55ID0gLTk5OTtcclxuICAgICAgICBjb25zdCBmZWVkQmFja0luZGV4ID0gdGhpcy5nZXRSYW5kb21JbnQoMCwgMSk7XHJcbiAgICAgICAgdGhpcy5oYXNGZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMud29yZFB1enpsZUxvZ2ljLnNldEdyb3VwVG9Ecm9wcGVkKCk7XHJcbiAgICAgICAgY29uc3QgeyBkcm9wcGVkTGV0dGVycyB9ID0gdGhpcy53b3JkUHV6emxlTG9naWMuZ2V0VmFsdWVzKCk7XHJcbiAgICAgICAgY29uc3QgaXNDb3JyZWN0ID0gdGhpcy53b3JkUHV6emxlTG9naWMudmFsaWRhdGVGZWRMZXR0ZXJzKCk7XHJcbiAgICAgICAgdGhpcy5zdG9uZUhhbmRsZXIucHJvY2Vzc0xldHRlckRyb3BGZWVkYmFja0F1ZGlvKGZlZWRCYWNrSW5kZXgsIGlzQ29ycmVjdCwgdHJ1ZSwgZHJvcHBlZExldHRlcnMpO1xyXG4gICAgICAgIGlmIChpc0NvcnJlY3QpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMud29yZFB1enpsZUxvZ2ljLnZhbGlkYXRlV29yZFB1enpsZSgpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZUNvcnJlY3RTdG9uZURyb3AoZmVlZEJhY2tJbmRleCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZVN0b25lRHJvcEVuZChpc0NvcnJlY3QsIFwiV29yZFwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RvbmVzQ291bnQgPSAxO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMudGltZXJUaWNraW5nLnN0YXJ0VGltZXIoKTtcclxuICAgICAgICAgICAgdGhpcy5tb25zdGVyLmNoYW5nZVRvRWF0QW5pbWF0aW9uKCk7XHJcbiAgICAgICAgICAgIHRoaXMucHJvbXB0VGV4dC5kcm9wcGVkU3RvbmVJbmRleChsYW5nID09IFwiYXJhYmljXCJcclxuICAgICAgICAgICAgICAgID8gdGhpcy5zdG9uZXNDb3VudFxyXG4gICAgICAgICAgICAgICAgOiBkcm9wcGVkTGV0dGVycy5sZW5ndGgpO1xyXG4gICAgICAgICAgICB0aGlzLnN0b25lc0NvdW50Kys7XHJcbiAgICAgICAgICAgIHRoaXMucmVzZXRUb0lkbGVBbmltYXRpb24oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5tb25zdGVyLmNoYW5nZVRvSWRsZUFuaW1hdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oYXNGZWQgPSBmYWxzZTsgLy9yZS1lbmFibGVzIGlkbGUgcmVzZXQgd2hlbiBzdG9uZXMgYXJlIG5vdCBmZWQuXHJcbiAgICAgICAgICAgIH0sIDIwMDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVTdG9uZURyb3BFbmQoaXNDb3JyZWN0LCBcIldvcmRcIik7XHJcbiAgICAgICAgICAgIHRoaXMuc3RvbmVzQ291bnQgPSAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJlc2V0VG9JZGxlQW5pbWF0aW9uKGNhbGxiYWNrLCBkZWxheSkge1xyXG4gICAgICAgIGlmICh0aGlzLnJlc2V0QW5pbWF0aW9uSUQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5yZXNldEFuaW1hdGlvbklEKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5yZXNldEFuaW1hdGlvbklEID0gc2V0VGltZW91dChjYWxsYmFjaywgZGVsYXkpO1xyXG4gICAgfVxyXG4gICAgaGFuZGxlU3RvbmVEcm9wRW5kKGlzQ29ycmVjdCwgcHV6emxlVHlwZSA9IG51bGwpIHtcclxuICAgICAgICB0aGlzLmxvZ1B1enpsZUVuZEZpcmViYXNlRXZlbnQoaXNDb3JyZWN0LCBwdXp6bGVUeXBlKTtcclxuICAgICAgICB0aGlzLmRpc3BhdGNoU3RvbmVEcm9wRXZlbnQoaXNDb3JyZWN0KTtcclxuICAgICAgICB0aGlzLmxvYWRQdXp6bGUoKTtcclxuICAgIH1cclxuICAgIGhhbmRsZUNvcnJlY3RTdG9uZURyb3AgPSAoZmVlZGJhY2tJbmRleCkgPT4ge1xyXG4gICAgICAgIHRoaXMuc2NvcmUgKz0gMTAwO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tUZXh0RWZmZWN0cy53cmFwVGV4dCh0aGlzLmdldFJhbmRvbUZlZWRCYWNrVGV4dChmZWVkYmFja0luZGV4KSk7XHJcbiAgICB9O1xyXG4gICAgZGlzcGF0Y2hTdG9uZURyb3BFdmVudChpc0NvcnJlY3QpIHtcclxuICAgICAgICBjb25zdCBkcm9wU3RvbmVFdmVudCA9IG5ldyBDdXN0b21FdmVudChTVE9ORURST1AsIHtcclxuICAgICAgICAgICAgZGV0YWlsOiB7IGlzQ29ycmVjdDogaXNDb3JyZWN0IH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChkcm9wU3RvbmVFdmVudCk7XHJcbiAgICB9XHJcbiAgICBpbml0TmV3UHV6emxlKGxvYWRQdXp6bGVFdmVudCkge1xyXG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLmlzR2FtZVN0YXJ0ZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnRpbWUgPSAwO1xyXG4gICAgICAgIHRoaXMud29yZFB1enpsZUxvZ2ljLnVwZGF0ZVB1enpsZUxldmVsKGxvYWRQdXp6bGVFdmVudD8uZGV0YWlsPy5jb3VudGVyKTtcclxuICAgICAgICB0aGlzLnBpY2tlZFN0b25lID0gbnVsbDtcclxuICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGxvYWRQdXp6bGVFdmVudCk7XHJcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIuc3RvcEFsbEF1ZGlvcygpO1xyXG4gICAgICAgIHRoaXMuc3RhcnRQdXp6bGVUaW1lKCk7XHJcbiAgICAgICAgdGhpcy5oYXNGZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIGxvZ1B1enpsZUVuZEZpcmViYXNlRXZlbnQoaXNDb3JyZWN0LCBwdXp6bGVUeXBlKSB7XHJcbiAgICAgICAgbGV0IGVuZFRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIGNvbnN0IHsgZHJvcHBlZExldHRlcnMgfSA9IHRoaXMud29yZFB1enpsZUxvZ2ljLmdldFZhbHVlcygpO1xyXG4gICAgICAgIGNvbnN0IHB1enpsZUNvbXBsZXRlZERhdGEgPSB7XHJcbiAgICAgICAgICAgIGNyX3VzZXJfaWQ6IHBzZXVkb0lkLFxyXG4gICAgICAgICAgICBmdG1fbGFuZ3VhZ2U6IGxhbmcsXHJcbiAgICAgICAgICAgIHByb2ZpbGVfbnVtYmVyOiAwLFxyXG4gICAgICAgICAgICB2ZXJzaW9uX251bWJlcjogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2ZXJzaW9uLWluZm8taWRcIikuaW5uZXJIVE1MLFxyXG4gICAgICAgICAgICBqc29uX3ZlcnNpb25fbnVtYmVyOiB0aGlzLmpzb25WZXJzaW9uTnVtYmVyLFxyXG4gICAgICAgICAgICBzdWNjZXNzX29yX2ZhaWx1cmU6IGlzQ29ycmVjdCA/IFwic3VjY2Vzc1wiIDogXCJmYWlsdXJlXCIsXHJcbiAgICAgICAgICAgIGxldmVsX251bWJlcjogdGhpcy5sZXZlbERhdGEubGV2ZWxNZXRhLmxldmVsTnVtYmVyLFxyXG4gICAgICAgICAgICBwdXp6bGVfbnVtYmVyOiB0aGlzLmNvdW50ZXIsXHJcbiAgICAgICAgICAgIGl0ZW1fc2VsZWN0ZWQ6IHB1enpsZVR5cGUgPT0gXCJXb3JkXCJcclxuICAgICAgICAgICAgICAgID8gZHJvcHBlZExldHRlcnMgPT0gbnVsbCB8fFxyXG4gICAgICAgICAgICAgICAgICAgIGRyb3BwZWRMZXR0ZXJzID09IHVuZGVmaW5lZFxyXG4gICAgICAgICAgICAgICAgICAgID8gXCJUSU1FT1VUXCJcclxuICAgICAgICAgICAgICAgICAgICA6IGRyb3BwZWRMZXR0ZXJzXHJcbiAgICAgICAgICAgICAgICA6IHRoaXMucGlja2VkU3RvbmUgPT0gbnVsbCB8fCB0aGlzLnBpY2tlZFN0b25lID09IHVuZGVmaW5lZFxyXG4gICAgICAgICAgICAgICAgICAgID8gXCJUSU1FT1VUXCJcclxuICAgICAgICAgICAgICAgICAgICA6IHRoaXMucGlja2VkU3RvbmU/LnRleHQsXHJcbiAgICAgICAgICAgIHRhcmdldDogdGhpcy5zdG9uZUhhbmRsZXIuZ2V0Q29ycmVjdFRhcmdldFN0b25lKCksXHJcbiAgICAgICAgICAgIGZvaWxzOiB0aGlzLnN0b25lSGFuZGxlci5nZXRGb2lsU3RvbmVzKCksXHJcbiAgICAgICAgICAgIHJlc3BvbnNlX3RpbWU6IChlbmRUaW1lIC0gdGhpcy5wdXp6bGVUaW1lKSAvIDEwMDAsXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmZpcmViYXNlSW50ZWdyYXRpb24uc2VuZFB1enpsZUNvbXBsZXRlZEV2ZW50KHB1enpsZUNvbXBsZXRlZERhdGEpO1xyXG4gICAgfVxyXG4gICAgbG9nTGV2ZWxFbmRGaXJlYmFzZUV2ZW50KCkge1xyXG4gICAgICAgIGxldCBlbmRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICBjb25zdCBsZXZlbENvbXBsZXRlZERhdGEgPSB7XHJcbiAgICAgICAgICAgIGNyX3VzZXJfaWQ6IHBzZXVkb0lkLFxyXG4gICAgICAgICAgICBmdG1fbGFuZ3VhZ2U6IGxhbmcsXHJcbiAgICAgICAgICAgIHByb2ZpbGVfbnVtYmVyOiAwLFxyXG4gICAgICAgICAgICB2ZXJzaW9uX251bWJlcjogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2ZXJzaW9uLWluZm8taWRcIikuaW5uZXJIVE1MLFxyXG4gICAgICAgICAgICBqc29uX3ZlcnNpb25fbnVtYmVyOiB0aGlzLmpzb25WZXJzaW9uTnVtYmVyLFxyXG4gICAgICAgICAgICBzdWNjZXNzX29yX2ZhaWx1cmU6IEdhbWVTY29yZS5jYWxjdWxhdGVTdGFyQ291bnQodGhpcy5zY29yZSkgPj0gMyA/IFwic3VjY2Vzc1wiIDogXCJmYWlsdXJlXCIsXHJcbiAgICAgICAgICAgIG51bWJlcl9vZl9zdWNjZXNzZnVsX3B1enpsZXM6IHRoaXMuc2NvcmUgLyAxMDAsXHJcbiAgICAgICAgICAgIGxldmVsX251bWJlcjogdGhpcy5sZXZlbERhdGEubGV2ZWxNZXRhLmxldmVsTnVtYmVyLFxyXG4gICAgICAgICAgICBkdXJhdGlvbjogKGVuZFRpbWUgLSB0aGlzLnN0YXJ0VGltZSkgLyAxMDAwLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5maXJlYmFzZUludGVncmF0aW9uLnNlbmRMZXZlbENvbXBsZXRlZEV2ZW50KGxldmVsQ29tcGxldGVkRGF0YSk7XHJcbiAgICB9XHJcbiAgICBzdGFydEdhbWVUaW1lKCkge1xyXG4gICAgICAgIHRoaXMuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgIH1cclxuICAgIHN0YXJ0UHV6emxlVGltZSgpIHtcclxuICAgICAgICB0aGlzLnB1enpsZVRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgfVxyXG4gICAgcGF1c2VHYW1lUGxheSA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgdGhpcy5pc1BhdXNlQnV0dG9uQ2xpY2tlZCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5zdG9uZUhhbmRsZXIuc2V0R2FtZVBhdXNlKHRydWUpO1xyXG4gICAgICAgIHRoaXMucGF1c2VQb3B1cC5hZGRMaXN0bmVyKCk7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5zdG9wQWxsQXVkaW9zKCk7XHJcbiAgICB9O1xyXG4gICAgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnN0b3BBbGxBdWRpb3MoKTtcclxuICAgICAgICB0aGlzLnBhdXNlR2FtZVBsYXkoKTtcclxuICAgIH07XHJcbn1cclxuIiwiaW1wb3J0IHsgRGVidWdnZXIsIGxhbmcsIHBzZXVkb0lkLCBsb2FkSW1hZ2VzLCB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IEF1ZGlvUGxheWVyIH0gZnJvbSBcIkBjb21wb25lbnRzXCI7XHJcbmltcG9ydCB7IGdldERhdGEsIEdhbWVTY29yZSB9IGZyb20gXCJAZGF0YVwiO1xyXG5pbXBvcnQgeyBGaXJlYmFzZUludGVncmF0aW9uIH0gZnJvbSBcIi4uL0ZpcmViYXNlL2ZpcmViYXNlLWludGVncmF0aW9uXCI7XHJcbmltcG9ydCB7IGNyZWF0ZUJhY2tncm91bmQsIGxldmVsU2VsZWN0QmdEcmF3aW5nLCBjcmVhdGVMZXZlbE9iamVjdCwgZ2V0ZGVmYXVsdENsb3VkQnRuc1BvcywgbG9hZExldmVsSW1hZ2VzIH0gZnJvbSBcIkBjb21wb3NpdGlvbnNcIjtcclxuaW1wb3J0IHsgUHJldmlvdXNQbGF5ZWRMZXZlbCwgTEVWRUxfU0VMRUNUSU9OX0JBQ0tHUk9VTkQsIE5FWFRfQlROX0lNRywgQkFDS19CVE5fSU1HLCBBVURJT19JTlRSTywgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBMZXZlbEJsb29uQnV0dG9uIH0gZnJvbSAnQGJ1dHRvbnMnO1xyXG5leHBvcnQgY2xhc3MgTGV2ZWxTZWxlY3Rpb25TY3JlZW4ge1xyXG4gICAgY2FudmFzO1xyXG4gICAgZGF0YTtcclxuICAgIHdpZHRoO1xyXG4gICAgaGVpZ2h0O1xyXG4gICAgY2FudmFzRWxlbWVudDtcclxuICAgIGNvbnRleHQ7XHJcbiAgICBsZXZlbHM7XHJcbiAgICBnYW1lTGV2ZWxEYXRhO1xyXG4gICAgY2FsbEJhY2s7XHJcbiAgICBhdWRpb1BsYXllcjtcclxuICAgIGltYWdlcztcclxuICAgIGxvYWRlZEltYWdlcztcclxuICAgIGltYWdlc0xvYWRlZCA9IGZhbHNlO1xyXG4gICAgeERvd247XHJcbiAgICB5RG93bjtcclxuICAgIHByZXZpb3VzUGxheWVkTGV2ZWxOdW1iZXI7XHJcbiAgICBsZXZlbFNlbGVjdGlvblBhZ2VJbmRleCA9IDA7XHJcbiAgICBsZXZlbE51bWJlcjtcclxuICAgIGxldmVsc1NlY3Rpb25Db3VudDtcclxuICAgIHVubG9ja0xldmVsSW5kZXg7XHJcbiAgICBtYWpWZXJzaW9uO1xyXG4gICAgbWluVmVyc2lvbjtcclxuICAgIGZpcmViYXNlSW50ZWdyYXRpb247XHJcbiAgICBiYWNrZ3JvdW5kO1xyXG4gICAgcmlnaHRCdG5TaXplO1xyXG4gICAgcmlnaHRCdG5YO1xyXG4gICAgcmlnaHRCdG5ZO1xyXG4gICAgbGVmdEJ0blNpemU7XHJcbiAgICBsZWZ0QnRuWDtcclxuICAgIGxlZnRCdG5ZO1xyXG4gICAgbGV2ZWxCdXR0b25zO1xyXG4gICAgY29uc3RydWN0b3IoY2FudmFzLCBkYXRhLCBjYWxsQmFjaykge1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IGNhbnZhcy53aWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XHJcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuY2FsbEJhY2sgPSBjYWxsQmFjaztcclxuICAgICAgICB0aGlzLmxldmVsc1NlY3Rpb25Db3VudCA9XHJcbiAgICAgICAgICAgIHNlbGYuZGF0YS5sZXZlbHMubGVuZ3RoIC8gMTAgPiBNYXRoLmZsb29yKHNlbGYuZGF0YS5sZXZlbHMubGVuZ3RoIC8gMTApXHJcbiAgICAgICAgICAgICAgICA/IE1hdGguZmxvb3Ioc2VsZi5kYXRhLmxldmVscy5sZW5ndGggLyAxMCkgKyAxXHJcbiAgICAgICAgICAgICAgICA6IE1hdGguZmxvb3Ioc2VsZi5kYXRhLmxldmVscy5sZW5ndGggLyAxMCk7XHJcbiAgICAgICAgdGhpcy5sZXZlbHMgPSBbXTtcclxuICAgICAgICB0aGlzLmZpcmViYXNlSW50ZWdyYXRpb24gPSBuZXcgRmlyZWJhc2VJbnRlZ3JhdGlvbigpO1xyXG4gICAgICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgICAgIHRoaXMuY2FudmFzRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIHRoaXMuY29udGV4dCA9IHRoaXMuY2FudmFzRWxlbWVudC5nZXRDb250ZXh0KFwiMmRcIik7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVMZXZlbEJ1dHRvbnMoKTtcclxuICAgICAgICB0aGlzLmdhbWVMZXZlbERhdGEgPSBHYW1lU2NvcmUuZ2V0QWxsR2FtZUxldmVsSW5mbygpO1xyXG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIgPSBuZXcgQXVkaW9QbGF5ZXIoKTtcclxuICAgICAgICB0aGlzLnVubG9ja0xldmVsSW5kZXggPSAtMTtcclxuICAgICAgICB0aGlzLnByZXZpb3VzUGxheWVkTGV2ZWxOdW1iZXIgPVxyXG4gICAgICAgICAgICBwYXJzZUludChEZWJ1Z2dlci5EZWJ1Z01vZGVcclxuICAgICAgICAgICAgICAgID8gbG9jYWxTdG9yYWdlLmdldEl0ZW0oUHJldmlvdXNQbGF5ZWRMZXZlbCArIGxhbmcgKyBcIkRlYnVnXCIpXHJcbiAgICAgICAgICAgICAgICA6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFByZXZpb3VzUGxheWVkTGV2ZWwgKyBsYW5nKSkgfCAwO1xyXG4gICAgICAgIGlmICh0aGlzLnByZXZpb3VzUGxheWVkTGV2ZWxOdW1iZXIgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4ID1cclxuICAgICAgICAgICAgICAgIDEwICogTWF0aC5mbG9vcih0aGlzLnByZXZpb3VzUGxheWVkTGV2ZWxOdW1iZXIgLyAxMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc2V0dXBCZygpO1xyXG4gICAgICAgIHRoaXMuaW1hZ2VzID0ge1xyXG4gICAgICAgICAgICBuZXh0YnRuOiBORVhUX0JUTl9JTUcsXHJcbiAgICAgICAgICAgIGJhY2tidG46IEJBQ0tfQlROX0lNRyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGxvYWRJbWFnZXModGhpcy5pbWFnZXMsIChpbWFnZXMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5sb2FkZWRJbWFnZXMgPSBPYmplY3QuYXNzaWduKHt9LCBpbWFnZXMpO1xyXG4gICAgICAgICAgICB0aGlzLmltYWdlc0xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09IFwidmlzaWJsZVwiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlBdWRpbyhBVURJT19JTlRSTyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmFkZExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMucmlnaHRCdG5TaXplID0gMTA7XHJcbiAgICAgICAgdGhpcy5yaWdodEJ0blggPSAwLjczO1xyXG4gICAgICAgIHRoaXMucmlnaHRCdG5ZID0gMS4zO1xyXG4gICAgICAgIHRoaXMubGVmdEJ0blNpemUgPSAxMDtcclxuICAgICAgICB0aGlzLmxlZnRCdG5YID0gMTA7XHJcbiAgICAgICAgdGhpcy5sZWZ0QnRuWSA9IDEuMztcclxuICAgIH1cclxuICAgIGFzeW5jIGluaXQoKSB7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGdldERhdGEoKTtcclxuICAgICAgICB0aGlzLm1halZlcnNpb24gPSBkYXRhLm1hanZlcnNpb247XHJcbiAgICAgICAgdGhpcy5taW5WZXJzaW9uID0gZGF0YS5taW52ZXJzaW9uO1xyXG4gICAgfVxyXG4gICAgc2V0dXBCZyA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBhd2FpdCBjcmVhdGVCYWNrZ3JvdW5kKHRoaXMuY29udGV4dCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQsIHsgTEVWRUxfU0VMRUNUSU9OX0JBQ0tHUk9VTkQgfSwgbGV2ZWxTZWxlY3RCZ0RyYXdpbmcpO1xyXG4gICAgfTtcclxuICAgIGFzeW5jIGNyZWF0ZUxldmVsQnV0dG9ucygpIHtcclxuICAgICAgICBjb25zdCBpbWFnZXMgPSBhd2FpdCBsb2FkTGV2ZWxJbWFnZXMoKTtcclxuICAgICAgICBjb25zdCBwb3NzID0gZ2V0ZGVmYXVsdENsb3VkQnRuc1Bvcyh0aGlzLmNhbnZhcyk7XHJcbiAgICAgICAgY29uc3QgbGV2ZWxzQXJyID0gcG9zc1swXS5tYXAoKGNvb3JkaW5hdGVzLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlTGV2ZWxPYmplY3QoY29vcmRpbmF0ZXNbMF0sIGNvb3JkaW5hdGVzWzFdLCBpbmRleCArIDEsIGltYWdlcyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5sZXZlbHMgPSBhd2FpdCBQcm9taXNlLmFsbChsZXZlbHNBcnIpO1xyXG4gICAgICAgIHRoaXMubGV2ZWxCdXR0b25zID0gdGhpcy5sZXZlbHMubWFwKGJ0bkNvb3JkaW5hdGVzID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBMZXZlbEJsb29uQnV0dG9uKHRoaXMuY2FudmFzLCB0aGlzLmNvbnRleHQsIHsgLi4uYnRuQ29vcmRpbmF0ZXMgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBhZGRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgLy8gbmV4dCBwcmV2IGJ1dHRvbiBsaXN0bmVyICMxXHJcbiAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpXHJcbiAgICAgICAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMuaGFuZGxlTW91c2VEb3duLCBmYWxzZSk7XHJcbiAgICAgICAgLy8gd2hlbiBhcHAgZ29lcyBiYWNrZ3JvdW5kICMyXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgdGhpcy5wYXVzZVBsYXlBdWRpb3MsIGZhbHNlKTtcclxuICAgICAgICAvLy8gc3dpcGUgbGlzdGVuZXIgIzNcclxuICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIilcclxuICAgICAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsIHRoaXMuaGFuZGxlVG91Y2hTdGFydCwgZmFsc2UpO1xyXG4gICAgICAgIC8vICM0XHJcbiAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpXHJcbiAgICAgICAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIHRoaXMuaGFuZGxlVG91Y2hNb3ZlLCBmYWxzZSk7XHJcbiAgICB9XHJcbiAgICBwYXVzZVBsYXlBdWRpb3MgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA9PT0gXCJ2aXNpYmxlXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5QXVkaW8oQVVESU9fSU5UUk8pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5hdWRpb1BsYXllci5zdG9wQWxsQXVkaW9zKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGdldFRvdWNoZXMoZXZ0KSB7XHJcbiAgICAgICAgcmV0dXJuIChldnQudG91Y2hlcyB8fCAvLyBicm93c2VyIEFQSVxyXG4gICAgICAgICAgICBldnQub3JpZ2luYWxFdmVudC50b3VjaGVzKTsgLy8galF1ZXJ5XHJcbiAgICB9XHJcbiAgICBoYW5kbGVUb3VjaFN0YXJ0ID0gKGV2dCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGZpcnN0VG91Y2ggPSB0aGlzLmdldFRvdWNoZXMoZXZ0KVswXTtcclxuICAgICAgICB0aGlzLnhEb3duID0gZmlyc3RUb3VjaC5jbGllbnRYO1xyXG4gICAgICAgIHRoaXMueURvd24gPSBmaXJzdFRvdWNoLmNsaWVudFk7XHJcbiAgICB9O1xyXG4gICAgaGFuZGxlVG91Y2hNb3ZlID0gKGV2dCkgPT4ge1xyXG4gICAgICAgIGlmICghdGhpcy54RG93biB8fCAhdGhpcy55RG93bikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCB4VXAgPSBldnQudG91Y2hlc1swXS5jbGllbnRYO1xyXG4gICAgICAgIGxldCB5VXAgPSBldnQudG91Y2hlc1swXS5jbGllbnRZO1xyXG4gICAgICAgIGxldCB4RGlmZiA9IHRoaXMueERvd24gLSB4VXA7XHJcbiAgICAgICAgbGV0IHlEaWZmID0gdGhpcy55RG93biAtIHlVcDtcclxuICAgICAgICBpZiAoTWF0aC5hYnMoeERpZmYpID4gTWF0aC5hYnMoeURpZmYpKSB7XHJcbiAgICAgICAgICAgIC8qbW9zdCBzaWduaWZpY2FudCovXHJcbiAgICAgICAgICAgIGlmICh4RGlmZiA+IDApIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4ICE9IHRoaXMubGV2ZWxzU2VjdGlvbkNvdW50ICogMTAgLSAxMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXggPSB0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4ICsgMTA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kb3duQnV0dG9uKHRoaXMubGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLyogcmlnaHQgc3dpcGUgKi9cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4ICE9IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4ID0gdGhpcy5sZXZlbFNlbGVjdGlvblBhZ2VJbmRleCAtIDEwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5kb3duQnV0dG9uKHRoaXMubGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXgpO1xyXG4gICAgICAgICAgICAgICAgLyogbGVmdCBzd2lwZSAqL1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8qIHJlc2V0IHZhbHVlcyAqL1xyXG4gICAgICAgIHRoaXMueERvd24gPSBudWxsO1xyXG4gICAgICAgIHRoaXMueURvd24gPSBudWxsO1xyXG4gICAgfTtcclxuICAgIGhhbmRsZU1vdXNlRG93biA9IChldmVudCkgPT4ge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgbGV0IHJlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBjb25zdCB4ID0gZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdDtcclxuICAgICAgICBjb25zdCB5ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xyXG4gICAgICAgIGNvbnN0IGlzV2l0aGluQnV0dG9uQXJlYSA9IChidG5YLCBidG5ZID0gMS4zKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiAoeCA+PSBidG5YICYmXHJcbiAgICAgICAgICAgICAgICB4IDwgYnRuWCArIHRoaXMuY2FudmFzLmhlaWdodCAvIDEwICYmXHJcbiAgICAgICAgICAgICAgICB5ID4gdGhpcy5jYW52YXMuaGVpZ2h0IC8gYnRuWSAmJlxyXG4gICAgICAgICAgICAgICAgeSA8IHRoaXMuY2FudmFzLmhlaWdodCAvIGJ0blkgKyB0aGlzLmNhbnZhcy5oZWlnaHQgLyAxMCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBpc1JpZ2h0ID0gaXNXaXRoaW5CdXR0b25BcmVhKHRoaXMuY2FudmFzLndpZHRoICogMC43KTtcclxuICAgICAgICBjb25zdCBpc0xlZnQgPSBpc1dpdGhpbkJ1dHRvbkFyZWEodGhpcy5jYW52YXMud2lkdGggLyAxMCk7XHJcbiAgICAgICAgaWYgKGlzTGVmdCB8fCBpc1JpZ2h0KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhZ2VJbmRleCA9IHRoaXMubGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXg7XHJcbiAgICAgICAgICAgIGlmIChpc1JpZ2h0ICYmIHBhZ2VJbmRleCAhPSB0aGlzLmxldmVsc1NlY3Rpb25Db3VudCAqIDEwIC0gMTApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheUJ1dHRvbkNsaWNrU291bmQoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXggPSBwYWdlSW5kZXggKyAxMDtcclxuICAgICAgICAgICAgICAgIHRoaXMucmlnaHRCdG5TaXplID0gMTAuNTtcclxuICAgICAgICAgICAgICAgIHRoaXMucmlnaHRCdG5ZID0gMS4yOTk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoaXNMZWZ0ICYmIHBhZ2VJbmRleCAhPSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlCdXR0b25DbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4ID0gcGFnZUluZGV4IC0gMTA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxlZnRCdG5TaXplID0gMTAuMztcclxuICAgICAgICAgICAgICAgIHRoaXMubGVmdEJ0blkgPSAxLjI5OTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmRvd25CdXR0b24odGhpcy5sZXZlbFNlbGVjdGlvblBhZ2VJbmRleCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGJ0biBvZiB0aGlzLmxldmVsQnV0dG9ucykge1xyXG4gICAgICAgICAgICBidG4ub25DbGljayh4LCB5LCB0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4IC0gMSwgdGhpcy51bmxvY2tMZXZlbEluZGV4ICsgMSwgKGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlCdXR0b25DbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxldmVsTnVtYmVyID0gaW5kZXggKyB0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4IC0gMTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRHYW1lKHRoaXMubGV2ZWxOdW1iZXIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgZHJhd0xldmVsKGxldmVsQnRuLCBnYW1lTGV2ZWxEYXRhKSB7XHJcbiAgICAgICAgY29uc3QgY3VycmVudExldmVsSW5kZXggPSBsZXZlbEJ0bi5sZXZlbERhdGEuaW5kZXggKyB0aGlzLmxldmVsU2VsZWN0aW9uUGFnZUluZGV4O1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRMZXZlbCA9IGN1cnJlbnRMZXZlbEluZGV4IC0gMTtcclxuICAgICAgICBjb25zdCBuZXh0TGV2ZWxQbGF5ID0gdGhpcy51bmxvY2tMZXZlbEluZGV4ICsgMTtcclxuICAgICAgICBpZiAobmV4dExldmVsUGxheSA9PT0gY3VycmVudExldmVsKSB7XHJcbiAgICAgICAgICAgIGxldmVsQnRuLmFwcGx5UHVsc2VFZmZlY3QoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGN1cnJlbnRMZXZlbEluZGV4IDw9IHRoaXMuZGF0YS5sZXZlbHMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2tVbmxvY2tlZExldmVsKGdhbWVMZXZlbERhdGEpO1xyXG4gICAgICAgICAgICBsZXZlbEJ0bi5kcmF3KHRoaXMubGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXgsIHRoaXMudW5sb2NrTGV2ZWxJbmRleCwgZ2FtZUxldmVsRGF0YSwgdGhpcy5kYXRhLmxldmVscy5sZW5ndGgpO1xyXG4gICAgICAgICAgICBEZWJ1Z2dlci5EZWJ1Z01vZGVcclxuICAgICAgICAgICAgICAgID8gdGhpcy5jb250ZXh0LmZpbGxUZXh0KHRoaXMuZGF0YS5sZXZlbHNbY3VycmVudExldmVsSW5kZXggLSAxXVxyXG4gICAgICAgICAgICAgICAgICAgIC5sZXZlbE1ldGEubGV2ZWxUeXBlLCBsZXZlbEJ0bi5sZXZlbERhdGEueCArIGxldmVsQnRuLmJ0blNpemUgLyAzLjUsIGxldmVsQnRuLmxldmVsRGF0YS55ICsgbGV2ZWxCdG4uYnRuU2l6ZSAvIDEuMylcclxuICAgICAgICAgICAgICAgIDogbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBkcmF3KCkge1xyXG4gICAgICAgIGZvciAobGV0IGxldmVsQnRuIG9mIHRoaXMubGV2ZWxCdXR0b25zKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhd0xldmVsKGxldmVsQnRuLCB0aGlzLmdhbWVMZXZlbERhdGEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRvd25CdXR0b24obGV2ZWwpIHtcclxuICAgICAgICBpZiAobGV2ZWwgIT0gdGhpcy5sZXZlbHNTZWN0aW9uQ291bnQgKiAxMCAtIDEwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMubmV4dGJ0biwgdGhpcy5jYW52YXMud2lkdGggKiB0aGlzLnJpZ2h0QnRuWCwgdGhpcy5jYW52YXMuaGVpZ2h0IC8gdGhpcy5yaWdodEJ0blksIHRoaXMuY2FudmFzLmhlaWdodCAvIHRoaXMucmlnaHRCdG5TaXplLCB0aGlzLmNhbnZhcy5oZWlnaHQgLyB0aGlzLnJpZ2h0QnRuU2l6ZSk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnJpZ2h0QnRuU2l6ZSA+IDEwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJpZ2h0QnRuU2l6ZSA9IHRoaXMucmlnaHRCdG5TaXplIC0gMC4wMjU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5yaWdodEJ0blkgPSB0aGlzLnJpZ2h0QnRuU2l6ZSA+IDEwID8gMS4yOTkgOiAxLjM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnJpZ2h0QnRuU2l6ZSA9IDEwO1xyXG4gICAgICAgICAgICB0aGlzLnJpZ2h0QnRuWCA9IDAuNztcclxuICAgICAgICAgICAgdGhpcy5yaWdodEJ0blkgPSAxLjM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChsZXZlbCAhPSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuYmFja2J0biwgdGhpcy5jYW52YXMud2lkdGggLyB0aGlzLmxlZnRCdG5YLCB0aGlzLmNhbnZhcy5oZWlnaHQgLyB0aGlzLmxlZnRCdG5ZLCB0aGlzLmNhbnZhcy5oZWlnaHQgLyB0aGlzLmxlZnRCdG5TaXplLCB0aGlzLmNhbnZhcy5oZWlnaHQgLyB0aGlzLmxlZnRCdG5TaXplKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMubGVmdEJ0blNpemUgPiAxMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZWZ0QnRuU2l6ZSA9IHRoaXMubGVmdEJ0blNpemUgLSAwLjAyNTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmxlZnRCdG5ZID0gdGhpcy5sZWZ0QnRuU2l6ZSA+IDEwID8gMS4yOTkgOiAxLjM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmxlZnRCdG5TaXplID0gMTA7XHJcbiAgICAgICAgICAgIHRoaXMubGVmdEJ0blggPSAxMDtcclxuICAgICAgICAgICAgdGhpcy5sZWZ0QnRuWSA9IDEuMztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjaGVja1VubG9ja2VkTGV2ZWwoZ2FtZUxldmVsRGF0YSkge1xyXG4gICAgICAgIGlmIChnYW1lTGV2ZWxEYXRhLmxlbmd0aCAhPSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgZ2FtZSBvZiBnYW1lTGV2ZWxEYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy51bmxvY2tMZXZlbEluZGV4IDwgcGFyc2VJbnQoZ2FtZS5sZXZlbE51bWJlcikpIHtcclxuICAgICAgICAgICAgICAgICAgICBnYW1lLnN0YXJDb3VudCA+PSAyXHJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gKHRoaXMudW5sb2NrTGV2ZWxJbmRleCA9IHBhcnNlSW50KGdhbWUubGV2ZWxOdW1iZXIpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA6IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBzdGFydEdhbWUobGV2ZWxfbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5kaXNwb3NlKCk7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5zdG9wQWxsQXVkaW9zKCk7XHJcbiAgICAgICAgY29uc3QgZ2FtZVBsYXlEYXRhID0ge1xyXG4gICAgICAgICAgICBjdXJyZW50TGV2ZWxEYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAuLi50aGlzLmRhdGEubGV2ZWxzW2xldmVsX251bWJlcl0sXHJcbiAgICAgICAgICAgICAgICBsZXZlbE51bWJlcjogbGV2ZWxfbnVtYmVyLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZWxlY3RlZExldmVsTnVtYmVyOiBsZXZlbF9udW1iZXIsXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmxvZ1NlbGVjdGVkTGV2ZWxFdmVudCgpO1xyXG4gICAgICAgIHRoaXMuY2FsbEJhY2soZ2FtZVBsYXlEYXRhLCBcIkxldmVsU2VsZWN0aW9uXCIpO1xyXG4gICAgfVxyXG4gICAgbG9nU2VsZWN0ZWRMZXZlbEV2ZW50KCkge1xyXG4gICAgICAgIGNvbnN0IHNlbGVjdGVkTGV2ZWx0RGF0YSA9IHtcclxuICAgICAgICAgICAgY3JfdXNlcl9pZDogcHNldWRvSWQsXHJcbiAgICAgICAgICAgIGZ0bV9sYW5ndWFnZTogbGFuZyxcclxuICAgICAgICAgICAgcHJvZmlsZV9udW1iZXI6IDAsXHJcbiAgICAgICAgICAgIHZlcnNpb25fbnVtYmVyOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZlcnNpb24taW5mby1pZFwiKS5pbm5lckhUTUwsXHJcbiAgICAgICAgICAgIGpzb25fdmVyc2lvbl9udW1iZXI6ICEhdGhpcy5tYWpWZXJzaW9uICYmICEhdGhpcy5taW5WZXJzaW9uXHJcbiAgICAgICAgICAgICAgICA/IHRoaXMubWFqVmVyc2lvbi50b1N0cmluZygpICsgXCIuXCIgKyB0aGlzLm1pblZlcnNpb24udG9TdHJpbmcoKVxyXG4gICAgICAgICAgICAgICAgOiBcIlwiLFxyXG4gICAgICAgICAgICBsZXZlbF9zZWxlY3RlZDogdGhpcy5sZXZlbE51bWJlcixcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuZmlyZWJhc2VJbnRlZ3JhdGlvbi5zZW5kU2VsZWN0ZWRMZXZlbEV2ZW50KHNlbGVjdGVkTGV2ZWx0RGF0YSk7XHJcbiAgICB9XHJcbiAgICBkcmF3TGV2ZWxTZWxlY3Rpb24oKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW1hZ2VzTG9hZGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYmFja2dyb3VuZD8uZHJhdygpO1xyXG4gICAgICAgICAgICB0aGlzLmRyYXcoKTtcclxuICAgICAgICAgICAgdGhpcy5kb3duQnV0dG9uKHRoaXMubGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRpc3Bvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllci5zdG9wQWxsQXVkaW9zKCk7XHJcbiAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpXHJcbiAgICAgICAgICAgIC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMuaGFuZGxlTW91c2VEb3duLCBmYWxzZSk7XHJcbiAgICAgICAgLy8gd2hlbiBhcHAgZ29lcyBiYWNrZ3JvdW5kICMyXHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgdGhpcy5wYXVzZVBsYXlBdWRpb3MsIGZhbHNlKTtcclxuICAgICAgICAvLy8gc3dpcGUgbGlzdGVuZXIgIzNcclxuICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIilcclxuICAgICAgICAgICAgLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsIHRoaXMuaGFuZGxlVG91Y2hTdGFydCwgZmFsc2UpO1xyXG4gICAgICAgIC8vICM0XHJcbiAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgLmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpXHJcbiAgICAgICAgICAgIC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsIHRoaXMuaGFuZGxlVG91Y2hNb3ZlLCBmYWxzZSk7XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgbG9hZEltYWdlcywgQ0xJQ0ssIGlzRG9jdW1lbnRWaXNpYmxlIH0gZnJvbSBcIkBjb21tb25cIjtcclxuaW1wb3J0IHsgQXVkaW9QbGF5ZXIsIE1vbnN0ZXIgfSBmcm9tIFwiQGNvbXBvbmVudHNcIjtcclxuaW1wb3J0IHsgQ2xvc2VCdXR0b24sIE5leHRCdXR0b24sIFJldHJ5QnV0dG9uIH0gZnJvbSBcIkBidXR0b25zXCI7XHJcbmltcG9ydCB7IEJBQ0tHUk9VTkRfQVNTRVRfTElTVCwgY3JlYXRlQmFja2dyb3VuZCwgbG9hZER5bmFtaWNCZ0Fzc2V0cywgfSBmcm9tIFwiQGNvbXBvc2l0aW9uc1wiO1xyXG5pbXBvcnQgeyBBVURJT19JTlRSTywgQVVESU9fTEVWRUxfTE9TRSwgQVVESU9fTEVWRUxfV0lOLCBERUZBVUxUX0JBQ0tHUk9VTkRfMSwgUElOX1NUQVJfMSwgUElOX1NUQVJfMiwgUElOX1NUQVJfMywgV0lOX0JHLCB9IGZyb20gXCJAY29uc3RhbnRzXCI7XHJcbmV4cG9ydCBjbGFzcyBMZXZlbEVuZFNjZW5lIHtcclxuICAgIGNhbnZhcztcclxuICAgIGhlaWdodDtcclxuICAgIHdpZHRoO1xyXG4gICAgaW1hZ2VzO1xyXG4gICAgbG9hZGVkSW1hZ2VzO1xyXG4gICAgaW1hZ2VzTG9hZGVkO1xyXG4gICAgaWQ7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgbW9uc3RlcjtcclxuICAgIGNsb3NlQnV0dG9uO1xyXG4gICAgcmV0cnlCdXR0b247XHJcbiAgICBuZXh0QnV0dG9uO1xyXG4gICAgc3RhckNvdW50O1xyXG4gICAgY3VycmVudExldmVsO1xyXG4gICAgc3dpdGNoVG9HYW1lcGxheUNCO1xyXG4gICAgc3dpdGNoVG9MZXZlbFNlbGVjdGlvbkNCO1xyXG4gICAgZGF0YTtcclxuICAgIGJhY2tncm91bmQ7XHJcbiAgICBhdWRpb1BsYXllcjtcclxuICAgIHRpbWVvdXRzO1xyXG4gICAgc3RhckRyYXduQ291bnQ7XHJcbiAgICBpc0xhc3RMZXZlbDtcclxuICAgIGNvbnN0cnVjdG9yKGNhbnZhcywgaGVpZ2h0LCB3aWR0aCwgY29udGV4dCwgc3RhckNvdW50LCBjdXJyZW50TGV2ZWwsIHN3aXRjaFRvR2FtZXBsYXlDQiwgc3dpdGNoVG9MZXZlbFNlbGVjdGlvbkNCLCBkYXRhLCBtb25zdGVyUGhhc2VOdW1iZXIpIHtcclxuICAgICAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcclxuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcclxuICAgICAgICB0aGlzLm1vbnN0ZXIgPSBuZXcgTW9uc3Rlcih0aGlzLmNhbnZhcywgbW9uc3RlclBoYXNlTnVtYmVyLCB0aGlzLnN3aXRjaFRvUmVhY3Rpb25BbmltYXRpb24pO1xyXG4gICAgICAgIHRoaXMuc3dpdGNoVG9HYW1lcGxheUNCID0gc3dpdGNoVG9HYW1lcGxheUNCO1xyXG4gICAgICAgIHRoaXMuc3dpdGNoVG9MZXZlbFNlbGVjdGlvbkNCID0gc3dpdGNoVG9MZXZlbFNlbGVjdGlvbkNCO1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy5zdGFyRHJhd25Db3VudCA9IDA7XHJcbiAgICAgICAgdGhpcy5jbG9zZUJ1dHRvbiA9IG5ldyBDbG9zZUJ1dHRvbihjb250ZXh0LCBjYW52YXMsIHRoaXMud2lkdGggKiAwLjIgLSAodGhpcy53aWR0aCAqIDAuMTkpIC8gMiwgdGhpcy5oZWlnaHQgLyAxLjI1KTtcclxuICAgICAgICB0aGlzLnJldHJ5QnV0dG9uID0gbmV3IFJldHJ5QnV0dG9uKHRoaXMuY29udGV4dCwgdGhpcy5jYW52YXMsIHRoaXMud2lkdGggKiAwLjUgLSAodGhpcy53aWR0aCAqIDAuMTkpIC8gMiwgdGhpcy5oZWlnaHQgLyAxLjI1KTtcclxuICAgICAgICB0aGlzLm5leHRCdXR0b24gPSBuZXcgTmV4dEJ1dHRvbih0aGlzLmNvbnRleHQsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCB0aGlzLndpZHRoICogMC44IC0gKHRoaXMud2lkdGggKiAwLjE5KSAvIDIsIHRoaXMuaGVpZ2h0IC8gMS4yNSk7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllciA9IG5ldyBBdWRpb1BsYXllcigpO1xyXG4gICAgICAgIHRoaXMuc3RhckNvdW50ID0gc3RhckNvdW50O1xyXG4gICAgICAgIHRoaXMuY3VycmVudExldmVsID0gY3VycmVudExldmVsO1xyXG4gICAgICAgIHRoaXMuaW1hZ2VzID0ge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kSW1nOiBXSU5fQkcsXHJcbiAgICAgICAgICAgIHN0YXIxSW1nOiBQSU5fU1RBUl8xLFxyXG4gICAgICAgICAgICBzdGFyMkltZzogUElOX1NUQVJfMixcclxuICAgICAgICAgICAgc3RhcjNJbWc6IFBJTl9TVEFSXzMsXHJcbiAgICAgICAgICAgIHdpbkJhY2tncm91bmRJbWc6IERFRkFVTFRfQkFDS0dST1VORF8xLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgbG9hZEltYWdlcyh0aGlzLmltYWdlcywgKGltYWdlcykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRlZEltYWdlcyA9IE9iamVjdC5hc3NpZ24oe30sIGltYWdlcyk7XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5zdGFyQW5pbWF0aW9uKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCk7XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllciA9IG5ldyBBdWRpb1BsYXllcigpO1xyXG4gICAgICAgIHRoaXMuc2V0dXBCZygpO1xyXG4gICAgICAgIHRoaXMuaXNMYXN0TGV2ZWwgPVxyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRMZXZlbCAhPT1cclxuICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5sZXZlbHNbdGhpcy5kYXRhLmxldmVscy5sZW5ndGggLSAxXS5sZXZlbE1ldGEubGV2ZWxOdW1iZXIgJiZcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhckNvdW50ID49IDI7XHJcbiAgICB9XHJcbiAgICBzZXR1cEJnID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHsgQkdfR1JPVVBfSU1HUywgZHJhdyB9ID0gbG9hZER5bmFtaWNCZ0Fzc2V0cyh0aGlzLmN1cnJlbnRMZXZlbCwgQkFDS0dST1VORF9BU1NFVF9MSVNUKTtcclxuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBhd2FpdCBjcmVhdGVCYWNrZ3JvdW5kKHRoaXMuY29udGV4dCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQsIEJHX0dST1VQX0lNR1MsIGRyYXcpO1xyXG4gICAgfTtcclxuICAgIHN3aXRjaFRvUmVhY3Rpb25BbmltYXRpb24gPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHRoaXMuc3RhckNvdW50IDw9IDEpIHtcclxuICAgICAgICAgICAgaWYgKGlzRG9jdW1lbnRWaXNpYmxlKCkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheUF1ZGlvKEFVRElPX0xFVkVMX0xPU0UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMubW9uc3Rlci5jaGFuZ2VUb1NwaXRBbmltYXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChpc0RvY3VtZW50VmlzaWJsZSgpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlBdWRpbyhBVURJT19MRVZFTF9XSU4pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5QXVkaW8oQVVESU9fSU5UUk8pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMubW9uc3Rlci5jaGFuZ2VUb0VhdEFuaW1hdGlvbigpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBkcmF3KGRlbHRhVGltZSkge1xyXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZD8uZHJhdygpO1xyXG4gICAgICAgIGlmICh0aGlzLmltYWdlc0xvYWRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmJhY2tncm91bmRJbWcsIDAsIDAsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICsgdGhpcy5oZWlnaHQgKiAwLjEyKTtcclxuICAgICAgICAgICAgdGhpcy5kcmF3U3RhcnMoKTtcclxuICAgICAgICAgICAgdGhpcy5tb25zdGVyLnVwZGF0ZShkZWx0YVRpbWUpO1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlQnV0dG9uLmRyYXcoKTtcclxuICAgICAgICAgICAgdGhpcy5yZXRyeUJ1dHRvbi5kcmF3KCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzTGFzdExldmVsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5leHRCdXR0b24uZHJhdygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc3RhckFuaW1hdGlvbigpIHtcclxuICAgICAgICBjb25zdCBhbmltYXRpb25zID0gW1xyXG4gICAgICAgICAgICB7IGRlbGF5OiA1MDAsIGNvdW50OiAxIH0sXHJcbiAgICAgICAgICAgIHsgZGVsYXk6IDEwMDAsIGNvdW50OiAyIH0sXHJcbiAgICAgICAgICAgIHsgZGVsYXk6IDE1MDAsIGNvdW50OiAzIH0sXHJcbiAgICAgICAgXTtcclxuICAgICAgICB0aGlzLnRpbWVvdXRzID0gYW5pbWF0aW9ucy5tYXAoKGFuaW1hdGlvbikgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJEcmF3bkNvdW50ID0gYW5pbWF0aW9uLmNvdW50O1xyXG4gICAgICAgICAgICB9LCBhbmltYXRpb24uZGVsYXkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZHJhd1N0YXJzKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnN0YXJDb3VudCA+PSAxICYmIHRoaXMuc3RhckRyYXduQ291bnQgPj0gMSkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLnN0YXIxSW1nLCB0aGlzLndpZHRoICogMC4yIC0gKHRoaXMud2lkdGggKiAwLjE5KSAvIDIsIHRoaXMuaGVpZ2h0ICogMC4yLCB0aGlzLndpZHRoICogMC4xOSwgdGhpcy53aWR0aCAqIDAuMTkpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zdGFyQ291bnQgPD0gMyAmJlxyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGFyQ291bnQgPiAxICYmXHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJEcmF3bkNvdW50IDw9IDMgJiZcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhckRyYXduQ291bnQgPiAxKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLnN0YXIySW1nLCB0aGlzLndpZHRoICogMC41IC0gKHRoaXMud2lkdGggKiAwLjE5KSAvIDIsIHRoaXMuaGVpZ2h0ICogMC4xNSwgdGhpcy53aWR0aCAqIDAuMTksIHRoaXMud2lkdGggKiAwLjE5KTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXJDb3VudCA+PSAzICYmIHRoaXMuc3RhckRyYXduQ291bnQgPj0gMykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuc3RhcjNJbWcsIHRoaXMud2lkdGggKiAwLjgyIC0gKHRoaXMud2lkdGggKiAwLjE5KSAvIDIsIHRoaXMuaGVpZ2h0ICogMC4yLCB0aGlzLndpZHRoICogMC4xOSwgdGhpcy53aWR0aCAqIDAuMTkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgYWRkRXZlbnRMaXN0ZW5lcigpIHtcclxuICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIilcclxuICAgICAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoQ0xJQ0ssIHRoaXMuaGFuZGxlTW91c2VDbGljaywgZmFsc2UpO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIHRoaXMucGF1c2VBdWRpb3MsIGZhbHNlKTtcclxuICAgIH1cclxuICAgIGhhbmRsZU1vdXNlQ2xpY2sgPSAoZXZlbnQpID0+IHtcclxuICAgICAgICBjb25zdCBzZWxmRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIHZhciByZWN0ID0gc2VsZkVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XHJcbiAgICAgICAgY29uc3QgeSA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcclxuICAgICAgICBpZiAodGhpcy5jbG9zZUJ1dHRvbi5vbkNsaWNrKHgsIHkpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheUJ1dHRvbkNsaWNrU291bmQoKTtcclxuICAgICAgICAgICAgdGhpcy5zd2l0Y2hUb0xldmVsU2VsZWN0aW9uQ0IoXCJMZXZlbEVuZFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMucmV0cnlCdXR0b24ub25DbGljayh4LCB5KSkge1xyXG4gICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlCdXR0b25DbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgIGxldCBnYW1lUGxheURhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50TGV2ZWxEYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLi4udGhpcy5kYXRhLmxldmVsc1t0aGlzLmN1cnJlbnRMZXZlbF0sXHJcbiAgICAgICAgICAgICAgICAgICAgbGV2ZWxOdW1iZXI6IHRoaXMuY3VycmVudExldmVsLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHNlbGVjdGVkTGV2ZWxOdW1iZXI6IHRoaXMuY3VycmVudExldmVsLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAvLyBwYXNzIHNhbWUgZGF0YSBhcyBsZXZlbCBpcyBzYW1lXHJcbiAgICAgICAgICAgIHRoaXMuc3dpdGNoVG9HYW1lcGxheUNCKGdhbWVQbGF5RGF0YSwgXCJMZXZlbEVuZFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuaXNMYXN0TGV2ZWwgJiZcclxuICAgICAgICAgICAgdGhpcy5uZXh0QnV0dG9uLm9uQ2xpY2soeCwgeSkpIHtcclxuICAgICAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5QnV0dG9uQ2xpY2tTb3VuZCgpO1xyXG4gICAgICAgICAgICBsZXQgbmV4dCA9IE51bWJlcih0aGlzLmN1cnJlbnRMZXZlbCkgKyAxO1xyXG4gICAgICAgICAgICBsZXQgZ2FtZVBsYXlEYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudExldmVsRGF0YTogeyAuLi50aGlzLmRhdGEubGV2ZWxzW25leHRdLCBsZXZlbE51bWJlcjogbmV4dCB9LFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRMZXZlbE51bWJlcjogbmV4dCxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdGhpcy5zd2l0Y2hUb0dhbWVwbGF5Q0IoZ2FtZVBsYXlEYXRhLCBcIkxldmVsRW5kXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBwYXVzZUF1ZGlvcyA9ICgpID0+IHtcclxuICAgICAgICBpZiAoaXNEb2N1bWVudFZpc2libGUoKSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zdGFyQ291bnQgPj0gMikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5QXVkaW8oQVVESU9fSU5UUk8pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnN0b3BBbGxBdWRpb3MoKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgZGlzcG9zZSA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLm1vbnN0ZXIuZGlzcG9zZSgpO1xyXG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIuc3RvcEFsbEF1ZGlvcygpO1xyXG4gICAgICAgIHRoaXMudGltZW91dHMuZm9yRWFjaCgodGltZW91dCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVvdXQpKTtcclxuICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIilcclxuICAgICAgICAgICAgLnJlbW92ZUV2ZW50TGlzdGVuZXIoQ0xJQ0ssIHRoaXMuaGFuZGxlTW91c2VDbGljaywgZmFsc2UpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIHRoaXMucGF1c2VBdWRpb3MsIGZhbHNlKTtcclxuICAgIH07XHJcbn1cclxuIiwiaW1wb3J0IHsgbG9hZEltYWdlcyB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IENMT1VEXzYsIENMT1VEXzcsIENMT1VEXzggfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5leHBvcnQgY2xhc3MgTG9hZGluZ1NjZW5lIHtcclxuICAgIGNhbnZhcztcclxuICAgIGhlaWdodDtcclxuICAgIHdpZHRoO1xyXG4gICAgY29udGV4dDtcclxuICAgIGltYWdlcztcclxuICAgIGxvYWRlZEltYWdlcztcclxuICAgIGltYWdlc0xvYWRlZDtcclxuICAgIGNsb3VkWFBvc2l0aW9uID0gLTUwMDtcclxuICAgIHN0b3BDbG91ZE1vdmluZyA9IGZhbHNlO1xyXG4gICAgY2xvdWRNb3ZpbmdUaW1lT3V0ID0gMDtcclxuICAgIHJlbW92ZUxvYWRpbmc7XHJcbiAgICBjb25zdHJ1Y3Rvcih3aWR0aCwgaGVpZ2h0LCByZW1vdmVMb2FkaW5nKSB7XHJcbiAgICAgICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvYWRpbmdcIik7XHJcbiAgICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMuY2FudmFzLndpZHRoID0gd2lkdGg7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIHRoaXMucmVtb3ZlTG9hZGluZyA9IHJlbW92ZUxvYWRpbmc7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG4gICAgICAgIHRoaXMuaW1hZ2VzID0ge1xyXG4gICAgICAgICAgICBjbG91ZDY6IENMT1VEXzYsXHJcbiAgICAgICAgICAgIGNsb3VkNzogQ0xPVURfNyxcclxuICAgICAgICAgICAgY2xvdWQ4OiBDTE9VRF84LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgbG9hZEltYWdlcyh0aGlzLmltYWdlcywgKGltYWdlcykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRlZEltYWdlcyA9IE9iamVjdC5hc3NpZ24oe30sIGltYWdlcyk7XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGRyYXcoZGVsdGFUaW1lKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LmNsZWFyUmVjdCgwLCAwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgICAgICAgdGhpcy5jbG91ZFhQb3NpdGlvbiArPSBkZWx0YVRpbWUgKiAwLjc1O1xyXG4gICAgICAgIHRoaXMuY2xvdWRNb3ZpbmdUaW1lT3V0ICs9IGRlbHRhVGltZTtcclxuICAgICAgICBpZiAodGhpcy5jbG91ZE1vdmluZ1RpbWVPdXQgPiAyOTgzKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlTG9hZGluZygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5jbG91ZFhQb3NpdGlvbiA+PSB0aGlzLndpZHRoICogMC41ICYmICF0aGlzLnN0b3BDbG91ZE1vdmluZykge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3VkTW92aW5nVGltZU91dCArPSBkZWx0YVRpbWU7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNsb3VkTW92aW5nVGltZU91dCA+IDIwMDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RvcENsb3VkTW92aW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvdWRYUG9zaXRpb24gPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmltYWdlc0xvYWRlZCkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuc3RvcENsb3VkTW92aW5nKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkNiwgdGhpcy5jbG91ZFhQb3NpdGlvbiA+PSAwID8gMCA6IHRoaXMuY2xvdWRYUG9zaXRpb24sIHRoaXMuaGVpZ2h0ICogMC42LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCAqIDAuNSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkNiwgdGhpcy5jbG91ZFhQb3NpdGlvbiA+PSB0aGlzLndpZHRoICogMC40XHJcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLndpZHRoICogMC40XHJcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzLmNsb3VkWFBvc2l0aW9uLCB0aGlzLmhlaWdodCAqIDAuMTUsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICogMC41KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuY2xvdWQ3LCB0aGlzLmNsb3VkWFBvc2l0aW9uID49IDAgPyAwIDogdGhpcy5jbG91ZFhQb3NpdGlvbiwgdGhpcy5oZWlnaHQgKiAwLjE1LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCAqIDAuNSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkOCwgdGhpcy5jbG91ZFhQb3NpdGlvbiA+PSAtdGhpcy53aWR0aCAqIDAuNFxyXG4gICAgICAgICAgICAgICAgICAgID8gLXRoaXMud2lkdGggKiAwLjRcclxuICAgICAgICAgICAgICAgICAgICA6IHRoaXMuY2xvdWRYUG9zaXRpb24sIC10aGlzLmhlaWdodCAqIDAuMTUsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICogMC41KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuY2xvdWQ4LCB0aGlzLmNsb3VkWFBvc2l0aW9uID49IHRoaXMud2lkdGggKiAwLjRcclxuICAgICAgICAgICAgICAgICAgICA/IHRoaXMud2lkdGggKiAwLjRcclxuICAgICAgICAgICAgICAgICAgICA6IHRoaXMuY2xvdWRYUG9zaXRpb24sIC10aGlzLmhlaWdodCAqIDAuMTUsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICogMC41KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuY2xvdWQ4LCB0aGlzLmNsb3VkWFBvc2l0aW9uID49IHRoaXMud2lkdGggKiAwLjA1XHJcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLndpZHRoICogMC4wNVxyXG4gICAgICAgICAgICAgICAgICAgIDogdGhpcy5jbG91ZFhQb3NpdGlvbiwgLXRoaXMuaGVpZ2h0ICogMC4yLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCAqIDAuNSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkOCwgdGhpcy5jbG91ZFhQb3NpdGlvbiA+PSAtdGhpcy53aWR0aCAqIDAuNlxyXG4gICAgICAgICAgICAgICAgICAgID8gLXRoaXMud2lkdGggKiAwLjZcclxuICAgICAgICAgICAgICAgICAgICA6IHRoaXMuY2xvdWRYUG9zaXRpb24sIHRoaXMuaGVpZ2h0ICogMC4zLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCAqIDAuNSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkNywgdGhpcy5jbG91ZFhQb3NpdGlvbiA+PSB0aGlzLndpZHRoICogMC41XHJcbiAgICAgICAgICAgICAgICAgICAgPyB0aGlzLndpZHRoICogMC41XHJcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzLmNsb3VkWFBvc2l0aW9uLCB0aGlzLmhlaWdodCAqIDAuNCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQgKiAwLjQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxvYWRlZEltYWdlcy5jbG91ZDcsIHRoaXMuY2xvdWRYUG9zaXRpb24gPj0gLXRoaXMud2lkdGggKiAwLjRcclxuICAgICAgICAgICAgICAgICAgICA/IC10aGlzLndpZHRoICogMC40XHJcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzLmNsb3VkWFBvc2l0aW9uLCB0aGlzLmhlaWdodCAqIDAuNywgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQgKiAwLjUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxvYWRlZEltYWdlcy5jbG91ZDgsIHRoaXMuY2xvdWRYUG9zaXRpb24gPj0gdGhpcy53aWR0aCAqIDAuNFxyXG4gICAgICAgICAgICAgICAgICAgID8gdGhpcy53aWR0aCAqIDAuNFxyXG4gICAgICAgICAgICAgICAgICAgIDogdGhpcy5jbG91ZFhQb3NpdGlvbiwgdGhpcy5oZWlnaHQgKiAwLjcsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICogMC41KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuY2xvdWQ2LCB0aGlzLmNsb3VkWFBvc2l0aW9uID49IC10aGlzLndpZHRoICogMC4yXHJcbiAgICAgICAgICAgICAgICAgICAgPyAtdGhpcy53aWR0aCAqIDAuMlxyXG4gICAgICAgICAgICAgICAgICAgIDogdGhpcy5jbG91ZFhQb3NpdGlvbiwgdGhpcy5oZWlnaHQgKiAwLjIsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICogMC41KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuY2xvdWQ2LCAwICsgdGhpcy5jbG91ZFhQb3NpdGlvbiwgdGhpcy5oZWlnaHQgKiAwLjYsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICogMC41KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuY2xvdWQ2LCB0aGlzLndpZHRoICogMC40ICsgdGhpcy5jbG91ZFhQb3NpdGlvbiwgdGhpcy5oZWlnaHQgKiAwLjE1LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCAqIDAuNSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkNywgMCArIHRoaXMuY2xvdWRYUG9zaXRpb24sIHRoaXMuaGVpZ2h0ICogMC4xNSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQgKiAwLjUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxvYWRlZEltYWdlcy5jbG91ZDgsIC10aGlzLndpZHRoICogMC40ICsgdGhpcy5jbG91ZFhQb3NpdGlvbiwgLXRoaXMuaGVpZ2h0ICogMC4xNSwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQgKiAwLjUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxvYWRlZEltYWdlcy5jbG91ZDgsIHRoaXMud2lkdGggKiAwLjQgKyB0aGlzLmNsb3VkWFBvc2l0aW9uLCAtdGhpcy5oZWlnaHQgKiAwLjE1LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCAqIDAuNSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkOCwgdGhpcy53aWR0aCAqIDAuMDUgKyB0aGlzLmNsb3VkWFBvc2l0aW9uLCAtdGhpcy5oZWlnaHQgKiAwLjIsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICogMC41KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuY2xvdWQ4LCAtdGhpcy53aWR0aCAqIDAuNiArIHRoaXMuY2xvdWRYUG9zaXRpb24sIHRoaXMuaGVpZ2h0ICogMC4zLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCAqIDAuNSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkNywgdGhpcy53aWR0aCAqIDAuNSArIHRoaXMuY2xvdWRYUG9zaXRpb24sIHRoaXMuaGVpZ2h0ICogMC40LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCAqIDAuNCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmNsb3VkNywgLXRoaXMud2lkdGggKiAwLjQgKyB0aGlzLmNsb3VkWFBvc2l0aW9uLCB0aGlzLmhlaWdodCAqIDAuNywgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQgKiAwLjUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxvYWRlZEltYWdlcy5jbG91ZDgsIHRoaXMud2lkdGggKiAwLjQgKyB0aGlzLmNsb3VkWFBvc2l0aW9uLCB0aGlzLmhlaWdodCAqIDAuNywgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQgKiAwLjUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmxvYWRlZEltYWdlcy5jbG91ZDYsIC10aGlzLndpZHRoICogMC4yICsgdGhpcy5jbG91ZFhQb3NpdGlvbiwgdGhpcy5oZWlnaHQgKiAwLjIsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0ICogMC41KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGluaXRDbG91ZCA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLmNsb3VkWFBvc2l0aW9uID0gLTUwMDtcclxuICAgICAgICB0aGlzLnN0b3BDbG91ZE1vdmluZyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuY2xvdWRNb3ZpbmdUaW1lT3V0ID0gMDtcclxuICAgIH07XHJcbn1cclxuIiwiaW1wb3J0IHsgTW9uc3RlciwgQXVkaW9QbGF5ZXIgfSBmcm9tIFwiQGNvbXBvbmVudHNcIjtcclxuaW1wb3J0IHsgUGxheUJ1dHRvbiB9IGZyb20gXCJAYnV0dG9uc1wiO1xyXG5pbXBvcnQgeyB0b2dnbGVEZWJ1Z01vZGUsIFV0aWxzLCB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IEZpcmViYXNlSW50ZWdyYXRpb24gfSBmcm9tIFwiLi4vRmlyZWJhc2UvZmlyZWJhc2UtaW50ZWdyYXRpb25cIjtcclxuaW1wb3J0IHsgY3JlYXRlQmFja2dyb3VuZCwgZGVmYXVsdEJnRHJhd2luZyB9IGZyb20gXCJAY29tcG9zaXRpb25zXCI7XHJcbmltcG9ydCB7IEZpcmViYXNlVXNlckNsaWNrZWQsIFBXQUluc3RhbGxTdGF0dXMsIERFRkFVTFRfQkdfR1JPVVBfSU1HUywgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5leHBvcnQgY2xhc3MgU3RhcnRTY2VuZSB7XHJcbiAgICBjYW52YXM7XHJcbiAgICBkYXRhO1xyXG4gICAgd2lkdGg7XHJcbiAgICBoZWlnaHQ7XHJcbiAgICBtb25zdGVyO1xyXG4gICAgcGlja2VkU3RvbmU7XHJcbiAgICBwd2Ffc3RhdHVzO1xyXG4gICAgZmlyZWJhc2VfYW5hbHl0aWNzO1xyXG4gICAgaWQ7XHJcbiAgICBjYW5hdnNFbGVtZW50O1xyXG4gICAgY29udGV4dDtcclxuICAgIGJ1dHRvbkNvbnRleHQ7XHJcbiAgICBwbGF5QnV0dG9uO1xyXG4gICAgaW1hZ2VzO1xyXG4gICAgbG9hZGVkSW1hZ2VzO1xyXG4gICAgaW1hZ2VzTG9hZGVkID0gZmFsc2U7XHJcbiAgICBoYW5kbGVyO1xyXG4gICAgc3RhdGljIFNjZW5lTmFtZTtcclxuICAgIHN3aXRjaFNjZW5lVG9MZXZlbFNlbGVjdGlvbjtcclxuICAgIGJhY2tncm91bmQ7XHJcbiAgICBhdWRpb1BsYXllcjtcclxuICAgIHRvZ2dsZUJ0bjtcclxuICAgIHB3YV9pbnN0YWxsX3N0YXR1cztcclxuICAgIHRpdGxlVGV4dEVsZW1lbnQ7XHJcbiAgICBjb25zdHJ1Y3RvcihjYW52YXMsIGRhdGEsIHN3aXRjaFNjZW5lVG9MZXZlbFNlbGVjdGlvbikge1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IGNhbnZhcy53aWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5jYW5hdnNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gdGhpcy5jYW5hdnNFbGVtZW50LmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgICAgICB0aGlzLnRvZ2dsZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9nZ2xlLWJ0blwiKTtcclxuICAgICAgICB0aGlzLm1vbnN0ZXIgPSBuZXcgTW9uc3Rlcih0aGlzLmNhbnZhcywgNCk7XHJcbiAgICAgICAgdGhpcy5zd2l0Y2hTY2VuZVRvTGV2ZWxTZWxlY3Rpb24gPSBzd2l0Y2hTY2VuZVRvTGV2ZWxTZWxlY3Rpb247XHJcbiAgICAgICAgdGhpcy5hdWRpb1BsYXllciA9IG5ldyBBdWRpb1BsYXllcigpO1xyXG4gICAgICAgIHRoaXMucHdhX3N0YXR1cyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFBXQUluc3RhbGxTdGF0dXMpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIHRoaXMuZGV2VG9nZ2xlKCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVQbGF5QnV0dG9uKCk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJiZWZvcmVpbnN0YWxscHJvbXB0XCIsIHRoaXMuaGFuZGxlckluc3RhbGxQcm9tcHQpO1xyXG4gICAgICAgIHRoaXMuc2V0dXBCZygpO1xyXG4gICAgICAgIHRoaXMudGl0bGVUZXh0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGl0bGVcIik7XHJcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUdhbWVUaXRsZSgpO1xyXG4gICAgfVxyXG4gICAgc2V0dXBCZyA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBhd2FpdCBjcmVhdGVCYWNrZ3JvdW5kKHRoaXMuY29udGV4dCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQsIERFRkFVTFRfQkdfR1JPVVBfSU1HUywgZGVmYXVsdEJnRHJhd2luZyk7XHJcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kPy5kcmF3KCk7XHJcbiAgICB9O1xyXG4gICAgZGV2VG9nZ2xlID0gKCkgPT4ge1xyXG4gICAgICAgIHRoaXMudG9nZ2xlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0b2dnbGVEZWJ1Z01vZGUodGhpcy50b2dnbGVCdG4pKTtcclxuICAgIH07XHJcbiAgICBnZW5lcmF0ZUdhbWVUaXRsZSA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLnRpdGxlVGV4dEVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLmRhdGEudGl0bGU7XHJcbiAgICB9O1xyXG4gICAgYW5pbWF0aW9uID0gKGRlbHRhVGltZSkgPT4ge1xyXG4gICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xyXG4gICAgICAgIHRoaXMubW9uc3Rlci51cGRhdGUoZGVsdGFUaW1lKTtcclxuICAgICAgICB0aGlzLnBsYXlCdXR0b24uZHJhdygpO1xyXG4gICAgfTtcclxuICAgIGNyZWF0ZVBsYXlCdXR0b24oKSB7XHJcbiAgICAgICAgdGhpcy5wbGF5QnV0dG9uID0gbmV3IFBsYXlCdXR0b24odGhpcy5jb250ZXh0LCB0aGlzLmNhbnZhcywgdGhpcy5jYW52YXMud2lkdGggKiAwLjM1LCB0aGlzLmNhbnZhcy5oZWlnaHQgLyA3KTtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwic2VsZWN0c3RhcnRcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5oYW5kbGVNb3VzZUNsaWNrLCBmYWxzZSk7XHJcbiAgICB9XHJcbiAgICBoYW5kbGVNb3VzZUNsaWNrID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIGNvbnN0IHNlbGZFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB2YXIgcmVjdCA9IHNlbGZFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgIGNvbnN0IHggPSBldmVudC5jbGllbnRYIC0gcmVjdC5sZWZ0O1xyXG4gICAgICAgIGNvbnN0IHkgPSBldmVudC5jbGllbnRZIC0gcmVjdC50b3A7XHJcbiAgICAgICAgY29uc3QgeyBleGNsdWRlWCwgZXhjbHVkZVkgfSA9IFV0aWxzLmdldEV4Y2x1ZGVkQ29vcmRpbmF0ZXMoc2VsZkVsZW1lbnQsIDE1KTtcclxuICAgICAgICBpZiAoISh4IDwgZXhjbHVkZVggJiYgeSA8IGV4Y2x1ZGVZKSkge1xyXG4gICAgICAgICAgICBGaXJlYmFzZUludGVncmF0aW9uLmdldEluc3RhbmNlKCkuc2VuZFVzZXJDbGlja2VkT25QbGF5RXZlbnQoKTtcclxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICBmYnEoXCJ0cmFja0N1c3RvbVwiLCBGaXJlYmFzZVVzZXJDbGlja2VkLCB7XHJcbiAgICAgICAgICAgICAgICBldmVudDogXCJjbGlja1wiLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy50b2dnbGVCdG4uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXlCdXR0b25DbGlja1NvdW5kKCk7XHJcbiAgICAgICAgICAgIHNlbGYuc3dpdGNoU2NlbmVUb0xldmVsU2VsZWN0aW9uKFwiU3RhcnRTY2VuZVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgZGlzcG9zZSgpIHtcclxuICAgICAgICB0aGlzLm1vbnN0ZXIuZGlzcG9zZSgpO1xyXG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIuc3RvcEFsbEF1ZGlvcygpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5oYW5kbGVNb3VzZUNsaWNrLCBmYWxzZSk7XHJcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJiZWZvcmVpbnN0YWxscHJvbXB0XCIsIHRoaXMuaGFuZGxlckluc3RhbGxQcm9tcHQsIGZhbHNlKTtcclxuICAgIH1cclxuICAgIGhhbmRsZXJJbnN0YWxsUHJvbXB0ID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aGlzLnB3YV9pbnN0YWxsX3N0YXR1cyA9IGV2ZW50O1xyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFBXQUluc3RhbGxTdGF0dXMsIFwiZmFsc2VcIik7XHJcbiAgICB9O1xyXG59XHJcbiIsImltcG9ydCB7IEFTU0VUU19QQVRIX0ZFTkNFLCBBU1NFVFNfUEFUSF9ISUxMLCBBU1NFVFNfUEFUSF9NT05TVEVSX0lETEUsIEFTU0VUU19QQVRIX1RPVEVNLCBERUZBVUxUX0JBQ0tHUk9VTkRfMSwgRmlyZWJhc2VVc2VyQ2xpY2tlZCwgUFdBSW5zdGFsbFN0YXR1cywgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBMZXZlbEluZGljYXRvcnMsIFByb21wdFRleHQsIFRpbWVyVGlja2luZywgU3RvbmVIYW5kbGVyLCBNb25zdGVyLCB9IGZyb20gXCJAY29tcG9uZW50c1wiO1xyXG5pbXBvcnQgeyBQbGF5QnV0dG9uIH0gZnJvbSBcIkBidXR0b25zXCI7XHJcbmltcG9ydCB7IGxvYWRJbWFnZXMsIHRvZ2dsZURlYnVnTW9kZSB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmNvbnN0IHRvZ2dsZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9nZ2xlLWJ0blwiKTtcclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJiZWZvcmVpbnN0YWxscHJvbXB0XCIsIChlKSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShQV0FJbnN0YWxsU3RhdHVzLCBcImZhbHNlXCIpO1xyXG59KTtcclxuZXhwb3J0IGNsYXNzIFRlc3RHYW1lcGxheVNjZW5lIHtcclxuICAgIGNhbnZhcztcclxuICAgIGRhdGE7XHJcbiAgICB3aWR0aDtcclxuICAgIGhlaWdodDtcclxuICAgIG1vbnN0ZXI7XHJcbiAgICBsZXZlbEluZGljYXRvcjtcclxuICAgIHByb21wdFRleHQ7XHJcbiAgICB0aW1lclRpY2tpbmc7XHJcbiAgICBzdG9uZUhhbmRsZXI7XHJcbiAgICBwaWNrZWRTdG9uZTtcclxuICAgIHB3YV9zdGF0dXM7XHJcbiAgICBmaXJlYmFzZV9hbmFseXRpY3M7XHJcbiAgICBpZDtcclxuICAgIGNhbmF2c0VsZW1lbnQ7XHJcbiAgICBjb250ZXh0O1xyXG4gICAgYnV0dG9uQ29udGV4dDtcclxuICAgIG91dGNvbWU7XHJcbiAgICBwbGF5QnV0dG9uO1xyXG4gICAgbGV2ZWxTZWxlY3Rpb25TY2VuZTtcclxuICAgIGltYWdlcztcclxuICAgIGxvYWRlZEltYWdlcztcclxuICAgIGltYWdlc0xvYWRlZCA9IGZhbHNlO1xyXG4gICAgaGFuZGxlcjtcclxuICAgIHN0YXRpYyBTY2VuZU5hbWU7XHJcbiAgICBzd2l0Y2hTY2VuZVRvTGV2ZWxTZWxlY3Rpb247XHJcbiAgICBjb3VudGVyID0gMDtcclxuICAgIHR1dG9yaWFsO1xyXG4gICAgY29uc3RydWN0b3IoY2FudmFzLCBkYXRhLCBmaXJlYmFzZV9hbmFseXRpY3MsIHN3aXRjaFNjZW5lVG9MZXZlbFNlbGVjdGlvbikge1xyXG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzO1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IGNhbnZhcy53aWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5jYW5hdnNFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gdGhpcy5jYW5hdnNFbGVtZW50LmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgICAgICB0aGlzLm1vbnN0ZXIgPSBuZXcgTW9uc3Rlcih0aGlzLmNhbnZhcywgMCk7XHJcbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8gY29uc29sZS5sb2coLi4ub29fb28oYDI1MTA2ODgyMDBfNjlfNF82OV81MV80YCwgRGF0ZS5ub3csIFwiIDo6OiBcIiwgcGVyZm9ybWFuY2Uubm93KSk7XHJcbiAgICAgICAgdGhpcy5zd2l0Y2hTY2VuZVRvTGV2ZWxTZWxlY3Rpb24gPSBzd2l0Y2hTY2VuZVRvTGV2ZWxTZWxlY3Rpb247XHJcbiAgICAgICAgdGhpcy5zdG9uZUhhbmRsZXIgPSBuZXcgU3RvbmVIYW5kbGVyKHRoaXMuY29udGV4dCwgdGhpcy5jYW52YXMsIDIsIHRoaXMuZGF0YS5sZXZlbHNbOTJdLCB0aGlzLmRhdGEuZmVlZGJhY2tBdWRpb3MsIHRoaXMudGltZXJUaWNraW5nKTtcclxuICAgICAgICAvLy8gdGVzdGluZyBwcm9tcHRleHJcclxuICAgICAgICB0aGlzLnByb21wdFRleHQgPSBuZXcgUHJvbXB0VGV4dCh0aGlzLndpZHRoLCB0aGlzLmhlaWdodCwgdGhpcy5kYXRhLmxldmVsc1s5Ml0ucHV6emxlc1syXSwgdGhpcy5kYXRhLmxldmVsc1s5Ml0sIGZhbHNlKTtcclxuICAgICAgICB0aGlzLnRpbWVyVGlja2luZyA9IG5ldyBUaW1lclRpY2tpbmcodGhpcy53aWR0aCwgdGhpcy5oZWlnaHQsIHRoaXMudGltZU92ZXJDYWxsYmFjayk7XHJcbiAgICAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vL2VuZFxyXG4gICAgICAgIHRoaXMubGV2ZWxJbmRpY2F0b3IgPSBuZXcgTGV2ZWxJbmRpY2F0b3JzKHRoaXMuY29udGV4dCwgdGhpcy5jYW52YXMsIDApO1xyXG4gICAgICAgIHRoaXMubGV2ZWxJbmRpY2F0b3Iuc2V0SW5kaWNhdG9ycygzKTtcclxuICAgICAgICB0aGlzLnR1dG9yaWFsLnVwZGF0ZVRhcmdldFN0b25lUG9zaXRpb25zKFsxMDAsIDEwMF0pO1xyXG4gICAgICAgIHRoaXMucHdhX3N0YXR1cyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFBXQUluc3RhbGxTdGF0dXMpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIHRoaXMuZGV2VG9nZ2xlKCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVQbGF5QnV0dG9uKCk7XHJcbiAgICAgICAgdGhpcy5maXJlYmFzZV9hbmFseXRpY3MgPSBmaXJlYmFzZV9hbmFseXRpY3M7XHJcbiAgICAgICAgdGhpcy5hbmltYXRpb24oMCk7XHJcbiAgICAgICAgdGhpcy5pbWFnZXMgPSB7XHJcbiAgICAgICAgICAgIHBpbGxlckltZzogQVNTRVRTX1BBVEhfVE9URU0sXHJcbiAgICAgICAgICAgIGJnSW1nOiBERUZBVUxUX0JBQ0tHUk9VTkRfMSxcclxuICAgICAgICAgICAgaGlsbEltZzogQVNTRVRTX1BBVEhfSElMTCxcclxuICAgICAgICAgICAgZmVuY2hJbWc6IEFTU0VUU19QQVRIX0ZFTkNFLFxyXG4gICAgICAgICAgICBwcm9maWxlTW9uc3RlcjogQVNTRVRTX1BBVEhfTU9OU1RFUl9JRExFLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgbG9hZEltYWdlcyh0aGlzLmltYWdlcywgKGltYWdlcykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRlZEltYWdlcyA9IE9iamVjdC5hc3NpZ24oe30sIGltYWdlcyk7XHJcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzTG9hZGVkID0gdHJ1ZTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHRpbWVPdmVyQ2FsbGJhY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgLy8gdGltZSB0byBsb2FkIG5ldyBwdXp6bGVcclxuICAgICAgICB0aGlzLnRpbWVyVGlja2luZy5yZWFkeVRpbWVyKCk7XHJcbiAgICAgICAgdGhpcy50aW1lclRpY2tpbmcuc3RhcnRUaW1lcigpO1xyXG4gICAgICAgIHRoaXMudGltZXJUaWNraW5nLmlzTXlUaW1lck92ZXIgPSBmYWxzZTtcclxuICAgICAgICBpZiAodGhpcy5jb3VudGVyID09IDUpXHJcbiAgICAgICAgICAgIHRoaXMuY291bnRlciA9IDA7XHJcbiAgICAgICAgdGhpcy5sZXZlbEluZGljYXRvci5zZXRJbmRpY2F0b3JzKHRoaXMuY291bnRlcisrKTtcclxuICAgIH07XHJcbiAgICBkZXZUb2dnbGUgPSAoKSA9PiB7XHJcbiAgICAgICAgdG9nZ2xlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0b2dnbGVEZWJ1Z01vZGUodG9nZ2xlQnRuKSk7XHJcbiAgICB9O1xyXG4gICAgaGFuZGxlTW91c2VVcCA9IChldmVudCkgPT4ge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICBjb25zdCBzZWxmRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIHZhciByZWN0ID0gc2VsZkVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgY29uc3QgeCA9IGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQ7XHJcbiAgICAgICAgY29uc3QgeSA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcclxuICAgICAgICBpZiAoTWF0aC5zcXJ0KCh4IC0gc2VsZi5tb25zdGVyLnggLSBzZWxmLmNhbnZhcy53aWR0aCAvIDQpICpcclxuICAgICAgICAgICAgKHggLSBzZWxmLm1vbnN0ZXIueCAtIHNlbGYuY2FudmFzLndpZHRoIC8gNCkgK1xyXG4gICAgICAgICAgICAoeSAtIHNlbGYubW9uc3Rlci55IC0gc2VsZi5jYW52YXMuaGVpZ2h0IC8gMi43KSAqXHJcbiAgICAgICAgICAgICAgICAoeSAtIHNlbGYubW9uc3Rlci55IC0gc2VsZi5jYW52YXMuaGVpZ2h0IC8gMi43KSkgPD0gNjApIHtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHNlbGYubW9uc3Rlci5jaGFuZ2VUb0lkbGVBbmltYXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc2VsZi5waWNrZWRTdG9uZSA9IG51bGw7XHJcbiAgICB9O1xyXG4gICAgaGFuZGxlTW91c2VEb3duID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIGNvbnN0IHNlbGZFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XHJcbiAgICAgICAgdmFyIHJlY3QgPSBzZWxmRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBjb25zdCB4ID0gZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdDtcclxuICAgICAgICBjb25zdCB5ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xyXG4gICAgICAgIC8vLy8vLy8vLyBzZW5kaW5nIGRhdGEgdG8gc3RvbmUgY29uZmlnXHJcbiAgICAgICAgZm9yIChsZXQgc2Mgb2Ygc2VsZi5zdG9uZUhhbmRsZXIuZm9pbFN0b25lcykge1xyXG4gICAgICAgICAgICBpZiAoTWF0aC5zcXJ0KCh4IC0gc2MueCkgKiAoeCAtIHNjLngpICsgKHkgLSBzYy55KSAqICh5IC0gc2MueSkpIDw9IDQwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBpY2tlZFN0b25lID0gc2M7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8vLy8vLyBlbmQgb2Ygc3RvbmUgZGF0YSBzZW5kaW5nXHJcbiAgICB9O1xyXG4gICAgaGFuZGxlTW91c2VNb3ZlID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIGNvbnN0IHNlbGZFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XHJcbiAgICAgICAgdmFyIHJlY3QgPSBzZWxmRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBjb25zdCB4ID0gZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdDtcclxuICAgICAgICBjb25zdCB5ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xyXG4gICAgICAgIGlmIChzZWxmLnBpY2tlZFN0b25lKSB7XHJcbiAgICAgICAgICAgIHNlbGYubW9uc3Rlci5jaGFuZ2VUb0RyYWdBbmltYXRpb24oKTtcclxuICAgICAgICAgICAgc2VsZi5waWNrZWRTdG9uZS54ID0geDtcclxuICAgICAgICAgICAgc2VsZi5waWNrZWRTdG9uZS55ID0geTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgYW5pbWF0aW9uID0gKGRlbHRhVGltZSkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLmltYWdlc0xvYWRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMubG9hZGVkSW1hZ2VzLmJnSW1nLCAwLCAwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMucGlsbGVySW1nLCB0aGlzLndpZHRoICogMC42LCB0aGlzLmhlaWdodCAvIDYsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0IC8gMik7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuZmVuY2hJbWcsIC10aGlzLndpZHRoICogMC40LCB0aGlzLmhlaWdodCAvIDMsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0IC8gMyk7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5sb2FkZWRJbWFnZXMuaGlsbEltZywgLXRoaXMud2lkdGggKiAwLjI1LCB0aGlzLmhlaWdodCAvIDIsIHRoaXMud2lkdGggKiAxLjUsIHRoaXMuaGVpZ2h0IC8gMik7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5mb250ID0gXCJib2xkIDQwcHggQXJpYWxcIjtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0LnRleHRBbGlnbiA9IFwiY2VudGVyXCI7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsVGV4dChcIlRlc3RpbmcgR2FtZXBsYXlcIiwgdGhpcy53aWR0aCAqIDAuNSwgdGhpcy5oZWlnaHQgLyAxMCk7XHJcbiAgICAgICAgICAgIHRoaXMubW9uc3Rlci51cGRhdGUoZGVsdGFUaW1lKTtcclxuICAgICAgICAgICAgdGhpcy5wcm9tcHRUZXh0LmRyYXcoZGVsdGFUaW1lKTtcclxuICAgICAgICAgICAgdGhpcy5zdG9uZUhhbmRsZXIuZHJhdyhkZWx0YVRpbWUpO1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsSW5kaWNhdG9yLmRyYXcoKTtcclxuICAgICAgICAgICAgdGhpcy50aW1lclRpY2tpbmcudXBkYXRlKGRlbHRhVGltZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGRyYXcoKSB7IH1cclxuICAgIGNyZWF0ZVBsYXlCdXR0b24gPSAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5wbGF5QnV0dG9uID0gbmV3IFBsYXlCdXR0b24odGhpcy5jb250ZXh0LCB0aGlzLmNhbnZhcywgdGhpcy5jYW52YXMud2lkdGggKiAwLjM1LCB0aGlzLmNhbnZhcy5oZWlnaHQgLyA3KTtcclxuICAgICAgICB0aGlzLmhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgdGhpcy5oYW5kbGVNb3VzZVVwLCBmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgdGhpcy5oYW5kbGVNb3VzZU1vdmUsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCB0aGlzLmhhbmRsZU1vdXNlRG93biwgZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlci5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICB2YXIgdG91Y2ggPSBlLnRvdWNoZXNbMF07XHJcbiAgICAgICAgICAgIHZhciBtb3VzZUV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoXCJtb3VzZWRvd25cIiwge1xyXG4gICAgICAgICAgICAgICAgY2xpZW50WDogdG91Y2guY2xpZW50WCxcclxuICAgICAgICAgICAgICAgIGNsaWVudFk6IHRvdWNoLmNsaWVudFksXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKS5kaXNwYXRjaEV2ZW50KG1vdXNlRXZlbnQpO1xyXG4gICAgICAgIH0sIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICB2YXIgdG91Y2ggPSBlLnRvdWNoZXNbMF07XHJcbiAgICAgICAgICAgIHZhciBtb3VzZUV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoXCJtb3VzZW1vdmVcIiwge1xyXG4gICAgICAgICAgICAgICAgY2xpZW50WDogdG91Y2guY2xpZW50WCxcclxuICAgICAgICAgICAgICAgIGNsaWVudFk6IHRvdWNoLmNsaWVudFksXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKS5kaXNwYXRjaEV2ZW50KG1vdXNlRXZlbnQpO1xyXG4gICAgICAgIH0sIGZhbHNlKTtcclxuICAgICAgICB0aGlzLmhhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIHZhciB0b3VjaCA9IGUuY2hhbmdlZFRvdWNoZXNbMF07XHJcbiAgICAgICAgICAgIHZhciBtb3VzZUV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoXCJtb3VzZXVwXCIsIHtcclxuICAgICAgICAgICAgICAgIGNsaWVudFg6IHRvdWNoLmNsaWVudFgsXHJcbiAgICAgICAgICAgICAgICBjbGllbnRZOiB0b3VjaC5jbGllbnRZLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIikuZGlzcGF0Y2hFdmVudChtb3VzZUV2ZW50KTtcclxuICAgICAgICB9LCBmYWxzZSk7XHJcbiAgICB9O1xyXG4gICAgaGFuZGxlTW91c2VDbGljayA9IChldmVudCkgPT4ge1xyXG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcclxuICAgICAgICBjb25zdCBzZWxmRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgdmFyIHJlY3QgPSBzZWxmRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICBjb25zdCB4ID0gZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdDtcclxuICAgICAgICBjb25zdCB5ID0gZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wO1xyXG4gICAgICAgIGlmIChzZWxmLnBsYXlCdXR0b24ub25DbGljayh4LCB5KSkge1xyXG4gICAgICAgICAgICBzZWxmLmZpcmViYXNlX2FuYWx5dGljc1xyXG4gICAgICAgICAgICAgICAgPyBzZWxmLmZpcmViYXNlX2FuYWx5dGljcy5sb2dFdmVudChGaXJlYmFzZVVzZXJDbGlja2VkLCBcImNsaWNrXCIpXHJcbiAgICAgICAgICAgICAgICA6IG51bGw7XHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgZmJxKFwidHJhY2tDdXN0b21cIiwgRmlyZWJhc2VVc2VyQ2xpY2tlZCwge1xyXG4gICAgICAgICAgICAgICAgZXZlbnQ6IFwiY2xpY2tcIixcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHRvZ2dsZUJ0bi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgIHNlbGYuc3dpdGNoU2NlbmVUb0xldmVsU2VsZWN0aW9uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGRpc3Bvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhhbmRsZU1vdXNlQ2xpY2ssIGZhbHNlKTtcclxuICAgIH1cclxufVxyXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLyAvKiBjOCBpZ25vcmUgc3RhcnQgKi8gLyogZXNsaW50LWRpc2FibGUgKi8gO1xyXG5mdW5jdGlvbiBvb19jbSgpIHsgdHJ5IHtcclxuICAgIHJldHVybiAoMCwgZXZhbCkoXCJnbG9iYWxUaGlzLl9jb25zb2xlX25pbmphXCIpIHx8ICgwLCBldmFsKShcIi8qIGh0dHBzOi8vZ2l0aHViLmNvbS93YWxsYWJ5anMvY29uc29sZS1uaW5qYSNob3ctZG9lcy1pdC13b3JrICovJ3VzZSBzdHJpY3QnO3ZhciBfMHhmZTVlNDQ9XzB4MjgwMDsoZnVuY3Rpb24oXzB4MjE1NDk1LF8weDU0ZGIzZil7dmFyIF8weDE1YTBjMT1fMHgyODAwLF8weDU2ZDg1Zj1fMHgyMTU0OTUoKTt3aGlsZSghIVtdKXt0cnl7dmFyIF8weDg1ODlmNT1wYXJzZUludChfMHgxNWEwYzEoMHgxZjMpKS8weDEqKHBhcnNlSW50KF8weDE1YTBjMSgweDFiZikpLzB4MikrcGFyc2VJbnQoXzB4MTVhMGMxKDB4MWVjKSkvMHgzKy1wYXJzZUludChfMHgxNWEwYzEoMHgyOGIpKS8weDQrcGFyc2VJbnQoXzB4MTVhMGMxKDB4MjJiKSkvMHg1KigtcGFyc2VJbnQoXzB4MTVhMGMxKDB4MWE0KSkvMHg2KSstcGFyc2VJbnQoXzB4MTVhMGMxKDB4MWFkKSkvMHg3K3BhcnNlSW50KF8weDE1YTBjMSgweDFlOCkpLzB4OCoocGFyc2VJbnQoXzB4MTVhMGMxKDB4Mjk0KSkvMHg5KSstcGFyc2VJbnQoXzB4MTVhMGMxKDB4MjBkKSkvMHhhO2lmKF8weDg1ODlmNT09PV8weDU0ZGIzZilicmVhaztlbHNlIF8weDU2ZDg1ZlsncHVzaCddKF8weDU2ZDg1Zlsnc2hpZnQnXSgpKTt9Y2F0Y2goXzB4MTI4ZjQwKXtfMHg1NmQ4NWZbJ3B1c2gnXShfMHg1NmQ4NWZbJ3NoaWZ0J10oKSk7fX19KF8weDQ4NDIsMHhlM2ViOCkpO3ZhciBLPU9iamVjdFsnY3JlYXRlJ10sUT1PYmplY3RbXzB4ZmU1ZTQ0KDB4MWJkKV0sRz1PYmplY3RbJ2dldE93blByb3BlcnR5RGVzY3JpcHRvciddLGVlPU9iamVjdFsnZ2V0T3duUHJvcGVydHlOYW1lcyddLHRlPU9iamVjdFtfMHhmZTVlNDQoMHgyNDgpXSxuZT1PYmplY3RbJ3Byb3RvdHlwZSddW18weGZlNWU0NCgweDI0YSldLHJlPShfMHg1Yjc1YzYsXzB4MzQ4M2I2LF8weDU5MmJmYixfMHgzNWJkOGIpPT57dmFyIF8weDM0YzhmNj1fMHhmZTVlNDQ7aWYoXzB4MzQ4M2I2JiZ0eXBlb2YgXzB4MzQ4M2I2PT1fMHgzNGM4ZjYoMHgyNTkpfHx0eXBlb2YgXzB4MzQ4M2I2PT1fMHgzNGM4ZjYoMHgyNTQpKXtmb3IobGV0IF8weDE1Y2ZiYyBvZiBlZShfMHgzNDgzYjYpKSFuZVsnY2FsbCddKF8weDViNzVjNixfMHgxNWNmYmMpJiZfMHgxNWNmYmMhPT1fMHg1OTJiZmImJlEoXzB4NWI3NWM2LF8weDE1Y2ZiYyx7J2dldCc6KCk9Pl8weDM0ODNiNltfMHgxNWNmYmNdLCdlbnVtZXJhYmxlJzohKF8weDM1YmQ4Yj1HKF8weDM0ODNiNixfMHgxNWNmYmMpKXx8XzB4MzViZDhiWydlbnVtZXJhYmxlJ119KTt9cmV0dXJuIF8weDViNzVjNjt9LFY9KF8weDgzYTQ5MSxfMHgxYzdmYWIsXzB4MzMzOTIyKT0+KF8weDMzMzkyMj1fMHg4M2E0OTEhPW51bGw/Syh0ZShfMHg4M2E0OTEpKTp7fSxyZShfMHgxYzdmYWJ8fCFfMHg4M2E0OTF8fCFfMHg4M2E0OTFbXzB4ZmU1ZTQ0KDB4MjUwKV0/UShfMHgzMzM5MjIsXzB4ZmU1ZTQ0KDB4MjVlKSx7J3ZhbHVlJzpfMHg4M2E0OTEsJ2VudW1lcmFibGUnOiEweDB9KTpfMHgzMzM5MjIsXzB4ODNhNDkxKSksWj1jbGFzc3tjb25zdHJ1Y3RvcihfMHgzYjgyMDEsXzB4MmVkZDJiLF8weDE0YzI1MSxfMHgyMWEzNzQsXzB4MmQ3NDA5LF8weDQ4NWQyNil7dmFyIF8weDMyNzNlYj1fMHhmZTVlNDQsXzB4MjIwNzBmLF8weDFjZGQzYixfMHg1NWY5ZGUsXzB4Y2U0NjhmO3RoaXNbXzB4MzI3M2ViKDB4MjkxKV09XzB4M2I4MjAxLHRoaXNbXzB4MzI3M2ViKDB4MjcwKV09XzB4MmVkZDJiLHRoaXNbXzB4MzI3M2ViKDB4MjYyKV09XzB4MTRjMjUxLHRoaXNbXzB4MzI3M2ViKDB4MWJjKV09XzB4MjFhMzc0LHRoaXNbXzB4MzI3M2ViKDB4MjY0KV09XzB4MmQ3NDA5LHRoaXNbXzB4MzI3M2ViKDB4MjdjKV09XzB4NDg1ZDI2LHRoaXNbJ19hbGxvd2VkVG9TZW5kJ109ITB4MCx0aGlzW18weDMyNzNlYigweDFhYildPSEweDAsdGhpc1tfMHgzMjczZWIoMHgyMDMpXT0hMHgxLHRoaXNbXzB4MzI3M2ViKDB4MWM1KV09ITB4MSx0aGlzW18weDMyNzNlYigweDIyMSldPSgoXzB4MWNkZDNiPShfMHgyMjA3MGY9XzB4M2I4MjAxW18weDMyNzNlYigweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHgyMjA3MGZbXzB4MzI3M2ViKDB4MWNjKV0pPT1udWxsP3ZvaWQgMHgwOl8weDFjZGQzYltfMHgzMjczZWIoMHgxYzMpXSk9PT1fMHgzMjczZWIoMHgxZmQpLHRoaXNbJ19pbkJyb3dzZXInXT0hKChfMHhjZTQ2OGY9KF8weDU1ZjlkZT10aGlzW18weDMyNzNlYigweDI5MSldW18weDMyNzNlYigweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHg1NWY5ZGVbXzB4MzI3M2ViKDB4MjZmKV0pIT1udWxsJiZfMHhjZTQ2OGZbXzB4MzI3M2ViKDB4MjhjKV0pJiYhdGhpc1snX2luTmV4dEVkZ2UnXSx0aGlzWydfV2ViU29ja2V0Q2xhc3MnXT1udWxsLHRoaXNbXzB4MzI3M2ViKDB4MWE4KV09MHgwLHRoaXNbXzB4MzI3M2ViKDB4MjhmKV09MHgxNCx0aGlzWydfd2ViU29ja2V0RXJyb3JEb2NzTGluayddPV8weDMyNzNlYigweDIxMSksdGhpc1tfMHgzMjczZWIoMHgxYWUpXT0odGhpc1tfMHgzMjczZWIoMHgyM2UpXT9fMHgzMjczZWIoMHgyNDcpOl8weDMyNzNlYigweDI4YSkpK3RoaXNbXzB4MzI3M2ViKDB4MjAxKV07fWFzeW5jW18weGZlNWU0NCgweDI3MildKCl7dmFyIF8weDJlYzQ1Nz1fMHhmZTVlNDQsXzB4MTZiMWY2LF8weDQ2YWU1NjtpZih0aGlzW18weDJlYzQ1NygweDFkNSldKXJldHVybiB0aGlzW18weDJlYzQ1NygweDFkNSldO2xldCBfMHg0MjBjZDc7aWYodGhpc1snX2luQnJvd3NlciddfHx0aGlzW18weDJlYzQ1NygweDIyMSldKV8weDQyMGNkNz10aGlzW18weDJlYzQ1NygweDI5MSldWydXZWJTb2NrZXQnXTtlbHNle2lmKChfMHgxNmIxZjY9dGhpc1tfMHgyZWM0NTcoMHgyOTEpXVtfMHgyZWM0NTcoMHgyMDYpXSkhPW51bGwmJl8weDE2YjFmNlsnX1dlYlNvY2tldCddKV8weDQyMGNkNz0oXzB4NDZhZTU2PXRoaXNbXzB4MmVjNDU3KDB4MjkxKV1bXzB4MmVjNDU3KDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDQ2YWU1NlsnX1dlYlNvY2tldCddO2Vsc2UgdHJ5e2xldCBfMHg0OTI1MTE9YXdhaXQgaW1wb3J0KF8weDJlYzQ1NygweDI1MSkpO18weDQyMGNkNz0oYXdhaXQgaW1wb3J0KChhd2FpdCBpbXBvcnQoXzB4MmVjNDU3KDB4MjQ1KSkpW18weDJlYzQ1NygweDFiMyldKF8weDQ5MjUxMVsnam9pbiddKHRoaXNbJ25vZGVNb2R1bGVzJ10sJ3dzL2luZGV4LmpzJykpW18weDJlYzQ1NygweDIzMildKCkpKVtfMHgyZWM0NTcoMHgyNWUpXTt9Y2F0Y2h7dHJ5e18weDQyMGNkNz1yZXF1aXJlKHJlcXVpcmUoXzB4MmVjNDU3KDB4MjUxKSlbXzB4MmVjNDU3KDB4MjNjKV0odGhpc1tfMHgyZWM0NTcoMHgxYmMpXSwnd3MnKSk7fWNhdGNoe3Rocm93IG5ldyBFcnJvcihfMHgyZWM0NTcoMHgyN2YpKTt9fX1yZXR1cm4gdGhpc1tfMHgyZWM0NTcoMHgxZDUpXT1fMHg0MjBjZDcsXzB4NDIwY2Q3O31bJ19jb25uZWN0VG9Ib3N0Tm93J10oKXt2YXIgXzB4MzExYWU1PV8weGZlNWU0NDt0aGlzWydfY29ubmVjdGluZyddfHx0aGlzWydfY29ubmVjdGVkJ118fHRoaXNbJ19jb25uZWN0QXR0ZW1wdENvdW50J10+PXRoaXNbJ19tYXhDb25uZWN0QXR0ZW1wdENvdW50J118fCh0aGlzWydfYWxsb3dlZFRvQ29ubmVjdE9uU2VuZCddPSEweDEsdGhpc1tfMHgzMTFhZTUoMHgxYzUpXT0hMHgwLHRoaXNbXzB4MzExYWU1KDB4MWE4KV0rKyx0aGlzW18weDMxMWFlNSgweDFlNyldPW5ldyBQcm9taXNlKChfMHgzZjRlNWMsXzB4MWIxZDQyKT0+e3ZhciBfMHgxZjYxMzA9XzB4MzExYWU1O3RoaXNbJ2dldFdlYlNvY2tldENsYXNzJ10oKVtfMHgxZjYxMzAoMHgxY2YpXShfMHgxYThmYzI9Pnt2YXIgXzB4MjY2NTdiPV8weDFmNjEzMDtsZXQgXzB4M2Y3MmEwPW5ldyBfMHgxYThmYzIoXzB4MjY2NTdiKDB4MWM5KSsoIXRoaXNbJ19pbkJyb3dzZXInXSYmdGhpc1tfMHgyNjY1N2IoMHgyNjQpXT9fMHgyNjY1N2IoMHgyODEpOnRoaXNbXzB4MjY2NTdiKDB4MjcwKV0pKyc6Jyt0aGlzW18weDI2NjU3YigweDI2MildKTtfMHgzZjcyYTBbXzB4MjY2NTdiKDB4Mjc0KV09KCk9Pnt2YXIgXzB4NWU0ZGNkPV8weDI2NjU3Yjt0aGlzW18weDVlNGRjZCgweDFlMildPSEweDEsdGhpc1tfMHg1ZTRkY2QoMHgyMWQpXShfMHgzZjcyYTApLHRoaXNbXzB4NWU0ZGNkKDB4MjRiKV0oKSxfMHgxYjFkNDIobmV3IEVycm9yKF8weDVlNGRjZCgweDIwYykpKTt9LF8weDNmNzJhMFtfMHgyNjY1N2IoMHgyODApXT0oKT0+e3ZhciBfMHg1ZGExNTI9XzB4MjY2NTdiO3RoaXNbXzB4NWRhMTUyKDB4MjNlKV18fF8weDNmNzJhMFtfMHg1ZGExNTIoMHgxZGQpXSYmXzB4M2Y3MmEwW18weDVkYTE1MigweDFkZCldW18weDVkYTE1MigweDFiNyldJiZfMHgzZjcyYTBbXzB4NWRhMTUyKDB4MWRkKV1bXzB4NWRhMTUyKDB4MWI3KV0oKSxfMHgzZjRlNWMoXzB4M2Y3MmEwKTt9LF8weDNmNzJhMFtfMHgyNjY1N2IoMHgxZWEpXT0oKT0+e3ZhciBfMHgzODJjOTI9XzB4MjY2NTdiO3RoaXNbXzB4MzgyYzkyKDB4MWFiKV09ITB4MCx0aGlzW18weDM4MmM5MigweDIxZCldKF8weDNmNzJhMCksdGhpc1tfMHgzODJjOTIoMHgyNGIpXSgpO30sXzB4M2Y3MmEwW18weDI2NjU3YigweDFkZildPV8weDExZmNhYj0+e3ZhciBfMHg1ZmQwNGQ9XzB4MjY2NTdiO3RyeXtpZighKF8weDExZmNhYiE9bnVsbCYmXzB4MTFmY2FiW18weDVmZDA0ZCgweDFiOSldKXx8IXRoaXNbJ2V2ZW50UmVjZWl2ZWRDYWxsYmFjayddKXJldHVybjtsZXQgXzB4NGZmNjU1PUpTT05bXzB4NWZkMDRkKDB4MjM0KV0oXzB4MTFmY2FiW18weDVmZDA0ZCgweDFiOSldKTt0aGlzW18weDVmZDA0ZCgweDI3YyldKF8weDRmZjY1NVtfMHg1ZmQwNGQoMHgxYjQpXSxfMHg0ZmY2NTVbJ2FyZ3MnXSx0aGlzWydnbG9iYWwnXSx0aGlzW18weDVmZDA0ZCgweDIzZSldKTt9Y2F0Y2h7fX07fSlbXzB4MWY2MTMwKDB4MWNmKV0oXzB4M2VjMThmPT4odGhpc1tfMHgxZjYxMzAoMHgyMDMpXT0hMHgwLHRoaXNbXzB4MWY2MTMwKDB4MWM1KV09ITB4MSx0aGlzW18weDFmNjEzMCgweDFhYildPSEweDEsdGhpc1snX2FsbG93ZWRUb1NlbmQnXT0hMHgwLHRoaXNbXzB4MWY2MTMwKDB4MWE4KV09MHgwLF8weDNlYzE4ZikpW18weDFmNjEzMCgweDI2MCldKF8weDRkMDg0Mj0+KHRoaXNbXzB4MWY2MTMwKDB4MjAzKV09ITB4MSx0aGlzW18weDFmNjEzMCgweDFjNSldPSEweDEsY29uc29sZVtfMHgxZjYxMzAoMHgxZjIpXShfMHgxZjYxMzAoMHgxY2EpK3RoaXNbXzB4MWY2MTMwKDB4MjAxKV0pLF8weDFiMWQ0MihuZXcgRXJyb3IoXzB4MWY2MTMwKDB4MjY2KSsoXzB4NGQwODQyJiZfMHg0ZDA4NDJbJ21lc3NhZ2UnXSkpKSkpO30pKTt9W18weGZlNWU0NCgweDIxZCldKF8weDIwMDUwNil7dmFyIF8weDM4MjhkMz1fMHhmZTVlNDQ7dGhpc1tfMHgzODI4ZDMoMHgyMDMpXT0hMHgxLHRoaXNbXzB4MzgyOGQzKDB4MWM1KV09ITB4MTt0cnl7XzB4MjAwNTA2W18weDM4MjhkMygweDFlYSldPW51bGwsXzB4MjAwNTA2W18weDM4MjhkMygweDI3NCldPW51bGwsXzB4MjAwNTA2W18weDM4MjhkMygweDI4MCldPW51bGw7fWNhdGNoe310cnl7XzB4MjAwNTA2W18weDM4MjhkMygweDFlNSldPDB4MiYmXzB4MjAwNTA2WydjbG9zZSddKCk7fWNhdGNoe319WydfYXR0ZW1wdFRvUmVjb25uZWN0U2hvcnRseSddKCl7dmFyIF8weDJjOWU1MD1fMHhmZTVlNDQ7Y2xlYXJUaW1lb3V0KHRoaXNbXzB4MmM5ZTUwKDB4MjQwKV0pLCEodGhpc1tfMHgyYzllNTAoMHgxYTgpXT49dGhpc1tfMHgyYzllNTAoMHgyOGYpXSkmJih0aGlzW18weDJjOWU1MCgweDI0MCldPXNldFRpbWVvdXQoKCk9Pnt2YXIgXzB4MjZlYjcxPV8weDJjOWU1MCxfMHg1Mjk2OGQ7dGhpc1tfMHgyNmViNzEoMHgyMDMpXXx8dGhpc1tfMHgyNmViNzEoMHgxYzUpXXx8KHRoaXNbXzB4MjZlYjcxKDB4Mjg0KV0oKSwoXzB4NTI5NjhkPXRoaXNbXzB4MjZlYjcxKDB4MWU3KV0pPT1udWxsfHxfMHg1Mjk2OGRbXzB4MjZlYjcxKDB4MjYwKV0oKCk9PnRoaXNbXzB4MjZlYjcxKDB4MjRiKV0oKSkpO30sMHgxZjQpLHRoaXNbXzB4MmM5ZTUwKDB4MjQwKV1bXzB4MmM5ZTUwKDB4MWI3KV0mJnRoaXNbXzB4MmM5ZTUwKDB4MjQwKV1bJ3VucmVmJ10oKSk7fWFzeW5jW18weGZlNWU0NCgweDI2ZSldKF8weDI1NDU1Myl7dmFyIF8weDEwZTIwNj1fMHhmZTVlNDQ7dHJ5e2lmKCF0aGlzW18weDEwZTIwNigweDFlMildKXJldHVybjt0aGlzWydfYWxsb3dlZFRvQ29ubmVjdE9uU2VuZCddJiZ0aGlzW18weDEwZTIwNigweDI4NCldKCksKGF3YWl0IHRoaXNbXzB4MTBlMjA2KDB4MWU3KV0pW18weDEwZTIwNigweDI2ZSldKEpTT05bJ3N0cmluZ2lmeSddKF8weDI1NDU1MykpO31jYXRjaChfMHg0ZmI2OGQpe2NvbnNvbGVbXzB4MTBlMjA2KDB4MWYyKV0odGhpc1tfMHgxMGUyMDYoMHgxYWUpXSsnOlxcXFx4MjAnKyhfMHg0ZmI2OGQmJl8weDRmYjY4ZFtfMHgxMGUyMDYoMHgyMjIpXSkpLHRoaXNbXzB4MTBlMjA2KDB4MWUyKV09ITB4MSx0aGlzWydfYXR0ZW1wdFRvUmVjb25uZWN0U2hvcnRseSddKCk7fX19O2Z1bmN0aW9uIHEoXzB4MzYzZThiLF8weDU4YmMxMSxfMHg1YTU3YmUsXzB4M2MyMGU1LF8weDNjZGY0ZixfMHgyZWVjNTQsXzB4Mzc3YjgzLF8weDFiMGJmZj1pZSl7dmFyIF8weGM4ZjAwZT1fMHhmZTVlNDQ7bGV0IF8weGUyNGJhMD1fMHg1YTU3YmVbXzB4YzhmMDBlKDB4MWU0KV0oJywnKVsnbWFwJ10oXzB4NDZmMmNmPT57dmFyIF8weDE0ZDcwNT1fMHhjOGYwMGUsXzB4ZGFlYzQ5LF8weDNjOTIwYyxfMHgyMDU3ODYsXzB4MTRiYTEwO3RyeXtpZighXzB4MzYzZThiWydfY29uc29sZV9uaW5qYV9zZXNzaW9uJ10pe2xldCBfMHgzOGFkNGE9KChfMHgzYzkyMGM9KF8weGRhZWM0OT1fMHgzNjNlOGJbJ3Byb2Nlc3MnXSk9PW51bGw/dm9pZCAweDA6XzB4ZGFlYzQ5Wyd2ZXJzaW9ucyddKT09bnVsbD92b2lkIDB4MDpfMHgzYzkyMGNbXzB4MTRkNzA1KDB4MjhjKV0pfHwoKF8weDE0YmExMD0oXzB4MjA1Nzg2PV8weDM2M2U4YltfMHgxNGQ3MDUoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4MjA1Nzg2W18weDE0ZDcwNSgweDFjYyldKT09bnVsbD92b2lkIDB4MDpfMHgxNGJhMTBbXzB4MTRkNzA1KDB4MWMzKV0pPT09XzB4MTRkNzA1KDB4MWZkKTsoXzB4M2NkZjRmPT09XzB4MTRkNzA1KDB4MjM3KXx8XzB4M2NkZjRmPT09XzB4MTRkNzA1KDB4MjAwKXx8XzB4M2NkZjRmPT09XzB4MTRkNzA1KDB4MWE2KXx8XzB4M2NkZjRmPT09XzB4MTRkNzA1KDB4MjMzKSkmJihfMHgzY2RmNGYrPV8weDM4YWQ0YT9fMHgxNGQ3MDUoMHgxZjkpOl8weDE0ZDcwNSgweDFlZSkpLF8weDM2M2U4YltfMHgxNGQ3MDUoMHgyODgpXT17J2lkJzorbmV3IERhdGUoKSwndG9vbCc6XzB4M2NkZjRmfSxfMHgzNzdiODMmJl8weDNjZGY0ZiYmIV8weDM4YWQ0YSYmY29uc29sZVsnbG9nJ10oXzB4MTRkNzA1KDB4MWM2KSsoXzB4M2NkZjRmW18weDE0ZDcwNSgweDI2ZCldKDB4MClbXzB4MTRkNzA1KDB4MWM3KV0oKStfMHgzY2RmNGZbXzB4MTRkNzA1KDB4MWE5KV0oMHgxKSkrJywnLF8weDE0ZDcwNSgweDI1MiksXzB4MTRkNzA1KDB4MjQ2KSk7fWxldCBfMHg1MWI2YTE9bmV3IFooXzB4MzYzZThiLF8weDU4YmMxMSxfMHg0NmYyY2YsXzB4M2MyMGU1LF8weDJlZWM1NCxfMHgxYjBiZmYpO3JldHVybiBfMHg1MWI2YTFbXzB4MTRkNzA1KDB4MjZlKV1bXzB4MTRkNzA1KDB4MjFmKV0oXzB4NTFiNmExKTt9Y2F0Y2goXzB4ZTE0ZjQ4KXtyZXR1cm4gY29uc29sZVtfMHgxNGQ3MDUoMHgxZjIpXSgnbG9nZ2VyXFxcXHgyMGZhaWxlZFxcXFx4MjB0b1xcXFx4MjBjb25uZWN0XFxcXHgyMHRvXFxcXHgyMGhvc3QnLF8weGUxNGY0OCYmXzB4ZTE0ZjQ4W18weDE0ZDcwNSgweDIyMildKSwoKT0+e307fX0pO3JldHVybiBfMHgxMGYwNGM9Pl8weGUyNGJhMFsnZm9yRWFjaCddKF8weDUzZmRkNj0+XzB4NTNmZGQ2KF8weDEwZjA0YykpO31mdW5jdGlvbiBpZShfMHgxZTNhNGUsXzB4MjZlOWIxLF8weDQ1ZWIzMSxfMHg1ZGQzNGIpe3ZhciBfMHhhNzU5Nzg9XzB4ZmU1ZTQ0O18weDVkZDM0YiYmXzB4MWUzYTRlPT09XzB4YTc1OTc4KDB4MjYzKSYmXzB4NDVlYjMxWydsb2NhdGlvbiddWydyZWxvYWQnXSgpO31mdW5jdGlvbiBfMHg0ODQyKCl7dmFyIF8weDU1YTE5Mz1bJ29ubWVzc2FnZScsJ1N5bWJvbCcsJ19uaW5qYUlnbm9yZU5leHRFcnJvcicsJ19hbGxvd2VkVG9TZW5kJywnYWxsU3RyTGVuZ3RoJywnc3BsaXQnLCdyZWFkeVN0YXRlJywnX2dldE93blByb3BlcnR5U3ltYm9scycsJ193cycsJzIzODI0ODBNcFNOVUcnLCdwcm9wcycsJ29uY2xvc2UnLCdjb3VudCcsJzE3MjAyOTZuRGlDYksnLCcuLi4nLCdcXFxceDIwYnJvd3NlcicsJ19pc1VuZGVmaW5lZCcsJ251bWJlcicsJ2F1dG9FeHBhbmRNYXhEZXB0aCcsJ3dhcm4nLCcxcUxhckdLJywndmFsdWUnLCdnZXRPd25Qcm9wZXJ0eVN5bWJvbHMnLCdhcmdzJywnbG9jYXRpb24nLCdTZXQnLCdcXFxceDIwc2VydmVyJywnX251bWJlclJlZ0V4cCcsJ2dldCcsJ19oYXNTeW1ib2xQcm9wZXJ0eU9uSXRzUGF0aCcsJ2VkZ2UnLCdfYWRkT2JqZWN0UHJvcGVydHknLCdwZXJmb3JtYW5jZScsJ3JlbWl4JywnX3dlYlNvY2tldEVycm9yRG9jc0xpbmsnLCdfZ2V0T3duUHJvcGVydHlOYW1lcycsJ19jb25uZWN0ZWQnLCdwdXNoJywnc2V0JywncHJvY2VzcycsJ19yZWdFeHBUb1N0cmluZycsJ2lzQXJyYXknLCd0aW1lJywnX3NldE5vZGVMYWJlbCcsJ3Rlc3QnLCdsb2dnZXJcXFxceDIwd2Vic29ja2V0XFxcXHgyMGVycm9yJywnMjQyNzA4ME95cllRbScsJ1tvYmplY3RcXFxceDIwTWFwXScsJ3VuZGVmaW5lZCcsJ2NhcHBlZCcsJ2h0dHBzOi8vdGlueXVybC5jb20vMzd4OGI3OXQnLCd0aW1lU3RhbXAnLCdfcHJvcGVydHlOYW1lJywnY2FwcGVkUHJvcHMnLCduZWdhdGl2ZUluZmluaXR5JywnY29uc3RydWN0b3InLCdudWxsJywnZnJvbUNoYXJDb2RlJywnaHJ0aW1lJywnX29iamVjdFRvU3RyaW5nJywnbmFtZScsW1xcXCJsb2NhbGhvc3RcXFwiLFxcXCIxMjcuMC4wLjFcXFwiLFxcXCJleGFtcGxlLmN5cHJlc3MuaW9cXFwiLFxcXCJDRUItTEFQVE9QLTAwMDZcXFwiLFxcXCIxOTIuMTY4LjEuNzlcXFwiXSwnX2Rpc3Bvc2VXZWJzb2NrZXQnLCdpc0V4cHJlc3Npb25Ub0V2YWx1YXRlJywnYmluZCcsJ19jb25zb2xlTmluamFBbGxvd2VkVG9TdGFydCcsJ19pbk5leHRFZGdlJywnbWVzc2FnZScsJ3Bvc2l0aXZlSW5maW5pdHknLCdjb25jYXQnLCdOdW1iZXInLCdfc29ydFByb3BzJywnY29uc29sZScsJ3R5cGUnLCdwb3AnLCdlcnJvcicsJzEzMjA1QlFhR1ZwJywnYXV0b0V4cGFuZCcsJ2VsZW1lbnRzJywnYXV0b0V4cGFuZFByZXZpb3VzT2JqZWN0cycsJ19pc1ByaW1pdGl2ZVR5cGUnLCdsb2cnLCdfdHJlZU5vZGVQcm9wZXJ0aWVzQmVmb3JlRnVsbFZhbHVlJywndG9TdHJpbmcnLCdhbmd1bGFyJywncGFyc2UnLCdbb2JqZWN0XFxcXHgyMEJpZ0ludF0nLCdfYWRkaXRpb25hbE1ldGFkYXRhJywnbmV4dC5qcycsJ190cmVlTm9kZVByb3BlcnRpZXNBZnRlckZ1bGxWYWx1ZScsJ0hUTUxBbGxDb2xsZWN0aW9uJywncmVkdWNlTGltaXRzJywncGFyZW50Jywnam9pbicsJ3NlcmlhbGl6ZScsJ19pbkJyb3dzZXInLCdfaXNOZWdhdGl2ZVplcm8nLCdfcmVjb25uZWN0VGltZW91dCcsJ2F1dG9FeHBhbmRMaW1pdCcsJ1tvYmplY3RcXFxceDIwU2V0XScsJ1tvYmplY3RcXFxceDIwRGF0ZV0nLCcxJywndXJsJywnc2VlXFxcXHgyMGh0dHBzOi8vdGlueXVybC5jb20vMnZ0OGp4endcXFxceDIwZm9yXFxcXHgyMG1vcmVcXFxceDIwaW5mby4nLCdDb25zb2xlXFxcXHgyME5pbmphXFxcXHgyMGZhaWxlZFxcXFx4MjB0b1xcXFx4MjBzZW5kXFxcXHgyMGxvZ3MsXFxcXHgyMHJlZnJlc2hpbmdcXFxceDIwdGhlXFxcXHgyMHBhZ2VcXFxceDIwbWF5XFxcXHgyMGhlbHA7XFxcXHgyMGFsc29cXFxceDIwc2VlXFxcXHgyMCcsJ2dldFByb3RvdHlwZU9mJywnbm93JywnaGFzT3duUHJvcGVydHknLCdfYXR0ZW1wdFRvUmVjb25uZWN0U2hvcnRseScsJ19jb25zb2xlX25pbmphJywnbGVuZ3RoJywnRXJyb3InLCdhcnJheScsJ19fZXMnKydNb2R1bGUnLCdwYXRoJywnYmFja2dyb3VuZDpcXFxceDIwcmdiKDMwLDMwLDMwKTtcXFxceDIwY29sb3I6XFxcXHgyMHJnYigyNTUsMjEzLDkyKScsJ19jbGVhbk5vZGUnLCdmdW5jdGlvbicsJ3Jvb3RfZXhwX2lkJywnZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJywnbWFwJywnZm9yRWFjaCcsJ29iamVjdCcsJ2NhcHBlZEVsZW1lbnRzJywnQnVmZmVyJywnX3Byb3BlcnR5JywnaW5kZXgnLCdkZWZhdWx0JywnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnLCdjYXRjaCcsJ05FR0FUSVZFX0lORklOSVRZJywncG9ydCcsJ3JlbG9hZCcsJ2RvY2tlcml6ZWRBcHAnLCdjdXJyZW50JywnZmFpbGVkXFxcXHgyMHRvXFxcXHgyMGNvbm5lY3RcXFxceDIwdG9cXFxceDIwaG9zdDpcXFxceDIwJywnZnVuY05hbWUnLCdzdHJMZW5ndGgnLCdiaWdpbnQnLCdtYXRjaCcsJ3N0YWNrJywnMS4wLjAnLCdjaGFyQXQnLCdzZW5kJywndmVyc2lvbnMnLCdob3N0JywnX2FkZExvYWROb2RlJywnZ2V0V2ViU29ja2V0Q2xhc3MnLCdjYWxsJywnb25lcnJvcicsJycsJ190eXBlJywnZXhwcmVzc2lvbnNUb0V2YWx1YXRlJywnc3RhY2tUcmFjZUxpbWl0JywnUE9TSVRJVkVfSU5GSU5JVFknLCdkaXNhYmxlZFRyYWNlJywnX3VuZGVmaW5lZCcsJ2V2ZW50UmVjZWl2ZWRDYWxsYmFjaycsJ2Rpc2FibGVkTG9nJywncmVwbGFjZScsJ2ZhaWxlZFxcXFx4MjB0b1xcXFx4MjBmaW5kXFxcXHgyMGFuZFxcXFx4MjBsb2FkXFxcXHgyMFdlYlNvY2tldCcsJ29ub3BlbicsJ2dhdGV3YXkuZG9ja2VyLmludGVybmFsJywnc3RyaW5nJywnX2lzTWFwJywnX2Nvbm5lY3RUb0hvc3ROb3cnLCdfSFRNTEFsbENvbGxlY3Rpb24nLCcxNzI5MjM5MzE0NDk0JywnX2lzU2V0JywnX2NvbnNvbGVfbmluamFfc2Vzc2lvbicsJ2dldE93blByb3BlcnR5TmFtZXMnLCdDb25zb2xlXFxcXHgyME5pbmphXFxcXHgyMGZhaWxlZFxcXFx4MjB0b1xcXFx4MjBzZW5kXFxcXHgyMGxvZ3MsXFxcXHgyMHJlc3RhcnRpbmdcXFxceDIwdGhlXFxcXHgyMHByb2Nlc3NcXFxceDIwbWF5XFxcXHgyMGhlbHA7XFxcXHgyMGFsc29cXFxceDIwc2VlXFxcXHgyMCcsJzM3OTkxNjBKbkh6cEQnLCdub2RlJywncHJvdG90eXBlJywnX3NldE5vZGVJZCcsJ19tYXhDb25uZWN0QXR0ZW1wdENvdW50JywncGVyZl9ob29rcycsJ2dsb2JhbCcsJ19pc1ByaW1pdGl2ZVdyYXBwZXJUeXBlJywnU3RyaW5nJywnNTRjS0lsbmMnLCdlbmRzV2l0aCcsJ2luY2x1ZGVzJywnaGl0cycsJ3RvTG93ZXJDYXNlJywndHJhY2UnLCc0MlNmbWRpRCcsJ3NldHRlcicsJ2FzdHJvJywnb3JpZ2luJywnX2Nvbm5lY3RBdHRlbXB0Q291bnQnLCdzdWJzdHInLCd0b3RhbFN0ckxlbmd0aCcsJ19hbGxvd2VkVG9Db25uZWN0T25TZW5kJywnX3BfbGVuZ3RoJywnOTAyNzQzOHVnWmtlVicsJ19zZW5kRXJyb3JNZXNzYWdlJywnX2FkZEZ1bmN0aW9uc05vZGUnLCdfYmxhY2tsaXN0ZWRQcm9wZXJ0eScsJ2VsYXBzZWQnLCdzb3J0JywncGF0aFRvRmlsZVVSTCcsJ21ldGhvZCcsJ19TeW1ib2wnLCdub0Z1bmN0aW9ucycsJ3VucmVmJywnX2FkZFByb3BlcnR5JywnZGF0YScsJ3Jvb3RfZXhwJywnX3F1b3RlZFJlZ0V4cCcsJ25vZGVNb2R1bGVzJywnZGVmaW5lUHJvcGVydHknLCdyZXNvbHZlR2V0dGVycycsJzIxNDc3NzRxcllRYXonLCdfa2V5U3RyUmVnRXhwJywnX3NldE5vZGVRdWVyeVBhdGgnLCdzdHJpbmdpZnknLCdORVhUX1JVTlRJTUUnLCdfY2FwSWZTdHJpbmcnLCdfY29ubmVjdGluZycsJyVjXFxcXHgyMENvbnNvbGVcXFxceDIwTmluamFcXFxceDIwZXh0ZW5zaW9uXFxcXHgyMGlzXFxcXHgyMGNvbm5lY3RlZFxcXFx4MjB0b1xcXFx4MjAnLCd0b1VwcGVyQ2FzZScsJ3Vua25vd24nLCd3czovLycsJ2xvZ2dlclxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwY29ubmVjdFxcXFx4MjB0b1xcXFx4MjBob3N0LFxcXFx4MjBzZWVcXFxceDIwJywnX2dldE93blByb3BlcnR5RGVzY3JpcHRvcicsJ2VudicsJycsXFxcImM6XFxcXFxcXFxVc2Vyc1xcXFxcXFxcc2hlZXJ3b29kY1xcXFxcXFxcLnZzY29kZVxcXFxcXFxcZXh0ZW5zaW9uc1xcXFxcXFxcd2FsbGFieWpzLmNvbnNvbGUtbmluamEtMS4wLjM2M1xcXFxcXFxcbm9kZV9tb2R1bGVzXFxcIiwndGhlbicsJ19zZXROb2RlUGVybWlzc2lvbnMnLCdkZXB0aCcsJ2NvdmVyYWdlJywnbGV2ZWwnLCdfcF9uYW1lJywnX1dlYlNvY2tldENsYXNzJywnc29ydFByb3BzJywnX3BfJywnZGF0ZScsJ3N5bWJvbCcsJ19wcm9jZXNzVHJlZU5vZGVSZXN1bHQnLCdNYXAnLCdzbGljZScsJ19zb2NrZXQnLCdfaXNBcnJheSddO18weDQ4NDI9ZnVuY3Rpb24oKXtyZXR1cm4gXzB4NTVhMTkzO307cmV0dXJuIF8weDQ4NDIoKTt9ZnVuY3Rpb24gQihfMHgyZTM2ZWEpe3ZhciBfMHg1ZWFiMTg9XzB4ZmU1ZTQ0LF8weDU3Y2VhYyxfMHgxY2QzZmY7bGV0IF8weDE3NGU0Mz1mdW5jdGlvbihfMHgyZDUyMTQsXzB4NGQ3ZTgyKXtyZXR1cm4gXzB4NGQ3ZTgyLV8weDJkNTIxNDt9LF8weDM1NWRkOTtpZihfMHgyZTM2ZWFbXzB4NWVhYjE4KDB4MWZmKV0pXzB4MzU1ZGQ5PWZ1bmN0aW9uKCl7cmV0dXJuIF8weDJlMzZlYVsncGVyZm9ybWFuY2UnXVsnbm93J10oKTt9O2Vsc2V7aWYoXzB4MmUzNmVhW18weDVlYWIxOCgweDIwNildJiZfMHgyZTM2ZWFbXzB4NWVhYjE4KDB4MjA2KV1bXzB4NWVhYjE4KDB4MjE5KV0mJigoXzB4MWNkM2ZmPShfMHg1N2NlYWM9XzB4MmUzNmVhWydwcm9jZXNzJ10pPT1udWxsP3ZvaWQgMHgwOl8weDU3Y2VhY1tfMHg1ZWFiMTgoMHgxY2MpXSk9PW51bGw/dm9pZCAweDA6XzB4MWNkM2ZmW18weDVlYWIxOCgweDFjMyldKSE9PV8weDVlYWIxOCgweDFmZCkpXzB4MzU1ZGQ5PWZ1bmN0aW9uKCl7dmFyIF8weDJhNWIyMz1fMHg1ZWFiMTg7cmV0dXJuIF8weDJlMzZlYVtfMHgyYTViMjMoMHgyMDYpXVsnaHJ0aW1lJ10oKTt9LF8weDE3NGU0Mz1mdW5jdGlvbihfMHgzN2ExOWMsXzB4MTNiOTY1KXtyZXR1cm4gMHgzZTgqKF8weDEzYjk2NVsweDBdLV8weDM3YTE5Y1sweDBdKSsoXzB4MTNiOTY1WzB4MV0tXzB4MzdhMTljWzB4MV0pLzB4ZjQyNDA7fTtlbHNlIHRyeXtsZXQge3BlcmZvcm1hbmNlOl8weDI0NzRhMH09cmVxdWlyZShfMHg1ZWFiMTgoMHgyOTApKTtfMHgzNTVkZDk9ZnVuY3Rpb24oKXt2YXIgXzB4NTBkZTljPV8weDVlYWIxODtyZXR1cm4gXzB4MjQ3NGEwW18weDUwZGU5YygweDI0OSldKCk7fTt9Y2F0Y2h7XzB4MzU1ZGQ5PWZ1bmN0aW9uKCl7cmV0dXJuK25ldyBEYXRlKCk7fTt9fXJldHVybnsnZWxhcHNlZCc6XzB4MTc0ZTQzLCd0aW1lU3RhbXAnOl8weDM1NWRkOSwnbm93JzooKT0+RGF0ZVsnbm93J10oKX07fWZ1bmN0aW9uIF8weDI4MDAoXzB4MjBjMzE2LF8weDI3ZTQ0ZCl7dmFyIF8weDQ4NDJkNT1fMHg0ODQyKCk7cmV0dXJuIF8weDI4MDA9ZnVuY3Rpb24oXzB4MjgwMDc5LF8weDJiMTM2ZCl7XzB4MjgwMDc5PV8weDI4MDA3OS0weDFhMTt2YXIgXzB4ZjZkY2U5PV8weDQ4NDJkNVtfMHgyODAwNzldO3JldHVybiBfMHhmNmRjZTk7fSxfMHgyODAwKF8weDIwYzMxNixfMHgyN2U0NGQpO31mdW5jdGlvbiBIKF8weDVmMDQ2ZCxfMHhiZmVhNjcsXzB4NGM5ODQ3KXt2YXIgXzB4NDIzMzJjPV8weGZlNWU0NCxfMHg0NTM2ZGYsXzB4M2U1OTFiLF8weDFjMDJmZCxfMHg1NjYxYjcsXzB4ZGE3ODgyO2lmKF8weDVmMDQ2ZFsnX2NvbnNvbGVOaW5qYUFsbG93ZWRUb1N0YXJ0J10hPT12b2lkIDB4MClyZXR1cm4gXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldO2xldCBfMHgxNTJhNDI9KChfMHgzZTU5MWI9KF8weDQ1MzZkZj1fMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDQ1MzZkZlsndmVyc2lvbnMnXSk9PW51bGw/dm9pZCAweDA6XzB4M2U1OTFiW18weDQyMzMyYygweDI4YyldKXx8KChfMHg1NjYxYjc9KF8weDFjMDJmZD1fMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDFjMDJmZFtfMHg0MjMzMmMoMHgxY2MpXSk9PW51bGw/dm9pZCAweDA6XzB4NTY2MWI3W18weDQyMzMyYygweDFjMyldKT09PV8weDQyMzMyYygweDFmZCk7ZnVuY3Rpb24gXzB4NDEyNTk1KF8weDUwMjdkNCl7dmFyIF8weDU3ODJiMT1fMHg0MjMzMmM7aWYoXzB4NTAyN2Q0WydzdGFydHNXaXRoJ10oJy8nKSYmXzB4NTAyN2Q0W18weDU3ODJiMSgweDI5NSldKCcvJykpe2xldCBfMHg1NThmMDM9bmV3IFJlZ0V4cChfMHg1MDI3ZDRbXzB4NTc4MmIxKDB4MWRjKV0oMHgxLC0weDEpKTtyZXR1cm4gXzB4M2QwZDY1PT5fMHg1NThmMDNbJ3Rlc3QnXShfMHgzZDBkNjUpO31lbHNle2lmKF8weDUwMjdkNFsnaW5jbHVkZXMnXSgnKicpfHxfMHg1MDI3ZDRbXzB4NTc4MmIxKDB4Mjk2KV0oJz8nKSl7bGV0IF8weDUxYmViZj1uZXcgUmVnRXhwKCdeJytfMHg1MDI3ZDRbXzB4NTc4MmIxKDB4MjdlKV0oL1xcXFwuL2csU3RyaW5nW18weDU3ODJiMSgweDIxOCldKDB4NWMpKycuJylbXzB4NTc4MmIxKDB4MjdlKV0oL1xcXFwqL2csJy4qJylbXzB4NTc4MmIxKDB4MjdlKV0oL1xcXFw/L2csJy4nKStTdHJpbmdbJ2Zyb21DaGFyQ29kZSddKDB4MjQpKTtyZXR1cm4gXzB4MjRmNjk5PT5fMHg1MWJlYmZbXzB4NTc4MmIxKDB4MjBiKV0oXzB4MjRmNjk5KTt9ZWxzZSByZXR1cm4gXzB4MjA3NjAzPT5fMHgyMDc2MDM9PT1fMHg1MDI3ZDQ7fX1sZXQgXzB4Mjc1Y2VhPV8weGJmZWE2N1tfMHg0MjMzMmMoMHgyNTcpXShfMHg0MTI1OTUpO3JldHVybiBfMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjIwKV09XzB4MTUyYTQyfHwhXzB4YmZlYTY3LCFfMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjIwKV0mJigoXzB4ZGE3ODgyPV8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgxZjcpXSk9PW51bGw/dm9pZCAweDA6XzB4ZGE3ODgyWydob3N0bmFtZSddKSYmKF8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXT1fMHgyNzVjZWFbJ3NvbWUnXShfMHg1NWI0MzU9Pl8weDU1YjQzNShfMHg1ZjA0NmRbJ2xvY2F0aW9uJ11bJ2hvc3RuYW1lJ10pKSksXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldO31mdW5jdGlvbiBYKF8weDJmMWE3MCxfMHg1YmUwNzIsXzB4MzliZTAxLF8weDVhNTc0NSl7dmFyIF8weDFhZTlkZT1fMHhmZTVlNDQ7XzB4MmYxYTcwPV8weDJmMWE3MCxfMHg1YmUwNzI9XzB4NWJlMDcyLF8weDM5YmUwMT1fMHgzOWJlMDEsXzB4NWE1NzQ1PV8weDVhNTc0NTtsZXQgXzB4NDVhZDI0PUIoXzB4MmYxYTcwKSxfMHgzNDkxM2I9XzB4NDVhZDI0W18weDFhZTlkZSgweDFiMSldLF8weDVmNDI1ND1fMHg0NWFkMjRbXzB4MWFlOWRlKDB4MjEyKV07Y2xhc3MgXzB4MzlhZWUze2NvbnN0cnVjdG9yKCl7dmFyIF8weDIwOTQ2Mj1fMHgxYWU5ZGU7dGhpc1tfMHgyMDk0NjIoMHgxYzApXT0vXig/ISg/OmRvfGlmfGlufGZvcnxsZXR8bmV3fHRyeXx2YXJ8Y2FzZXxlbHNlfGVudW18ZXZhbHxmYWxzZXxudWxsfHRoaXN8dHJ1ZXx2b2lkfHdpdGh8YnJlYWt8Y2F0Y2h8Y2xhc3N8Y29uc3R8c3VwZXJ8dGhyb3d8d2hpbGV8eWllbGR8ZGVsZXRlfGV4cG9ydHxpbXBvcnR8cHVibGljfHJldHVybnxzdGF0aWN8c3dpdGNofHR5cGVvZnxkZWZhdWx0fGV4dGVuZHN8ZmluYWxseXxwYWNrYWdlfHByaXZhdGV8Y29udGludWV8ZGVidWdnZXJ8ZnVuY3Rpb258YXJndW1lbnRzfGludGVyZmFjZXxwcm90ZWN0ZWR8aW1wbGVtZW50c3xpbnN0YW5jZW9mKSQpW18kYS16QS1aXFxcXHhBMC1cXFxcdUZGRkZdW18kYS16QS1aMC05XFxcXHhBMC1cXFxcdUZGRkZdKiQvLHRoaXNbXzB4MjA5NDYyKDB4MWZhKV09L14oMHxbMS05XVswLTldKikkLyx0aGlzW18weDIwOTQ2MigweDFiYildPS8nKFteXFxcXFxcXFwnXXxcXFxcXFxcXCcpKicvLHRoaXNbXzB4MjA5NDYyKDB4MjdiKV09XzB4MmYxYTcwW18weDIwOTQ2MigweDIwZildLHRoaXNbJ19IVE1MQWxsQ29sbGVjdGlvbiddPV8weDJmMWE3MFtfMHgyMDk0NjIoMHgyMzkpXSx0aGlzW18weDIwOTQ2MigweDFjYildPU9iamVjdFtfMHgyMDk0NjIoMHgyNTYpXSx0aGlzW18weDIwOTQ2MigweDIwMildPU9iamVjdFtfMHgyMDk0NjIoMHgyODkpXSx0aGlzW18weDIwOTQ2MigweDFiNSldPV8weDJmMWE3MFtfMHgyMDk0NjIoMHgxZTApXSx0aGlzWydfcmVnRXhwVG9TdHJpbmcnXT1SZWdFeHBbJ3Byb3RvdHlwZSddW18weDIwOTQ2MigweDIzMildLHRoaXNbJ19kYXRlVG9TdHJpbmcnXT1EYXRlW18weDIwOTQ2MigweDI4ZCldW18weDIwOTQ2MigweDIzMildO31bXzB4MWFlOWRlKDB4MjNkKV0oXzB4MjRiN2YzLF8weDI5NmY3MyxfMHg0NjY1M2QsXzB4NWJmOWZkKXt2YXIgXzB4ZGEyMWI0PV8weDFhZTlkZSxfMHgyYTJmZDA9dGhpcyxfMHg0ZGQ2YjA9XzB4NDY2NTNkW18weGRhMjFiNCgweDIyYyldO2Z1bmN0aW9uIF8weDEzMWViNihfMHgyNGMxZGYsXzB4MjhiZjU3LF8weDQwOGQ0OCl7dmFyIF8weDQ3OTEzMT1fMHhkYTIxYjQ7XzB4MjhiZjU3W18weDQ3OTEzMSgweDIyOCldPSd1bmtub3duJyxfMHgyOGJmNTdbJ2Vycm9yJ109XzB4MjRjMWRmW18weDQ3OTEzMSgweDIyMildLF8weDFmMGQ1Nj1fMHg0MDhkNDhbXzB4NDc5MTMxKDB4MjhjKV1bXzB4NDc5MTMxKDB4MjY1KV0sXzB4NDA4ZDQ4W18weDQ3OTEzMSgweDI4YyldW18weDQ3OTEzMSgweDI2NSldPV8weDI4YmY1NyxfMHgyYTJmZDBbXzB4NDc5MTMxKDB4MjMxKV0oXzB4MjhiZjU3LF8weDQwOGQ0OCk7fXRyeXtfMHg0NjY1M2RbJ2xldmVsJ10rKyxfMHg0NjY1M2RbJ2F1dG9FeHBhbmQnXSYmXzB4NDY2NTNkWydhdXRvRXhwYW5kUHJldmlvdXNPYmplY3RzJ11bXzB4ZGEyMWI0KDB4MjA0KV0oXzB4Mjk2ZjczKTt2YXIgXzB4MWUyMDk0LF8weDE2YWVmYSxfMHg1NDI1NjYsXzB4NDJlMjhiLF8weGNlN2Y5NT1bXSxfMHhlNmYxYzM9W10sXzB4ZjE3YzI5LF8weDIwN2RiOD10aGlzW18weGRhMjFiNCgweDI3NildKF8weDI5NmY3MyksXzB4Mjc3ZGU2PV8weDIwN2RiOD09PSdhcnJheScsXzB4NWM0MjZjPSEweDEsXzB4NjZmZTFiPV8weDIwN2RiOD09PV8weGRhMjFiNCgweDI1NCksXzB4Y2E2ZTY0PXRoaXNbXzB4ZGEyMWI0KDB4MjJmKV0oXzB4MjA3ZGI4KSxfMHgyYzQwNWE9dGhpc1tfMHhkYTIxYjQoMHgyOTIpXShfMHgyMDdkYjgpLF8weDRmNWQ2Mj1fMHhjYTZlNjR8fF8weDJjNDA1YSxfMHg2OTYxZDM9e30sXzB4MWJjNjU3PTB4MCxfMHgyMDEzMzU9ITB4MSxfMHgxZjBkNTYsXzB4NDZhZTI2PS9eKChbMS05XXsxfVswLTldKil8MCkkLztpZihfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MWQxKV0pe2lmKF8weDI3N2RlNil7aWYoXzB4MTZhZWZhPV8weDI5NmY3M1tfMHhkYTIxYjQoMHgyNGQpXSxfMHgxNmFlZmE+XzB4NDY2NTNkW18weGRhMjFiNCgweDIyZCldKXtmb3IoXzB4NTQyNTY2PTB4MCxfMHg0MmUyOGI9XzB4NDY2NTNkW18weGRhMjFiNCgweDIyZCldLF8weDFlMjA5ND1fMHg1NDI1NjY7XzB4MWUyMDk0PF8weDQyZTI4YjtfMHgxZTIwOTQrKylfMHhlNmYxYzNbXzB4ZGEyMWI0KDB4MjA0KV0oXzB4MmEyZmQwWydfYWRkUHJvcGVydHknXShfMHhjZTdmOTUsXzB4Mjk2ZjczLF8weDIwN2RiOCxfMHgxZTIwOTQsXzB4NDY2NTNkKSk7XzB4MjRiN2YzW18weGRhMjFiNCgweDI1YSldPSEweDA7fWVsc2V7Zm9yKF8weDU0MjU2Nj0weDAsXzB4NDJlMjhiPV8weDE2YWVmYSxfMHgxZTIwOTQ9XzB4NTQyNTY2O18weDFlMjA5NDxfMHg0MmUyOGI7XzB4MWUyMDk0KyspXzB4ZTZmMWMzW18weGRhMjFiNCgweDIwNCldKF8weDJhMmZkMFtfMHhkYTIxYjQoMHgxYjgpXShfMHhjZTdmOTUsXzB4Mjk2ZjczLF8weDIwN2RiOCxfMHgxZTIwOTQsXzB4NDY2NTNkKSk7fV8weDQ2NjUzZFsnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnXSs9XzB4ZTZmMWMzW18weGRhMjFiNCgweDI0ZCldO31pZighKF8weDIwN2RiOD09PV8weGRhMjFiNCgweDIxNyl8fF8weDIwN2RiOD09PV8weGRhMjFiNCgweDIwZikpJiYhXzB4Y2E2ZTY0JiZfMHgyMDdkYjghPT1fMHhkYTIxYjQoMHgyOTMpJiZfMHgyMDdkYjghPT1fMHhkYTIxYjQoMHgyNWIpJiZfMHgyMDdkYjghPT1fMHhkYTIxYjQoMHgyNjkpKXt2YXIgXzB4NTZiMzgwPV8weDViZjlmZFtfMHhkYTIxYjQoMHgxZTkpXXx8XzB4NDY2NTNkW18weGRhMjFiNCgweDFlOSldO2lmKHRoaXNbJ19pc1NldCddKF8weDI5NmY3Myk/KF8weDFlMjA5ND0weDAsXzB4Mjk2ZjczW18weGRhMjFiNCgweDI1OCldKGZ1bmN0aW9uKF8weDM2NTc4Mil7dmFyIF8weDIwNDE1ZT1fMHhkYTIxYjQ7aWYoXzB4MWJjNjU3KyssXzB4NDY2NTNkWydhdXRvRXhwYW5kUHJvcGVydHlDb3VudCddKyssXzB4MWJjNjU3Pl8weDU2YjM4MCl7XzB4MjAxMzM1PSEweDA7cmV0dXJuO31pZighXzB4NDY2NTNkWydpc0V4cHJlc3Npb25Ub0V2YWx1YXRlJ10mJl8weDQ2NjUzZFsnYXV0b0V4cGFuZCddJiZfMHg0NjY1M2RbXzB4MjA0MTVlKDB4MjVmKV0+XzB4NDY2NTNkW18weDIwNDE1ZSgweDI0MSldKXtfMHgyMDEzMzU9ITB4MDtyZXR1cm47fV8weGU2ZjFjM1sncHVzaCddKF8weDJhMmZkMFtfMHgyMDQxNWUoMHgxYjgpXShfMHhjZTdmOTUsXzB4Mjk2ZjczLCdTZXQnLF8weDFlMjA5NCsrLF8weDQ2NjUzZCxmdW5jdGlvbihfMHg0NjQwNzQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBfMHg0NjQwNzQ7fTt9KF8weDM2NTc4MikpKTt9KSk6dGhpc1tfMHhkYTIxYjQoMHgyODMpXShfMHgyOTZmNzMpJiZfMHgyOTZmNzNbXzB4ZGEyMWI0KDB4MjU4KV0oZnVuY3Rpb24oXzB4Mzc4NDMwLF8weDI4YjFjNil7dmFyIF8weDI5YWMzOD1fMHhkYTIxYjQ7aWYoXzB4MWJjNjU3KyssXzB4NDY2NTNkW18weDI5YWMzOCgweDI1ZildKyssXzB4MWJjNjU3Pl8weDU2YjM4MCl7XzB4MjAxMzM1PSEweDA7cmV0dXJuO31pZighXzB4NDY2NTNkW18weDI5YWMzOCgweDIxZSldJiZfMHg0NjY1M2RbJ2F1dG9FeHBhbmQnXSYmXzB4NDY2NTNkW18weDI5YWMzOCgweDI1ZildPl8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyNDEpXSl7XzB4MjAxMzM1PSEweDA7cmV0dXJuO312YXIgXzB4MzlkZGYzPV8weDI4YjFjNlsndG9TdHJpbmcnXSgpO18weDM5ZGRmM1tfMHgyOWFjMzgoMHgyNGQpXT4weDY0JiYoXzB4MzlkZGYzPV8weDM5ZGRmM1tfMHgyOWFjMzgoMHgxZGMpXSgweDAsMHg2NCkrXzB4MjlhYzM4KDB4MWVkKSksXzB4ZTZmMWMzW18weDI5YWMzOCgweDIwNCldKF8weDJhMmZkMFtfMHgyOWFjMzgoMHgxYjgpXShfMHhjZTdmOTUsXzB4Mjk2ZjczLF8weDI5YWMzOCgweDFkYiksXzB4MzlkZGYzLF8weDQ2NjUzZCxmdW5jdGlvbihfMHg0NmJkN2Epe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBfMHg0NmJkN2E7fTt9KF8weDM3ODQzMCkpKTt9KSwhXzB4NWM0MjZjKXt0cnl7Zm9yKF8weGYxN2MyOSBpbiBfMHgyOTZmNzMpaWYoIShfMHgyNzdkZTYmJl8weDQ2YWUyNltfMHhkYTIxYjQoMHgyMGIpXShfMHhmMTdjMjkpKSYmIXRoaXNbJ19ibGFja2xpc3RlZFByb3BlcnR5J10oXzB4Mjk2ZjczLF8weGYxN2MyOSxfMHg0NjY1M2QpKXtpZihfMHgxYmM2NTcrKyxfMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J10rKyxfMHgxYmM2NTc+XzB4NTZiMzgwKXtfMHgyMDEzMzU9ITB4MDticmVhazt9aWYoIV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMWUpXSYmXzB4NDY2NTNkWydhdXRvRXhwYW5kJ10mJl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyNWYpXT5fMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjQxKV0pe18weDIwMTMzNT0hMHgwO2JyZWFrO31fMHhlNmYxYzNbXzB4ZGEyMWI0KDB4MjA0KV0oXzB4MmEyZmQwW18weGRhMjFiNCgweDFmZSldKF8weGNlN2Y5NSxfMHg2OTYxZDMsXzB4Mjk2ZjczLF8weDIwN2RiOCxfMHhmMTdjMjksXzB4NDY2NTNkKSk7fX1jYXRjaHt9aWYoXzB4Njk2MWQzW18weGRhMjFiNCgweDFhYyldPSEweDAsXzB4NjZmZTFiJiYoXzB4Njk2MWQzW18weGRhMjFiNCgweDFkNCldPSEweDApLCFfMHgyMDEzMzUpe3ZhciBfMHgyNjU4YmE9W11bXzB4ZGEyMWI0KDB4MjI0KV0odGhpc1tfMHhkYTIxYjQoMHgyMDIpXShfMHgyOTZmNzMpKVtfMHhkYTIxYjQoMHgyMjQpXSh0aGlzW18weGRhMjFiNCgweDFlNildKF8weDI5NmY3MykpO2ZvcihfMHgxZTIwOTQ9MHgwLF8weDE2YWVmYT1fMHgyNjU4YmFbXzB4ZGEyMWI0KDB4MjRkKV07XzB4MWUyMDk0PF8weDE2YWVmYTtfMHgxZTIwOTQrKylpZihfMHhmMTdjMjk9XzB4MjY1OGJhW18weDFlMjA5NF0sIShfMHgyNzdkZTYmJl8weDQ2YWUyNltfMHhkYTIxYjQoMHgyMGIpXShfMHhmMTdjMjlbXzB4ZGEyMWI0KDB4MjMyKV0oKSkpJiYhdGhpc1tfMHhkYTIxYjQoMHgxYjApXShfMHgyOTZmNzMsXzB4ZjE3YzI5LF8weDQ2NjUzZCkmJiFfMHg2OTYxZDNbXzB4ZGEyMWI0KDB4MWQ3KStfMHhmMTdjMjlbXzB4ZGEyMWI0KDB4MjMyKV0oKV0pe2lmKF8weDFiYzY1NysrLF8weDQ2NjUzZFsnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnXSsrLF8weDFiYzY1Nz5fMHg1NmIzODApe18weDIwMTMzNT0hMHgwO2JyZWFrO31pZighXzB4NDY2NTNkW18weGRhMjFiNCgweDIxZSldJiZfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJjKV0mJl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyNWYpXT5fMHg0NjY1M2RbJ2F1dG9FeHBhbmRMaW1pdCddKXtfMHgyMDEzMzU9ITB4MDticmVhazt9XzB4ZTZmMWMzWydwdXNoJ10oXzB4MmEyZmQwW18weGRhMjFiNCgweDFmZSldKF8weGNlN2Y5NSxfMHg2OTYxZDMsXzB4Mjk2ZjczLF8weDIwN2RiOCxfMHhmMTdjMjksXzB4NDY2NTNkKSk7fX19fX1pZihfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MjI4KV09XzB4MjA3ZGI4LF8weDRmNWQ2Mj8oXzB4MjRiN2YzW18weGRhMjFiNCgweDFmNCldPV8weDI5NmY3M1sndmFsdWVPZiddKCksdGhpc1snX2NhcElmU3RyaW5nJ10oXzB4MjA3ZGI4LF8weDI0YjdmMyxfMHg0NjY1M2QsXzB4NWJmOWZkKSk6XzB4MjA3ZGI4PT09J2RhdGUnP18weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT10aGlzWydfZGF0ZVRvU3RyaW5nJ11bXzB4ZGEyMWI0KDB4MjczKV0oXzB4Mjk2ZjczKTpfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyNjkpP18weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT1fMHgyOTZmNzNbXzB4ZGEyMWI0KDB4MjMyKV0oKTpfMHgyMDdkYjg9PT0nUmVnRXhwJz9fMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09dGhpc1tfMHhkYTIxYjQoMHgyMDcpXVtfMHhkYTIxYjQoMHgyNzMpXShfMHgyOTZmNzMpOl8weDIwN2RiOD09PV8weGRhMjFiNCgweDFkOSkmJnRoaXNbXzB4ZGEyMWI0KDB4MWI1KV0/XzB4MjRiN2YzW18weGRhMjFiNCgweDFmNCldPXRoaXNbXzB4ZGEyMWI0KDB4MWI1KV1bXzB4ZGEyMWI0KDB4MjhkKV1bXzB4ZGEyMWI0KDB4MjMyKV1bXzB4ZGEyMWI0KDB4MjczKV0oXzB4Mjk2ZjczKTohXzB4NDY2NTNkW18weGRhMjFiNCgweDFkMSldJiYhKF8weDIwN2RiOD09PV8weGRhMjFiNCgweDIxNyl8fF8weDIwN2RiOD09PV8weGRhMjFiNCgweDIwZikpJiYoZGVsZXRlIF8weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXSxfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MjEwKV09ITB4MCksXzB4MjAxMzM1JiYoXzB4MjRiN2YzW18weGRhMjFiNCgweDIxNCldPSEweDApLF8weDFmMGQ1Nj1fMHg0NjY1M2RbJ25vZGUnXVtfMHhkYTIxYjQoMHgyNjUpXSxfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjhjKV1bXzB4ZGEyMWI0KDB4MjY1KV09XzB4MjRiN2YzLHRoaXNbXzB4ZGEyMWI0KDB4MjMxKV0oXzB4MjRiN2YzLF8weDQ2NjUzZCksXzB4ZTZmMWMzW18weGRhMjFiNCgweDI0ZCldKXtmb3IoXzB4MWUyMDk0PTB4MCxfMHgxNmFlZmE9XzB4ZTZmMWMzWydsZW5ndGgnXTtfMHgxZTIwOTQ8XzB4MTZhZWZhO18weDFlMjA5NCsrKV8weGU2ZjFjM1tfMHgxZTIwOTRdKF8weDFlMjA5NCk7fV8weGNlN2Y5NVtfMHhkYTIxYjQoMHgyNGQpXSYmKF8weDI0YjdmM1tfMHhkYTIxYjQoMHgxZTkpXT1fMHhjZTdmOTUpO31jYXRjaChfMHgzOGVmNmQpe18weDEzMWViNihfMHgzOGVmNmQsXzB4MjRiN2YzLF8weDQ2NjUzZCk7fXJldHVybiB0aGlzW18weGRhMjFiNCgweDIzNildKF8weDI5NmY3MyxfMHgyNGI3ZjMpLHRoaXNbXzB4ZGEyMWI0KDB4MjM4KV0oXzB4MjRiN2YzLF8weDQ2NjUzZCksXzB4NDY2NTNkW18weGRhMjFiNCgweDI4YyldW18weGRhMjFiNCgweDI2NSldPV8weDFmMGQ1NixfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MWQzKV0tLSxfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJjKV09XzB4NGRkNmIwLF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmMpXSYmXzB4NDY2NTNkW18weGRhMjFiNCgweDIyZSldW18weGRhMjFiNCgweDIyOSldKCksXzB4MjRiN2YzO31bXzB4MWFlOWRlKDB4MWU2KV0oXzB4Yjc0ZWJkKXt2YXIgXzB4MTc1M2Q2PV8weDFhZTlkZTtyZXR1cm4gT2JqZWN0W18weDE3NTNkNigweDFmNSldP09iamVjdFtfMHgxNzUzZDYoMHgxZjUpXShfMHhiNzRlYmQpOltdO31bXzB4MWFlOWRlKDB4Mjg3KV0oXzB4MjhkMmVmKXt2YXIgXzB4MzNlMTdmPV8weDFhZTlkZTtyZXR1cm4hIShfMHgyOGQyZWYmJl8weDJmMWE3MFtfMHgzM2UxN2YoMHgxZjgpXSYmdGhpc1tfMHgzM2UxN2YoMHgyMWEpXShfMHgyOGQyZWYpPT09XzB4MzNlMTdmKDB4MjQyKSYmXzB4MjhkMmVmW18weDMzZTE3ZigweDI1OCldKTt9W18weDFhZTlkZSgweDFiMCldKF8weDMyOWIxYixfMHg0MjI5MmEsXzB4MzdhYjJjKXt2YXIgXzB4NDUzYWM5PV8weDFhZTlkZTtyZXR1cm4gXzB4MzdhYjJjW18weDQ1M2FjOSgweDFiNildP3R5cGVvZiBfMHgzMjliMWJbXzB4NDIyOTJhXT09J2Z1bmN0aW9uJzohMHgxO31bXzB4MWFlOWRlKDB4Mjc2KV0oXzB4MjJmMDU4KXt2YXIgXzB4MjQxYjdhPV8weDFhZTlkZSxfMHgzZDRlNjU9Jyc7cmV0dXJuIF8weDNkNGU2NT10eXBlb2YgXzB4MjJmMDU4LF8weDNkNGU2NT09PSdvYmplY3QnP3RoaXNbJ19vYmplY3RUb1N0cmluZyddKF8weDIyZjA1OCk9PT0nW29iamVjdFxcXFx4MjBBcnJheV0nP18weDNkNGU2NT0nYXJyYXknOnRoaXNbXzB4MjQxYjdhKDB4MjFhKV0oXzB4MjJmMDU4KT09PV8weDI0MWI3YSgweDI0Myk/XzB4M2Q0ZTY1PV8weDI0MWI3YSgweDFkOCk6dGhpc1tfMHgyNDFiN2EoMHgyMWEpXShfMHgyMmYwNTgpPT09XzB4MjQxYjdhKDB4MjM1KT9fMHgzZDRlNjU9XzB4MjQxYjdhKDB4MjY5KTpfMHgyMmYwNTg9PT1udWxsP18weDNkNGU2NT1fMHgyNDFiN2EoMHgyMTcpOl8weDIyZjA1OFtfMHgyNDFiN2EoMHgyMTYpXSYmKF8weDNkNGU2NT1fMHgyMmYwNThbXzB4MjQxYjdhKDB4MjE2KV1bXzB4MjQxYjdhKDB4MjFiKV18fF8weDNkNGU2NSk6XzB4M2Q0ZTY1PT09XzB4MjQxYjdhKDB4MjBmKSYmdGhpc1snX0hUTUxBbGxDb2xsZWN0aW9uJ10mJl8weDIyZjA1OCBpbnN0YW5jZW9mIHRoaXNbXzB4MjQxYjdhKDB4Mjg1KV0mJihfMHgzZDRlNjU9XzB4MjQxYjdhKDB4MjM5KSksXzB4M2Q0ZTY1O31bXzB4MWFlOWRlKDB4MjFhKV0oXzB4MWRlODcyKXt2YXIgXzB4MzU3MGU5PV8weDFhZTlkZTtyZXR1cm4gT2JqZWN0W18weDM1NzBlOSgweDI4ZCldW18weDM1NzBlOSgweDIzMildW18weDM1NzBlOSgweDI3MyldKF8weDFkZTg3Mik7fVtfMHgxYWU5ZGUoMHgyMmYpXShfMHg0MmI5ODEpe3ZhciBfMHgxYjQzODk9XzB4MWFlOWRlO3JldHVybiBfMHg0MmI5ODE9PT0nYm9vbGVhbid8fF8weDQyYjk4MT09PSdzdHJpbmcnfHxfMHg0MmI5ODE9PT1fMHgxYjQzODkoMHgxZjApO31bJ19pc1ByaW1pdGl2ZVdyYXBwZXJUeXBlJ10oXzB4NTdkMTJhKXt2YXIgXzB4NTFmYTQwPV8weDFhZTlkZTtyZXR1cm4gXzB4NTdkMTJhPT09J0Jvb2xlYW4nfHxfMHg1N2QxMmE9PT0nU3RyaW5nJ3x8XzB4NTdkMTJhPT09XzB4NTFmYTQwKDB4MjI1KTt9W18weDFhZTlkZSgweDFiOCldKF8weDNkZTkwZSxfMHgxNGI4MmYsXzB4MTU4ODVmLF8weDIyYjI2ZSxfMHg1YmYwNjEsXzB4MmJhZTg1KXt2YXIgXzB4Mjc5ZDMwPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKF8weDU2YzY4OCl7dmFyIF8weDMxY2I0OT1fMHgyODAwLF8weDY0ZmNhMD1fMHg1YmYwNjFbXzB4MzFjYjQ5KDB4MjhjKV1bXzB4MzFjYjQ5KDB4MjY1KV0sXzB4MTg5Y2Q4PV8weDViZjA2MVsnbm9kZSddW18weDMxY2I0OSgweDI1ZCldLF8weDVlYTI1Zj1fMHg1YmYwNjFbXzB4MzFjYjQ5KDB4MjhjKV1bJ3BhcmVudCddO18weDViZjA2MVsnbm9kZSddW18weDMxY2I0OSgweDIzYildPV8weDY0ZmNhMCxfMHg1YmYwNjFbJ25vZGUnXVtfMHgzMWNiNDkoMHgyNWQpXT10eXBlb2YgXzB4MjJiMjZlPT1fMHgzMWNiNDkoMHgxZjApP18weDIyYjI2ZTpfMHg1NmM2ODgsXzB4M2RlOTBlW18weDMxY2I0OSgweDIwNCldKF8weDI3OWQzMFtfMHgzMWNiNDkoMHgyNWMpXShfMHgxNGI4MmYsXzB4MTU4ODVmLF8weDIyYjI2ZSxfMHg1YmYwNjEsXzB4MmJhZTg1KSksXzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldW18weDMxY2I0OSgweDIzYildPV8weDVlYTI1ZixfMHg1YmYwNjFbXzB4MzFjYjQ5KDB4MjhjKV1bXzB4MzFjYjQ5KDB4MjVkKV09XzB4MTg5Y2Q4O307fVsnX2FkZE9iamVjdFByb3BlcnR5J10oXzB4OGYxNzE0LF8weDQ2YzE5ZSxfMHgzMDg3OTMsXzB4NTNiZjEzLF8weDNjNTcxMixfMHgzZWI3ZGIsXzB4NGRkODgxKXt2YXIgXzB4NTU3NDQ0PV8weDFhZTlkZSxfMHg1ODc2NmM9dGhpcztyZXR1cm4gXzB4NDZjMTllW18weDU1NzQ0NCgweDFkNykrXzB4M2M1NzEyWyd0b1N0cmluZyddKCldPSEweDAsZnVuY3Rpb24oXzB4NDk0YTc0KXt2YXIgXzB4M2M3MzliPV8weDU1NzQ0NCxfMHgzOGMwOTk9XzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDI2NSldLF8weGVhODg2NT1fMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjVkKV0sXzB4MWRhNTgzPV8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyM2IpXTtfMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjNiKV09XzB4MzhjMDk5LF8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyNWQpXT1fMHg0OTRhNzQsXzB4OGYxNzE0W18weDNjNzM5YigweDIwNCldKF8weDU4NzY2Y1tfMHgzYzczOWIoMHgyNWMpXShfMHgzMDg3OTMsXzB4NTNiZjEzLF8weDNjNTcxMixfMHgzZWI3ZGIsXzB4NGRkODgxKSksXzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDIzYildPV8weDFkYTU4MyxfMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjVkKV09XzB4ZWE4ODY1O307fVtfMHgxYWU5ZGUoMHgyNWMpXShfMHhhMjZhZjcsXzB4ZDE3ODNjLF8weDRjMzQxMCxfMHhhM2JmMixfMHg5ZmFkOTgpe3ZhciBfMHhhNjNhNGI9XzB4MWFlOWRlLF8weDM2ZWNhOT10aGlzO18weDlmYWQ5OHx8KF8weDlmYWQ5OD1mdW5jdGlvbihfMHg0OTU4YTgsXzB4NDFjYTI4KXtyZXR1cm4gXzB4NDk1OGE4W18weDQxY2EyOF07fSk7dmFyIF8weDI5Y2JiOT1fMHg0YzM0MTBbXzB4YTYzYTRiKDB4MjMyKV0oKSxfMHg1Y2ZiNDY9XzB4YTNiZjJbXzB4YTYzYTRiKDB4Mjc3KV18fHt9LF8weDQ0NTE4Mz1fMHhhM2JmMltfMHhhNjNhNGIoMHgxZDEpXSxfMHgzMTZmNTA9XzB4YTNiZjJbJ2lzRXhwcmVzc2lvblRvRXZhbHVhdGUnXTt0cnl7dmFyIF8weDE0MWQyNT10aGlzWydfaXNNYXAnXShfMHhhMjZhZjcpLF8weGZkNWY2Nz1fMHgyOWNiYjk7XzB4MTQxZDI1JiZfMHhmZDVmNjdbMHgwXT09PSdcXFxceDI3JyYmKF8weGZkNWY2Nz1fMHhmZDVmNjdbXzB4YTYzYTRiKDB4MWE5KV0oMHgxLF8weGZkNWY2N1tfMHhhNjNhNGIoMHgyNGQpXS0weDIpKTt2YXIgXzB4NGZkYjRkPV8weGEzYmYyW18weGE2M2E0YigweDI3NyldPV8weDVjZmI0NltfMHhhNjNhNGIoMHgxZDcpK18weGZkNWY2N107XzB4NGZkYjRkJiYoXzB4YTNiZjJbXzB4YTYzYTRiKDB4MWQxKV09XzB4YTNiZjJbXzB4YTYzYTRiKDB4MWQxKV0rMHgxKSxfMHhhM2JmMltfMHhhNjNhNGIoMHgyMWUpXT0hIV8weDRmZGI0ZDt2YXIgXzB4NDc1MTU3PXR5cGVvZiBfMHg0YzM0MTA9PSdzeW1ib2wnLF8weDI5ZDg1Yz17J25hbWUnOl8weDQ3NTE1N3x8XzB4MTQxZDI1P18weDI5Y2JiOTp0aGlzWydfcHJvcGVydHlOYW1lJ10oXzB4MjljYmI5KX07aWYoXzB4NDc1MTU3JiYoXzB4MjlkODVjW18weGE2M2E0YigweDFkOSldPSEweDApLCEoXzB4ZDE3ODNjPT09XzB4YTYzYTRiKDB4MjRmKXx8XzB4ZDE3ODNjPT09XzB4YTYzYTRiKDB4MjRlKSkpe3ZhciBfMHgyNjBiNzM9dGhpc1tfMHhhNjNhNGIoMHgxY2IpXShfMHhhMjZhZjcsXzB4NGMzNDEwKTtpZihfMHgyNjBiNzMmJihfMHgyNjBiNzNbXzB4YTYzYTRiKDB4MjA1KV0mJihfMHgyOWQ4NWNbXzB4YTYzYTRiKDB4MWE1KV09ITB4MCksXzB4MjYwYjczW18weGE2M2E0YigweDFmYildJiYhXzB4NGZkYjRkJiYhXzB4YTNiZjJbXzB4YTYzYTRiKDB4MWJlKV0pKXJldHVybiBfMHgyOWQ4NWNbJ2dldHRlciddPSEweDAsdGhpc1tfMHhhNjNhNGIoMHgxZGEpXShfMHgyOWQ4NWMsXzB4YTNiZjIpLF8weDI5ZDg1Yzt9dmFyIF8weDE5NGZhNTt0cnl7XzB4MTk0ZmE1PV8weDlmYWQ5OChfMHhhMjZhZjcsXzB4NGMzNDEwKTt9Y2F0Y2goXzB4MmMzMTQyKXtyZXR1cm4gXzB4MjlkODVjPXsnbmFtZSc6XzB4MjljYmI5LCd0eXBlJzpfMHhhNjNhNGIoMHgxYzgpLCdlcnJvcic6XzB4MmMzMTQyW18weGE2M2E0YigweDIyMildfSx0aGlzW18weGE2M2E0YigweDFkYSldKF8weDI5ZDg1YyxfMHhhM2JmMiksXzB4MjlkODVjO312YXIgXzB4NTA4NTJhPXRoaXNbXzB4YTYzYTRiKDB4Mjc2KV0oXzB4MTk0ZmE1KSxfMHgzYWI3OWU9dGhpc1tfMHhhNjNhNGIoMHgyMmYpXShfMHg1MDg1MmEpO2lmKF8weDI5ZDg1Y1tfMHhhNjNhNGIoMHgyMjgpXT1fMHg1MDg1MmEsXzB4M2FiNzllKXRoaXNbXzB4YTYzYTRiKDB4MWRhKV0oXzB4MjlkODVjLF8weGEzYmYyLF8weDE5NGZhNSxmdW5jdGlvbigpe3ZhciBfMHgzMGEzM2Y9XzB4YTYzYTRiO18weDI5ZDg1Y1tfMHgzMGEzM2YoMHgxZjQpXT1fMHgxOTRmYTVbJ3ZhbHVlT2YnXSgpLCFfMHg0ZmRiNGQmJl8weDM2ZWNhOVtfMHgzMGEzM2YoMHgxYzQpXShfMHg1MDg1MmEsXzB4MjlkODVjLF8weGEzYmYyLHt9KTt9KTtlbHNle3ZhciBfMHgyZWI4ZDE9XzB4YTNiZjJbXzB4YTYzYTRiKDB4MjJjKV0mJl8weGEzYmYyW18weGE2M2E0YigweDFkMyldPF8weGEzYmYyWydhdXRvRXhwYW5kTWF4RGVwdGgnXSYmXzB4YTNiZjJbXzB4YTYzYTRiKDB4MjJlKV1bJ2luZGV4T2YnXShfMHgxOTRmYTUpPDB4MCYmXzB4NTA4NTJhIT09J2Z1bmN0aW9uJyYmXzB4YTNiZjJbXzB4YTYzYTRiKDB4MjVmKV08XzB4YTNiZjJbJ2F1dG9FeHBhbmRMaW1pdCddO18weDJlYjhkMXx8XzB4YTNiZjJbXzB4YTYzYTRiKDB4MWQzKV08XzB4NDQ1MTgzfHxfMHg0ZmRiNGQ/KHRoaXNbJ3NlcmlhbGl6ZSddKF8weDI5ZDg1YyxfMHgxOTRmYTUsXzB4YTNiZjIsXzB4NGZkYjRkfHx7fSksdGhpc1tfMHhhNjNhNGIoMHgyMzYpXShfMHgxOTRmYTUsXzB4MjlkODVjKSk6dGhpc1tfMHhhNjNhNGIoMHgxZGEpXShfMHgyOWQ4NWMsXzB4YTNiZjIsXzB4MTk0ZmE1LGZ1bmN0aW9uKCl7dmFyIF8weDFhYzJmND1fMHhhNjNhNGI7XzB4NTA4NTJhPT09XzB4MWFjMmY0KDB4MjE3KXx8XzB4NTA4NTJhPT09J3VuZGVmaW5lZCd8fChkZWxldGUgXzB4MjlkODVjWyd2YWx1ZSddLF8weDI5ZDg1Y1tfMHgxYWMyZjQoMHgyMTApXT0hMHgwKTt9KTt9cmV0dXJuIF8weDI5ZDg1Yzt9ZmluYWxseXtfMHhhM2JmMltfMHhhNjNhNGIoMHgyNzcpXT1fMHg1Y2ZiNDYsXzB4YTNiZjJbJ2RlcHRoJ109XzB4NDQ1MTgzLF8weGEzYmYyW18weGE2M2E0YigweDIxZSldPV8weDMxNmY1MDt9fVsnX2NhcElmU3RyaW5nJ10oXzB4MTVhNjE5LF8weDJlOTU1MSxfMHgyZDBkYzcsXzB4M2FhNjFkKXt2YXIgXzB4MWNjZmQ4PV8weDFhZTlkZSxfMHgxNGU1Y2U9XzB4M2FhNjFkW18weDFjY2ZkOCgweDI2OCldfHxfMHgyZDBkYzdbXzB4MWNjZmQ4KDB4MjY4KV07aWYoKF8weDE1YTYxOT09PV8weDFjY2ZkOCgweDI4Mil8fF8weDE1YTYxOT09PV8weDFjY2ZkOCgweDI5MykpJiZfMHgyZTk1NTFbJ3ZhbHVlJ10pe2xldCBfMHgzODE3NDM9XzB4MmU5NTUxW18weDFjY2ZkOCgweDFmNCldWydsZW5ndGgnXTtfMHgyZDBkYzdbJ2FsbFN0ckxlbmd0aCddKz1fMHgzODE3NDMsXzB4MmQwZGM3WydhbGxTdHJMZW5ndGgnXT5fMHgyZDBkYzdbJ3RvdGFsU3RyTGVuZ3RoJ10/KF8weDJlOTU1MVtfMHgxY2NmZDgoMHgyMTApXT0nJyxkZWxldGUgXzB4MmU5NTUxW18weDFjY2ZkOCgweDFmNCldKTpfMHgzODE3NDM+XzB4MTRlNWNlJiYoXzB4MmU5NTUxW18weDFjY2ZkOCgweDIxMCldPV8weDJlOTU1MVtfMHgxY2NmZDgoMHgxZjQpXVsnc3Vic3RyJ10oMHgwLF8weDE0ZTVjZSksZGVsZXRlIF8weDJlOTU1MVsndmFsdWUnXSk7fX1bXzB4MWFlOWRlKDB4MjgzKV0oXzB4MTFhYjNlKXt2YXIgXzB4NDU1YmNkPV8weDFhZTlkZTtyZXR1cm4hIShfMHgxMWFiM2UmJl8weDJmMWE3MFsnTWFwJ10mJnRoaXNbXzB4NDU1YmNkKDB4MjFhKV0oXzB4MTFhYjNlKT09PV8weDQ1NWJjZCgweDIwZSkmJl8weDExYWIzZVtfMHg0NTViY2QoMHgyNTgpXSk7fVtfMHgxYWU5ZGUoMHgyMTMpXShfMHg1OTc2MWQpe3ZhciBfMHgyMDVkOTQ9XzB4MWFlOWRlO2lmKF8weDU5NzYxZFtfMHgyMDVkOTQoMHgyNmEpXSgvXlxcXFxkKyQvKSlyZXR1cm4gXzB4NTk3NjFkO3ZhciBfMHgyODNiYWQ7dHJ5e18weDI4M2JhZD1KU09OW18weDIwNWQ5NCgweDFjMildKCcnK18weDU5NzYxZCk7fWNhdGNoe18weDI4M2JhZD0nXFxcXHgyMicrdGhpc1tfMHgyMDVkOTQoMHgyMWEpXShfMHg1OTc2MWQpKydcXFxceDIyJzt9cmV0dXJuIF8weDI4M2JhZFsnbWF0Y2gnXSgvXlxcXCIoW2EtekEtWl9dW2EtekEtWl8wLTldKilcXFwiJC8pP18weDI4M2JhZD1fMHgyODNiYWRbXzB4MjA1ZDk0KDB4MWE5KV0oMHgxLF8weDI4M2JhZFtfMHgyMDVkOTQoMHgyNGQpXS0weDIpOl8weDI4M2JhZD1fMHgyODNiYWRbXzB4MjA1ZDk0KDB4MjdlKV0oLycvZywnXFxcXHg1Y1xcXFx4MjcnKVtfMHgyMDVkOTQoMHgyN2UpXSgvXFxcXFxcXFxcXFwiL2csJ1xcXFx4MjInKVtfMHgyMDVkOTQoMHgyN2UpXSgvKF5cXFwifFxcXCIkKS9nLCdcXFxceDI3JyksXzB4MjgzYmFkO31bXzB4MWFlOWRlKDB4MWRhKV0oXzB4NTViYjExLF8weDFiMzc5NSxfMHg0OGYyNjEsXzB4M2UyMWFhKXt2YXIgXzB4NTcxYWRjPV8weDFhZTlkZTt0aGlzW18weDU3MWFkYygweDIzMSldKF8weDU1YmIxMSxfMHgxYjM3OTUpLF8weDNlMjFhYSYmXzB4M2UyMWFhKCksdGhpc1snX2FkZGl0aW9uYWxNZXRhZGF0YSddKF8weDQ4ZjI2MSxfMHg1NWJiMTEpLHRoaXNbXzB4NTcxYWRjKDB4MjM4KV0oXzB4NTViYjExLF8weDFiMzc5NSk7fVtfMHgxYWU5ZGUoMHgyMzEpXShfMHhlMDgyZWQsXzB4NTBiNzAwKXt2YXIgXzB4NDg5ZDlmPV8weDFhZTlkZTt0aGlzWydfc2V0Tm9kZUlkJ10oXzB4ZTA4MmVkLF8weDUwYjcwMCksdGhpc1tfMHg0ODlkOWYoMHgxYzEpXShfMHhlMDgyZWQsXzB4NTBiNzAwKSx0aGlzWydfc2V0Tm9kZUV4cHJlc3Npb25QYXRoJ10oXzB4ZTA4MmVkLF8weDUwYjcwMCksdGhpc1snX3NldE5vZGVQZXJtaXNzaW9ucyddKF8weGUwODJlZCxfMHg1MGI3MDApO31bJ19zZXROb2RlSWQnXShfMHg1NmUyMDAsXzB4NDUzMTk4KXt9Wydfc2V0Tm9kZVF1ZXJ5UGF0aCddKF8weDQwYTk1ZixfMHgxZjYxN2Epe31bXzB4MWFlOWRlKDB4MjBhKV0oXzB4Mjk1YzZhLF8weDI5N2JiNCl7fVtfMHgxYWU5ZGUoMHgxZWYpXShfMHgzZjY5MjUpe3JldHVybiBfMHgzZjY5MjU9PT10aGlzWydfdW5kZWZpbmVkJ107fVtfMHgxYWU5ZGUoMHgyMzgpXShfMHgyMTU4NDAsXzB4MjI5MmZkKXt2YXIgXzB4NTQ0YzM3PV8weDFhZTlkZTt0aGlzW18weDU0NGMzNygweDIwYSldKF8weDIxNTg0MCxfMHgyMjkyZmQpLHRoaXNbJ19zZXROb2RlRXhwYW5kYWJsZVN0YXRlJ10oXzB4MjE1ODQwKSxfMHgyMjkyZmRbXzB4NTQ0YzM3KDB4MWQ2KV0mJnRoaXNbJ19zb3J0UHJvcHMnXShfMHgyMTU4NDApLHRoaXNbXzB4NTQ0YzM3KDB4MWFmKV0oXzB4MjE1ODQwLF8weDIyOTJmZCksdGhpc1tfMHg1NDRjMzcoMHgyNzEpXShfMHgyMTU4NDAsXzB4MjI5MmZkKSx0aGlzW18weDU0NGMzNygweDI1MyldKF8weDIxNTg0MCk7fVtfMHgxYWU5ZGUoMHgyMzYpXShfMHg5MGUzN2QsXzB4MjkwNWFjKXt2YXIgXzB4MjQ1YmY0PV8weDFhZTlkZTtsZXQgXzB4NDA0YTUzO3RyeXtfMHgyZjFhNzBbXzB4MjQ1YmY0KDB4MjI3KV0mJihfMHg0MDRhNTM9XzB4MmYxYTcwW18weDI0NWJmNCgweDIyNyldW18weDI0NWJmNCgweDIyYSldLF8weDJmMWE3MFtfMHgyNDViZjQoMHgyMjcpXVtfMHgyNDViZjQoMHgyMmEpXT1mdW5jdGlvbigpe30pLF8weDkwZTM3ZCYmdHlwZW9mIF8weDkwZTM3ZFtfMHgyNDViZjQoMHgyNGQpXT09XzB4MjQ1YmY0KDB4MWYwKSYmKF8weDI5MDVhY1tfMHgyNDViZjQoMHgyNGQpXT1fMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjRkKV0pO31jYXRjaHt9ZmluYWxseXtfMHg0MDRhNTMmJihfMHgyZjFhNzBbJ2NvbnNvbGUnXVtfMHgyNDViZjQoMHgyMmEpXT1fMHg0MDRhNTMpO31pZihfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjI4KV09PT1fMHgyNDViZjQoMHgxZjApfHxfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjI4KV09PT1fMHgyNDViZjQoMHgyMjUpKXtpZihpc05hTihfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV0pKV8weDI5MDVhY1snbmFuJ109ITB4MCxkZWxldGUgXzB4MjkwNWFjW18weDI0NWJmNCgweDFmNCldO2Vsc2Ugc3dpdGNoKF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXSl7Y2FzZSBOdW1iZXJbXzB4MjQ1YmY0KDB4Mjc5KV06XzB4MjkwNWFjW18weDI0NWJmNCgweDIyMyldPSEweDAsZGVsZXRlIF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXTticmVhaztjYXNlIE51bWJlcltfMHgyNDViZjQoMHgyNjEpXTpfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjE1KV09ITB4MCxkZWxldGUgXzB4MjkwNWFjW18weDI0NWJmNCgweDFmNCldO2JyZWFrO2Nhc2UgMHgwOnRoaXNbJ19pc05lZ2F0aXZlWmVybyddKF8weDI5MDVhY1sndmFsdWUnXSkmJihfMHgyOTA1YWNbJ25lZ2F0aXZlWmVybyddPSEweDApO2JyZWFrO319ZWxzZSBfMHgyOTA1YWNbJ3R5cGUnXT09PSdmdW5jdGlvbicmJnR5cGVvZiBfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjFiKV09PV8weDI0NWJmNCgweDI4MikmJl8weDkwZTM3ZFtfMHgyNDViZjQoMHgyMWIpXSYmXzB4MjkwNWFjWyduYW1lJ10mJl8weDkwZTM3ZFtfMHgyNDViZjQoMHgyMWIpXSE9PV8weDI5MDVhY1tfMHgyNDViZjQoMHgyMWIpXSYmKF8weDI5MDVhY1tfMHgyNDViZjQoMHgyNjcpXT1fMHg5MGUzN2RbJ25hbWUnXSk7fVtfMHgxYWU5ZGUoMHgyM2YpXShfMHgzNjAzZjkpe3JldHVybiAweDEvXzB4MzYwM2Y5PT09TnVtYmVyWydORUdBVElWRV9JTkZJTklUWSddO31bXzB4MWFlOWRlKDB4MjI2KV0oXzB4OTExMzVmKXt2YXIgXzB4MjdiY2M5PV8weDFhZTlkZTshXzB4OTExMzVmWydwcm9wcyddfHwhXzB4OTExMzVmWydwcm9wcyddW18weDI3YmNjOSgweDI0ZCldfHxfMHg5MTEzNWZbXzB4MjdiY2M5KDB4MjI4KV09PT0nYXJyYXknfHxfMHg5MTEzNWZbXzB4MjdiY2M5KDB4MjI4KV09PT0nTWFwJ3x8XzB4OTExMzVmW18weDI3YmNjOSgweDIyOCldPT09XzB4MjdiY2M5KDB4MWY4KXx8XzB4OTExMzVmWydwcm9wcyddW18weDI3YmNjOSgweDFiMildKGZ1bmN0aW9uKF8weDJhMmNkYixfMHg0OWVlNGIpe3ZhciBfMHg1ZTc2YjM9XzB4MjdiY2M5LF8weDE5MDYzZT1fMHgyYTJjZGJbXzB4NWU3NmIzKDB4MjFiKV1bXzB4NWU3NmIzKDB4MWEyKV0oKSxfMHg0NDYwMDM9XzB4NDllZTRiW18weDVlNzZiMygweDIxYildW18weDVlNzZiMygweDFhMildKCk7cmV0dXJuIF8weDE5MDYzZTxfMHg0NDYwMDM/LTB4MTpfMHgxOTA2M2U+XzB4NDQ2MDAzPzB4MToweDA7fSk7fVsnX2FkZEZ1bmN0aW9uc05vZGUnXShfMHgyZThlNGQsXzB4MTk5YzMwKXt2YXIgXzB4M2QzYWEwPV8weDFhZTlkZTtpZighKF8weDE5OWMzMFtfMHgzZDNhYTAoMHgxYjYpXXx8IV8weDJlOGU0ZFtfMHgzZDNhYTAoMHgxZTkpXXx8IV8weDJlOGU0ZFsncHJvcHMnXVsnbGVuZ3RoJ10pKXtmb3IodmFyIF8weDQzNTEzMz1bXSxfMHgyNTMxZTc9W10sXzB4NGI1YTYxPTB4MCxfMHgzNmQyOGI9XzB4MmU4ZTRkW18weDNkM2FhMCgweDFlOSldWydsZW5ndGgnXTtfMHg0YjVhNjE8XzB4MzZkMjhiO18weDRiNWE2MSsrKXt2YXIgXzB4MTBkNzk1PV8weDJlOGU0ZFsncHJvcHMnXVtfMHg0YjVhNjFdO18weDEwZDc5NVtfMHgzZDNhYTAoMHgyMjgpXT09PV8weDNkM2FhMCgweDI1NCk/XzB4NDM1MTMzW18weDNkM2FhMCgweDIwNCldKF8weDEwZDc5NSk6XzB4MjUzMWU3W18weDNkM2FhMCgweDIwNCldKF8weDEwZDc5NSk7fWlmKCEoIV8weDI1MzFlN1tfMHgzZDNhYTAoMHgyNGQpXXx8XzB4NDM1MTMzWydsZW5ndGgnXTw9MHgxKSl7XzB4MmU4ZTRkWydwcm9wcyddPV8weDI1MzFlNzt2YXIgXzB4MTRkZWM0PXsnZnVuY3Rpb25zTm9kZSc6ITB4MCwncHJvcHMnOl8weDQzNTEzM307dGhpc1tfMHgzZDNhYTAoMHgyOGUpXShfMHgxNGRlYzQsXzB4MTk5YzMwKSx0aGlzW18weDNkM2FhMCgweDIwYSldKF8weDE0ZGVjNCxfMHgxOTljMzApLHRoaXNbJ19zZXROb2RlRXhwYW5kYWJsZVN0YXRlJ10oXzB4MTRkZWM0KSx0aGlzWydfc2V0Tm9kZVBlcm1pc3Npb25zJ10oXzB4MTRkZWM0LF8weDE5OWMzMCksXzB4MTRkZWM0WydpZCddKz0nXFxcXHgyMGYnLF8weDJlOGU0ZFsncHJvcHMnXVsndW5zaGlmdCddKF8weDE0ZGVjNCk7fX19WydfYWRkTG9hZE5vZGUnXShfMHg0YThmN2EsXzB4MzQ2ZGIwKXt9Wydfc2V0Tm9kZUV4cGFuZGFibGVTdGF0ZSddKF8weDFjNmZkMSl7fVtfMHgxYWU5ZGUoMHgxZGUpXShfMHgxMjExZTkpe3ZhciBfMHgzOTAzYjU9XzB4MWFlOWRlO3JldHVybiBBcnJheVtfMHgzOTAzYjUoMHgyMDgpXShfMHgxMjExZTkpfHx0eXBlb2YgXzB4MTIxMWU5PT0nb2JqZWN0JyYmdGhpc1tfMHgzOTAzYjUoMHgyMWEpXShfMHgxMjExZTkpPT09J1tvYmplY3RcXFxceDIwQXJyYXldJzt9W18weDFhZTlkZSgweDFkMCldKF8weDMxMWU4YyxfMHg2OWY4ZjApe31bXzB4MWFlOWRlKDB4MjUzKV0oXzB4MWZiNWFkKXt2YXIgXzB4NGU1MTZhPV8weDFhZTlkZTtkZWxldGUgXzB4MWZiNWFkW18weDRlNTE2YSgweDFmYyldLGRlbGV0ZSBfMHgxZmI1YWRbJ19oYXNTZXRPbkl0c1BhdGgnXSxkZWxldGUgXzB4MWZiNWFkWydfaGFzTWFwT25JdHNQYXRoJ107fVsnX3NldE5vZGVFeHByZXNzaW9uUGF0aCddKF8weDFmNDNmMCxfMHg1ZGMxOGMpe319bGV0IF8weDQ0ZTA5Nz1uZXcgXzB4MzlhZWUzKCksXzB4NTU1OTMzPXsncHJvcHMnOjB4NjQsJ2VsZW1lbnRzJzoweDY0LCdzdHJMZW5ndGgnOjB4NDAwKjB4MzIsJ3RvdGFsU3RyTGVuZ3RoJzoweDQwMCoweDMyLCdhdXRvRXhwYW5kTGltaXQnOjB4MTM4OCwnYXV0b0V4cGFuZE1heERlcHRoJzoweGF9LF8weDVlZjRiYj17J3Byb3BzJzoweDUsJ2VsZW1lbnRzJzoweDUsJ3N0ckxlbmd0aCc6MHgxMDAsJ3RvdGFsU3RyTGVuZ3RoJzoweDEwMCoweDMsJ2F1dG9FeHBhbmRMaW1pdCc6MHgxZSwnYXV0b0V4cGFuZE1heERlcHRoJzoweDJ9O2Z1bmN0aW9uIF8weDQ3YWVlMChfMHg1ZjUxOWIsXzB4MzZlMWMyLF8weDM4YTViMixfMHgyNDVhMzMsXzB4MzM4NDJlLF8weDQ3Zjk5ZCl7dmFyIF8weDFiNmRjOT1fMHgxYWU5ZGU7bGV0IF8weDRlOTA5NyxfMHgyZDVmMDg7dHJ5e18weDJkNWYwOD1fMHg1ZjQyNTQoKSxfMHg0ZTkwOTc9XzB4MzliZTAxW18weDM2ZTFjMl0sIV8weDRlOTA5N3x8XzB4MmQ1ZjA4LV8weDRlOTA5N1sndHMnXT4weDFmNCYmXzB4NGU5MDk3W18weDFiNmRjOSgweDFlYildJiZfMHg0ZTkwOTdbXzB4MWI2ZGM5KDB4MjA5KV0vXzB4NGU5MDk3W18weDFiNmRjOSgweDFlYildPDB4NjQ/KF8weDM5YmUwMVtfMHgzNmUxYzJdPV8weDRlOTA5Nz17J2NvdW50JzoweDAsJ3RpbWUnOjB4MCwndHMnOl8weDJkNWYwOH0sXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldPXt9KTpfMHgyZDVmMDgtXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldWyd0cyddPjB4MzImJl8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsnY291bnQnXSYmXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldWyd0aW1lJ10vXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldW18weDFiNmRjOSgweDFlYildPDB4NjQmJihfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV09e30pO2xldCBfMHgzMjFjNWU9W10sXzB4MTAzODcxPV8weDRlOTA5N1sncmVkdWNlTGltaXRzJ118fF8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsncmVkdWNlTGltaXRzJ10/XzB4NWVmNGJiOl8weDU1NTkzMyxfMHgxZTRhZWM9XzB4MTFmMDBiPT57dmFyIF8weDFkOTNjMz1fMHgxYjZkYzk7bGV0IF8weDM5NzBjNT17fTtyZXR1cm4gXzB4Mzk3MGM1Wydwcm9wcyddPV8weDExZjAwYltfMHgxZDkzYzMoMHgxZTkpXSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MjJkKV09XzB4MTFmMDBiW18weDFkOTNjMygweDIyZCldLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyNjgpXT1fMHgxMWYwMGJbXzB4MWQ5M2MzKDB4MjY4KV0sXzB4Mzk3MGM1W18weDFkOTNjMygweDFhYSldPV8weDExZjAwYltfMHgxZDkzYzMoMHgxYWEpXSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MjQxKV09XzB4MTFmMDBiWydhdXRvRXhwYW5kTGltaXQnXSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWYxKV09XzB4MTFmMDBiWydhdXRvRXhwYW5kTWF4RGVwdGgnXSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWQ2KV09ITB4MSxfMHgzOTcwYzVbJ25vRnVuY3Rpb25zJ109IV8weDViZTA3MixfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWQxKV09MHgxLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxZDMpXT0weDAsXzB4Mzk3MGM1WydleHBJZCddPV8weDFkOTNjMygweDI1NSksXzB4Mzk3MGM1Wydyb290RXhwcmVzc2lvbiddPV8weDFkOTNjMygweDFiYSksXzB4Mzk3MGM1W18weDFkOTNjMygweDIyYyldPSEweDAsXzB4Mzk3MGM1W18weDFkOTNjMygweDIyZSldPVtdLF8weDM5NzBjNVsnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnXT0weDAsXzB4Mzk3MGM1W18weDFkOTNjMygweDFiZSldPSEweDAsXzB4Mzk3MGM1W18weDFkOTNjMygweDFlMyldPTB4MCxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MjhjKV09eydjdXJyZW50Jzp2b2lkIDB4MCwncGFyZW50Jzp2b2lkIDB4MCwnaW5kZXgnOjB4MH0sXzB4Mzk3MGM1O307Zm9yKHZhciBfMHg0ZTA2NmU9MHgwO18weDRlMDY2ZTxfMHgzMzg0MmVbXzB4MWI2ZGM5KDB4MjRkKV07XzB4NGUwNjZlKyspXzB4MzIxYzVlW18weDFiNmRjOSgweDIwNCldKF8weDQ0ZTA5N1tfMHgxYjZkYzkoMHgyM2QpXSh7J3RpbWVOb2RlJzpfMHg1ZjUxOWI9PT1fMHgxYjZkYzkoMHgyMDkpfHx2b2lkIDB4MH0sXzB4MzM4NDJlW18weDRlMDY2ZV0sXzB4MWU0YWVjKF8weDEwMzg3MSkse30pKTtpZihfMHg1ZjUxOWI9PT1fMHgxYjZkYzkoMHgxYTMpfHxfMHg1ZjUxOWI9PT1fMHgxYjZkYzkoMHgyMmEpKXtsZXQgXzB4NDIyM2EwPUVycm9yWydzdGFja1RyYWNlTGltaXQnXTt0cnl7RXJyb3JbXzB4MWI2ZGM5KDB4Mjc4KV09MHgxLzB4MCxfMHgzMjFjNWVbXzB4MWI2ZGM5KDB4MjA0KV0oXzB4NDRlMDk3W18weDFiNmRjOSgweDIzZCldKHsnc3RhY2tOb2RlJzohMHgwfSxuZXcgRXJyb3IoKVtfMHgxYjZkYzkoMHgyNmIpXSxfMHgxZTRhZWMoXzB4MTAzODcxKSx7J3N0ckxlbmd0aCc6MHgxLzB4MH0pKTt9ZmluYWxseXtFcnJvcltfMHgxYjZkYzkoMHgyNzgpXT1fMHg0MjIzYTA7fX1yZXR1cm57J21ldGhvZCc6XzB4MWI2ZGM5KDB4MjMwKSwndmVyc2lvbic6XzB4NWE1NzQ1LCdhcmdzJzpbeyd0cyc6XzB4MzhhNWIyLCdzZXNzaW9uJzpfMHgyNDVhMzMsJ2FyZ3MnOl8weDMyMWM1ZSwnaWQnOl8weDM2ZTFjMiwnY29udGV4dCc6XzB4NDdmOTlkfV19O31jYXRjaChfMHg1YjI4ZWUpe3JldHVybnsnbWV0aG9kJzpfMHgxYjZkYzkoMHgyMzApLCd2ZXJzaW9uJzpfMHg1YTU3NDUsJ2FyZ3MnOlt7J3RzJzpfMHgzOGE1YjIsJ3Nlc3Npb24nOl8weDI0NWEzMywnYXJncyc6W3sndHlwZSc6J3Vua25vd24nLCdlcnJvcic6XzB4NWIyOGVlJiZfMHg1YjI4ZWVbXzB4MWI2ZGM5KDB4MjIyKV19XSwnaWQnOl8weDM2ZTFjMiwnY29udGV4dCc6XzB4NDdmOTlkfV19O31maW5hbGx5e3RyeXtpZihfMHg0ZTkwOTcmJl8weDJkNWYwOCl7bGV0IF8weDFkNjVjNj1fMHg1ZjQyNTQoKTtfMHg0ZTkwOTdbJ2NvdW50J10rKyxfMHg0ZTkwOTdbXzB4MWI2ZGM5KDB4MjA5KV0rPV8weDM0OTEzYihfMHgyZDVmMDgsXzB4MWQ2NWM2KSxfMHg0ZTkwOTdbJ3RzJ109XzB4MWQ2NWM2LF8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsnY291bnQnXSsrLF8weDM5YmUwMVsnaGl0cyddW18weDFiNmRjOSgweDIwOSldKz1fMHgzNDkxM2IoXzB4MmQ1ZjA4LF8weDFkNjVjNiksXzB4MzliZTAxWydoaXRzJ11bJ3RzJ109XzB4MWQ2NWM2LChfMHg0ZTkwOTdbXzB4MWI2ZGM5KDB4MWViKV0+MHgzMnx8XzB4NGU5MDk3W18weDFiNmRjOSgweDIwOSldPjB4NjQpJiYoXzB4NGU5MDk3WydyZWR1Y2VMaW1pdHMnXT0hMHgwKSwoXzB4MzliZTAxWydoaXRzJ11bJ2NvdW50J10+MHgzZTh8fF8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVtfMHgxYjZkYzkoMHgyMDkpXT4weDEyYykmJihfMHgzOWJlMDFbJ2hpdHMnXVtfMHgxYjZkYzkoMHgyM2EpXT0hMHgwKTt9fWNhdGNoe319fXJldHVybiBfMHg0N2FlZTA7fSgoXzB4MmFiYjAwLF8weDc0MTMyNixfMHgyNjg4MTYsXzB4ODMxNjk0LF8weDE3MjJhMSxfMHgyZGUxOWYsXzB4MWUzMDJhLF8weDM2M2I4ZCxfMHhhMGEzMDMsXzB4NWU1NWYxLF8weDMwNmFiMyk9Pnt2YXIgXzB4MzEzNDQ0PV8weGZlNWU0NDtpZihfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV0pcmV0dXJuIF8weDJhYmIwMFtfMHgzMTM0NDQoMHgyNGMpXTtpZighSChfMHgyYWJiMDAsXzB4MzYzYjhkLF8weDE3MjJhMSkpcmV0dXJuIF8weDJhYmIwMFtfMHgzMTM0NDQoMHgyNGMpXT17J2NvbnNvbGVMb2cnOigpPT57fSwnY29uc29sZVRyYWNlJzooKT0+e30sJ2NvbnNvbGVUaW1lJzooKT0+e30sJ2NvbnNvbGVUaW1lRW5kJzooKT0+e30sJ2F1dG9Mb2cnOigpPT57fSwnYXV0b0xvZ01hbnknOigpPT57fSwnYXV0b1RyYWNlTWFueSc6KCk9Pnt9LCdjb3ZlcmFnZSc6KCk9Pnt9LCdhdXRvVHJhY2UnOigpPT57fSwnYXV0b1RpbWUnOigpPT57fSwnYXV0b1RpbWVFbmQnOigpPT57fX0sXzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldO2xldCBfMHgzYjdkOGQ9QihfMHgyYWJiMDApLF8weDRkOWY0Nz1fMHgzYjdkOGRbXzB4MzEzNDQ0KDB4MWIxKV0sXzB4ZmM2ZjZjPV8weDNiN2Q4ZFtfMHgzMTM0NDQoMHgyMTIpXSxfMHgxNzVmMmI9XzB4M2I3ZDhkW18weDMxMzQ0NCgweDI0OSldLF8weDEyODcyNT17J2hpdHMnOnt9LCd0cyc6e319LF8weDQyZDZjZT1YKF8weDJhYmIwMCxfMHhhMGEzMDMsXzB4MTI4NzI1LF8weDJkZTE5ZiksXzB4NTQxYjRlPV8weDE4N2M4ZD0+e18weDEyODcyNVsndHMnXVtfMHgxODdjOGRdPV8weGZjNmY2YygpO30sXzB4NDllYTA4PShfMHgyOTY1ZjcsXzB4NTRlMGI0KT0+e2xldCBfMHhhM2E3YTE9XzB4MTI4NzI1Wyd0cyddW18weDU0ZTBiNF07aWYoZGVsZXRlIF8weDEyODcyNVsndHMnXVtfMHg1NGUwYjRdLF8weGEzYTdhMSl7bGV0IF8weDM3OTlhNT1fMHg0ZDlmNDcoXzB4YTNhN2ExLF8weGZjNmY2YygpKTtfMHg0OGE4OTYoXzB4NDJkNmNlKCd0aW1lJyxfMHgyOTY1ZjcsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLFtfMHgzNzk5YTVdLF8weDU0ZTBiNCkpO319LF8weDFjYTk1Zj1fMHg1NTZlMmU9Pnt2YXIgXzB4NjM0YzZkPV8weDMxMzQ0NCxfMHgzYTc4Zjk7cmV0dXJuIF8weDE3MjJhMT09PV8weDYzNGM2ZCgweDIzNykmJl8weDJhYmIwMFtfMHg2MzRjNmQoMHgxYTcpXSYmKChfMHgzYTc4Zjk9XzB4NTU2ZTJlPT1udWxsP3ZvaWQgMHgwOl8weDU1NmUyZVtfMHg2MzRjNmQoMHgxZjYpXSk9PW51bGw/dm9pZCAweDA6XzB4M2E3OGY5W18weDYzNGM2ZCgweDI0ZCldKSYmKF8weDU1NmUyZVsnYXJncyddWzB4MF1bXzB4NjM0YzZkKDB4MWE3KV09XzB4MmFiYjAwW18weDYzNGM2ZCgweDFhNyldKSxfMHg1NTZlMmU7fTtfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV09eydjb25zb2xlTG9nJzooXzB4MWQ5MDQ0LF8weDNkYTNhYik9Pnt2YXIgXzB4NTc4YTFlPV8weDMxMzQ0NDtfMHgyYWJiMDBbXzB4NTc4YTFlKDB4MjI3KV1bJ2xvZyddW18weDU3OGExZSgweDIxYildIT09XzB4NTc4YTFlKDB4MjdkKSYmXzB4NDhhODk2KF8weDQyZDZjZSgnbG9nJyxfMHgxZDkwNDQsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDNkYTNhYikpO30sJ2NvbnNvbGVUcmFjZSc6KF8weDM4NDY4ZCxfMHg1MGI1NDgpPT57dmFyIF8weDE0NDEyMz1fMHgzMTM0NDQsXzB4MmMwYTNiLF8weDQxYmQzMDtfMHgyYWJiMDBbJ2NvbnNvbGUnXVtfMHgxNDQxMjMoMHgyMzApXVtfMHgxNDQxMjMoMHgyMWIpXSE9PV8weDE0NDEyMygweDI3YSkmJigoXzB4NDFiZDMwPShfMHgyYzBhM2I9XzB4MmFiYjAwW18weDE0NDEyMygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHgyYzBhM2JbXzB4MTQ0MTIzKDB4MjZmKV0pIT1udWxsJiZfMHg0MWJkMzBbXzB4MTQ0MTIzKDB4MjhjKV0mJihfMHgyYWJiMDBbXzB4MTQ0MTIzKDB4MWUxKV09ITB4MCksXzB4NDhhODk2KF8weDFjYTk1ZihfMHg0MmQ2Y2UoJ3RyYWNlJyxfMHgzODQ2OGQsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDUwYjU0OCkpKSk7fSwnY29uc29sZUVycm9yJzooXzB4ZTgzYzAyLF8weDUyODI2ZSk9Pnt2YXIgXzB4MTRkY2NhPV8weDMxMzQ0NDtfMHgyYWJiMDBbXzB4MTRkY2NhKDB4MWUxKV09ITB4MCxfMHg0OGE4OTYoXzB4MWNhOTVmKF8weDQyZDZjZShfMHgxNGRjY2EoMHgyMmEpLF8weGU4M2MwMixfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsXzB4NTI4MjZlKSkpO30sJ2NvbnNvbGVUaW1lJzpfMHg1Y2FmM2Y9PntfMHg1NDFiNGUoXzB4NWNhZjNmKTt9LCdjb25zb2xlVGltZUVuZCc6KF8weDI3ZDhjNSxfMHg0MTc0NzQpPT57XzB4NDllYTA4KF8weDQxNzQ3NCxfMHgyN2Q4YzUpO30sJ2F1dG9Mb2cnOihfMHg4NWM2ZGYsXzB4N2YzOWEyKT0+e3ZhciBfMHg0MGJiNDk9XzB4MzEzNDQ0O18weDQ4YTg5NihfMHg0MmQ2Y2UoXzB4NDBiYjQ5KDB4MjMwKSxfMHg3ZjM5YTIsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLFtfMHg4NWM2ZGZdKSk7fSwnYXV0b0xvZ01hbnknOihfMHg1MTU4YzAsXzB4N2I5OWQyKT0+e18weDQ4YTg5NihfMHg0MmQ2Y2UoJ2xvZycsXzB4NTE1OGMwLF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHg3Yjk5ZDIpKTt9LCdhdXRvVHJhY2UnOihfMHgxYmMxMWQsXzB4NTY1Y2M5KT0+e18weDQ4YTg5NihfMHgxY2E5NWYoXzB4NDJkNmNlKCd0cmFjZScsXzB4NTY1Y2M5LF8weDE3NWYyYigpLF8weDFjOTZjYSxbXzB4MWJjMTFkXSkpKTt9LCdhdXRvVHJhY2VNYW55JzooXzB4MzUyMzQ1LF8weDRjN2Y5NSk9Pnt2YXIgXzB4Mzc4ZTEwPV8weDMxMzQ0NDtfMHg0OGE4OTYoXzB4MWNhOTVmKF8weDQyZDZjZShfMHgzNzhlMTAoMHgxYTMpLF8weDM1MjM0NSxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsXzB4NGM3Zjk1KSkpO30sJ2F1dG9UaW1lJzooXzB4NTM1OWZhLF8weDI1OTkwYSxfMHgzMjNkNjgpPT57XzB4NTQxYjRlKF8weDMyM2Q2OCk7fSwnYXV0b1RpbWVFbmQnOihfMHg1YmU5YmMsXzB4NWRiZTBhLF8weGJhNDQ1Zik9PntfMHg0OWVhMDgoXzB4NWRiZTBhLF8weGJhNDQ1Zik7fSwnY292ZXJhZ2UnOl8weDI3YmU0MT0+e3ZhciBfMHgyMGFmZmU9XzB4MzEzNDQ0O18weDQ4YTg5Nih7J21ldGhvZCc6XzB4MjBhZmZlKDB4MWQyKSwndmVyc2lvbic6XzB4MmRlMTlmLCdhcmdzJzpbeydpZCc6XzB4MjdiZTQxfV19KTt9fTtsZXQgXzB4NDhhODk2PXEoXzB4MmFiYjAwLF8weDc0MTMyNixfMHgyNjg4MTYsXzB4ODMxNjk0LF8weDE3MjJhMSxfMHg1ZTU1ZjEsXzB4MzA2YWIzKSxfMHgxYzk2Y2E9XzB4MmFiYjAwWydfY29uc29sZV9uaW5qYV9zZXNzaW9uJ107cmV0dXJuIF8weDJhYmIwMFtfMHgzMTM0NDQoMHgyNGMpXTt9KShnbG9iYWxUaGlzLCcxMjcuMC4wLjEnLCc2MDU5MScsXzB4ZmU1ZTQ0KDB4MWNlKSwnd2VicGFjaycsXzB4ZmU1ZTQ0KDB4MjZjKSxfMHhmZTVlNDQoMHgyODYpLF8weGZlNWU0NCgweDIxYyksXzB4ZmU1ZTQ0KDB4MWNkKSxfMHhmZTVlNDQoMHgyNzUpLF8weGZlNWU0NCgweDI0NCkpO1wiKTtcclxufVxyXG5jYXRjaCAoZSkgeyB9IH1cclxuOyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb19vbyhpLCAuLi52KSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVMb2coaSwgdik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX29vOyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb190cihpLCAuLi52KSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVUcmFjZShpLCB2KTtcclxufVxyXG5jYXRjaCAoZSkgeyB9IHJldHVybiB2OyB9XHJcbjtcclxub29fdHI7IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbmZ1bmN0aW9uIG9vX3R4KGksIC4uLnYpIHsgdHJ5IHtcclxuICAgIG9vX2NtKCkuY29uc29sZUVycm9yKGksIHYpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb190eDsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fdHModikgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlVGltZSh2KTtcclxufVxyXG5jYXRjaCAoZSkgeyB9IHJldHVybiB2OyB9XHJcbjtcclxub29fdHM7IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbmZ1bmN0aW9uIG9vX3RlKHYsIGkpIHsgdHJ5IHtcclxuICAgIG9vX2NtKCkuY29uc29sZVRpbWVFbmQodiwgaSk7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX3RlOyAvKmVzbGludCB1bmljb3JuL25vLWFidXNpdmUtZXNsaW50LWRpc2FibGU6LGVzbGludC1jb21tZW50cy9kaXNhYmxlLWVuYWJsZS1wYWlyOixlc2xpbnQtY29tbWVudHMvbm8tdW5saW1pdGVkLWRpc2FibGU6LGVzbGludC1jb21tZW50cy9uby1hZ2dyZWdhdGluZy1lbmFibGU6LGVzbGludC1jb21tZW50cy9uby1kdXBsaWNhdGUtZGlzYWJsZTosZXNsaW50LWNvbW1lbnRzL25vLXVudXNlZC1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvbm8tdW51c2VkLWVuYWJsZTosKi9cclxuIiwiaW1wb3J0IHsgX2dldFByb3ZpZGVyLCBnZXRBcHAsIF9yZWdpc3RlckNvbXBvbmVudCwgcmVnaXN0ZXJWZXJzaW9uIH0gZnJvbSAnQGZpcmViYXNlL2FwcCc7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICdAZmlyZWJhc2UvbG9nZ2VyJztcbmltcG9ydCB7IEVycm9yRmFjdG9yeSwgY2FsY3VsYXRlQmFja29mZk1pbGxpcywgRmlyZWJhc2VFcnJvciwgaXNJbmRleGVkREJBdmFpbGFibGUsIHZhbGlkYXRlSW5kZXhlZERCT3BlbmFibGUsIGlzQnJvd3NlckV4dGVuc2lvbiwgYXJlQ29va2llc0VuYWJsZWQsIGdldE1vZHVsYXJJbnN0YW5jZSwgZGVlcEVxdWFsIH0gZnJvbSAnQGZpcmViYXNlL3V0aWwnO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGZpcmViYXNlL2NvbXBvbmVudCc7XG5pbXBvcnQgJ0BmaXJlYmFzZS9pbnN0YWxsYXRpb25zJztcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFR5cGUgY29uc3RhbnQgZm9yIEZpcmViYXNlIEFuYWx5dGljcy5cclxuICovXHJcbmNvbnN0IEFOQUxZVElDU19UWVBFID0gJ2FuYWx5dGljcyc7XHJcbi8vIEtleSB0byBhdHRhY2ggRklEIHRvIGluIGd0YWcgcGFyYW1zLlxyXG5jb25zdCBHQV9GSURfS0VZID0gJ2ZpcmViYXNlX2lkJztcclxuY29uc3QgT1JJR0lOX0tFWSA9ICdvcmlnaW4nO1xyXG5jb25zdCBGRVRDSF9USU1FT1VUX01JTExJUyA9IDYwICogMTAwMDtcclxuY29uc3QgRFlOQU1JQ19DT05GSUdfVVJMID0gJ2h0dHBzOi8vZmlyZWJhc2UuZ29vZ2xlYXBpcy5jb20vdjFhbHBoYS9wcm9qZWN0cy8tL2FwcHMve2FwcC1pZH0vd2ViQ29uZmlnJztcclxuY29uc3QgR1RBR19VUkwgPSAnaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RhZy9qcyc7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IGxvZ2dlciA9IG5ldyBMb2dnZXIoJ0BmaXJlYmFzZS9hbmFseXRpY3MnKTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgRVJST1JTID0ge1xyXG4gICAgW1wiYWxyZWFkeS1leGlzdHNcIiAvKiBBbmFseXRpY3NFcnJvci5BTFJFQURZX0VYSVNUUyAqL106ICdBIEZpcmViYXNlIEFuYWx5dGljcyBpbnN0YW5jZSB3aXRoIHRoZSBhcHBJZCB7JGlkfSAnICtcclxuICAgICAgICAnIGFscmVhZHkgZXhpc3RzLiAnICtcclxuICAgICAgICAnT25seSBvbmUgRmlyZWJhc2UgQW5hbHl0aWNzIGluc3RhbmNlIGNhbiBiZSBjcmVhdGVkIGZvciBlYWNoIGFwcElkLicsXHJcbiAgICBbXCJhbHJlYWR5LWluaXRpYWxpemVkXCIgLyogQW5hbHl0aWNzRXJyb3IuQUxSRUFEWV9JTklUSUFMSVpFRCAqL106ICdpbml0aWFsaXplQW5hbHl0aWNzKCkgY2Fubm90IGJlIGNhbGxlZCBhZ2FpbiB3aXRoIGRpZmZlcmVudCBvcHRpb25zIHRoYW4gdGhvc2UgJyArXHJcbiAgICAgICAgJ2l0IHdhcyBpbml0aWFsbHkgY2FsbGVkIHdpdGguIEl0IGNhbiBiZSBjYWxsZWQgYWdhaW4gd2l0aCB0aGUgc2FtZSBvcHRpb25zIHRvICcgK1xyXG4gICAgICAgICdyZXR1cm4gdGhlIGV4aXN0aW5nIGluc3RhbmNlLCBvciBnZXRBbmFseXRpY3MoKSBjYW4gYmUgdXNlZCAnICtcclxuICAgICAgICAndG8gZ2V0IGEgcmVmZXJlbmNlIHRvIHRoZSBhbHJlYWR5LWludGlhbGl6ZWQgaW5zdGFuY2UuJyxcclxuICAgIFtcImFscmVhZHktaW5pdGlhbGl6ZWQtc2V0dGluZ3NcIiAvKiBBbmFseXRpY3NFcnJvci5BTFJFQURZX0lOSVRJQUxJWkVEX1NFVFRJTkdTICovXTogJ0ZpcmViYXNlIEFuYWx5dGljcyBoYXMgYWxyZWFkeSBiZWVuIGluaXRpYWxpemVkLicgK1xyXG4gICAgICAgICdzZXR0aW5ncygpIG11c3QgYmUgY2FsbGVkIGJlZm9yZSBpbml0aWFsaXppbmcgYW55IEFuYWx5dGljcyBpbnN0YW5jZScgK1xyXG4gICAgICAgICdvciBpdCB3aWxsIGhhdmUgbm8gZWZmZWN0LicsXHJcbiAgICBbXCJpbnRlcm9wLWNvbXBvbmVudC1yZWctZmFpbGVkXCIgLyogQW5hbHl0aWNzRXJyb3IuSU5URVJPUF9DT01QT05FTlRfUkVHX0ZBSUxFRCAqL106ICdGaXJlYmFzZSBBbmFseXRpY3MgSW50ZXJvcCBDb21wb25lbnQgZmFpbGVkIHRvIGluc3RhbnRpYXRlOiB7JHJlYXNvbn0nLFxyXG4gICAgW1wiaW52YWxpZC1hbmFseXRpY3MtY29udGV4dFwiIC8qIEFuYWx5dGljc0Vycm9yLklOVkFMSURfQU5BTFlUSUNTX0NPTlRFWFQgKi9dOiAnRmlyZWJhc2UgQW5hbHl0aWNzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBlbnZpcm9ubWVudC4gJyArXHJcbiAgICAgICAgJ1dyYXAgaW5pdGlhbGl6YXRpb24gb2YgYW5hbHl0aWNzIGluIGFuYWx5dGljcy5pc1N1cHBvcnRlZCgpICcgK1xyXG4gICAgICAgICd0byBwcmV2ZW50IGluaXRpYWxpemF0aW9uIGluIHVuc3VwcG9ydGVkIGVudmlyb25tZW50cy4gRGV0YWlsczogeyRlcnJvckluZm99JyxcclxuICAgIFtcImluZGV4ZWRkYi11bmF2YWlsYWJsZVwiIC8qIEFuYWx5dGljc0Vycm9yLklOREVYRUREQl9VTkFWQUlMQUJMRSAqL106ICdJbmRleGVkREIgdW5hdmFpbGFibGUgb3IgcmVzdHJpY3RlZCBpbiB0aGlzIGVudmlyb25tZW50LiAnICtcclxuICAgICAgICAnV3JhcCBpbml0aWFsaXphdGlvbiBvZiBhbmFseXRpY3MgaW4gYW5hbHl0aWNzLmlzU3VwcG9ydGVkKCkgJyArXHJcbiAgICAgICAgJ3RvIHByZXZlbnQgaW5pdGlhbGl6YXRpb24gaW4gdW5zdXBwb3J0ZWQgZW52aXJvbm1lbnRzLiBEZXRhaWxzOiB7JGVycm9ySW5mb30nLFxyXG4gICAgW1wiZmV0Y2gtdGhyb3R0bGVcIiAvKiBBbmFseXRpY3NFcnJvci5GRVRDSF9USFJPVFRMRSAqL106ICdUaGUgY29uZmlnIGZldGNoIHJlcXVlc3QgdGltZWQgb3V0IHdoaWxlIGluIGFuIGV4cG9uZW50aWFsIGJhY2tvZmYgc3RhdGUuJyArXHJcbiAgICAgICAgJyBVbml4IHRpbWVzdGFtcCBpbiBtaWxsaXNlY29uZHMgd2hlbiBmZXRjaCByZXF1ZXN0IHRocm90dGxpbmcgZW5kczogeyR0aHJvdHRsZUVuZFRpbWVNaWxsaXN9LicsXHJcbiAgICBbXCJjb25maWctZmV0Y2gtZmFpbGVkXCIgLyogQW5hbHl0aWNzRXJyb3IuQ09ORklHX0ZFVENIX0ZBSUxFRCAqL106ICdEeW5hbWljIGNvbmZpZyBmZXRjaCBmYWlsZWQ6IFt7JGh0dHBTdGF0dXN9XSB7JHJlc3BvbnNlTWVzc2FnZX0nLFxyXG4gICAgW1wibm8tYXBpLWtleVwiIC8qIEFuYWx5dGljc0Vycm9yLk5PX0FQSV9LRVkgKi9dOiAnVGhlIFwiYXBpS2V5XCIgZmllbGQgaXMgZW1wdHkgaW4gdGhlIGxvY2FsIEZpcmViYXNlIGNvbmZpZy4gRmlyZWJhc2UgQW5hbHl0aWNzIHJlcXVpcmVzIHRoaXMgZmllbGQgdG8nICtcclxuICAgICAgICAnY29udGFpbiBhIHZhbGlkIEFQSSBrZXkuJyxcclxuICAgIFtcIm5vLWFwcC1pZFwiIC8qIEFuYWx5dGljc0Vycm9yLk5PX0FQUF9JRCAqL106ICdUaGUgXCJhcHBJZFwiIGZpZWxkIGlzIGVtcHR5IGluIHRoZSBsb2NhbCBGaXJlYmFzZSBjb25maWcuIEZpcmViYXNlIEFuYWx5dGljcyByZXF1aXJlcyB0aGlzIGZpZWxkIHRvJyArXHJcbiAgICAgICAgJ2NvbnRhaW4gYSB2YWxpZCBhcHAgSUQuJyxcclxuICAgIFtcIm5vLWNsaWVudC1pZFwiIC8qIEFuYWx5dGljc0Vycm9yLk5PX0NMSUVOVF9JRCAqL106ICdUaGUgXCJjbGllbnRfaWRcIiBmaWVsZCBpcyBlbXB0eS4nLFxyXG4gICAgW1wiaW52YWxpZC1ndGFnLXJlc291cmNlXCIgLyogQW5hbHl0aWNzRXJyb3IuSU5WQUxJRF9HVEFHX1JFU09VUkNFICovXTogJ1RydXN0ZWQgVHlwZXMgZGV0ZWN0ZWQgYW4gaW52YWxpZCBndGFnIHJlc291cmNlOiB7JGd0YWdVUkx9LidcclxufTtcclxuY29uc3QgRVJST1JfRkFDVE9SWSA9IG5ldyBFcnJvckZhY3RvcnkoJ2FuYWx5dGljcycsICdBbmFseXRpY3MnLCBFUlJPUlMpO1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogVmVyaWZpZXMgYW5kIGNyZWF0ZXMgYSBUcnVzdGVkU2NyaXB0VVJMLlxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlR3RhZ1RydXN0ZWRUeXBlc1NjcmlwdFVSTCh1cmwpIHtcclxuICAgIGlmICghdXJsLnN0YXJ0c1dpdGgoR1RBR19VUkwpKSB7XHJcbiAgICAgICAgY29uc3QgZXJyID0gRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJpbnZhbGlkLWd0YWctcmVzb3VyY2VcIiAvKiBBbmFseXRpY3NFcnJvci5JTlZBTElEX0dUQUdfUkVTT1VSQ0UgKi8sIHtcclxuICAgICAgICAgICAgZ3RhZ1VSTDogdXJsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbG9nZ2VyLndhcm4oZXJyLm1lc3NhZ2UpO1xyXG4gICAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICAgIHJldHVybiB1cmw7XHJcbn1cclxuLyoqXHJcbiAqIE1ha2VzaGlmdCBwb2x5ZmlsbCBmb3IgUHJvbWlzZS5hbGxTZXR0bGVkKCkuIFJlc29sdmVzIHdoZW4gYWxsIHByb21pc2VzXHJcbiAqIGhhdmUgZWl0aGVyIHJlc29sdmVkIG9yIHJlamVjdGVkLlxyXG4gKlxyXG4gKiBAcGFyYW0gcHJvbWlzZXMgQXJyYXkgb2YgcHJvbWlzZXMgdG8gd2FpdCBmb3IuXHJcbiAqL1xyXG5mdW5jdGlvbiBwcm9taXNlQWxsU2V0dGxlZChwcm9taXNlcykge1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzLm1hcChwcm9taXNlID0+IHByb21pc2UuY2F0Y2goZSA9PiBlKSkpO1xyXG59XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgVHJ1c3RlZFR5cGVQb2xpY3kgb2JqZWN0IHRoYXQgaW1wbGVtZW50cyB0aGUgcnVsZXMgcGFzc2VkIGFzIHBvbGljeU9wdGlvbnMuXHJcbiAqXHJcbiAqIEBwYXJhbSBwb2xpY3lOYW1lIEEgc3RyaW5nIGNvbnRhaW5pbmcgdGhlIG5hbWUgb2YgdGhlIHBvbGljeVxyXG4gKiBAcGFyYW0gcG9saWN5T3B0aW9ucyBPYmplY3QgY29udGFpbmluZyBpbXBsZW1lbnRhdGlvbnMgb2YgaW5zdGFuY2UgbWV0aG9kcyBmb3IgVHJ1c3RlZFR5cGVzUG9saWN5LCBzZWUge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9UcnVzdGVkVHlwZVBvbGljeSNpbnN0YW5jZV9tZXRob2RzXHJcbiAqIHwgdGhlIFRydXN0ZWRUeXBlUG9saWN5IHJlZmVyZW5jZSBkb2N1bWVudGF0aW9ufS5cclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZVRydXN0ZWRUeXBlc1BvbGljeShwb2xpY3lOYW1lLCBwb2xpY3lPcHRpb25zKSB7XHJcbiAgICAvLyBDcmVhdGUgYSBUcnVzdGVkVHlwZXMgcG9saWN5IHRoYXQgd2UgY2FuIHVzZSBmb3IgdXBkYXRpbmcgc3JjXHJcbiAgICAvLyBwcm9wZXJ0aWVzXHJcbiAgICBsZXQgdHJ1c3RlZFR5cGVzUG9saWN5O1xyXG4gICAgaWYgKHdpbmRvdy50cnVzdGVkVHlwZXMpIHtcclxuICAgICAgICB0cnVzdGVkVHlwZXNQb2xpY3kgPSB3aW5kb3cudHJ1c3RlZFR5cGVzLmNyZWF0ZVBvbGljeShwb2xpY3lOYW1lLCBwb2xpY3lPcHRpb25zKTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVzdGVkVHlwZXNQb2xpY3k7XHJcbn1cclxuLyoqXHJcbiAqIEluc2VydHMgZ3RhZyBzY3JpcHQgdGFnIGludG8gdGhlIHBhZ2UgdG8gYXN5bmNocm9ub3VzbHkgZG93bmxvYWQgZ3RhZy5cclxuICogQHBhcmFtIGRhdGFMYXllck5hbWUgTmFtZSBvZiBkYXRhbGF5ZXIgKG1vc3Qgb2Z0ZW4gdGhlIGRlZmF1bHQsIFwiX2RhdGFMYXllclwiKS5cclxuICovXHJcbmZ1bmN0aW9uIGluc2VydFNjcmlwdFRhZyhkYXRhTGF5ZXJOYW1lLCBtZWFzdXJlbWVudElkKSB7XHJcbiAgICBjb25zdCB0cnVzdGVkVHlwZXNQb2xpY3kgPSBjcmVhdGVUcnVzdGVkVHlwZXNQb2xpY3koJ2ZpcmViYXNlLWpzLXNkay1wb2xpY3knLCB7XHJcbiAgICAgICAgY3JlYXRlU2NyaXB0VVJMOiBjcmVhdGVHdGFnVHJ1c3RlZFR5cGVzU2NyaXB0VVJMXHJcbiAgICB9KTtcclxuICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xyXG4gICAgLy8gV2UgYXJlIG5vdCBwcm92aWRpbmcgYW4gYW5hbHl0aWNzSWQgaW4gdGhlIFVSTCBiZWNhdXNlIGl0IHdvdWxkIHRyaWdnZXIgYSBgcGFnZV92aWV3YFxyXG4gICAgLy8gd2l0aG91dCBmaWQuIFdlIHdpbGwgaW5pdGlhbGl6ZSBnYS1pZCB1c2luZyBndGFnIChjb25maWcpIGNvbW1hbmQgdG9nZXRoZXIgd2l0aCBmaWQuXHJcbiAgICBjb25zdCBndGFnU2NyaXB0VVJMID0gYCR7R1RBR19VUkx9P2w9JHtkYXRhTGF5ZXJOYW1lfSZpZD0ke21lYXN1cmVtZW50SWR9YDtcclxuICAgIHNjcmlwdC5zcmMgPSB0cnVzdGVkVHlwZXNQb2xpY3lcclxuICAgICAgICA/IHRydXN0ZWRUeXBlc1BvbGljeSA9PT0gbnVsbCB8fCB0cnVzdGVkVHlwZXNQb2xpY3kgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRydXN0ZWRUeXBlc1BvbGljeS5jcmVhdGVTY3JpcHRVUkwoZ3RhZ1NjcmlwdFVSTClcclxuICAgICAgICA6IGd0YWdTY3JpcHRVUkw7XHJcbiAgICBzY3JpcHQuYXN5bmMgPSB0cnVlO1xyXG4gICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xyXG59XHJcbi8qKlxyXG4gKiBHZXQgcmVmZXJlbmNlIHRvLCBvciBjcmVhdGUsIGdsb2JhbCBkYXRhbGF5ZXIuXHJcbiAqIEBwYXJhbSBkYXRhTGF5ZXJOYW1lIE5hbWUgb2YgZGF0YWxheWVyIChtb3N0IG9mdGVuIHRoZSBkZWZhdWx0LCBcIl9kYXRhTGF5ZXJcIikuXHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRPckNyZWF0ZURhdGFMYXllcihkYXRhTGF5ZXJOYW1lKSB7XHJcbiAgICAvLyBDaGVjayBmb3IgZXhpc3RpbmcgZGF0YUxheWVyIGFuZCBjcmVhdGUgaWYgbmVlZGVkLlxyXG4gICAgbGV0IGRhdGFMYXllciA9IFtdO1xyXG4gICAgaWYgKEFycmF5LmlzQXJyYXkod2luZG93W2RhdGFMYXllck5hbWVdKSkge1xyXG4gICAgICAgIGRhdGFMYXllciA9IHdpbmRvd1tkYXRhTGF5ZXJOYW1lXTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHdpbmRvd1tkYXRhTGF5ZXJOYW1lXSA9IGRhdGFMYXllcjtcclxuICAgIH1cclxuICAgIHJldHVybiBkYXRhTGF5ZXI7XHJcbn1cclxuLyoqXHJcbiAqIFdyYXBwZWQgZ3RhZyBsb2dpYyB3aGVuIGd0YWcgaXMgY2FsbGVkIHdpdGggJ2NvbmZpZycgY29tbWFuZC5cclxuICpcclxuICogQHBhcmFtIGd0YWdDb3JlIEJhc2ljIGd0YWcgZnVuY3Rpb24gdGhhdCBqdXN0IGFwcGVuZHMgdG8gZGF0YUxheWVyLlxyXG4gKiBAcGFyYW0gaW5pdGlhbGl6YXRpb25Qcm9taXNlc01hcCBNYXAgb2YgYXBwSWRzIHRvIHRoZWlyIGluaXRpYWxpemF0aW9uIHByb21pc2VzLlxyXG4gKiBAcGFyYW0gZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCBBcnJheSBvZiBkeW5hbWljIGNvbmZpZyBmZXRjaCBwcm9taXNlcy5cclxuICogQHBhcmFtIG1lYXN1cmVtZW50SWRUb0FwcElkIE1hcCBvZiBHQSBtZWFzdXJlbWVudElEcyB0byBjb3JyZXNwb25kaW5nIEZpcmViYXNlIGFwcElkLlxyXG4gKiBAcGFyYW0gbWVhc3VyZW1lbnRJZCBHQSBNZWFzdXJlbWVudCBJRCB0byBzZXQgY29uZmlnIGZvci5cclxuICogQHBhcmFtIGd0YWdQYXJhbXMgR3RhZyBjb25maWcgcGFyYW1zIHRvIHNldC5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGd0YWdPbkNvbmZpZyhndGFnQ29yZSwgaW5pdGlhbGl6YXRpb25Qcm9taXNlc01hcCwgZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCwgbWVhc3VyZW1lbnRJZFRvQXBwSWQsIG1lYXN1cmVtZW50SWQsIGd0YWdQYXJhbXMpIHtcclxuICAgIC8vIElmIGNvbmZpZyBpcyBhbHJlYWR5IGZldGNoZWQsIHdlIGtub3cgdGhlIGFwcElkIGFuZCBjYW4gdXNlIGl0IHRvIGxvb2sgdXAgd2hhdCBGSUQgcHJvbWlzZSB3ZVxyXG4gICAgLy8vIGFyZSB3YWl0aW5nIGZvciwgYW5kIHdhaXQgb25seSBvbiB0aGF0IG9uZS5cclxuICAgIGNvbnN0IGNvcnJlc3BvbmRpbmdBcHBJZCA9IG1lYXN1cmVtZW50SWRUb0FwcElkW21lYXN1cmVtZW50SWRdO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBpZiAoY29ycmVzcG9uZGluZ0FwcElkKSB7XHJcbiAgICAgICAgICAgIGF3YWl0IGluaXRpYWxpemF0aW9uUHJvbWlzZXNNYXBbY29ycmVzcG9uZGluZ0FwcElkXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIElmIGNvbmZpZyBpcyBub3QgZmV0Y2hlZCB5ZXQsIHdhaXQgZm9yIGFsbCBjb25maWdzICh3ZSBkb24ndCBrbm93IHdoaWNoIG9uZSB3ZSBuZWVkKSBhbmRcclxuICAgICAgICAgICAgLy8gZmluZCB0aGUgYXBwSWQgKGlmIGFueSkgY29ycmVzcG9uZGluZyB0byB0aGlzIG1lYXN1cmVtZW50SWQuIElmIHRoZXJlIGlzIG9uZSwgd2FpdCBvblxyXG4gICAgICAgICAgICAvLyB0aGF0IGFwcElkJ3MgaW5pdGlhbGl6YXRpb24gcHJvbWlzZS4gSWYgdGhlcmUgaXMgbm9uZSwgcHJvbWlzZSByZXNvbHZlcyBhbmQgZ3RhZ1xyXG4gICAgICAgICAgICAvLyBjYWxsIGdvZXMgdGhyb3VnaC5cclxuICAgICAgICAgICAgY29uc3QgZHluYW1pY0NvbmZpZ1Jlc3VsdHMgPSBhd2FpdCBwcm9taXNlQWxsU2V0dGxlZChkeW5hbWljQ29uZmlnUHJvbWlzZXNMaXN0KTtcclxuICAgICAgICAgICAgY29uc3QgZm91bmRDb25maWcgPSBkeW5hbWljQ29uZmlnUmVzdWx0cy5maW5kKGNvbmZpZyA9PiBjb25maWcubWVhc3VyZW1lbnRJZCA9PT0gbWVhc3VyZW1lbnRJZCk7XHJcbiAgICAgICAgICAgIGlmIChmb3VuZENvbmZpZykge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgaW5pdGlhbGl6YXRpb25Qcm9taXNlc01hcFtmb3VuZENvbmZpZy5hcHBJZF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIGxvZ2dlci5lcnJvcihlKTtcclxuICAgIH1cclxuICAgIGd0YWdDb3JlKFwiY29uZmlnXCIgLyogR3RhZ0NvbW1hbmQuQ09ORklHICovLCBtZWFzdXJlbWVudElkLCBndGFnUGFyYW1zKTtcclxufVxyXG4vKipcclxuICogV3JhcHBlZCBndGFnIGxvZ2ljIHdoZW4gZ3RhZyBpcyBjYWxsZWQgd2l0aCAnZXZlbnQnIGNvbW1hbmQuXHJcbiAqXHJcbiAqIEBwYXJhbSBndGFnQ29yZSBCYXNpYyBndGFnIGZ1bmN0aW9uIHRoYXQganVzdCBhcHBlbmRzIHRvIGRhdGFMYXllci5cclxuICogQHBhcmFtIGluaXRpYWxpemF0aW9uUHJvbWlzZXNNYXAgTWFwIG9mIGFwcElkcyB0byB0aGVpciBpbml0aWFsaXphdGlvbiBwcm9taXNlcy5cclxuICogQHBhcmFtIGR5bmFtaWNDb25maWdQcm9taXNlc0xpc3QgQXJyYXkgb2YgZHluYW1pYyBjb25maWcgZmV0Y2ggcHJvbWlzZXMuXHJcbiAqIEBwYXJhbSBtZWFzdXJlbWVudElkIEdBIE1lYXN1cmVtZW50IElEIHRvIGxvZyBldmVudCB0by5cclxuICogQHBhcmFtIGd0YWdQYXJhbXMgUGFyYW1zIHRvIGxvZyB3aXRoIHRoaXMgZXZlbnQuXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBndGFnT25FdmVudChndGFnQ29yZSwgaW5pdGlhbGl6YXRpb25Qcm9taXNlc01hcCwgZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCwgbWVhc3VyZW1lbnRJZCwgZ3RhZ1BhcmFtcykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBsZXQgaW5pdGlhbGl6YXRpb25Qcm9taXNlc1RvV2FpdEZvciA9IFtdO1xyXG4gICAgICAgIC8vIElmIHRoZXJlJ3MgYSAnc2VuZF90bycgcGFyYW0sIGNoZWNrIGlmIGFueSBJRCBzcGVjaWZpZWQgbWF0Y2hlc1xyXG4gICAgICAgIC8vIGFuIGluaXRpYWxpemVJZHMoKSBwcm9taXNlIHdlIGFyZSB3YWl0aW5nIGZvci5cclxuICAgICAgICBpZiAoZ3RhZ1BhcmFtcyAmJiBndGFnUGFyYW1zWydzZW5kX3RvJ10pIHtcclxuICAgICAgICAgICAgbGV0IGdhU2VuZFRvTGlzdCA9IGd0YWdQYXJhbXNbJ3NlbmRfdG8nXTtcclxuICAgICAgICAgICAgLy8gTWFrZSBpdCBhbiBhcnJheSBpZiBpcyBpc24ndCwgc28gaXQgY2FuIGJlIGRlYWx0IHdpdGggdGhlIHNhbWUgd2F5LlxyXG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoZ2FTZW5kVG9MaXN0KSkge1xyXG4gICAgICAgICAgICAgICAgZ2FTZW5kVG9MaXN0ID0gW2dhU2VuZFRvTGlzdF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gQ2hlY2tpbmcgJ3NlbmRfdG8nIGZpZWxkcyByZXF1aXJlcyBoYXZpbmcgYWxsIG1lYXN1cmVtZW50IElEIHJlc3VsdHMgYmFjayBmcm9tXHJcbiAgICAgICAgICAgIC8vIHRoZSBkeW5hbWljIGNvbmZpZyBmZXRjaC5cclxuICAgICAgICAgICAgY29uc3QgZHluYW1pY0NvbmZpZ1Jlc3VsdHMgPSBhd2FpdCBwcm9taXNlQWxsU2V0dGxlZChkeW5hbWljQ29uZmlnUHJvbWlzZXNMaXN0KTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBzZW5kVG9JZCBvZiBnYVNlbmRUb0xpc3QpIHtcclxuICAgICAgICAgICAgICAgIC8vIEFueSBmZXRjaGVkIGR5bmFtaWMgbWVhc3VyZW1lbnQgSUQgdGhhdCBtYXRjaGVzIHRoaXMgJ3NlbmRfdG8nIElEXHJcbiAgICAgICAgICAgICAgICBjb25zdCBmb3VuZENvbmZpZyA9IGR5bmFtaWNDb25maWdSZXN1bHRzLmZpbmQoY29uZmlnID0+IGNvbmZpZy5tZWFzdXJlbWVudElkID09PSBzZW5kVG9JZCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBpbml0aWFsaXphdGlvblByb21pc2UgPSBmb3VuZENvbmZpZyAmJiBpbml0aWFsaXphdGlvblByb21pc2VzTWFwW2ZvdW5kQ29uZmlnLmFwcElkXTtcclxuICAgICAgICAgICAgICAgIGlmIChpbml0aWFsaXphdGlvblByb21pc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBpbml0aWFsaXphdGlvblByb21pc2VzVG9XYWl0Rm9yLnB1c2goaW5pdGlhbGl6YXRpb25Qcm9taXNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIEZvdW5kIGFuIGl0ZW0gaW4gJ3NlbmRfdG8nIHRoYXQgaXMgbm90IGFzc29jaWF0ZWRcclxuICAgICAgICAgICAgICAgICAgICAvLyBkaXJlY3RseSB3aXRoIGFuIEZJRCwgcG9zc2libHkgYSBncm91cC4gIEVtcHR5IHRoaXMgYXJyYXksXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gZXhpdCB0aGUgbG9vcCBlYXJseSwgYW5kIGxldCBpdCBnZXQgcG9wdWxhdGVkIGJlbG93LlxyXG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWxpemF0aW9uUHJvbWlzZXNUb1dhaXRGb3IgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBUaGlzIHdpbGwgYmUgdW5wb3B1bGF0ZWQgaWYgdGhlcmUgd2FzIG5vICdzZW5kX3RvJyBmaWVsZCAsIG9yXHJcbiAgICAgICAgLy8gaWYgbm90IGFsbCBlbnRyaWVzIGluIHRoZSAnc2VuZF90bycgZmllbGQgY291bGQgYmUgbWFwcGVkIHRvXHJcbiAgICAgICAgLy8gYSBGSUQuIEluIHRoZXNlIGNhc2VzLCB3YWl0IG9uIGFsbCBwZW5kaW5nIGluaXRpYWxpemF0aW9uIHByb21pc2VzLlxyXG4gICAgICAgIGlmIChpbml0aWFsaXphdGlvblByb21pc2VzVG9XYWl0Rm9yLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICBpbml0aWFsaXphdGlvblByb21pc2VzVG9XYWl0Rm9yID0gT2JqZWN0LnZhbHVlcyhpbml0aWFsaXphdGlvblByb21pc2VzTWFwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gUnVuIGNvcmUgZ3RhZyBmdW5jdGlvbiB3aXRoIGFyZ3MgYWZ0ZXIgYWxsIHJlbGV2YW50IGluaXRpYWxpemF0aW9uXHJcbiAgICAgICAgLy8gcHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkLlxyXG4gICAgICAgIGF3YWl0IFByb21pc2UuYWxsKGluaXRpYWxpemF0aW9uUHJvbWlzZXNUb1dhaXRGb3IpO1xyXG4gICAgICAgIC8vIFdvcmthcm91bmQgZm9yIGh0dHA6Ly9iLzE0MTM3MDQ0OSAtIHRoaXJkIGFyZ3VtZW50IGNhbm5vdCBiZSB1bmRlZmluZWQuXHJcbiAgICAgICAgZ3RhZ0NvcmUoXCJldmVudFwiIC8qIEd0YWdDb21tYW5kLkVWRU5UICovLCBtZWFzdXJlbWVudElkLCBndGFnUGFyYW1zIHx8IHt9KTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgbG9nZ2VyLmVycm9yKGUpO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBXcmFwcyBhIHN0YW5kYXJkIGd0YWcgZnVuY3Rpb24gd2l0aCBleHRyYSBjb2RlIHRvIHdhaXQgZm9yIGNvbXBsZXRpb24gb2ZcclxuICogcmVsZXZhbnQgaW5pdGlhbGl6YXRpb24gcHJvbWlzZXMgYmVmb3JlIHNlbmRpbmcgcmVxdWVzdHMuXHJcbiAqXHJcbiAqIEBwYXJhbSBndGFnQ29yZSBCYXNpYyBndGFnIGZ1bmN0aW9uIHRoYXQganVzdCBhcHBlbmRzIHRvIGRhdGFMYXllci5cclxuICogQHBhcmFtIGluaXRpYWxpemF0aW9uUHJvbWlzZXNNYXAgTWFwIG9mIGFwcElkcyB0byB0aGVpciBpbml0aWFsaXphdGlvbiBwcm9taXNlcy5cclxuICogQHBhcmFtIGR5bmFtaWNDb25maWdQcm9taXNlc0xpc3QgQXJyYXkgb2YgZHluYW1pYyBjb25maWcgZmV0Y2ggcHJvbWlzZXMuXHJcbiAqIEBwYXJhbSBtZWFzdXJlbWVudElkVG9BcHBJZCBNYXAgb2YgR0EgbWVhc3VyZW1lbnRJRHMgdG8gY29ycmVzcG9uZGluZyBGaXJlYmFzZSBhcHBJZC5cclxuICovXHJcbmZ1bmN0aW9uIHdyYXBHdGFnKGd0YWdDb3JlLCBcclxuLyoqXHJcbiAqIEFsbG93cyB3cmFwcGVkIGd0YWcgY2FsbHMgdG8gd2FpdCBvbiB3aGljaGV2ZXIgaW50aWFsaXphdGlvbiBwcm9taXNlcyBhcmUgcmVxdWlyZWQsXHJcbiAqIGRlcGVuZGluZyBvbiB0aGUgY29udGVudHMgb2YgdGhlIGd0YWcgcGFyYW1zJyBgc2VuZF90b2AgZmllbGQsIGlmIGFueS5cclxuICovXHJcbmluaXRpYWxpemF0aW9uUHJvbWlzZXNNYXAsIFxyXG4vKipcclxuICogV3JhcHBlZCBndGFnIGNhbGxzIHNvbWV0aW1lcyByZXF1aXJlIGFsbCBkeW5hbWljIGNvbmZpZyBmZXRjaGVzIHRvIGhhdmUgcmV0dXJuZWRcclxuICogYmVmb3JlIGRldGVybWluaW5nIHdoYXQgaW5pdGlhbGl6YXRpb24gcHJvbWlzZXMgKHdoaWNoIGluY2x1ZGUgRklEcykgdG8gd2FpdCBmb3IuXHJcbiAqL1xyXG5keW5hbWljQ29uZmlnUHJvbWlzZXNMaXN0LCBcclxuLyoqXHJcbiAqIFdyYXBwZWQgZ3RhZyBjb25maWcgY2FsbHMgY2FuIG5hcnJvdyBkb3duIHdoaWNoIGluaXRpYWxpemF0aW9uIHByb21pc2UgKHdpdGggRklEKVxyXG4gKiB0byB3YWl0IGZvciBpZiB0aGUgbWVhc3VyZW1lbnRJZCBpcyBhbHJlYWR5IGZldGNoZWQsIGJ5IGdldHRpbmcgdGhlIGNvcnJlc3BvbmRpbmcgYXBwSWQsXHJcbiAqIHdoaWNoIGlzIHRoZSBrZXkgZm9yIHRoZSBpbml0aWFsaXphdGlvbiBwcm9taXNlcyBtYXAuXHJcbiAqL1xyXG5tZWFzdXJlbWVudElkVG9BcHBJZCkge1xyXG4gICAgLyoqXHJcbiAgICAgKiBXcmFwcGVyIGFyb3VuZCBndGFnIHRoYXQgZW5zdXJlcyBGSUQgaXMgc2VudCB3aXRoIGd0YWcgY2FsbHMuXHJcbiAgICAgKiBAcGFyYW0gY29tbWFuZCBHdGFnIGNvbW1hbmQgdHlwZS5cclxuICAgICAqIEBwYXJhbSBpZE9yTmFtZU9yUGFyYW1zIE1lYXN1cmVtZW50IElEIGlmIGNvbW1hbmQgaXMgRVZFTlQvQ09ORklHLCBwYXJhbXMgaWYgY29tbWFuZCBpcyBTRVQuXHJcbiAgICAgKiBAcGFyYW0gZ3RhZ1BhcmFtcyBQYXJhbXMgaWYgZXZlbnQgaXMgRVZFTlQvQ09ORklHLlxyXG4gICAgICovXHJcbiAgICBhc3luYyBmdW5jdGlvbiBndGFnV3JhcHBlcihjb21tYW5kLCAuLi5hcmdzKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy8gSWYgZXZlbnQsIGNoZWNrIHRoYXQgcmVsZXZhbnQgaW5pdGlhbGl6YXRpb24gcHJvbWlzZXMgaGF2ZSBjb21wbGV0ZWQuXHJcbiAgICAgICAgICAgIGlmIChjb21tYW5kID09PSBcImV2ZW50XCIgLyogR3RhZ0NvbW1hbmQuRVZFTlQgKi8pIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IFttZWFzdXJlbWVudElkLCBndGFnUGFyYW1zXSA9IGFyZ3M7XHJcbiAgICAgICAgICAgICAgICAvLyBJZiBFVkVOVCwgc2Vjb25kIGFyZyBtdXN0IGJlIG1lYXN1cmVtZW50SWQuXHJcbiAgICAgICAgICAgICAgICBhd2FpdCBndGFnT25FdmVudChndGFnQ29yZSwgaW5pdGlhbGl6YXRpb25Qcm9taXNlc01hcCwgZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCwgbWVhc3VyZW1lbnRJZCwgZ3RhZ1BhcmFtcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY29tbWFuZCA9PT0gXCJjb25maWdcIiAvKiBHdGFnQ29tbWFuZC5DT05GSUcgKi8pIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IFttZWFzdXJlbWVudElkLCBndGFnUGFyYW1zXSA9IGFyZ3M7XHJcbiAgICAgICAgICAgICAgICAvLyBJZiBDT05GSUcsIHNlY29uZCBhcmcgbXVzdCBiZSBtZWFzdXJlbWVudElkLlxyXG4gICAgICAgICAgICAgICAgYXdhaXQgZ3RhZ09uQ29uZmlnKGd0YWdDb3JlLCBpbml0aWFsaXphdGlvblByb21pc2VzTWFwLCBkeW5hbWljQ29uZmlnUHJvbWlzZXNMaXN0LCBtZWFzdXJlbWVudElkVG9BcHBJZCwgbWVhc3VyZW1lbnRJZCwgZ3RhZ1BhcmFtcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY29tbWFuZCA9PT0gXCJjb25zZW50XCIgLyogR3RhZ0NvbW1hbmQuQ09OU0VOVCAqLykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgW2d0YWdQYXJhbXNdID0gYXJncztcclxuICAgICAgICAgICAgICAgIGd0YWdDb3JlKFwiY29uc2VudFwiIC8qIEd0YWdDb21tYW5kLkNPTlNFTlQgKi8sICd1cGRhdGUnLCBndGFnUGFyYW1zKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChjb21tYW5kID09PSBcImdldFwiIC8qIEd0YWdDb21tYW5kLkdFVCAqLykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgW21lYXN1cmVtZW50SWQsIGZpZWxkTmFtZSwgY2FsbGJhY2tdID0gYXJncztcclxuICAgICAgICAgICAgICAgIGd0YWdDb3JlKFwiZ2V0XCIgLyogR3RhZ0NvbW1hbmQuR0VUICovLCBtZWFzdXJlbWVudElkLCBmaWVsZE5hbWUsIGNhbGxiYWNrKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChjb21tYW5kID09PSBcInNldFwiIC8qIEd0YWdDb21tYW5kLlNFVCAqLykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgW2N1c3RvbVBhcmFtc10gPSBhcmdzO1xyXG4gICAgICAgICAgICAgICAgLy8gSWYgU0VULCBzZWNvbmQgYXJnIG11c3QgYmUgcGFyYW1zLlxyXG4gICAgICAgICAgICAgICAgZ3RhZ0NvcmUoXCJzZXRcIiAvKiBHdGFnQ29tbWFuZC5TRVQgKi8sIGN1c3RvbVBhcmFtcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBndGFnQ29yZShjb21tYW5kLCAuLi5hcmdzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IoZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGd0YWdXcmFwcGVyO1xyXG59XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGdsb2JhbCBndGFnIGZ1bmN0aW9uIG9yIHdyYXBzIGV4aXN0aW5nIG9uZSBpZiBmb3VuZC5cclxuICogVGhpcyB3cmFwcGVkIGZ1bmN0aW9uIGF0dGFjaGVzIEZpcmViYXNlIGluc3RhbmNlIElEIChGSUQpIHRvIGd0YWcgJ2NvbmZpZycgYW5kXHJcbiAqICdldmVudCcgY2FsbHMgdGhhdCBiZWxvbmcgdG8gdGhlIEdBSUQgYXNzb2NpYXRlZCB3aXRoIHRoaXMgRmlyZWJhc2UgaW5zdGFuY2UuXHJcbiAqXHJcbiAqIEBwYXJhbSBpbml0aWFsaXphdGlvblByb21pc2VzTWFwIE1hcCBvZiBhcHBJZHMgdG8gdGhlaXIgaW5pdGlhbGl6YXRpb24gcHJvbWlzZXMuXHJcbiAqIEBwYXJhbSBkeW5hbWljQ29uZmlnUHJvbWlzZXNMaXN0IEFycmF5IG9mIGR5bmFtaWMgY29uZmlnIGZldGNoIHByb21pc2VzLlxyXG4gKiBAcGFyYW0gbWVhc3VyZW1lbnRJZFRvQXBwSWQgTWFwIG9mIEdBIG1lYXN1cmVtZW50SURzIHRvIGNvcnJlc3BvbmRpbmcgRmlyZWJhc2UgYXBwSWQuXHJcbiAqIEBwYXJhbSBkYXRhTGF5ZXJOYW1lIE5hbWUgb2YgZ2xvYmFsIEdBIGRhdGFsYXllciBhcnJheS5cclxuICogQHBhcmFtIGd0YWdGdW5jdGlvbk5hbWUgTmFtZSBvZiBnbG9iYWwgZ3RhZyBmdW5jdGlvbiAoXCJndGFnXCIgaWYgbm90IHVzZXItc3BlY2lmaWVkKS5cclxuICovXHJcbmZ1bmN0aW9uIHdyYXBPckNyZWF0ZUd0YWcoaW5pdGlhbGl6YXRpb25Qcm9taXNlc01hcCwgZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCwgbWVhc3VyZW1lbnRJZFRvQXBwSWQsIGRhdGFMYXllck5hbWUsIGd0YWdGdW5jdGlvbk5hbWUpIHtcclxuICAgIC8vIENyZWF0ZSBhIGJhc2ljIGNvcmUgZ3RhZyBmdW5jdGlvblxyXG4gICAgbGV0IGd0YWdDb3JlID0gZnVuY3Rpb24gKC4uLl9hcmdzKSB7XHJcbiAgICAgICAgLy8gTXVzdCBwdXNoIElBcmd1bWVudHMgb2JqZWN0LCBub3QgYW4gYXJyYXkuXHJcbiAgICAgICAgd2luZG93W2RhdGFMYXllck5hbWVdLnB1c2goYXJndW1lbnRzKTtcclxuICAgIH07XHJcbiAgICAvLyBSZXBsYWNlIGl0IHdpdGggZXhpc3Rpbmcgb25lIGlmIGZvdW5kXHJcbiAgICBpZiAod2luZG93W2d0YWdGdW5jdGlvbk5hbWVdICYmXHJcbiAgICAgICAgdHlwZW9mIHdpbmRvd1tndGFnRnVuY3Rpb25OYW1lXSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICBndGFnQ29yZSA9IHdpbmRvd1tndGFnRnVuY3Rpb25OYW1lXTtcclxuICAgIH1cclxuICAgIHdpbmRvd1tndGFnRnVuY3Rpb25OYW1lXSA9IHdyYXBHdGFnKGd0YWdDb3JlLCBpbml0aWFsaXphdGlvblByb21pc2VzTWFwLCBkeW5hbWljQ29uZmlnUHJvbWlzZXNMaXN0LCBtZWFzdXJlbWVudElkVG9BcHBJZCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGd0YWdDb3JlLFxyXG4gICAgICAgIHdyYXBwZWRHdGFnOiB3aW5kb3dbZ3RhZ0Z1bmN0aW9uTmFtZV1cclxuICAgIH07XHJcbn1cclxuLyoqXHJcbiAqIFJldHVybnMgdGhlIHNjcmlwdCB0YWcgaW4gdGhlIERPTSBtYXRjaGluZyBib3RoIHRoZSBndGFnIHVybCBwYXR0ZXJuXHJcbiAqIGFuZCB0aGUgcHJvdmlkZWQgZGF0YSBsYXllciBuYW1lLlxyXG4gKi9cclxuZnVuY3Rpb24gZmluZEd0YWdTY3JpcHRPblBhZ2UoZGF0YUxheWVyTmFtZSkge1xyXG4gICAgY29uc3Qgc2NyaXB0VGFncyA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0Jyk7XHJcbiAgICBmb3IgKGNvbnN0IHRhZyBvZiBPYmplY3QudmFsdWVzKHNjcmlwdFRhZ3MpKSB7XHJcbiAgICAgICAgaWYgKHRhZy5zcmMgJiZcclxuICAgICAgICAgICAgdGFnLnNyYy5pbmNsdWRlcyhHVEFHX1VSTCkgJiZcclxuICAgICAgICAgICAgdGFnLnNyYy5pbmNsdWRlcyhkYXRhTGF5ZXJOYW1lKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGFnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBCYWNrb2ZmIGZhY3RvciBmb3IgNTAzIGVycm9ycywgd2hpY2ggd2Ugd2FudCB0byBiZSBjb25zZXJ2YXRpdmUgYWJvdXRcclxuICogdG8gYXZvaWQgb3ZlcmxvYWRpbmcgc2VydmVycy4gRWFjaCByZXRyeSBpbnRlcnZhbCB3aWxsIGJlXHJcbiAqIEJBU0VfSU5URVJWQUxfTUlMTElTICogTE9OR19SRVRSWV9GQUNUT1IgXiByZXRyeUNvdW50LCBzbyB0aGUgc2Vjb25kIG9uZVxyXG4gKiB3aWxsIGJlIH4zMCBzZWNvbmRzICh3aXRoIGZ1enppbmcpLlxyXG4gKi9cclxuY29uc3QgTE9OR19SRVRSWV9GQUNUT1IgPSAzMDtcclxuLyoqXHJcbiAqIEJhc2Ugd2FpdCBpbnRlcnZhbCB0byBtdWx0aXBsaWVkIGJ5IGJhY2tvZmZGYWN0b3JeYmFja29mZkNvdW50LlxyXG4gKi9cclxuY29uc3QgQkFTRV9JTlRFUlZBTF9NSUxMSVMgPSAxMDAwO1xyXG4vKipcclxuICogU3R1YmJhYmxlIHJldHJ5IGRhdGEgc3RvcmFnZSBjbGFzcy5cclxuICovXHJcbmNsYXNzIFJldHJ5RGF0YSB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0aHJvdHRsZU1ldGFkYXRhID0ge30sIGludGVydmFsTWlsbGlzID0gQkFTRV9JTlRFUlZBTF9NSUxMSVMpIHtcclxuICAgICAgICB0aGlzLnRocm90dGxlTWV0YWRhdGEgPSB0aHJvdHRsZU1ldGFkYXRhO1xyXG4gICAgICAgIHRoaXMuaW50ZXJ2YWxNaWxsaXMgPSBpbnRlcnZhbE1pbGxpcztcclxuICAgIH1cclxuICAgIGdldFRocm90dGxlTWV0YWRhdGEoYXBwSWQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50aHJvdHRsZU1ldGFkYXRhW2FwcElkXTtcclxuICAgIH1cclxuICAgIHNldFRocm90dGxlTWV0YWRhdGEoYXBwSWQsIG1ldGFkYXRhKSB7XHJcbiAgICAgICAgdGhpcy50aHJvdHRsZU1ldGFkYXRhW2FwcElkXSA9IG1ldGFkYXRhO1xyXG4gICAgfVxyXG4gICAgZGVsZXRlVGhyb3R0bGVNZXRhZGF0YShhcHBJZCkge1xyXG4gICAgICAgIGRlbGV0ZSB0aGlzLnRocm90dGxlTWV0YWRhdGFbYXBwSWRdO1xyXG4gICAgfVxyXG59XHJcbmNvbnN0IGRlZmF1bHRSZXRyeURhdGEgPSBuZXcgUmV0cnlEYXRhKCk7XHJcbi8qKlxyXG4gKiBTZXQgR0VUIHJlcXVlc3QgaGVhZGVycy5cclxuICogQHBhcmFtIGFwaUtleSBBcHAgQVBJIGtleS5cclxuICovXHJcbmZ1bmN0aW9uIGdldEhlYWRlcnMoYXBpS2V5KSB7XHJcbiAgICByZXR1cm4gbmV3IEhlYWRlcnMoe1xyXG4gICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgICd4LWdvb2ctYXBpLWtleSc6IGFwaUtleVxyXG4gICAgfSk7XHJcbn1cclxuLyoqXHJcbiAqIEZldGNoZXMgZHluYW1pYyBjb25maWcgZnJvbSBiYWNrZW5kLlxyXG4gKiBAcGFyYW0gYXBwIEZpcmViYXNlIGFwcCB0byBmZXRjaCBjb25maWcgZm9yLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gZmV0Y2hEeW5hbWljQ29uZmlnKGFwcEZpZWxkcykge1xyXG4gICAgdmFyIF9hO1xyXG4gICAgY29uc3QgeyBhcHBJZCwgYXBpS2V5IH0gPSBhcHBGaWVsZHM7XHJcbiAgICBjb25zdCByZXF1ZXN0ID0ge1xyXG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgaGVhZGVyczogZ2V0SGVhZGVycyhhcGlLZXkpXHJcbiAgICB9O1xyXG4gICAgY29uc3QgYXBwVXJsID0gRFlOQU1JQ19DT05GSUdfVVJMLnJlcGxhY2UoJ3thcHAtaWR9JywgYXBwSWQpO1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChhcHBVcmwsIHJlcXVlc3QpO1xyXG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwICYmIHJlc3BvbnNlLnN0YXR1cyAhPT0gMzA0KSB7XHJcbiAgICAgICAgbGV0IGVycm9yTWVzc2FnZSA9ICcnO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIFRyeSB0byBnZXQgYW55IGVycm9yIG1lc3NhZ2UgdGV4dCBmcm9tIHNlcnZlciByZXNwb25zZS5cclxuICAgICAgICAgICAgY29uc3QganNvblJlc3BvbnNlID0gKGF3YWl0IHJlc3BvbnNlLmpzb24oKSk7XHJcbiAgICAgICAgICAgIGlmICgoX2EgPSBqc29uUmVzcG9uc2UuZXJyb3IpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5tZXNzYWdlKSB7XHJcbiAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UgPSBqc29uUmVzcG9uc2UuZXJyb3IubWVzc2FnZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoX2lnbm9yZWQpIHsgfVxyXG4gICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiY29uZmlnLWZldGNoLWZhaWxlZFwiIC8qIEFuYWx5dGljc0Vycm9yLkNPTkZJR19GRVRDSF9GQUlMRUQgKi8sIHtcclxuICAgICAgICAgICAgaHR0cFN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxyXG4gICAgICAgICAgICByZXNwb25zZU1lc3NhZ2U6IGVycm9yTWVzc2FnZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxufVxyXG4vKipcclxuICogRmV0Y2hlcyBkeW5hbWljIGNvbmZpZyBmcm9tIGJhY2tlbmQsIHJldHJ5aW5nIGlmIGZhaWxlZC5cclxuICogQHBhcmFtIGFwcCBGaXJlYmFzZSBhcHAgdG8gZmV0Y2ggY29uZmlnIGZvci5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGZldGNoRHluYW1pY0NvbmZpZ1dpdGhSZXRyeShhcHAsIFxyXG4vLyByZXRyeURhdGEgYW5kIHRpbWVvdXRNaWxsaXMgYXJlIHBhcmFtZXRlcml6ZWQgdG8gYWxsb3cgcGFzc2luZyBhIGRpZmZlcmVudCB2YWx1ZSBmb3IgdGVzdGluZy5cclxucmV0cnlEYXRhID0gZGVmYXVsdFJldHJ5RGF0YSwgdGltZW91dE1pbGxpcykge1xyXG4gICAgY29uc3QgeyBhcHBJZCwgYXBpS2V5LCBtZWFzdXJlbWVudElkIH0gPSBhcHAub3B0aW9ucztcclxuICAgIGlmICghYXBwSWQpIHtcclxuICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcIm5vLWFwcC1pZFwiIC8qIEFuYWx5dGljc0Vycm9yLk5PX0FQUF9JRCAqLyk7XHJcbiAgICB9XHJcbiAgICBpZiAoIWFwaUtleSkge1xyXG4gICAgICAgIGlmIChtZWFzdXJlbWVudElkKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBtZWFzdXJlbWVudElkLFxyXG4gICAgICAgICAgICAgICAgYXBwSWRcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJuby1hcGkta2V5XCIgLyogQW5hbHl0aWNzRXJyb3IuTk9fQVBJX0tFWSAqLyk7XHJcbiAgICB9XHJcbiAgICBjb25zdCB0aHJvdHRsZU1ldGFkYXRhID0gcmV0cnlEYXRhLmdldFRocm90dGxlTWV0YWRhdGEoYXBwSWQpIHx8IHtcclxuICAgICAgICBiYWNrb2ZmQ291bnQ6IDAsXHJcbiAgICAgICAgdGhyb3R0bGVFbmRUaW1lTWlsbGlzOiBEYXRlLm5vdygpXHJcbiAgICB9O1xyXG4gICAgY29uc3Qgc2lnbmFsID0gbmV3IEFuYWx5dGljc0Fib3J0U2lnbmFsKCk7XHJcbiAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcclxuICAgICAgICAvLyBOb3RlIGEgdmVyeSBsb3cgZGVsYXksIGVnIDwgMTBtcywgY2FuIGVsYXBzZSBiZWZvcmUgbGlzdGVuZXJzIGFyZSBpbml0aWFsaXplZC5cclxuICAgICAgICBzaWduYWwuYWJvcnQoKTtcclxuICAgIH0sIHRpbWVvdXRNaWxsaXMgIT09IHVuZGVmaW5lZCA/IHRpbWVvdXRNaWxsaXMgOiBGRVRDSF9USU1FT1VUX01JTExJUyk7XHJcbiAgICByZXR1cm4gYXR0ZW1wdEZldGNoRHluYW1pY0NvbmZpZ1dpdGhSZXRyeSh7IGFwcElkLCBhcGlLZXksIG1lYXN1cmVtZW50SWQgfSwgdGhyb3R0bGVNZXRhZGF0YSwgc2lnbmFsLCByZXRyeURhdGEpO1xyXG59XHJcbi8qKlxyXG4gKiBSdW5zIG9uZSByZXRyeSBhdHRlbXB0LlxyXG4gKiBAcGFyYW0gYXBwRmllbGRzIE5lY2Vzc2FyeSBhcHAgY29uZmlnIGZpZWxkcy5cclxuICogQHBhcmFtIHRocm90dGxlTWV0YWRhdGEgT25nb2luZyBtZXRhZGF0YSB0byBkZXRlcm1pbmUgdGhyb3R0bGluZyB0aW1lcy5cclxuICogQHBhcmFtIHNpZ25hbCBBYm9ydCBzaWduYWwuXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBhdHRlbXB0RmV0Y2hEeW5hbWljQ29uZmlnV2l0aFJldHJ5KGFwcEZpZWxkcywgeyB0aHJvdHRsZUVuZFRpbWVNaWxsaXMsIGJhY2tvZmZDb3VudCB9LCBzaWduYWwsIHJldHJ5RGF0YSA9IGRlZmF1bHRSZXRyeURhdGEgLy8gZm9yIHRlc3RpbmdcclxuKSB7XHJcbiAgICB2YXIgX2E7XHJcbiAgICBjb25zdCB7IGFwcElkLCBtZWFzdXJlbWVudElkIH0gPSBhcHBGaWVsZHM7XHJcbiAgICAvLyBTdGFydHMgd2l0aCBhIChwb3RlbnRpYWxseSB6ZXJvKSB0aW1lb3V0IHRvIHN1cHBvcnQgcmVzdW1wdGlvbiBmcm9tIHN0b3JlZCBzdGF0ZS5cclxuICAgIC8vIEVuc3VyZXMgdGhlIHRocm90dGxlIGVuZCB0aW1lIGlzIGhvbm9yZWQgaWYgdGhlIGxhc3QgYXR0ZW1wdCB0aW1lZCBvdXQuXHJcbiAgICAvLyBOb3RlIHRoZSBTREsgd2lsbCBuZXZlciBtYWtlIGEgcmVxdWVzdCBpZiB0aGUgZmV0Y2ggdGltZW91dCBleHBpcmVzIGF0IHRoaXMgcG9pbnQuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IHNldEFib3J0YWJsZVRpbWVvdXQoc2lnbmFsLCB0aHJvdHRsZUVuZFRpbWVNaWxsaXMpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICBpZiAobWVhc3VyZW1lbnRJZCkge1xyXG4gICAgICAgICAgICBsb2dnZXIud2FybihgVGltZWQgb3V0IGZldGNoaW5nIHRoaXMgRmlyZWJhc2UgYXBwJ3MgbWVhc3VyZW1lbnQgSUQgZnJvbSB0aGUgc2VydmVyLmAgK1xyXG4gICAgICAgICAgICAgICAgYCBGYWxsaW5nIGJhY2sgdG8gdGhlIG1lYXN1cmVtZW50IElEICR7bWVhc3VyZW1lbnRJZH1gICtcclxuICAgICAgICAgICAgICAgIGAgcHJvdmlkZWQgaW4gdGhlIFwibWVhc3VyZW1lbnRJZFwiIGZpZWxkIGluIHRoZSBsb2NhbCBGaXJlYmFzZSBjb25maWcuIFske2UgPT09IG51bGwgfHwgZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZS5tZXNzYWdlfV1gKTtcclxuICAgICAgICAgICAgcmV0dXJuIHsgYXBwSWQsIG1lYXN1cmVtZW50SWQgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhyb3cgZTtcclxuICAgIH1cclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaER5bmFtaWNDb25maWcoYXBwRmllbGRzKTtcclxuICAgICAgICAvLyBOb3RlIHRoZSBTREsgb25seSBjbGVhcnMgdGhyb3R0bGUgc3RhdGUgaWYgcmVzcG9uc2UgaXMgc3VjY2VzcyBvciBub24tcmV0cmlhYmxlLlxyXG4gICAgICAgIHJldHJ5RGF0YS5kZWxldGVUaHJvdHRsZU1ldGFkYXRhKGFwcElkKTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIGNvbnN0IGVycm9yID0gZTtcclxuICAgICAgICBpZiAoIWlzUmV0cmlhYmxlRXJyb3IoZXJyb3IpKSB7XHJcbiAgICAgICAgICAgIHJldHJ5RGF0YS5kZWxldGVUaHJvdHRsZU1ldGFkYXRhKGFwcElkKTtcclxuICAgICAgICAgICAgaWYgKG1lYXN1cmVtZW50SWQpIHtcclxuICAgICAgICAgICAgICAgIGxvZ2dlci53YXJuKGBGYWlsZWQgdG8gZmV0Y2ggdGhpcyBGaXJlYmFzZSBhcHAncyBtZWFzdXJlbWVudCBJRCBmcm9tIHRoZSBzZXJ2ZXIuYCArXHJcbiAgICAgICAgICAgICAgICAgICAgYCBGYWxsaW5nIGJhY2sgdG8gdGhlIG1lYXN1cmVtZW50IElEICR7bWVhc3VyZW1lbnRJZH1gICtcclxuICAgICAgICAgICAgICAgICAgICBgIHByb3ZpZGVkIGluIHRoZSBcIm1lYXN1cmVtZW50SWRcIiBmaWVsZCBpbiB0aGUgbG9jYWwgRmlyZWJhc2UgY29uZmlnLiBbJHtlcnJvciA9PT0gbnVsbCB8fCBlcnJvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3IubWVzc2FnZX1dYCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geyBhcHBJZCwgbWVhc3VyZW1lbnRJZCB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBiYWNrb2ZmTWlsbGlzID0gTnVtYmVyKChfYSA9IGVycm9yID09PSBudWxsIHx8IGVycm9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlcnJvci5jdXN0b21EYXRhKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaHR0cFN0YXR1cykgPT09IDUwM1xyXG4gICAgICAgICAgICA/IGNhbGN1bGF0ZUJhY2tvZmZNaWxsaXMoYmFja29mZkNvdW50LCByZXRyeURhdGEuaW50ZXJ2YWxNaWxsaXMsIExPTkdfUkVUUllfRkFDVE9SKVxyXG4gICAgICAgICAgICA6IGNhbGN1bGF0ZUJhY2tvZmZNaWxsaXMoYmFja29mZkNvdW50LCByZXRyeURhdGEuaW50ZXJ2YWxNaWxsaXMpO1xyXG4gICAgICAgIC8vIEluY3JlbWVudHMgYmFja29mZiBzdGF0ZS5cclxuICAgICAgICBjb25zdCB0aHJvdHRsZU1ldGFkYXRhID0ge1xyXG4gICAgICAgICAgICB0aHJvdHRsZUVuZFRpbWVNaWxsaXM6IERhdGUubm93KCkgKyBiYWNrb2ZmTWlsbGlzLFxyXG4gICAgICAgICAgICBiYWNrb2ZmQ291bnQ6IGJhY2tvZmZDb3VudCArIDFcclxuICAgICAgICB9O1xyXG4gICAgICAgIC8vIFBlcnNpc3RzIHN0YXRlLlxyXG4gICAgICAgIHJldHJ5RGF0YS5zZXRUaHJvdHRsZU1ldGFkYXRhKGFwcElkLCB0aHJvdHRsZU1ldGFkYXRhKTtcclxuICAgICAgICBsb2dnZXIuZGVidWcoYENhbGxpbmcgYXR0ZW1wdEZldGNoIGFnYWluIGluICR7YmFja29mZk1pbGxpc30gbWlsbGlzYCk7XHJcbiAgICAgICAgcmV0dXJuIGF0dGVtcHRGZXRjaER5bmFtaWNDb25maWdXaXRoUmV0cnkoYXBwRmllbGRzLCB0aHJvdHRsZU1ldGFkYXRhLCBzaWduYWwsIHJldHJ5RGF0YSk7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIFN1cHBvcnRzIHdhaXRpbmcgb24gYSBiYWNrb2ZmIGJ5OlxyXG4gKlxyXG4gKiA8dWw+XHJcbiAqICAgPGxpPlByb21pc2lmeWluZyBzZXRUaW1lb3V0LCBzbyB3ZSBjYW4gc2V0IGEgdGltZW91dCBpbiBvdXIgUHJvbWlzZSBjaGFpbjwvbGk+XHJcbiAqICAgPGxpPkxpc3RlbmluZyBvbiBhIHNpZ25hbCBidXMgZm9yIGFib3J0IGV2ZW50cywganVzdCBsaWtlIHRoZSBGZXRjaCBBUEk8L2xpPlxyXG4gKiAgIDxsaT5GYWlsaW5nIGluIHRoZSBzYW1lIHdheSB0aGUgRmV0Y2ggQVBJIGZhaWxzLCBzbyB0aW1pbmcgb3V0IGEgbGl2ZSByZXF1ZXN0IGFuZCBhIHRocm90dGxlZFxyXG4gKiAgICAgICByZXF1ZXN0IGFwcGVhciB0aGUgc2FtZS48L2xpPlxyXG4gKiA8L3VsPlxyXG4gKlxyXG4gKiA8cD5WaXNpYmxlIGZvciB0ZXN0aW5nLlxyXG4gKi9cclxuZnVuY3Rpb24gc2V0QWJvcnRhYmxlVGltZW91dChzaWduYWwsIHRocm90dGxlRW5kVGltZU1pbGxpcykge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAvLyBEZXJpdmVzIGJhY2tvZmYgZnJvbSBnaXZlbiBlbmQgdGltZSwgbm9ybWFsaXppbmcgbmVnYXRpdmUgbnVtYmVycyB0byB6ZXJvLlxyXG4gICAgICAgIGNvbnN0IGJhY2tvZmZNaWxsaXMgPSBNYXRoLm1heCh0aHJvdHRsZUVuZFRpbWVNaWxsaXMgLSBEYXRlLm5vdygpLCAwKTtcclxuICAgICAgICBjb25zdCB0aW1lb3V0ID0gc2V0VGltZW91dChyZXNvbHZlLCBiYWNrb2ZmTWlsbGlzKTtcclxuICAgICAgICAvLyBBZGRzIGxpc3RlbmVyLCByYXRoZXIgdGhhbiBzZXRzIG9uYWJvcnQsIGJlY2F1c2Ugc2lnbmFsIGlzIGEgc2hhcmVkIG9iamVjdC5cclxuICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcigoKSA9PiB7XHJcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcclxuICAgICAgICAgICAgLy8gSWYgdGhlIHJlcXVlc3QgY29tcGxldGVzIGJlZm9yZSB0aGlzIHRpbWVvdXQsIHRoZSByZWplY3Rpb24gaGFzIG5vIGVmZmVjdC5cclxuICAgICAgICAgICAgcmVqZWN0KEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiZmV0Y2gtdGhyb3R0bGVcIiAvKiBBbmFseXRpY3NFcnJvci5GRVRDSF9USFJPVFRMRSAqLywge1xyXG4gICAgICAgICAgICAgICAgdGhyb3R0bGVFbmRUaW1lTWlsbGlzXHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIHtAbGluayBFcnJvcn0gaW5kaWNhdGVzIGEgZmV0Y2ggcmVxdWVzdCBtYXkgc3VjY2VlZCBsYXRlci5cclxuICovXHJcbmZ1bmN0aW9uIGlzUmV0cmlhYmxlRXJyb3IoZSkge1xyXG4gICAgaWYgKCEoZSBpbnN0YW5jZW9mIEZpcmViYXNlRXJyb3IpIHx8ICFlLmN1c3RvbURhdGEpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvLyBVc2VzIHN0cmluZyBpbmRleCBkZWZpbmVkIGJ5IEVycm9yRGF0YSwgd2hpY2ggRmlyZWJhc2VFcnJvciBpbXBsZW1lbnRzLlxyXG4gICAgY29uc3QgaHR0cFN0YXR1cyA9IE51bWJlcihlLmN1c3RvbURhdGFbJ2h0dHBTdGF0dXMnXSk7XHJcbiAgICByZXR1cm4gKGh0dHBTdGF0dXMgPT09IDQyOSB8fFxyXG4gICAgICAgIGh0dHBTdGF0dXMgPT09IDUwMCB8fFxyXG4gICAgICAgIGh0dHBTdGF0dXMgPT09IDUwMyB8fFxyXG4gICAgICAgIGh0dHBTdGF0dXMgPT09IDUwNCk7XHJcbn1cclxuLyoqXHJcbiAqIFNoaW1zIGEgbWluaW1hbCBBYm9ydFNpZ25hbCAoY29waWVkIGZyb20gUmVtb3RlIENvbmZpZykuXHJcbiAqXHJcbiAqIDxwPkFib3J0Q29udHJvbGxlcidzIEFib3J0U2lnbmFsIGNvbnZlbmllbnRseSBkZWNvdXBsZXMgZmV0Y2ggdGltZW91dCBsb2dpYyBmcm9tIG90aGVyIGFzcGVjdHNcclxuICogb2YgbmV0d29ya2luZywgc3VjaCBhcyByZXRyaWVzLiBGaXJlYmFzZSBkb2Vzbid0IHVzZSBBYm9ydENvbnRyb2xsZXIgZW5vdWdoIHRvIGp1c3RpZnkgYVxyXG4gKiBwb2x5ZmlsbCByZWNvbW1lbmRhdGlvbiwgbGlrZSB3ZSBkbyB3aXRoIHRoZSBGZXRjaCBBUEksIGJ1dCB0aGlzIG1pbmltYWwgc2hpbSBjYW4gZWFzaWx5IGJlXHJcbiAqIHN3YXBwZWQgb3V0IGlmL3doZW4gd2UgZG8uXHJcbiAqL1xyXG5jbGFzcyBBbmFseXRpY3NBYm9ydFNpZ25hbCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IFtdO1xyXG4gICAgfVxyXG4gICAgYWRkRXZlbnRMaXN0ZW5lcihsaXN0ZW5lcikge1xyXG4gICAgICAgIHRoaXMubGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xyXG4gICAgfVxyXG4gICAgYWJvcnQoKSB7XHJcbiAgICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaChsaXN0ZW5lciA9PiBsaXN0ZW5lcigpKTtcclxuICAgIH1cclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogRXZlbnQgcGFyYW1ldGVycyB0byBzZXQgb24gJ2d0YWcnIGR1cmluZyBpbml0aWFsaXphdGlvbi5cclxuICovXHJcbmxldCBkZWZhdWx0RXZlbnRQYXJhbWV0ZXJzRm9ySW5pdDtcclxuLyoqXHJcbiAqIExvZ3MgYW4gYW5hbHl0aWNzIGV2ZW50IHRocm91Z2ggdGhlIEZpcmViYXNlIFNESy5cclxuICpcclxuICogQHBhcmFtIGd0YWdGdW5jdGlvbiBXcmFwcGVkIGd0YWcgZnVuY3Rpb24gdGhhdCB3YWl0cyBmb3IgZmlkIHRvIGJlIHNldCBiZWZvcmUgc2VuZGluZyBhbiBldmVudFxyXG4gKiBAcGFyYW0gZXZlbnROYW1lIEdvb2dsZSBBbmFseXRpY3MgZXZlbnQgbmFtZSwgY2hvb3NlIGZyb20gc3RhbmRhcmQgbGlzdCBvciB1c2UgYSBjdXN0b20gc3RyaW5nLlxyXG4gKiBAcGFyYW0gZXZlbnRQYXJhbXMgQW5hbHl0aWNzIGV2ZW50IHBhcmFtZXRlcnMuXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBsb2dFdmVudCQxKGd0YWdGdW5jdGlvbiwgaW5pdGlhbGl6YXRpb25Qcm9taXNlLCBldmVudE5hbWUsIGV2ZW50UGFyYW1zLCBvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmdsb2JhbCkge1xyXG4gICAgICAgIGd0YWdGdW5jdGlvbihcImV2ZW50XCIgLyogR3RhZ0NvbW1hbmQuRVZFTlQgKi8sIGV2ZW50TmFtZSwgZXZlbnRQYXJhbXMpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGNvbnN0IG1lYXN1cmVtZW50SWQgPSBhd2FpdCBpbml0aWFsaXphdGlvblByb21pc2U7XHJcbiAgICAgICAgY29uc3QgcGFyYW1zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBldmVudFBhcmFtcyksIHsgJ3NlbmRfdG8nOiBtZWFzdXJlbWVudElkIH0pO1xyXG4gICAgICAgIGd0YWdGdW5jdGlvbihcImV2ZW50XCIgLyogR3RhZ0NvbW1hbmQuRVZFTlQgKi8sIGV2ZW50TmFtZSwgcGFyYW1zKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogU2V0IHNjcmVlbl9uYW1lIHBhcmFtZXRlciBmb3IgdGhpcyBHb29nbGUgQW5hbHl0aWNzIElELlxyXG4gKlxyXG4gKiBAZGVwcmVjYXRlZCBVc2Uge0BsaW5rIGxvZ0V2ZW50fSB3aXRoIGBldmVudE5hbWVgIGFzICdzY3JlZW5fdmlldycgYW5kIGFkZCByZWxldmFudCBgZXZlbnRQYXJhbXNgLlxyXG4gKiBTZWUge0BsaW5rIGh0dHBzOi8vZmlyZWJhc2UuZ29vZ2xlLmNvbS9kb2NzL2FuYWx5dGljcy9zY3JlZW52aWV3cyB8IFRyYWNrIFNjcmVlbnZpZXdzfS5cclxuICpcclxuICogQHBhcmFtIGd0YWdGdW5jdGlvbiBXcmFwcGVkIGd0YWcgZnVuY3Rpb24gdGhhdCB3YWl0cyBmb3IgZmlkIHRvIGJlIHNldCBiZWZvcmUgc2VuZGluZyBhbiBldmVudFxyXG4gKiBAcGFyYW0gc2NyZWVuTmFtZSBTY3JlZW4gbmFtZSBzdHJpbmcgdG8gc2V0LlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gc2V0Q3VycmVudFNjcmVlbiQxKGd0YWdGdW5jdGlvbiwgaW5pdGlhbGl6YXRpb25Qcm9taXNlLCBzY3JlZW5OYW1lLCBvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmdsb2JhbCkge1xyXG4gICAgICAgIGd0YWdGdW5jdGlvbihcInNldFwiIC8qIEd0YWdDb21tYW5kLlNFVCAqLywgeyAnc2NyZWVuX25hbWUnOiBzY3JlZW5OYW1lIH0pO1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGNvbnN0IG1lYXN1cmVtZW50SWQgPSBhd2FpdCBpbml0aWFsaXphdGlvblByb21pc2U7XHJcbiAgICAgICAgZ3RhZ0Z1bmN0aW9uKFwiY29uZmlnXCIgLyogR3RhZ0NvbW1hbmQuQ09ORklHICovLCBtZWFzdXJlbWVudElkLCB7XHJcbiAgICAgICAgICAgIHVwZGF0ZTogdHJ1ZSxcclxuICAgICAgICAgICAgJ3NjcmVlbl9uYW1lJzogc2NyZWVuTmFtZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBTZXQgdXNlcl9pZCBwYXJhbWV0ZXIgZm9yIHRoaXMgR29vZ2xlIEFuYWx5dGljcyBJRC5cclxuICpcclxuICogQHBhcmFtIGd0YWdGdW5jdGlvbiBXcmFwcGVkIGd0YWcgZnVuY3Rpb24gdGhhdCB3YWl0cyBmb3IgZmlkIHRvIGJlIHNldCBiZWZvcmUgc2VuZGluZyBhbiBldmVudFxyXG4gKiBAcGFyYW0gaWQgVXNlciBJRCBzdHJpbmcgdG8gc2V0XHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBzZXRVc2VySWQkMShndGFnRnVuY3Rpb24sIGluaXRpYWxpemF0aW9uUHJvbWlzZSwgaWQsIG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuZ2xvYmFsKSB7XHJcbiAgICAgICAgZ3RhZ0Z1bmN0aW9uKFwic2V0XCIgLyogR3RhZ0NvbW1hbmQuU0VUICovLCB7ICd1c2VyX2lkJzogaWQgfSk7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgY29uc3QgbWVhc3VyZW1lbnRJZCA9IGF3YWl0IGluaXRpYWxpemF0aW9uUHJvbWlzZTtcclxuICAgICAgICBndGFnRnVuY3Rpb24oXCJjb25maWdcIiAvKiBHdGFnQ29tbWFuZC5DT05GSUcgKi8sIG1lYXN1cmVtZW50SWQsIHtcclxuICAgICAgICAgICAgdXBkYXRlOiB0cnVlLFxyXG4gICAgICAgICAgICAndXNlcl9pZCc6IGlkXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIFNldCBhbGwgb3RoZXIgdXNlciBwcm9wZXJ0aWVzIG90aGVyIHRoYW4gdXNlcl9pZCBhbmQgc2NyZWVuX25hbWUuXHJcbiAqXHJcbiAqIEBwYXJhbSBndGFnRnVuY3Rpb24gV3JhcHBlZCBndGFnIGZ1bmN0aW9uIHRoYXQgd2FpdHMgZm9yIGZpZCB0byBiZSBzZXQgYmVmb3JlIHNlbmRpbmcgYW4gZXZlbnRcclxuICogQHBhcmFtIHByb3BlcnRpZXMgTWFwIG9mIHVzZXIgcHJvcGVydGllcyB0byBzZXRcclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIHNldFVzZXJQcm9wZXJ0aWVzJDEoZ3RhZ0Z1bmN0aW9uLCBpbml0aWFsaXphdGlvblByb21pc2UsIHByb3BlcnRpZXMsIG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuZ2xvYmFsKSB7XHJcbiAgICAgICAgY29uc3QgZmxhdFByb3BlcnRpZXMgPSB7fTtcclxuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKSkge1xyXG4gICAgICAgICAgICAvLyB1c2UgZG90IG5vdGF0aW9uIGZvciBtZXJnZSBiZWhhdmlvciBpbiBndGFnLmpzXHJcbiAgICAgICAgICAgIGZsYXRQcm9wZXJ0aWVzW2B1c2VyX3Byb3BlcnRpZXMuJHtrZXl9YF0gPSBwcm9wZXJ0aWVzW2tleV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGd0YWdGdW5jdGlvbihcInNldFwiIC8qIEd0YWdDb21tYW5kLlNFVCAqLywgZmxhdFByb3BlcnRpZXMpO1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGNvbnN0IG1lYXN1cmVtZW50SWQgPSBhd2FpdCBpbml0aWFsaXphdGlvblByb21pc2U7XHJcbiAgICAgICAgZ3RhZ0Z1bmN0aW9uKFwiY29uZmlnXCIgLyogR3RhZ0NvbW1hbmQuQ09ORklHICovLCBtZWFzdXJlbWVudElkLCB7XHJcbiAgICAgICAgICAgIHVwZGF0ZTogdHJ1ZSxcclxuICAgICAgICAgICAgJ3VzZXJfcHJvcGVydGllcyc6IHByb3BlcnRpZXNcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogUmV0cmlldmVzIGEgdW5pcXVlIEdvb2dsZSBBbmFseXRpY3MgaWRlbnRpZmllciBmb3IgdGhlIHdlYiBjbGllbnQuXHJcbiAqIFNlZSB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vYW5hbHl0aWNzL2Rldmd1aWRlcy9jb2xsZWN0aW9uL2dhNC9yZWZlcmVuY2UvY29uZmlnI2NsaWVudF9pZCB8IGNsaWVudF9pZH0uXHJcbiAqXHJcbiAqIEBwYXJhbSBndGFnRnVuY3Rpb24gV3JhcHBlZCBndGFnIGZ1bmN0aW9uIHRoYXQgd2FpdHMgZm9yIGZpZCB0byBiZSBzZXQgYmVmb3JlIHNlbmRpbmcgYW4gZXZlbnRcclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGludGVybmFsR2V0R29vZ2xlQW5hbHl0aWNzQ2xpZW50SWQoZ3RhZ0Z1bmN0aW9uLCBpbml0aWFsaXphdGlvblByb21pc2UpIHtcclxuICAgIGNvbnN0IG1lYXN1cmVtZW50SWQgPSBhd2FpdCBpbml0aWFsaXphdGlvblByb21pc2U7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIGd0YWdGdW5jdGlvbihcImdldFwiIC8qIEd0YWdDb21tYW5kLkdFVCAqLywgbWVhc3VyZW1lbnRJZCwgJ2NsaWVudF9pZCcsIChjbGllbnRJZCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWNsaWVudElkKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJuby1jbGllbnQtaWRcIiAvKiBBbmFseXRpY3NFcnJvci5OT19DTElFTlRfSUQgKi8pKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXNvbHZlKGNsaWVudElkKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcbi8qKlxyXG4gKiBTZXQgd2hldGhlciBjb2xsZWN0aW9uIGlzIGVuYWJsZWQgZm9yIHRoaXMgSUQuXHJcbiAqXHJcbiAqIEBwYXJhbSBlbmFibGVkIElmIHRydWUsIGNvbGxlY3Rpb24gaXMgZW5hYmxlZCBmb3IgdGhpcyBJRC5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIHNldEFuYWx5dGljc0NvbGxlY3Rpb25FbmFibGVkJDEoaW5pdGlhbGl6YXRpb25Qcm9taXNlLCBlbmFibGVkKSB7XHJcbiAgICBjb25zdCBtZWFzdXJlbWVudElkID0gYXdhaXQgaW5pdGlhbGl6YXRpb25Qcm9taXNlO1xyXG4gICAgd2luZG93W2BnYS1kaXNhYmxlLSR7bWVhc3VyZW1lbnRJZH1gXSA9ICFlbmFibGVkO1xyXG59XHJcbi8qKlxyXG4gKiBDb25zZW50IHBhcmFtZXRlcnMgdG8gZGVmYXVsdCB0byBkdXJpbmcgJ2d0YWcnIGluaXRpYWxpemF0aW9uLlxyXG4gKi9cclxubGV0IGRlZmF1bHRDb25zZW50U2V0dGluZ3NGb3JJbml0O1xyXG4vKipcclxuICogU2V0cyB0aGUgdmFyaWFibGUge0BsaW5rIGRlZmF1bHRDb25zZW50U2V0dGluZ3NGb3JJbml0fSBmb3IgdXNlIGluIHRoZSBpbml0aWFsaXphdGlvbiBvZlxyXG4gKiBhbmFseXRpY3MuXHJcbiAqXHJcbiAqIEBwYXJhbSBjb25zZW50U2V0dGluZ3MgTWFwcyB0aGUgYXBwbGljYWJsZSBlbmQgdXNlciBjb25zZW50IHN0YXRlIGZvciBndGFnLmpzLlxyXG4gKi9cclxuZnVuY3Rpb24gX3NldENvbnNlbnREZWZhdWx0Rm9ySW5pdChjb25zZW50U2V0dGluZ3MpIHtcclxuICAgIGRlZmF1bHRDb25zZW50U2V0dGluZ3NGb3JJbml0ID0gY29uc2VudFNldHRpbmdzO1xyXG59XHJcbi8qKlxyXG4gKiBTZXRzIHRoZSB2YXJpYWJsZSBgZGVmYXVsdEV2ZW50UGFyYW1ldGVyc0ZvckluaXRgIGZvciB1c2UgaW4gdGhlIGluaXRpYWxpemF0aW9uIG9mXHJcbiAqIGFuYWx5dGljcy5cclxuICpcclxuICogQHBhcmFtIGN1c3RvbVBhcmFtcyBBbnkgY3VzdG9tIHBhcmFtcyB0aGUgdXNlciBtYXkgcGFzcyB0byBndGFnLmpzLlxyXG4gKi9cclxuZnVuY3Rpb24gX3NldERlZmF1bHRFdmVudFBhcmFtZXRlcnNGb3JJbml0KGN1c3RvbVBhcmFtcykge1xyXG4gICAgZGVmYXVsdEV2ZW50UGFyYW1ldGVyc0ZvckluaXQgPSBjdXN0b21QYXJhbXM7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gdmFsaWRhdGVJbmRleGVkREIoKSB7XHJcbiAgICBpZiAoIWlzSW5kZXhlZERCQXZhaWxhYmxlKCkpIHtcclxuICAgICAgICBsb2dnZXIud2FybihFUlJPUl9GQUNUT1JZLmNyZWF0ZShcImluZGV4ZWRkYi11bmF2YWlsYWJsZVwiIC8qIEFuYWx5dGljc0Vycm9yLklOREVYRUREQl9VTkFWQUlMQUJMRSAqLywge1xyXG4gICAgICAgICAgICBlcnJvckluZm86ICdJbmRleGVkREIgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50LidcclxuICAgICAgICB9KS5tZXNzYWdlKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBhd2FpdCB2YWxpZGF0ZUluZGV4ZWREQk9wZW5hYmxlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci53YXJuKEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiaW5kZXhlZGRiLXVuYXZhaWxhYmxlXCIgLyogQW5hbHl0aWNzRXJyb3IuSU5ERVhFRERCX1VOQVZBSUxBQkxFICovLCB7XHJcbiAgICAgICAgICAgICAgICBlcnJvckluZm86IGUgPT09IG51bGwgfHwgZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZS50b1N0cmluZygpXHJcbiAgICAgICAgICAgIH0pLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn1cclxuLyoqXHJcbiAqIEluaXRpYWxpemUgdGhlIGFuYWx5dGljcyBpbnN0YW5jZSBpbiBndGFnLmpzIGJ5IGNhbGxpbmcgY29uZmlnIGNvbW1hbmQgd2l0aCBmaWQuXHJcbiAqXHJcbiAqIE5PVEU6IFdlIGNvbWJpbmUgYW5hbHl0aWNzIGluaXRpYWxpemF0aW9uIGFuZCBzZXR0aW5nIGZpZCB0b2dldGhlciBiZWNhdXNlIHdlIHdhbnQgZmlkIHRvIGJlXHJcbiAqIHBhcnQgb2YgdGhlIGBwYWdlX3ZpZXdgIGV2ZW50IHRoYXQncyBzZW50IGR1cmluZyB0aGUgaW5pdGlhbGl6YXRpb25cclxuICogQHBhcmFtIGFwcCBGaXJlYmFzZSBhcHBcclxuICogQHBhcmFtIGd0YWdDb3JlIFRoZSBndGFnIGZ1bmN0aW9uIHRoYXQncyBub3Qgd3JhcHBlZC5cclxuICogQHBhcmFtIGR5bmFtaWNDb25maWdQcm9taXNlc0xpc3QgQXJyYXkgb2YgYWxsIGR5bmFtaWMgY29uZmlnIHByb21pc2VzLlxyXG4gKiBAcGFyYW0gbWVhc3VyZW1lbnRJZFRvQXBwSWQgTWFwcyBtZWFzdXJlbWVudElEIHRvIGFwcElELlxyXG4gKiBAcGFyYW0gaW5zdGFsbGF0aW9ucyBfRmlyZWJhc2VJbnN0YWxsYXRpb25zSW50ZXJuYWwgaW5zdGFuY2UuXHJcbiAqXHJcbiAqIEByZXR1cm5zIE1lYXN1cmVtZW50IElELlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gX2luaXRpYWxpemVBbmFseXRpY3MoYXBwLCBkeW5hbWljQ29uZmlnUHJvbWlzZXNMaXN0LCBtZWFzdXJlbWVudElkVG9BcHBJZCwgaW5zdGFsbGF0aW9ucywgZ3RhZ0NvcmUsIGRhdGFMYXllck5hbWUsIG9wdGlvbnMpIHtcclxuICAgIHZhciBfYTtcclxuICAgIGNvbnN0IGR5bmFtaWNDb25maWdQcm9taXNlID0gZmV0Y2hEeW5hbWljQ29uZmlnV2l0aFJldHJ5KGFwcCk7XHJcbiAgICAvLyBPbmNlIGZldGNoZWQsIG1hcCBtZWFzdXJlbWVudElkcyB0byBhcHBJZCwgZm9yIGVhc2Ugb2YgbG9va3VwIGluIHdyYXBwZWQgZ3RhZyBmdW5jdGlvbi5cclxuICAgIGR5bmFtaWNDb25maWdQcm9taXNlXHJcbiAgICAgICAgLnRoZW4oY29uZmlnID0+IHtcclxuICAgICAgICBtZWFzdXJlbWVudElkVG9BcHBJZFtjb25maWcubWVhc3VyZW1lbnRJZF0gPSBjb25maWcuYXBwSWQ7XHJcbiAgICAgICAgaWYgKGFwcC5vcHRpb25zLm1lYXN1cmVtZW50SWQgJiZcclxuICAgICAgICAgICAgY29uZmlnLm1lYXN1cmVtZW50SWQgIT09IGFwcC5vcHRpb25zLm1lYXN1cmVtZW50SWQpIHtcclxuICAgICAgICAgICAgbG9nZ2VyLndhcm4oYFRoZSBtZWFzdXJlbWVudCBJRCBpbiB0aGUgbG9jYWwgRmlyZWJhc2UgY29uZmlnICgke2FwcC5vcHRpb25zLm1lYXN1cmVtZW50SWR9KWAgK1xyXG4gICAgICAgICAgICAgICAgYCBkb2VzIG5vdCBtYXRjaCB0aGUgbWVhc3VyZW1lbnQgSUQgZmV0Y2hlZCBmcm9tIHRoZSBzZXJ2ZXIgKCR7Y29uZmlnLm1lYXN1cmVtZW50SWR9KS5gICtcclxuICAgICAgICAgICAgICAgIGAgVG8gZW5zdXJlIGFuYWx5dGljcyBldmVudHMgYXJlIGFsd2F5cyBzZW50IHRvIHRoZSBjb3JyZWN0IEFuYWx5dGljcyBwcm9wZXJ0eSxgICtcclxuICAgICAgICAgICAgICAgIGAgdXBkYXRlIHRoZWAgK1xyXG4gICAgICAgICAgICAgICAgYCBtZWFzdXJlbWVudCBJRCBmaWVsZCBpbiB0aGUgbG9jYWwgY29uZmlnIG9yIHJlbW92ZSBpdCBmcm9tIHRoZSBsb2NhbCBjb25maWcuYCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxuICAgICAgICAuY2F0Y2goZSA9PiBsb2dnZXIuZXJyb3IoZSkpO1xyXG4gICAgLy8gQWRkIHRvIGxpc3QgdG8gdHJhY2sgc3RhdGUgb2YgYWxsIGR5bmFtaWMgY29uZmlnIHByb21pc2VzLlxyXG4gICAgZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdC5wdXNoKGR5bmFtaWNDb25maWdQcm9taXNlKTtcclxuICAgIGNvbnN0IGZpZFByb21pc2UgPSB2YWxpZGF0ZUluZGV4ZWREQigpLnRoZW4oZW52SXNWYWxpZCA9PiB7XHJcbiAgICAgICAgaWYgKGVudklzVmFsaWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGluc3RhbGxhdGlvbnMuZ2V0SWQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBjb25zdCBbZHluYW1pY0NvbmZpZywgZmlkXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgICBkeW5hbWljQ29uZmlnUHJvbWlzZSxcclxuICAgICAgICBmaWRQcm9taXNlXHJcbiAgICBdKTtcclxuICAgIC8vIERldGVjdCBpZiB1c2VyIGhhcyBhbHJlYWR5IHB1dCB0aGUgZ3RhZyA8c2NyaXB0PiB0YWcgb24gdGhpcyBwYWdlIHdpdGggdGhlIHBhc3NlZCBpblxyXG4gICAgLy8gZGF0YSBsYXllciBuYW1lLlxyXG4gICAgaWYgKCFmaW5kR3RhZ1NjcmlwdE9uUGFnZShkYXRhTGF5ZXJOYW1lKSkge1xyXG4gICAgICAgIGluc2VydFNjcmlwdFRhZyhkYXRhTGF5ZXJOYW1lLCBkeW5hbWljQ29uZmlnLm1lYXN1cmVtZW50SWQpO1xyXG4gICAgfVxyXG4gICAgLy8gRGV0ZWN0cyBpZiB0aGVyZSBhcmUgY29uc2VudCBzZXR0aW5ncyB0aGF0IG5lZWQgdG8gYmUgY29uZmlndXJlZC5cclxuICAgIGlmIChkZWZhdWx0Q29uc2VudFNldHRpbmdzRm9ySW5pdCkge1xyXG4gICAgICAgIGd0YWdDb3JlKFwiY29uc2VudFwiIC8qIEd0YWdDb21tYW5kLkNPTlNFTlQgKi8sICdkZWZhdWx0JywgZGVmYXVsdENvbnNlbnRTZXR0aW5nc0ZvckluaXQpO1xyXG4gICAgICAgIF9zZXRDb25zZW50RGVmYXVsdEZvckluaXQodW5kZWZpbmVkKTtcclxuICAgIH1cclxuICAgIC8vIFRoaXMgY29tbWFuZCBpbml0aWFsaXplcyBndGFnLmpzIGFuZCBvbmx5IG5lZWRzIHRvIGJlIGNhbGxlZCBvbmNlIGZvciB0aGUgZW50aXJlIHdlYiBhcHAsXHJcbiAgICAvLyBidXQgc2luY2UgaXQgaXMgaWRlbXBvdGVudCwgd2UgY2FuIGNhbGwgaXQgbXVsdGlwbGUgdGltZXMuXHJcbiAgICAvLyBXZSBrZWVwIGl0IHRvZ2V0aGVyIHdpdGggb3RoZXIgaW5pdGlhbGl6YXRpb24gbG9naWMgZm9yIGJldHRlciBjb2RlIHN0cnVjdHVyZS5cclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbiAgICBndGFnQ29yZSgnanMnLCBuZXcgRGF0ZSgpKTtcclxuICAgIC8vIFVzZXIgY29uZmlnIGFkZGVkIGZpcnN0LiBXZSBkb24ndCB3YW50IHVzZXJzIHRvIGFjY2lkZW50YWxseSBvdmVyd3JpdGVcclxuICAgIC8vIGJhc2UgRmlyZWJhc2UgY29uZmlnIHByb3BlcnRpZXMuXHJcbiAgICBjb25zdCBjb25maWdQcm9wZXJ0aWVzID0gKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmNvbmZpZykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDoge307XHJcbiAgICAvLyBndWFyZCBhZ2FpbnN0IGRldmVsb3BlcnMgYWNjaWRlbnRhbGx5IHNldHRpbmcgcHJvcGVydGllcyB3aXRoIHByZWZpeCBgZmlyZWJhc2VfYFxyXG4gICAgY29uZmlnUHJvcGVydGllc1tPUklHSU5fS0VZXSA9ICdmaXJlYmFzZSc7XHJcbiAgICBjb25maWdQcm9wZXJ0aWVzLnVwZGF0ZSA9IHRydWU7XHJcbiAgICBpZiAoZmlkICE9IG51bGwpIHtcclxuICAgICAgICBjb25maWdQcm9wZXJ0aWVzW0dBX0ZJRF9LRVldID0gZmlkO1xyXG4gICAgfVxyXG4gICAgLy8gSXQgc2hvdWxkIGJlIHRoZSBmaXJzdCBjb25maWcgY29tbWFuZCBjYWxsZWQgb24gdGhpcyBHQS1JRFxyXG4gICAgLy8gSW5pdGlhbGl6ZSB0aGlzIEdBLUlEIGFuZCBzZXQgRklEIG9uIGl0IHVzaW5nIHRoZSBndGFnIGNvbmZpZyBBUEkuXHJcbiAgICAvLyBOb3RlOiBUaGlzIHdpbGwgdHJpZ2dlciBhIHBhZ2VfdmlldyBldmVudCB1bmxlc3MgJ3NlbmRfcGFnZV92aWV3JyBpcyBzZXQgdG8gZmFsc2UgaW5cclxuICAgIC8vIGBjb25maWdQcm9wZXJ0aWVzYC5cclxuICAgIGd0YWdDb3JlKFwiY29uZmlnXCIgLyogR3RhZ0NvbW1hbmQuQ09ORklHICovLCBkeW5hbWljQ29uZmlnLm1lYXN1cmVtZW50SWQsIGNvbmZpZ1Byb3BlcnRpZXMpO1xyXG4gICAgLy8gRGV0ZWN0cyBpZiB0aGVyZSBpcyBkYXRhIHRoYXQgd2lsbCBiZSBzZXQgb24gZXZlcnkgZXZlbnQgbG9nZ2VkIGZyb20gdGhlIFNESy5cclxuICAgIGlmIChkZWZhdWx0RXZlbnRQYXJhbWV0ZXJzRm9ySW5pdCkge1xyXG4gICAgICAgIGd0YWdDb3JlKFwic2V0XCIgLyogR3RhZ0NvbW1hbmQuU0VUICovLCBkZWZhdWx0RXZlbnRQYXJhbWV0ZXJzRm9ySW5pdCk7XHJcbiAgICAgICAgX3NldERlZmF1bHRFdmVudFBhcmFtZXRlcnNGb3JJbml0KHVuZGVmaW5lZCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZHluYW1pY0NvbmZpZy5tZWFzdXJlbWVudElkO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBBbmFseXRpY3MgU2VydmljZSBjbGFzcy5cclxuICovXHJcbmNsYXNzIEFuYWx5dGljc1NlcnZpY2Uge1xyXG4gICAgY29uc3RydWN0b3IoYXBwKSB7XHJcbiAgICAgICAgdGhpcy5hcHAgPSBhcHA7XHJcbiAgICB9XHJcbiAgICBfZGVsZXRlKCkge1xyXG4gICAgICAgIGRlbGV0ZSBpbml0aWFsaXphdGlvblByb21pc2VzTWFwW3RoaXMuYXBwLm9wdGlvbnMuYXBwSWRdO1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogTWFwcyBhcHBJZCB0byBmdWxsIGluaXRpYWxpemF0aW9uIHByb21pc2UuIFdyYXBwZWQgZ3RhZyBjYWxscyBtdXN0IHdhaXQgb25cclxuICogYWxsIG9yIHNvbWUgb2YgdGhlc2UsIGRlcGVuZGluZyBvbiB0aGUgY2FsbCdzIGBzZW5kX3RvYCBwYXJhbSBhbmQgdGhlIHN0YXR1c1xyXG4gKiBvZiB0aGUgZHluYW1pYyBjb25maWcgZmV0Y2hlcyAoc2VlIGJlbG93KS5cclxuICovXHJcbmxldCBpbml0aWFsaXphdGlvblByb21pc2VzTWFwID0ge307XHJcbi8qKlxyXG4gKiBMaXN0IG9mIGR5bmFtaWMgY29uZmlnIGZldGNoIHByb21pc2VzLiBJbiBjZXJ0YWluIGNhc2VzLCB3cmFwcGVkIGd0YWcgY2FsbHNcclxuICogd2FpdCBvbiBhbGwgdGhlc2UgdG8gYmUgY29tcGxldGUgaW4gb3JkZXIgdG8gZGV0ZXJtaW5lIGlmIGl0IGNhbiBzZWxlY3RpdmVseVxyXG4gKiB3YWl0IGZvciBvbmx5IGNlcnRhaW4gaW5pdGlhbGl6YXRpb24gKEZJRCkgcHJvbWlzZXMgb3IgaWYgaXQgbXVzdCB3YWl0IGZvciBhbGwuXHJcbiAqL1xyXG5sZXQgZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCA9IFtdO1xyXG4vKipcclxuICogTWFwcyBmZXRjaGVkIG1lYXN1cmVtZW50SWRzIHRvIGFwcElkLiBQb3B1bGF0ZWQgd2hlbiB0aGUgYXBwJ3MgZHluYW1pYyBjb25maWdcclxuICogZmV0Y2ggY29tcGxldGVzLiBJZiBhbHJlYWR5IHBvcHVsYXRlZCwgZ3RhZyBjb25maWcgY2FsbHMgY2FuIHVzZSB0aGlzIHRvXHJcbiAqIHNlbGVjdGl2ZWx5IHdhaXQgZm9yIG9ubHkgdGhpcyBhcHAncyBpbml0aWFsaXphdGlvbiBwcm9taXNlIChGSUQpIGluc3RlYWQgb2YgYWxsXHJcbiAqIGluaXRpYWxpemF0aW9uIHByb21pc2VzLlxyXG4gKi9cclxuY29uc3QgbWVhc3VyZW1lbnRJZFRvQXBwSWQgPSB7fTtcclxuLyoqXHJcbiAqIE5hbWUgZm9yIHdpbmRvdyBnbG9iYWwgZGF0YSBsYXllciBhcnJheSB1c2VkIGJ5IEdBOiBkZWZhdWx0cyB0byAnZGF0YUxheWVyJy5cclxuICovXHJcbmxldCBkYXRhTGF5ZXJOYW1lID0gJ2RhdGFMYXllcic7XHJcbi8qKlxyXG4gKiBOYW1lIGZvciB3aW5kb3cgZ2xvYmFsIGd0YWcgZnVuY3Rpb24gdXNlZCBieSBHQTogZGVmYXVsdHMgdG8gJ2d0YWcnLlxyXG4gKi9cclxubGV0IGd0YWdOYW1lID0gJ2d0YWcnO1xyXG4vKipcclxuICogUmVwcm9kdWN0aW9uIG9mIHN0YW5kYXJkIGd0YWcgZnVuY3Rpb24gb3IgcmVmZXJlbmNlIHRvIGV4aXN0aW5nXHJcbiAqIGd0YWcgZnVuY3Rpb24gb24gd2luZG93IG9iamVjdC5cclxuICovXHJcbmxldCBndGFnQ29yZUZ1bmN0aW9uO1xyXG4vKipcclxuICogV3JhcHBlciBhcm91bmQgZ3RhZyBmdW5jdGlvbiB0aGF0IGVuc3VyZXMgRklEIGlzIHNlbnQgd2l0aCBhbGxcclxuICogcmVsZXZhbnQgZXZlbnQgYW5kIGNvbmZpZyBjYWxscy5cclxuICovXHJcbmxldCB3cmFwcGVkR3RhZ0Z1bmN0aW9uO1xyXG4vKipcclxuICogRmxhZyB0byBlbnN1cmUgcGFnZSBpbml0aWFsaXphdGlvbiBzdGVwcyAoY3JlYXRpb24gb3Igd3JhcHBpbmcgb2ZcclxuICogZGF0YUxheWVyIGFuZCBndGFnIHNjcmlwdCkgYXJlIG9ubHkgcnVuIG9uY2UgcGVyIHBhZ2UgbG9hZC5cclxuICovXHJcbmxldCBnbG9iYWxJbml0RG9uZSA9IGZhbHNlO1xyXG4vKipcclxuICogQ29uZmlndXJlcyBGaXJlYmFzZSBBbmFseXRpY3MgdG8gdXNlIGN1c3RvbSBgZ3RhZ2Agb3IgYGRhdGFMYXllcmAgbmFtZXMuXHJcbiAqIEludGVuZGVkIHRvIGJlIHVzZWQgaWYgYGd0YWcuanNgIHNjcmlwdCBoYXMgYmVlbiBpbnN0YWxsZWQgb25cclxuICogdGhpcyBwYWdlIGluZGVwZW5kZW50bHkgb2YgRmlyZWJhc2UgQW5hbHl0aWNzLCBhbmQgaXMgdXNpbmcgbm9uLWRlZmF1bHRcclxuICogbmFtZXMgZm9yIGVpdGhlciB0aGUgYGd0YWdgIGZ1bmN0aW9uIG9yIGZvciBgZGF0YUxheWVyYC5cclxuICogTXVzdCBiZSBjYWxsZWQgYmVmb3JlIGNhbGxpbmcgYGdldEFuYWx5dGljcygpYCBvciBpdCB3b24ndFxyXG4gKiBoYXZlIGFueSBlZmZlY3QuXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICpcclxuICogQHBhcmFtIG9wdGlvbnMgLSBDdXN0b20gZ3RhZyBhbmQgZGF0YUxheWVyIG5hbWVzLlxyXG4gKi9cclxuZnVuY3Rpb24gc2V0dGluZ3Mob3B0aW9ucykge1xyXG4gICAgaWYgKGdsb2JhbEluaXREb25lKSB7XHJcbiAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJhbHJlYWR5LWluaXRpYWxpemVkXCIgLyogQW5hbHl0aWNzRXJyb3IuQUxSRUFEWV9JTklUSUFMSVpFRCAqLyk7XHJcbiAgICB9XHJcbiAgICBpZiAob3B0aW9ucy5kYXRhTGF5ZXJOYW1lKSB7XHJcbiAgICAgICAgZGF0YUxheWVyTmFtZSA9IG9wdGlvbnMuZGF0YUxheWVyTmFtZTtcclxuICAgIH1cclxuICAgIGlmIChvcHRpb25zLmd0YWdOYW1lKSB7XHJcbiAgICAgICAgZ3RhZ05hbWUgPSBvcHRpb25zLmd0YWdOYW1lO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHRydWUgaWYgbm8gZW52aXJvbm1lbnQgbWlzbWF0Y2ggaXMgZm91bmQuXHJcbiAqIElmIGVudmlyb25tZW50IG1pc21hdGNoZXMgYXJlIGZvdW5kLCB0aHJvd3MgYW4gSU5WQUxJRF9BTkFMWVRJQ1NfQ09OVEVYVFxyXG4gKiBlcnJvciB0aGF0IGFsc28gbGlzdHMgZGV0YWlscyBmb3IgZWFjaCBtaXNtYXRjaCBmb3VuZC5cclxuICovXHJcbmZ1bmN0aW9uIHdhcm5PbkJyb3dzZXJDb250ZXh0TWlzbWF0Y2goKSB7XHJcbiAgICBjb25zdCBtaXNtYXRjaGVkRW52TWVzc2FnZXMgPSBbXTtcclxuICAgIGlmIChpc0Jyb3dzZXJFeHRlbnNpb24oKSkge1xyXG4gICAgICAgIG1pc21hdGNoZWRFbnZNZXNzYWdlcy5wdXNoKCdUaGlzIGlzIGEgYnJvd3NlciBleHRlbnNpb24gZW52aXJvbm1lbnQuJyk7XHJcbiAgICB9XHJcbiAgICBpZiAoIWFyZUNvb2tpZXNFbmFibGVkKCkpIHtcclxuICAgICAgICBtaXNtYXRjaGVkRW52TWVzc2FnZXMucHVzaCgnQ29va2llcyBhcmUgbm90IGF2YWlsYWJsZS4nKTtcclxuICAgIH1cclxuICAgIGlmIChtaXNtYXRjaGVkRW52TWVzc2FnZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGNvbnN0IGRldGFpbHMgPSBtaXNtYXRjaGVkRW52TWVzc2FnZXNcclxuICAgICAgICAgICAgLm1hcCgobWVzc2FnZSwgaW5kZXgpID0+IGAoJHtpbmRleCArIDF9KSAke21lc3NhZ2V9YClcclxuICAgICAgICAgICAgLmpvaW4oJyAnKTtcclxuICAgICAgICBjb25zdCBlcnIgPSBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcImludmFsaWQtYW5hbHl0aWNzLWNvbnRleHRcIiAvKiBBbmFseXRpY3NFcnJvci5JTlZBTElEX0FOQUxZVElDU19DT05URVhUICovLCB7XHJcbiAgICAgICAgICAgIGVycm9ySW5mbzogZGV0YWlsc1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGxvZ2dlci53YXJuKGVyci5tZXNzYWdlKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogQW5hbHl0aWNzIGluc3RhbmNlIGZhY3RvcnkuXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuZnVuY3Rpb24gZmFjdG9yeShhcHAsIGluc3RhbGxhdGlvbnMsIG9wdGlvbnMpIHtcclxuICAgIHdhcm5PbkJyb3dzZXJDb250ZXh0TWlzbWF0Y2goKTtcclxuICAgIGNvbnN0IGFwcElkID0gYXBwLm9wdGlvbnMuYXBwSWQ7XHJcbiAgICBpZiAoIWFwcElkKSB7XHJcbiAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJuby1hcHAtaWRcIiAvKiBBbmFseXRpY3NFcnJvci5OT19BUFBfSUQgKi8pO1xyXG4gICAgfVxyXG4gICAgaWYgKCFhcHAub3B0aW9ucy5hcGlLZXkpIHtcclxuICAgICAgICBpZiAoYXBwLm9wdGlvbnMubWVhc3VyZW1lbnRJZCkge1xyXG4gICAgICAgICAgICBsb2dnZXIud2FybihgVGhlIFwiYXBpS2V5XCIgZmllbGQgaXMgZW1wdHkgaW4gdGhlIGxvY2FsIEZpcmViYXNlIGNvbmZpZy4gVGhpcyBpcyBuZWVkZWQgdG8gZmV0Y2ggdGhlIGxhdGVzdGAgK1xyXG4gICAgICAgICAgICAgICAgYCBtZWFzdXJlbWVudCBJRCBmb3IgdGhpcyBGaXJlYmFzZSBhcHAuIEZhbGxpbmcgYmFjayB0byB0aGUgbWVhc3VyZW1lbnQgSUQgJHthcHAub3B0aW9ucy5tZWFzdXJlbWVudElkfWAgK1xyXG4gICAgICAgICAgICAgICAgYCBwcm92aWRlZCBpbiB0aGUgXCJtZWFzdXJlbWVudElkXCIgZmllbGQgaW4gdGhlIGxvY2FsIEZpcmViYXNlIGNvbmZpZy5gKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwibm8tYXBpLWtleVwiIC8qIEFuYWx5dGljc0Vycm9yLk5PX0FQSV9LRVkgKi8pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChpbml0aWFsaXphdGlvblByb21pc2VzTWFwW2FwcElkXSAhPSBudWxsKSB7XHJcbiAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJhbHJlYWR5LWV4aXN0c1wiIC8qIEFuYWx5dGljc0Vycm9yLkFMUkVBRFlfRVhJU1RTICovLCB7XHJcbiAgICAgICAgICAgIGlkOiBhcHBJZFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgaWYgKCFnbG9iYWxJbml0RG9uZSkge1xyXG4gICAgICAgIC8vIFN0ZXBzIGhlcmUgc2hvdWxkIG9ubHkgYmUgZG9uZSBvbmNlIHBlciBwYWdlOiBjcmVhdGlvbiBvciB3cmFwcGluZ1xyXG4gICAgICAgIC8vIG9mIGRhdGFMYXllciBhbmQgZ2xvYmFsIGd0YWcgZnVuY3Rpb24uXHJcbiAgICAgICAgZ2V0T3JDcmVhdGVEYXRhTGF5ZXIoZGF0YUxheWVyTmFtZSk7XHJcbiAgICAgICAgY29uc3QgeyB3cmFwcGVkR3RhZywgZ3RhZ0NvcmUgfSA9IHdyYXBPckNyZWF0ZUd0YWcoaW5pdGlhbGl6YXRpb25Qcm9taXNlc01hcCwgZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCwgbWVhc3VyZW1lbnRJZFRvQXBwSWQsIGRhdGFMYXllck5hbWUsIGd0YWdOYW1lKTtcclxuICAgICAgICB3cmFwcGVkR3RhZ0Z1bmN0aW9uID0gd3JhcHBlZEd0YWc7XHJcbiAgICAgICAgZ3RhZ0NvcmVGdW5jdGlvbiA9IGd0YWdDb3JlO1xyXG4gICAgICAgIGdsb2JhbEluaXREb25lID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIC8vIEFzeW5jIGJ1dCBub24tYmxvY2tpbmcuXHJcbiAgICAvLyBUaGlzIG1hcCByZWZsZWN0cyB0aGUgY29tcGxldGlvbiBzdGF0ZSBvZiBhbGwgcHJvbWlzZXMgZm9yIGVhY2ggYXBwSWQuXHJcbiAgICBpbml0aWFsaXphdGlvblByb21pc2VzTWFwW2FwcElkXSA9IF9pbml0aWFsaXplQW5hbHl0aWNzKGFwcCwgZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCwgbWVhc3VyZW1lbnRJZFRvQXBwSWQsIGluc3RhbGxhdGlvbnMsIGd0YWdDb3JlRnVuY3Rpb24sIGRhdGFMYXllck5hbWUsIG9wdGlvbnMpO1xyXG4gICAgY29uc3QgYW5hbHl0aWNzSW5zdGFuY2UgPSBuZXcgQW5hbHl0aWNzU2VydmljZShhcHApO1xyXG4gICAgcmV0dXJuIGFuYWx5dGljc0luc3RhbmNlO1xyXG59XG5cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cclxuLyoqXHJcbiAqIFJldHVybnMgYW4ge0BsaW5rIEFuYWx5dGljc30gaW5zdGFuY2UgZm9yIHRoZSBnaXZlbiBhcHAuXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICpcclxuICogQHBhcmFtIGFwcCAtIFRoZSB7QGxpbmsgQGZpcmViYXNlL2FwcCNGaXJlYmFzZUFwcH0gdG8gdXNlLlxyXG4gKi9cclxuZnVuY3Rpb24gZ2V0QW5hbHl0aWNzKGFwcCA9IGdldEFwcCgpKSB7XHJcbiAgICBhcHAgPSBnZXRNb2R1bGFySW5zdGFuY2UoYXBwKTtcclxuICAgIC8vIERlcGVuZGVuY2llc1xyXG4gICAgY29uc3QgYW5hbHl0aWNzUHJvdmlkZXIgPSBfZ2V0UHJvdmlkZXIoYXBwLCBBTkFMWVRJQ1NfVFlQRSk7XHJcbiAgICBpZiAoYW5hbHl0aWNzUHJvdmlkZXIuaXNJbml0aWFsaXplZCgpKSB7XHJcbiAgICAgICAgcmV0dXJuIGFuYWx5dGljc1Byb3ZpZGVyLmdldEltbWVkaWF0ZSgpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGluaXRpYWxpemVBbmFseXRpY3MoYXBwKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBhbiB7QGxpbmsgQW5hbHl0aWNzfSBpbnN0YW5jZSBmb3IgdGhlIGdpdmVuIGFwcC5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKlxyXG4gKiBAcGFyYW0gYXBwIC0gVGhlIHtAbGluayBAZmlyZWJhc2UvYXBwI0ZpcmViYXNlQXBwfSB0byB1c2UuXHJcbiAqL1xyXG5mdW5jdGlvbiBpbml0aWFsaXplQW5hbHl0aWNzKGFwcCwgb3B0aW9ucyA9IHt9KSB7XHJcbiAgICAvLyBEZXBlbmRlbmNpZXNcclxuICAgIGNvbnN0IGFuYWx5dGljc1Byb3ZpZGVyID0gX2dldFByb3ZpZGVyKGFwcCwgQU5BTFlUSUNTX1RZUEUpO1xyXG4gICAgaWYgKGFuYWx5dGljc1Byb3ZpZGVyLmlzSW5pdGlhbGl6ZWQoKSkge1xyXG4gICAgICAgIGNvbnN0IGV4aXN0aW5nSW5zdGFuY2UgPSBhbmFseXRpY3NQcm92aWRlci5nZXRJbW1lZGlhdGUoKTtcclxuICAgICAgICBpZiAoZGVlcEVxdWFsKG9wdGlvbnMsIGFuYWx5dGljc1Byb3ZpZGVyLmdldE9wdGlvbnMoKSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGV4aXN0aW5nSW5zdGFuY2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcImFscmVhZHktaW5pdGlhbGl6ZWRcIiAvKiBBbmFseXRpY3NFcnJvci5BTFJFQURZX0lOSVRJQUxJWkVEICovKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCBhbmFseXRpY3NJbnN0YW5jZSA9IGFuYWx5dGljc1Byb3ZpZGVyLmluaXRpYWxpemUoeyBvcHRpb25zIH0pO1xyXG4gICAgcmV0dXJuIGFuYWx5dGljc0luc3RhbmNlO1xyXG59XHJcbi8qKlxyXG4gKiBUaGlzIGlzIGEgcHVibGljIHN0YXRpYyBtZXRob2QgcHJvdmlkZWQgdG8gdXNlcnMgdGhhdCB3cmFwcyBmb3VyIGRpZmZlcmVudCBjaGVja3M6XHJcbiAqXHJcbiAqIDEuIENoZWNrIGlmIGl0J3Mgbm90IGEgYnJvd3NlciBleHRlbnNpb24gZW52aXJvbm1lbnQuXHJcbiAqIDIuIENoZWNrIGlmIGNvb2tpZXMgYXJlIGVuYWJsZWQgaW4gY3VycmVudCBicm93c2VyLlxyXG4gKiAzLiBDaGVjayBpZiBJbmRleGVkREIgaXMgc3VwcG9ydGVkIGJ5IHRoZSBicm93c2VyIGVudmlyb25tZW50LlxyXG4gKiA0LiBDaGVjayBpZiB0aGUgY3VycmVudCBicm93c2VyIGNvbnRleHQgaXMgdmFsaWQgZm9yIHVzaW5nIGBJbmRleGVkREIub3BlbigpYC5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gaXNTdXBwb3J0ZWQoKSB7XHJcbiAgICBpZiAoaXNCcm93c2VyRXh0ZW5zaW9uKCkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBpZiAoIWFyZUNvb2tpZXNFbmFibGVkKCkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBpZiAoIWlzSW5kZXhlZERCQXZhaWxhYmxlKCkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGlzREJPcGVuYWJsZSA9IGF3YWl0IHZhbGlkYXRlSW5kZXhlZERCT3BlbmFibGUoKTtcclxuICAgICAgICByZXR1cm4gaXNEQk9wZW5hYmxlO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBVc2UgZ3RhZyBgY29uZmlnYCBjb21tYW5kIHRvIHNldCBgc2NyZWVuX25hbWVgLlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqXHJcbiAqIEBkZXByZWNhdGVkIFVzZSB7QGxpbmsgbG9nRXZlbnR9IHdpdGggYGV2ZW50TmFtZWAgYXMgJ3NjcmVlbl92aWV3JyBhbmQgYWRkIHJlbGV2YW50IGBldmVudFBhcmFtc2AuXHJcbiAqIFNlZSB7QGxpbmsgaHR0cHM6Ly9maXJlYmFzZS5nb29nbGUuY29tL2RvY3MvYW5hbHl0aWNzL3NjcmVlbnZpZXdzIHwgVHJhY2sgU2NyZWVudmlld3N9LlxyXG4gKlxyXG4gKiBAcGFyYW0gYW5hbHl0aWNzSW5zdGFuY2UgLSBUaGUge0BsaW5rIEFuYWx5dGljc30gaW5zdGFuY2UuXHJcbiAqIEBwYXJhbSBzY3JlZW5OYW1lIC0gU2NyZWVuIG5hbWUgdG8gc2V0LlxyXG4gKi9cclxuZnVuY3Rpb24gc2V0Q3VycmVudFNjcmVlbihhbmFseXRpY3NJbnN0YW5jZSwgc2NyZWVuTmFtZSwgb3B0aW9ucykge1xyXG4gICAgYW5hbHl0aWNzSW5zdGFuY2UgPSBnZXRNb2R1bGFySW5zdGFuY2UoYW5hbHl0aWNzSW5zdGFuY2UpO1xyXG4gICAgc2V0Q3VycmVudFNjcmVlbiQxKHdyYXBwZWRHdGFnRnVuY3Rpb24sIGluaXRpYWxpemF0aW9uUHJvbWlzZXNNYXBbYW5hbHl0aWNzSW5zdGFuY2UuYXBwLm9wdGlvbnMuYXBwSWRdLCBzY3JlZW5OYW1lLCBvcHRpb25zKS5jYXRjaChlID0+IGxvZ2dlci5lcnJvcihlKSk7XHJcbn1cclxuLyoqXHJcbiAqIFJldHJpZXZlcyBhIHVuaXF1ZSBHb29nbGUgQW5hbHl0aWNzIGlkZW50aWZpZXIgZm9yIHRoZSB3ZWIgY2xpZW50LlxyXG4gKiBTZWUge0BsaW5rIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL2FuYWx5dGljcy9kZXZndWlkZXMvY29sbGVjdGlvbi9nYTQvcmVmZXJlbmNlL2NvbmZpZyNjbGllbnRfaWQgfCBjbGllbnRfaWR9LlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqXHJcbiAqIEBwYXJhbSBhcHAgLSBUaGUge0BsaW5rIEBmaXJlYmFzZS9hcHAjRmlyZWJhc2VBcHB9IHRvIHVzZS5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGdldEdvb2dsZUFuYWx5dGljc0NsaWVudElkKGFuYWx5dGljc0luc3RhbmNlKSB7XHJcbiAgICBhbmFseXRpY3NJbnN0YW5jZSA9IGdldE1vZHVsYXJJbnN0YW5jZShhbmFseXRpY3NJbnN0YW5jZSk7XHJcbiAgICByZXR1cm4gaW50ZXJuYWxHZXRHb29nbGVBbmFseXRpY3NDbGllbnRJZCh3cmFwcGVkR3RhZ0Z1bmN0aW9uLCBpbml0aWFsaXphdGlvblByb21pc2VzTWFwW2FuYWx5dGljc0luc3RhbmNlLmFwcC5vcHRpb25zLmFwcElkXSk7XHJcbn1cclxuLyoqXHJcbiAqIFVzZSBndGFnIGBjb25maWdgIGNvbW1hbmQgdG8gc2V0IGB1c2VyX2lkYC5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKlxyXG4gKiBAcGFyYW0gYW5hbHl0aWNzSW5zdGFuY2UgLSBUaGUge0BsaW5rIEFuYWx5dGljc30gaW5zdGFuY2UuXHJcbiAqIEBwYXJhbSBpZCAtIFVzZXIgSUQgdG8gc2V0LlxyXG4gKi9cclxuZnVuY3Rpb24gc2V0VXNlcklkKGFuYWx5dGljc0luc3RhbmNlLCBpZCwgb3B0aW9ucykge1xyXG4gICAgYW5hbHl0aWNzSW5zdGFuY2UgPSBnZXRNb2R1bGFySW5zdGFuY2UoYW5hbHl0aWNzSW5zdGFuY2UpO1xyXG4gICAgc2V0VXNlcklkJDEod3JhcHBlZEd0YWdGdW5jdGlvbiwgaW5pdGlhbGl6YXRpb25Qcm9taXNlc01hcFthbmFseXRpY3NJbnN0YW5jZS5hcHAub3B0aW9ucy5hcHBJZF0sIGlkLCBvcHRpb25zKS5jYXRjaChlID0+IGxvZ2dlci5lcnJvcihlKSk7XHJcbn1cclxuLyoqXHJcbiAqIFVzZSBndGFnIGBjb25maWdgIGNvbW1hbmQgdG8gc2V0IGFsbCBwYXJhbXMgc3BlY2lmaWVkLlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5mdW5jdGlvbiBzZXRVc2VyUHJvcGVydGllcyhhbmFseXRpY3NJbnN0YW5jZSwgcHJvcGVydGllcywgb3B0aW9ucykge1xyXG4gICAgYW5hbHl0aWNzSW5zdGFuY2UgPSBnZXRNb2R1bGFySW5zdGFuY2UoYW5hbHl0aWNzSW5zdGFuY2UpO1xyXG4gICAgc2V0VXNlclByb3BlcnRpZXMkMSh3cmFwcGVkR3RhZ0Z1bmN0aW9uLCBpbml0aWFsaXphdGlvblByb21pc2VzTWFwW2FuYWx5dGljc0luc3RhbmNlLmFwcC5vcHRpb25zLmFwcElkXSwgcHJvcGVydGllcywgb3B0aW9ucykuY2F0Y2goZSA9PiBsb2dnZXIuZXJyb3IoZSkpO1xyXG59XHJcbi8qKlxyXG4gKiBTZXRzIHdoZXRoZXIgR29vZ2xlIEFuYWx5dGljcyBjb2xsZWN0aW9uIGlzIGVuYWJsZWQgZm9yIHRoaXMgYXBwIG9uIHRoaXMgZGV2aWNlLlxyXG4gKiBTZXRzIGdsb2JhbCBgd2luZG93WydnYS1kaXNhYmxlLWFuYWx5dGljc0lkJ10gPSB0cnVlO2BcclxuICpcclxuICogQHB1YmxpY1xyXG4gKlxyXG4gKiBAcGFyYW0gYW5hbHl0aWNzSW5zdGFuY2UgLSBUaGUge0BsaW5rIEFuYWx5dGljc30gaW5zdGFuY2UuXHJcbiAqIEBwYXJhbSBlbmFibGVkIC0gSWYgdHJ1ZSwgZW5hYmxlcyBjb2xsZWN0aW9uLCBpZiBmYWxzZSwgZGlzYWJsZXMgaXQuXHJcbiAqL1xyXG5mdW5jdGlvbiBzZXRBbmFseXRpY3NDb2xsZWN0aW9uRW5hYmxlZChhbmFseXRpY3NJbnN0YW5jZSwgZW5hYmxlZCkge1xyXG4gICAgYW5hbHl0aWNzSW5zdGFuY2UgPSBnZXRNb2R1bGFySW5zdGFuY2UoYW5hbHl0aWNzSW5zdGFuY2UpO1xyXG4gICAgc2V0QW5hbHl0aWNzQ29sbGVjdGlvbkVuYWJsZWQkMShpbml0aWFsaXphdGlvblByb21pc2VzTWFwW2FuYWx5dGljc0luc3RhbmNlLmFwcC5vcHRpb25zLmFwcElkXSwgZW5hYmxlZCkuY2F0Y2goZSA9PiBsb2dnZXIuZXJyb3IoZSkpO1xyXG59XHJcbi8qKlxyXG4gKiBBZGRzIGRhdGEgdGhhdCB3aWxsIGJlIHNldCBvbiBldmVyeSBldmVudCBsb2dnZWQgZnJvbSB0aGUgU0RLLCBpbmNsdWRpbmcgYXV0b21hdGljIG9uZXMuXHJcbiAqIFdpdGggZ3RhZydzIFwic2V0XCIgY29tbWFuZCwgdGhlIHZhbHVlcyBwYXNzZWQgcGVyc2lzdCBvbiB0aGUgY3VycmVudCBwYWdlIGFuZCBhcmUgcGFzc2VkIHdpdGhcclxuICogYWxsIHN1YnNlcXVlbnQgZXZlbnRzLlxyXG4gKiBAcHVibGljXHJcbiAqIEBwYXJhbSBjdXN0b21QYXJhbXMgLSBBbnkgY3VzdG9tIHBhcmFtcyB0aGUgdXNlciBtYXkgcGFzcyB0byBndGFnLmpzLlxyXG4gKi9cclxuZnVuY3Rpb24gc2V0RGVmYXVsdEV2ZW50UGFyYW1ldGVycyhjdXN0b21QYXJhbXMpIHtcclxuICAgIC8vIENoZWNrIGlmIHJlZmVyZW5jZSB0byBleGlzdGluZyBndGFnIGZ1bmN0aW9uIG9uIHdpbmRvdyBvYmplY3QgZXhpc3RzXHJcbiAgICBpZiAod3JhcHBlZEd0YWdGdW5jdGlvbikge1xyXG4gICAgICAgIHdyYXBwZWRHdGFnRnVuY3Rpb24oXCJzZXRcIiAvKiBHdGFnQ29tbWFuZC5TRVQgKi8sIGN1c3RvbVBhcmFtcyk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBfc2V0RGVmYXVsdEV2ZW50UGFyYW1ldGVyc0ZvckluaXQoY3VzdG9tUGFyYW1zKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogU2VuZHMgYSBHb29nbGUgQW5hbHl0aWNzIGV2ZW50IHdpdGggZ2l2ZW4gYGV2ZW50UGFyYW1zYC4gVGhpcyBtZXRob2RcclxuICogYXV0b21hdGljYWxseSBhc3NvY2lhdGVzIHRoaXMgbG9nZ2VkIGV2ZW50IHdpdGggdGhpcyBGaXJlYmFzZSB3ZWJcclxuICogYXBwIGluc3RhbmNlIG9uIHRoaXMgZGV2aWNlLlxyXG4gKiBMaXN0IG9mIG9mZmljaWFsIGV2ZW50IHBhcmFtZXRlcnMgY2FuIGJlIGZvdW5kIGluIHRoZSBndGFnLmpzXHJcbiAqIHJlZmVyZW5jZSBkb2N1bWVudGF0aW9uOlxyXG4gKiB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vZ3RhZ2pzL3JlZmVyZW5jZS9nYTQtZXZlbnRzXHJcbiAqIHwgdGhlIEdBNCByZWZlcmVuY2UgZG9jdW1lbnRhdGlvbn0uXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmZ1bmN0aW9uIGxvZ0V2ZW50KGFuYWx5dGljc0luc3RhbmNlLCBldmVudE5hbWUsIGV2ZW50UGFyYW1zLCBvcHRpb25zKSB7XHJcbiAgICBhbmFseXRpY3NJbnN0YW5jZSA9IGdldE1vZHVsYXJJbnN0YW5jZShhbmFseXRpY3NJbnN0YW5jZSk7XHJcbiAgICBsb2dFdmVudCQxKHdyYXBwZWRHdGFnRnVuY3Rpb24sIGluaXRpYWxpemF0aW9uUHJvbWlzZXNNYXBbYW5hbHl0aWNzSW5zdGFuY2UuYXBwLm9wdGlvbnMuYXBwSWRdLCBldmVudE5hbWUsIGV2ZW50UGFyYW1zLCBvcHRpb25zKS5jYXRjaChlID0+IGxvZ2dlci5lcnJvcihlKSk7XHJcbn1cclxuLyoqXHJcbiAqIFNldHMgdGhlIGFwcGxpY2FibGUgZW5kIHVzZXIgY29uc2VudCBzdGF0ZSBmb3IgdGhpcyB3ZWIgYXBwIGFjcm9zcyBhbGwgZ3RhZyByZWZlcmVuY2VzIG9uY2VcclxuICogRmlyZWJhc2UgQW5hbHl0aWNzIGlzIGluaXRpYWxpemVkLlxyXG4gKlxyXG4gKiBVc2UgdGhlIHtAbGluayBDb25zZW50U2V0dGluZ3N9IHRvIHNwZWNpZnkgaW5kaXZpZHVhbCBjb25zZW50IHR5cGUgdmFsdWVzLiBCeSBkZWZhdWx0IGNvbnNlbnRcclxuICogdHlwZXMgYXJlIHNldCB0byBcImdyYW50ZWRcIi5cclxuICogQHB1YmxpY1xyXG4gKiBAcGFyYW0gY29uc2VudFNldHRpbmdzIC0gTWFwcyB0aGUgYXBwbGljYWJsZSBlbmQgdXNlciBjb25zZW50IHN0YXRlIGZvciBndGFnLmpzLlxyXG4gKi9cclxuZnVuY3Rpb24gc2V0Q29uc2VudChjb25zZW50U2V0dGluZ3MpIHtcclxuICAgIC8vIENoZWNrIGlmIHJlZmVyZW5jZSB0byBleGlzdGluZyBndGFnIGZ1bmN0aW9uIG9uIHdpbmRvdyBvYmplY3QgZXhpc3RzXHJcbiAgICBpZiAod3JhcHBlZEd0YWdGdW5jdGlvbikge1xyXG4gICAgICAgIHdyYXBwZWRHdGFnRnVuY3Rpb24oXCJjb25zZW50XCIgLyogR3RhZ0NvbW1hbmQuQ09OU0VOVCAqLywgJ3VwZGF0ZScsIGNvbnNlbnRTZXR0aW5ncyk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBfc2V0Q29uc2VudERlZmF1bHRGb3JJbml0KGNvbnNlbnRTZXR0aW5ncyk7XHJcbiAgICB9XHJcbn1cblxuY29uc3QgbmFtZSA9IFwiQGZpcmViYXNlL2FuYWx5dGljc1wiO1xuY29uc3QgdmVyc2lvbiA9IFwiMC4xMC4wXCI7XG5cbi8qKlxyXG4gKiBGaXJlYmFzZSBBbmFseXRpY3NcclxuICpcclxuICogQHBhY2thZ2VEb2N1bWVudGF0aW9uXHJcbiAqL1xyXG5mdW5jdGlvbiByZWdpc3RlckFuYWx5dGljcygpIHtcclxuICAgIF9yZWdpc3RlckNvbXBvbmVudChuZXcgQ29tcG9uZW50KEFOQUxZVElDU19UWVBFLCAoY29udGFpbmVyLCB7IG9wdGlvbnM6IGFuYWx5dGljc09wdGlvbnMgfSkgPT4ge1xyXG4gICAgICAgIC8vIGdldEltbWVkaWF0ZSBmb3IgRmlyZWJhc2VBcHAgd2lsbCBhbHdheXMgc3VjY2VlZFxyXG4gICAgICAgIGNvbnN0IGFwcCA9IGNvbnRhaW5lci5nZXRQcm92aWRlcignYXBwJykuZ2V0SW1tZWRpYXRlKCk7XHJcbiAgICAgICAgY29uc3QgaW5zdGFsbGF0aW9ucyA9IGNvbnRhaW5lclxyXG4gICAgICAgICAgICAuZ2V0UHJvdmlkZXIoJ2luc3RhbGxhdGlvbnMtaW50ZXJuYWwnKVxyXG4gICAgICAgICAgICAuZ2V0SW1tZWRpYXRlKCk7XHJcbiAgICAgICAgcmV0dXJuIGZhY3RvcnkoYXBwLCBpbnN0YWxsYXRpb25zLCBhbmFseXRpY3NPcHRpb25zKTtcclxuICAgIH0sIFwiUFVCTElDXCIgLyogQ29tcG9uZW50VHlwZS5QVUJMSUMgKi8pKTtcclxuICAgIF9yZWdpc3RlckNvbXBvbmVudChuZXcgQ29tcG9uZW50KCdhbmFseXRpY3MtaW50ZXJuYWwnLCBpbnRlcm5hbEZhY3RvcnksIFwiUFJJVkFURVwiIC8qIENvbXBvbmVudFR5cGUuUFJJVkFURSAqLykpO1xyXG4gICAgcmVnaXN0ZXJWZXJzaW9uKG5hbWUsIHZlcnNpb24pO1xyXG4gICAgLy8gQlVJTERfVEFSR0VUIHdpbGwgYmUgcmVwbGFjZWQgYnkgdmFsdWVzIGxpa2UgZXNtNSwgZXNtMjAxNywgY2pzNSwgZXRjIGR1cmluZyB0aGUgY29tcGlsYXRpb25cclxuICAgIHJlZ2lzdGVyVmVyc2lvbihuYW1lLCB2ZXJzaW9uLCAnZXNtMjAxNycpO1xyXG4gICAgZnVuY3Rpb24gaW50ZXJuYWxGYWN0b3J5KGNvbnRhaW5lcikge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGFuYWx5dGljcyA9IGNvbnRhaW5lci5nZXRQcm92aWRlcihBTkFMWVRJQ1NfVFlQRSkuZ2V0SW1tZWRpYXRlKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBsb2dFdmVudDogKGV2ZW50TmFtZSwgZXZlbnRQYXJhbXMsIG9wdGlvbnMpID0+IGxvZ0V2ZW50KGFuYWx5dGljcywgZXZlbnROYW1lLCBldmVudFBhcmFtcywgb3B0aW9ucylcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJpbnRlcm9wLWNvbXBvbmVudC1yZWctZmFpbGVkXCIgLyogQW5hbHl0aWNzRXJyb3IuSU5URVJPUF9DT01QT05FTlRfUkVHX0ZBSUxFRCAqLywge1xyXG4gICAgICAgICAgICAgICAgcmVhc29uOiBlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5yZWdpc3RlckFuYWx5dGljcygpO1xuXG5leHBvcnQgeyBnZXRBbmFseXRpY3MsIGdldEdvb2dsZUFuYWx5dGljc0NsaWVudElkLCBpbml0aWFsaXplQW5hbHl0aWNzLCBpc1N1cHBvcnRlZCwgbG9nRXZlbnQsIHNldEFuYWx5dGljc0NvbGxlY3Rpb25FbmFibGVkLCBzZXRDb25zZW50LCBzZXRDdXJyZW50U2NyZWVuLCBzZXREZWZhdWx0RXZlbnRQYXJhbWV0ZXJzLCBzZXRVc2VySWQsIHNldFVzZXJQcm9wZXJ0aWVzLCBzZXR0aW5ncyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXNtMjAxNy5qcy5tYXBcbiIsImltcG9ydCB7IENvbXBvbmVudCwgQ29tcG9uZW50Q29udGFpbmVyIH0gZnJvbSAnQGZpcmViYXNlL2NvbXBvbmVudCc7XG5pbXBvcnQgeyBMb2dnZXIsIHNldFVzZXJMb2dIYW5kbGVyLCBzZXRMb2dMZXZlbCBhcyBzZXRMb2dMZXZlbCQxIH0gZnJvbSAnQGZpcmViYXNlL2xvZ2dlcic7XG5pbXBvcnQgeyBFcnJvckZhY3RvcnksIGdldERlZmF1bHRBcHBDb25maWcsIGRlZXBFcXVhbCwgRmlyZWJhc2VFcnJvciwgYmFzZTY0dXJsRW5jb2RlV2l0aG91dFBhZGRpbmcsIGlzSW5kZXhlZERCQXZhaWxhYmxlLCB2YWxpZGF0ZUluZGV4ZWREQk9wZW5hYmxlIH0gZnJvbSAnQGZpcmViYXNlL3V0aWwnO1xuZXhwb3J0IHsgRmlyZWJhc2VFcnJvciB9IGZyb20gJ0BmaXJlYmFzZS91dGlsJztcbmltcG9ydCB7IG9wZW5EQiB9IGZyb20gJ2lkYic7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIFBsYXRmb3JtTG9nZ2VyU2VydmljZUltcGwge1xyXG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyKSB7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XHJcbiAgICB9XHJcbiAgICAvLyBJbiBpbml0aWFsIGltcGxlbWVudGF0aW9uLCB0aGlzIHdpbGwgYmUgY2FsbGVkIGJ5IGluc3RhbGxhdGlvbnMgb25cclxuICAgIC8vIGF1dGggdG9rZW4gcmVmcmVzaCwgYW5kIGluc3RhbGxhdGlvbnMgd2lsbCBzZW5kIHRoaXMgc3RyaW5nLlxyXG4gICAgZ2V0UGxhdGZvcm1JbmZvU3RyaW5nKCkge1xyXG4gICAgICAgIGNvbnN0IHByb3ZpZGVycyA9IHRoaXMuY29udGFpbmVyLmdldFByb3ZpZGVycygpO1xyXG4gICAgICAgIC8vIExvb3AgdGhyb3VnaCBwcm92aWRlcnMgYW5kIGdldCBsaWJyYXJ5L3ZlcnNpb24gcGFpcnMgZnJvbSBhbnkgdGhhdCBhcmVcclxuICAgICAgICAvLyB2ZXJzaW9uIGNvbXBvbmVudHMuXHJcbiAgICAgICAgcmV0dXJuIHByb3ZpZGVyc1xyXG4gICAgICAgICAgICAubWFwKHByb3ZpZGVyID0+IHtcclxuICAgICAgICAgICAgaWYgKGlzVmVyc2lvblNlcnZpY2VQcm92aWRlcihwcm92aWRlcikpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNlcnZpY2UgPSBwcm92aWRlci5nZXRJbW1lZGlhdGUoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBgJHtzZXJ2aWNlLmxpYnJhcnl9LyR7c2VydmljZS52ZXJzaW9ufWA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5maWx0ZXIobG9nU3RyaW5nID0+IGxvZ1N0cmluZylcclxuICAgICAgICAgICAgLmpvaW4oJyAnKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICpcclxuICogQHBhcmFtIHByb3ZpZGVyIGNoZWNrIGlmIHRoaXMgcHJvdmlkZXIgcHJvdmlkZXMgYSBWZXJzaW9uU2VydmljZVxyXG4gKlxyXG4gKiBOT1RFOiBVc2luZyBQcm92aWRlcjwnYXBwLXZlcnNpb24nPiBpcyBhIGhhY2sgdG8gaW5kaWNhdGUgdGhhdCB0aGUgcHJvdmlkZXJcclxuICogcHJvdmlkZXMgVmVyc2lvblNlcnZpY2UuIFRoZSBwcm92aWRlciBpcyBub3QgbmVjZXNzYXJpbHkgYSAnYXBwLXZlcnNpb24nXHJcbiAqIHByb3ZpZGVyLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNWZXJzaW9uU2VydmljZVByb3ZpZGVyKHByb3ZpZGVyKSB7XHJcbiAgICBjb25zdCBjb21wb25lbnQgPSBwcm92aWRlci5nZXRDb21wb25lbnQoKTtcclxuICAgIHJldHVybiAoY29tcG9uZW50ID09PSBudWxsIHx8IGNvbXBvbmVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29tcG9uZW50LnR5cGUpID09PSBcIlZFUlNJT05cIiAvKiBDb21wb25lbnRUeXBlLlZFUlNJT04gKi87XHJcbn1cblxuY29uc3QgbmFtZSRvID0gXCJAZmlyZWJhc2UvYXBwXCI7XG5jb25zdCB2ZXJzaW9uJDEgPSBcIjAuOS4xNVwiO1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKCdAZmlyZWJhc2UvYXBwJyk7XG5cbmNvbnN0IG5hbWUkbiA9IFwiQGZpcmViYXNlL2FwcC1jb21wYXRcIjtcblxuY29uc3QgbmFtZSRtID0gXCJAZmlyZWJhc2UvYW5hbHl0aWNzLWNvbXBhdFwiO1xuXG5jb25zdCBuYW1lJGwgPSBcIkBmaXJlYmFzZS9hbmFseXRpY3NcIjtcblxuY29uc3QgbmFtZSRrID0gXCJAZmlyZWJhc2UvYXBwLWNoZWNrLWNvbXBhdFwiO1xuXG5jb25zdCBuYW1lJGogPSBcIkBmaXJlYmFzZS9hcHAtY2hlY2tcIjtcblxuY29uc3QgbmFtZSRpID0gXCJAZmlyZWJhc2UvYXV0aFwiO1xuXG5jb25zdCBuYW1lJGggPSBcIkBmaXJlYmFzZS9hdXRoLWNvbXBhdFwiO1xuXG5jb25zdCBuYW1lJGcgPSBcIkBmaXJlYmFzZS9kYXRhYmFzZVwiO1xuXG5jb25zdCBuYW1lJGYgPSBcIkBmaXJlYmFzZS9kYXRhYmFzZS1jb21wYXRcIjtcblxuY29uc3QgbmFtZSRlID0gXCJAZmlyZWJhc2UvZnVuY3Rpb25zXCI7XG5cbmNvbnN0IG5hbWUkZCA9IFwiQGZpcmViYXNlL2Z1bmN0aW9ucy1jb21wYXRcIjtcblxuY29uc3QgbmFtZSRjID0gXCJAZmlyZWJhc2UvaW5zdGFsbGF0aW9uc1wiO1xuXG5jb25zdCBuYW1lJGIgPSBcIkBmaXJlYmFzZS9pbnN0YWxsYXRpb25zLWNvbXBhdFwiO1xuXG5jb25zdCBuYW1lJGEgPSBcIkBmaXJlYmFzZS9tZXNzYWdpbmdcIjtcblxuY29uc3QgbmFtZSQ5ID0gXCJAZmlyZWJhc2UvbWVzc2FnaW5nLWNvbXBhdFwiO1xuXG5jb25zdCBuYW1lJDggPSBcIkBmaXJlYmFzZS9wZXJmb3JtYW5jZVwiO1xuXG5jb25zdCBuYW1lJDcgPSBcIkBmaXJlYmFzZS9wZXJmb3JtYW5jZS1jb21wYXRcIjtcblxuY29uc3QgbmFtZSQ2ID0gXCJAZmlyZWJhc2UvcmVtb3RlLWNvbmZpZ1wiO1xuXG5jb25zdCBuYW1lJDUgPSBcIkBmaXJlYmFzZS9yZW1vdGUtY29uZmlnLWNvbXBhdFwiO1xuXG5jb25zdCBuYW1lJDQgPSBcIkBmaXJlYmFzZS9zdG9yYWdlXCI7XG5cbmNvbnN0IG5hbWUkMyA9IFwiQGZpcmViYXNlL3N0b3JhZ2UtY29tcGF0XCI7XG5cbmNvbnN0IG5hbWUkMiA9IFwiQGZpcmViYXNlL2ZpcmVzdG9yZVwiO1xuXG5jb25zdCBuYW1lJDEgPSBcIkBmaXJlYmFzZS9maXJlc3RvcmUtY29tcGF0XCI7XG5cbmNvbnN0IG5hbWUgPSBcImZpcmViYXNlXCI7XG5jb25zdCB2ZXJzaW9uID0gXCIxMC4xLjBcIjtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFRoZSBkZWZhdWx0IGFwcCBuYW1lXHJcbiAqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuY29uc3QgREVGQVVMVF9FTlRSWV9OQU1FID0gJ1tERUZBVUxUXSc7XHJcbmNvbnN0IFBMQVRGT1JNX0xPR19TVFJJTkcgPSB7XHJcbiAgICBbbmFtZSRvXTogJ2ZpcmUtY29yZScsXHJcbiAgICBbbmFtZSRuXTogJ2ZpcmUtY29yZS1jb21wYXQnLFxyXG4gICAgW25hbWUkbF06ICdmaXJlLWFuYWx5dGljcycsXHJcbiAgICBbbmFtZSRtXTogJ2ZpcmUtYW5hbHl0aWNzLWNvbXBhdCcsXHJcbiAgICBbbmFtZSRqXTogJ2ZpcmUtYXBwLWNoZWNrJyxcclxuICAgIFtuYW1lJGtdOiAnZmlyZS1hcHAtY2hlY2stY29tcGF0JyxcclxuICAgIFtuYW1lJGldOiAnZmlyZS1hdXRoJyxcclxuICAgIFtuYW1lJGhdOiAnZmlyZS1hdXRoLWNvbXBhdCcsXHJcbiAgICBbbmFtZSRnXTogJ2ZpcmUtcnRkYicsXHJcbiAgICBbbmFtZSRmXTogJ2ZpcmUtcnRkYi1jb21wYXQnLFxyXG4gICAgW25hbWUkZV06ICdmaXJlLWZuJyxcclxuICAgIFtuYW1lJGRdOiAnZmlyZS1mbi1jb21wYXQnLFxyXG4gICAgW25hbWUkY106ICdmaXJlLWlpZCcsXHJcbiAgICBbbmFtZSRiXTogJ2ZpcmUtaWlkLWNvbXBhdCcsXHJcbiAgICBbbmFtZSRhXTogJ2ZpcmUtZmNtJyxcclxuICAgIFtuYW1lJDldOiAnZmlyZS1mY20tY29tcGF0JyxcclxuICAgIFtuYW1lJDhdOiAnZmlyZS1wZXJmJyxcclxuICAgIFtuYW1lJDddOiAnZmlyZS1wZXJmLWNvbXBhdCcsXHJcbiAgICBbbmFtZSQ2XTogJ2ZpcmUtcmMnLFxyXG4gICAgW25hbWUkNV06ICdmaXJlLXJjLWNvbXBhdCcsXHJcbiAgICBbbmFtZSQ0XTogJ2ZpcmUtZ2NzJyxcclxuICAgIFtuYW1lJDNdOiAnZmlyZS1nY3MtY29tcGF0JyxcclxuICAgIFtuYW1lJDJdOiAnZmlyZS1mc3QnLFxyXG4gICAgW25hbWUkMV06ICdmaXJlLWZzdC1jb21wYXQnLFxyXG4gICAgJ2ZpcmUtanMnOiAnZmlyZS1qcycsXHJcbiAgICBbbmFtZV06ICdmaXJlLWpzLWFsbCdcclxufTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuY29uc3QgX2FwcHMgPSBuZXcgTWFwKCk7XHJcbi8qKlxyXG4gKiBSZWdpc3RlcmVkIGNvbXBvbmVudHMuXHJcbiAqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuY29uc3QgX2NvbXBvbmVudHMgPSBuZXcgTWFwKCk7XHJcbi8qKlxyXG4gKiBAcGFyYW0gY29tcG9uZW50IC0gdGhlIGNvbXBvbmVudCBiZWluZyBhZGRlZCB0byB0aGlzIGFwcCdzIGNvbnRhaW5lclxyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIF9hZGRDb21wb25lbnQoYXBwLCBjb21wb25lbnQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgYXBwLmNvbnRhaW5lci5hZGRDb21wb25lbnQoY29tcG9uZW50KTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgbG9nZ2VyLmRlYnVnKGBDb21wb25lbnQgJHtjb21wb25lbnQubmFtZX0gZmFpbGVkIHRvIHJlZ2lzdGVyIHdpdGggRmlyZWJhc2VBcHAgJHthcHAubmFtZX1gLCBlKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICpcclxuICogQGludGVybmFsXHJcbiAqL1xyXG5mdW5jdGlvbiBfYWRkT3JPdmVyd3JpdGVDb21wb25lbnQoYXBwLCBjb21wb25lbnQpIHtcclxuICAgIGFwcC5jb250YWluZXIuYWRkT3JPdmVyd3JpdGVDb21wb25lbnQoY29tcG9uZW50KTtcclxufVxyXG4vKipcclxuICpcclxuICogQHBhcmFtIGNvbXBvbmVudCAtIHRoZSBjb21wb25lbnQgdG8gcmVnaXN0ZXJcclxuICogQHJldHVybnMgd2hldGhlciBvciBub3QgdGhlIGNvbXBvbmVudCBpcyByZWdpc3RlcmVkIHN1Y2Nlc3NmdWxseVxyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIF9yZWdpc3RlckNvbXBvbmVudChjb21wb25lbnQpIHtcclxuICAgIGNvbnN0IGNvbXBvbmVudE5hbWUgPSBjb21wb25lbnQubmFtZTtcclxuICAgIGlmIChfY29tcG9uZW50cy5oYXMoY29tcG9uZW50TmFtZSkpIHtcclxuICAgICAgICBsb2dnZXIuZGVidWcoYFRoZXJlIHdlcmUgbXVsdGlwbGUgYXR0ZW1wdHMgdG8gcmVnaXN0ZXIgY29tcG9uZW50ICR7Y29tcG9uZW50TmFtZX0uYCk7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgX2NvbXBvbmVudHMuc2V0KGNvbXBvbmVudE5hbWUsIGNvbXBvbmVudCk7XHJcbiAgICAvLyBhZGQgdGhlIGNvbXBvbmVudCB0byBleGlzdGluZyBhcHAgaW5zdGFuY2VzXHJcbiAgICBmb3IgKGNvbnN0IGFwcCBvZiBfYXBwcy52YWx1ZXMoKSkge1xyXG4gICAgICAgIF9hZGRDb21wb25lbnQoYXBwLCBjb21wb25lbnQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn1cclxuLyoqXHJcbiAqXHJcbiAqIEBwYXJhbSBhcHAgLSBGaXJlYmFzZUFwcCBpbnN0YW5jZVxyXG4gKiBAcGFyYW0gbmFtZSAtIHNlcnZpY2UgbmFtZVxyXG4gKlxyXG4gKiBAcmV0dXJucyB0aGUgcHJvdmlkZXIgZm9yIHRoZSBzZXJ2aWNlIHdpdGggdGhlIG1hdGNoaW5nIG5hbWVcclxuICpcclxuICogQGludGVybmFsXHJcbiAqL1xyXG5mdW5jdGlvbiBfZ2V0UHJvdmlkZXIoYXBwLCBuYW1lKSB7XHJcbiAgICBjb25zdCBoZWFydGJlYXRDb250cm9sbGVyID0gYXBwLmNvbnRhaW5lclxyXG4gICAgICAgIC5nZXRQcm92aWRlcignaGVhcnRiZWF0JylcclxuICAgICAgICAuZ2V0SW1tZWRpYXRlKHsgb3B0aW9uYWw6IHRydWUgfSk7XHJcbiAgICBpZiAoaGVhcnRiZWF0Q29udHJvbGxlcikge1xyXG4gICAgICAgIHZvaWQgaGVhcnRiZWF0Q29udHJvbGxlci50cmlnZ2VySGVhcnRiZWF0KCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYXBwLmNvbnRhaW5lci5nZXRQcm92aWRlcihuYW1lKTtcclxufVxyXG4vKipcclxuICpcclxuICogQHBhcmFtIGFwcCAtIEZpcmViYXNlQXBwIGluc3RhbmNlXHJcbiAqIEBwYXJhbSBuYW1lIC0gc2VydmljZSBuYW1lXHJcbiAqIEBwYXJhbSBpbnN0YW5jZUlkZW50aWZpZXIgLSBzZXJ2aWNlIGluc3RhbmNlIGlkZW50aWZpZXIgaW4gY2FzZSB0aGUgc2VydmljZSBzdXBwb3J0cyBtdWx0aXBsZSBpbnN0YW5jZXNcclxuICpcclxuICogQGludGVybmFsXHJcbiAqL1xyXG5mdW5jdGlvbiBfcmVtb3ZlU2VydmljZUluc3RhbmNlKGFwcCwgbmFtZSwgaW5zdGFuY2VJZGVudGlmaWVyID0gREVGQVVMVF9FTlRSWV9OQU1FKSB7XHJcbiAgICBfZ2V0UHJvdmlkZXIoYXBwLCBuYW1lKS5jbGVhckluc3RhbmNlKGluc3RhbmNlSWRlbnRpZmllcik7XHJcbn1cclxuLyoqXHJcbiAqIFRlc3Qgb25seVxyXG4gKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmZ1bmN0aW9uIF9jbGVhckNvbXBvbmVudHMoKSB7XHJcbiAgICBfY29tcG9uZW50cy5jbGVhcigpO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IEVSUk9SUyA9IHtcclxuICAgIFtcIm5vLWFwcFwiIC8qIEFwcEVycm9yLk5PX0FQUCAqL106IFwiTm8gRmlyZWJhc2UgQXBwICd7JGFwcE5hbWV9JyBoYXMgYmVlbiBjcmVhdGVkIC0gXCIgK1xyXG4gICAgICAgICdjYWxsIGluaXRpYWxpemVBcHAoKSBmaXJzdCcsXHJcbiAgICBbXCJiYWQtYXBwLW5hbWVcIiAvKiBBcHBFcnJvci5CQURfQVBQX05BTUUgKi9dOiBcIklsbGVnYWwgQXBwIG5hbWU6ICd7JGFwcE5hbWV9XCIsXHJcbiAgICBbXCJkdXBsaWNhdGUtYXBwXCIgLyogQXBwRXJyb3IuRFVQTElDQVRFX0FQUCAqL106IFwiRmlyZWJhc2UgQXBwIG5hbWVkICd7JGFwcE5hbWV9JyBhbHJlYWR5IGV4aXN0cyB3aXRoIGRpZmZlcmVudCBvcHRpb25zIG9yIGNvbmZpZ1wiLFxyXG4gICAgW1wiYXBwLWRlbGV0ZWRcIiAvKiBBcHBFcnJvci5BUFBfREVMRVRFRCAqL106IFwiRmlyZWJhc2UgQXBwIG5hbWVkICd7JGFwcE5hbWV9JyBhbHJlYWR5IGRlbGV0ZWRcIixcclxuICAgIFtcIm5vLW9wdGlvbnNcIiAvKiBBcHBFcnJvci5OT19PUFRJT05TICovXTogJ05lZWQgdG8gcHJvdmlkZSBvcHRpb25zLCB3aGVuIG5vdCBiZWluZyBkZXBsb3llZCB0byBob3N0aW5nIHZpYSBzb3VyY2UuJyxcclxuICAgIFtcImludmFsaWQtYXBwLWFyZ3VtZW50XCIgLyogQXBwRXJyb3IuSU5WQUxJRF9BUFBfQVJHVU1FTlQgKi9dOiAnZmlyZWJhc2UueyRhcHBOYW1lfSgpIHRha2VzIGVpdGhlciBubyBhcmd1bWVudCBvciBhICcgK1xyXG4gICAgICAgICdGaXJlYmFzZSBBcHAgaW5zdGFuY2UuJyxcclxuICAgIFtcImludmFsaWQtbG9nLWFyZ3VtZW50XCIgLyogQXBwRXJyb3IuSU5WQUxJRF9MT0dfQVJHVU1FTlQgKi9dOiAnRmlyc3QgYXJndW1lbnQgdG8gYG9uTG9nYCBtdXN0IGJlIG51bGwgb3IgYSBmdW5jdGlvbi4nLFxyXG4gICAgW1wiaWRiLW9wZW5cIiAvKiBBcHBFcnJvci5JREJfT1BFTiAqL106ICdFcnJvciB0aHJvd24gd2hlbiBvcGVuaW5nIEluZGV4ZWREQi4gT3JpZ2luYWwgZXJyb3I6IHskb3JpZ2luYWxFcnJvck1lc3NhZ2V9LicsXHJcbiAgICBbXCJpZGItZ2V0XCIgLyogQXBwRXJyb3IuSURCX0dFVCAqL106ICdFcnJvciB0aHJvd24gd2hlbiByZWFkaW5nIGZyb20gSW5kZXhlZERCLiBPcmlnaW5hbCBlcnJvcjogeyRvcmlnaW5hbEVycm9yTWVzc2FnZX0uJyxcclxuICAgIFtcImlkYi1zZXRcIiAvKiBBcHBFcnJvci5JREJfV1JJVEUgKi9dOiAnRXJyb3IgdGhyb3duIHdoZW4gd3JpdGluZyB0byBJbmRleGVkREIuIE9yaWdpbmFsIGVycm9yOiB7JG9yaWdpbmFsRXJyb3JNZXNzYWdlfS4nLFxyXG4gICAgW1wiaWRiLWRlbGV0ZVwiIC8qIEFwcEVycm9yLklEQl9ERUxFVEUgKi9dOiAnRXJyb3IgdGhyb3duIHdoZW4gZGVsZXRpbmcgZnJvbSBJbmRleGVkREIuIE9yaWdpbmFsIGVycm9yOiB7JG9yaWdpbmFsRXJyb3JNZXNzYWdlfS4nXHJcbn07XHJcbmNvbnN0IEVSUk9SX0ZBQ1RPUlkgPSBuZXcgRXJyb3JGYWN0b3J5KCdhcHAnLCAnRmlyZWJhc2UnLCBFUlJPUlMpO1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBGaXJlYmFzZUFwcEltcGwge1xyXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucywgY29uZmlnLCBjb250YWluZXIpIHtcclxuICAgICAgICB0aGlzLl9pc0RlbGV0ZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9vcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnID0gT2JqZWN0LmFzc2lnbih7fSwgY29uZmlnKTtcclxuICAgICAgICB0aGlzLl9uYW1lID0gY29uZmlnLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fYXV0b21hdGljRGF0YUNvbGxlY3Rpb25FbmFibGVkID1cclxuICAgICAgICAgICAgY29uZmlnLmF1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZDtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXI7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIuYWRkQ29tcG9uZW50KG5ldyBDb21wb25lbnQoJ2FwcCcsICgpID0+IHRoaXMsIFwiUFVCTElDXCIgLyogQ29tcG9uZW50VHlwZS5QVUJMSUMgKi8pKTtcclxuICAgIH1cclxuICAgIGdldCBhdXRvbWF0aWNEYXRhQ29sbGVjdGlvbkVuYWJsZWQoKSB7XHJcbiAgICAgICAgdGhpcy5jaGVja0Rlc3Ryb3llZCgpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9hdXRvbWF0aWNEYXRhQ29sbGVjdGlvbkVuYWJsZWQ7XHJcbiAgICB9XHJcbiAgICBzZXQgYXV0b21hdGljRGF0YUNvbGxlY3Rpb25FbmFibGVkKHZhbCkge1xyXG4gICAgICAgIHRoaXMuY2hlY2tEZXN0cm95ZWQoKTtcclxuICAgICAgICB0aGlzLl9hdXRvbWF0aWNEYXRhQ29sbGVjdGlvbkVuYWJsZWQgPSB2YWw7XHJcbiAgICB9XHJcbiAgICBnZXQgbmFtZSgpIHtcclxuICAgICAgICB0aGlzLmNoZWNrRGVzdHJveWVkKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX25hbWU7XHJcbiAgICB9XHJcbiAgICBnZXQgb3B0aW9ucygpIHtcclxuICAgICAgICB0aGlzLmNoZWNrRGVzdHJveWVkKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX29wdGlvbnM7XHJcbiAgICB9XHJcbiAgICBnZXQgY29uZmlnKCkge1xyXG4gICAgICAgIHRoaXMuY2hlY2tEZXN0cm95ZWQoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xyXG4gICAgfVxyXG4gICAgZ2V0IGNvbnRhaW5lcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29udGFpbmVyO1xyXG4gICAgfVxyXG4gICAgZ2V0IGlzRGVsZXRlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faXNEZWxldGVkO1xyXG4gICAgfVxyXG4gICAgc2V0IGlzRGVsZXRlZCh2YWwpIHtcclxuICAgICAgICB0aGlzLl9pc0RlbGV0ZWQgPSB2YWw7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCB0aHJvdyBhbiBFcnJvciBpZiB0aGUgQXBwIGhhcyBhbHJlYWR5IGJlZW4gZGVsZXRlZCAtXHJcbiAgICAgKiB1c2UgYmVmb3JlIHBlcmZvcm1pbmcgQVBJIGFjdGlvbnMgb24gdGhlIEFwcC5cclxuICAgICAqL1xyXG4gICAgY2hlY2tEZXN0cm95ZWQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNEZWxldGVkKSB7XHJcbiAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiYXBwLWRlbGV0ZWRcIiAvKiBBcHBFcnJvci5BUFBfREVMRVRFRCAqLywgeyBhcHBOYW1lOiB0aGlzLl9uYW1lIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogVGhlIGN1cnJlbnQgU0RLIHZlcnNpb24uXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmNvbnN0IFNES19WRVJTSU9OID0gdmVyc2lvbjtcclxuZnVuY3Rpb24gaW5pdGlhbGl6ZUFwcChfb3B0aW9ucywgcmF3Q29uZmlnID0ge30pIHtcclxuICAgIGxldCBvcHRpb25zID0gX29wdGlvbnM7XHJcbiAgICBpZiAodHlwZW9mIHJhd0NvbmZpZyAhPT0gJ29iamVjdCcpIHtcclxuICAgICAgICBjb25zdCBuYW1lID0gcmF3Q29uZmlnO1xyXG4gICAgICAgIHJhd0NvbmZpZyA9IHsgbmFtZSB9O1xyXG4gICAgfVxyXG4gICAgY29uc3QgY29uZmlnID0gT2JqZWN0LmFzc2lnbih7IG5hbWU6IERFRkFVTFRfRU5UUllfTkFNRSwgYXV0b21hdGljRGF0YUNvbGxlY3Rpb25FbmFibGVkOiBmYWxzZSB9LCByYXdDb25maWcpO1xyXG4gICAgY29uc3QgbmFtZSA9IGNvbmZpZy5uYW1lO1xyXG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJyB8fCAhbmFtZSkge1xyXG4gICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiYmFkLWFwcC1uYW1lXCIgLyogQXBwRXJyb3IuQkFEX0FQUF9OQU1FICovLCB7XHJcbiAgICAgICAgICAgIGFwcE5hbWU6IFN0cmluZyhuYW1lKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IGdldERlZmF1bHRBcHBDb25maWcoKSk7XHJcbiAgICBpZiAoIW9wdGlvbnMpIHtcclxuICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcIm5vLW9wdGlvbnNcIiAvKiBBcHBFcnJvci5OT19PUFRJT05TICovKTtcclxuICAgIH1cclxuICAgIGNvbnN0IGV4aXN0aW5nQXBwID0gX2FwcHMuZ2V0KG5hbWUpO1xyXG4gICAgaWYgKGV4aXN0aW5nQXBwKSB7XHJcbiAgICAgICAgLy8gcmV0dXJuIHRoZSBleGlzdGluZyBhcHAgaWYgb3B0aW9ucyBhbmQgY29uZmlnIGRlZXAgZXF1YWwgdGhlIG9uZXMgaW4gdGhlIGV4aXN0aW5nIGFwcC5cclxuICAgICAgICBpZiAoZGVlcEVxdWFsKG9wdGlvbnMsIGV4aXN0aW5nQXBwLm9wdGlvbnMpICYmXHJcbiAgICAgICAgICAgIGRlZXBFcXVhbChjb25maWcsIGV4aXN0aW5nQXBwLmNvbmZpZykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGV4aXN0aW5nQXBwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJkdXBsaWNhdGUtYXBwXCIgLyogQXBwRXJyb3IuRFVQTElDQVRFX0FQUCAqLywgeyBhcHBOYW1lOiBuYW1lIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNvbnN0IGNvbnRhaW5lciA9IG5ldyBDb21wb25lbnRDb250YWluZXIobmFtZSk7XHJcbiAgICBmb3IgKGNvbnN0IGNvbXBvbmVudCBvZiBfY29tcG9uZW50cy52YWx1ZXMoKSkge1xyXG4gICAgICAgIGNvbnRhaW5lci5hZGRDb21wb25lbnQoY29tcG9uZW50KTtcclxuICAgIH1cclxuICAgIGNvbnN0IG5ld0FwcCA9IG5ldyBGaXJlYmFzZUFwcEltcGwob3B0aW9ucywgY29uZmlnLCBjb250YWluZXIpO1xyXG4gICAgX2FwcHMuc2V0KG5hbWUsIG5ld0FwcCk7XHJcbiAgICByZXR1cm4gbmV3QXBwO1xyXG59XHJcbi8qKlxyXG4gKiBSZXRyaWV2ZXMgYSB7QGxpbmsgQGZpcmViYXNlL2FwcCNGaXJlYmFzZUFwcH0gaW5zdGFuY2UuXHJcbiAqXHJcbiAqIFdoZW4gY2FsbGVkIHdpdGggbm8gYXJndW1lbnRzLCB0aGUgZGVmYXVsdCBhcHAgaXMgcmV0dXJuZWQuIFdoZW4gYW4gYXBwIG5hbWVcclxuICogaXMgcHJvdmlkZWQsIHRoZSBhcHAgY29ycmVzcG9uZGluZyB0byB0aGF0IG5hbWUgaXMgcmV0dXJuZWQuXHJcbiAqXHJcbiAqIEFuIGV4Y2VwdGlvbiBpcyB0aHJvd24gaWYgdGhlIGFwcCBiZWluZyByZXRyaWV2ZWQgaGFzIG5vdCB5ZXQgYmVlblxyXG4gKiBpbml0aWFsaXplZC5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogYGBgamF2YXNjcmlwdFxyXG4gKiAvLyBSZXR1cm4gdGhlIGRlZmF1bHQgYXBwXHJcbiAqIGNvbnN0IGFwcCA9IGdldEFwcCgpO1xyXG4gKiBgYGBcclxuICpcclxuICogQGV4YW1wbGVcclxuICogYGBgamF2YXNjcmlwdFxyXG4gKiAvLyBSZXR1cm4gYSBuYW1lZCBhcHBcclxuICogY29uc3Qgb3RoZXJBcHAgPSBnZXRBcHAoXCJvdGhlckFwcFwiKTtcclxuICogYGBgXHJcbiAqXHJcbiAqIEBwYXJhbSBuYW1lIC0gT3B0aW9uYWwgbmFtZSBvZiB0aGUgYXBwIHRvIHJldHVybi4gSWYgbm8gbmFtZSBpc1xyXG4gKiAgIHByb3ZpZGVkLCB0aGUgZGVmYXVsdCBpcyBgXCJbREVGQVVMVF1cImAuXHJcbiAqXHJcbiAqIEByZXR1cm5zIFRoZSBhcHAgY29ycmVzcG9uZGluZyB0byB0aGUgcHJvdmlkZWQgYXBwIG5hbWUuXHJcbiAqICAgSWYgbm8gYXBwIG5hbWUgaXMgcHJvdmlkZWQsIHRoZSBkZWZhdWx0IGFwcCBpcyByZXR1cm5lZC5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKi9cclxuZnVuY3Rpb24gZ2V0QXBwKG5hbWUgPSBERUZBVUxUX0VOVFJZX05BTUUpIHtcclxuICAgIGNvbnN0IGFwcCA9IF9hcHBzLmdldChuYW1lKTtcclxuICAgIGlmICghYXBwICYmIG5hbWUgPT09IERFRkFVTFRfRU5UUllfTkFNRSAmJiBnZXREZWZhdWx0QXBwQ29uZmlnKCkpIHtcclxuICAgICAgICByZXR1cm4gaW5pdGlhbGl6ZUFwcCgpO1xyXG4gICAgfVxyXG4gICAgaWYgKCFhcHApIHtcclxuICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcIm5vLWFwcFwiIC8qIEFwcEVycm9yLk5PX0FQUCAqLywgeyBhcHBOYW1lOiBuYW1lIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFwcDtcclxufVxyXG4vKipcclxuICogQSAocmVhZC1vbmx5KSBhcnJheSBvZiBhbGwgaW5pdGlhbGl6ZWQgYXBwcy5cclxuICogQHB1YmxpY1xyXG4gKi9cclxuZnVuY3Rpb24gZ2V0QXBwcygpIHtcclxuICAgIHJldHVybiBBcnJheS5mcm9tKF9hcHBzLnZhbHVlcygpKTtcclxufVxyXG4vKipcclxuICogUmVuZGVycyB0aGlzIGFwcCB1bnVzYWJsZSBhbmQgZnJlZXMgdGhlIHJlc291cmNlcyBvZiBhbGwgYXNzb2NpYXRlZFxyXG4gKiBzZXJ2aWNlcy5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogYGBgamF2YXNjcmlwdFxyXG4gKiBkZWxldGVBcHAoYXBwKVxyXG4gKiAgIC50aGVuKGZ1bmN0aW9uKCkge1xyXG4gKiAgICAgY29uc29sZS5sb2coXCJBcHAgZGVsZXRlZCBzdWNjZXNzZnVsbHlcIik7XHJcbiAqICAgfSlcclxuICogICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHtcclxuICogICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgZGVsZXRpbmcgYXBwOlwiLCBlcnJvcik7XHJcbiAqICAgfSk7XHJcbiAqIGBgYFxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBkZWxldGVBcHAoYXBwKSB7XHJcbiAgICBjb25zdCBuYW1lID0gYXBwLm5hbWU7XHJcbiAgICBpZiAoX2FwcHMuaGFzKG5hbWUpKSB7XHJcbiAgICAgICAgX2FwcHMuZGVsZXRlKG5hbWUpO1xyXG4gICAgICAgIGF3YWl0IFByb21pc2UuYWxsKGFwcC5jb250YWluZXJcclxuICAgICAgICAgICAgLmdldFByb3ZpZGVycygpXHJcbiAgICAgICAgICAgIC5tYXAocHJvdmlkZXIgPT4gcHJvdmlkZXIuZGVsZXRlKCkpKTtcclxuICAgICAgICBhcHAuaXNEZWxldGVkID0gdHJ1ZTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogUmVnaXN0ZXJzIGEgbGlicmFyeSdzIG5hbWUgYW5kIHZlcnNpb24gZm9yIHBsYXRmb3JtIGxvZ2dpbmcgcHVycG9zZXMuXHJcbiAqIEBwYXJhbSBsaWJyYXJ5IC0gTmFtZSBvZiAxcCBvciAzcCBsaWJyYXJ5IChlLmcuIGZpcmVzdG9yZSwgYW5ndWxhcmZpcmUpXHJcbiAqIEBwYXJhbSB2ZXJzaW9uIC0gQ3VycmVudCB2ZXJzaW9uIG9mIHRoYXQgbGlicmFyeS5cclxuICogQHBhcmFtIHZhcmlhbnQgLSBCdW5kbGUgdmFyaWFudCwgZS5nLiwgbm9kZSwgcm4sIGV0Yy5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKi9cclxuZnVuY3Rpb24gcmVnaXN0ZXJWZXJzaW9uKGxpYnJhcnlLZXlPck5hbWUsIHZlcnNpb24sIHZhcmlhbnQpIHtcclxuICAgIHZhciBfYTtcclxuICAgIC8vIFRPRE86IFdlIGNhbiB1c2UgdGhpcyBjaGVjayB0byB3aGl0ZWxpc3Qgc3RyaW5ncyB3aGVuL2lmIHdlIHNldCB1cFxyXG4gICAgLy8gYSBnb29kIHdoaXRlbGlzdCBzeXN0ZW0uXHJcbiAgICBsZXQgbGlicmFyeSA9IChfYSA9IFBMQVRGT1JNX0xPR19TVFJJTkdbbGlicmFyeUtleU9yTmFtZV0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGxpYnJhcnlLZXlPck5hbWU7XHJcbiAgICBpZiAodmFyaWFudCkge1xyXG4gICAgICAgIGxpYnJhcnkgKz0gYC0ke3ZhcmlhbnR9YDtcclxuICAgIH1cclxuICAgIGNvbnN0IGxpYnJhcnlNaXNtYXRjaCA9IGxpYnJhcnkubWF0Y2goL1xcc3xcXC8vKTtcclxuICAgIGNvbnN0IHZlcnNpb25NaXNtYXRjaCA9IHZlcnNpb24ubWF0Y2goL1xcc3xcXC8vKTtcclxuICAgIGlmIChsaWJyYXJ5TWlzbWF0Y2ggfHwgdmVyc2lvbk1pc21hdGNoKSB7XHJcbiAgICAgICAgY29uc3Qgd2FybmluZyA9IFtcclxuICAgICAgICAgICAgYFVuYWJsZSB0byByZWdpc3RlciBsaWJyYXJ5IFwiJHtsaWJyYXJ5fVwiIHdpdGggdmVyc2lvbiBcIiR7dmVyc2lvbn1cIjpgXHJcbiAgICAgICAgXTtcclxuICAgICAgICBpZiAobGlicmFyeU1pc21hdGNoKSB7XHJcbiAgICAgICAgICAgIHdhcm5pbmcucHVzaChgbGlicmFyeSBuYW1lIFwiJHtsaWJyYXJ5fVwiIGNvbnRhaW5zIGlsbGVnYWwgY2hhcmFjdGVycyAod2hpdGVzcGFjZSBvciBcIi9cIilgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGxpYnJhcnlNaXNtYXRjaCAmJiB2ZXJzaW9uTWlzbWF0Y2gpIHtcclxuICAgICAgICAgICAgd2FybmluZy5wdXNoKCdhbmQnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHZlcnNpb25NaXNtYXRjaCkge1xyXG4gICAgICAgICAgICB3YXJuaW5nLnB1c2goYHZlcnNpb24gbmFtZSBcIiR7dmVyc2lvbn1cIiBjb250YWlucyBpbGxlZ2FsIGNoYXJhY3RlcnMgKHdoaXRlc3BhY2Ugb3IgXCIvXCIpYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxvZ2dlci53YXJuKHdhcm5pbmcuam9pbignICcpKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBfcmVnaXN0ZXJDb21wb25lbnQobmV3IENvbXBvbmVudChgJHtsaWJyYXJ5fS12ZXJzaW9uYCwgKCkgPT4gKHsgbGlicmFyeSwgdmVyc2lvbiB9KSwgXCJWRVJTSU9OXCIgLyogQ29tcG9uZW50VHlwZS5WRVJTSU9OICovKSk7XHJcbn1cclxuLyoqXHJcbiAqIFNldHMgbG9nIGhhbmRsZXIgZm9yIGFsbCBGaXJlYmFzZSBTREtzLlxyXG4gKiBAcGFyYW0gbG9nQ2FsbGJhY2sgLSBBbiBvcHRpb25hbCBjdXN0b20gbG9nIGhhbmRsZXIgdGhhdCBleGVjdXRlcyB1c2VyIGNvZGUgd2hlbmV2ZXJcclxuICogdGhlIEZpcmViYXNlIFNESyBtYWtlcyBhIGxvZ2dpbmcgY2FsbC5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKi9cclxuZnVuY3Rpb24gb25Mb2cobG9nQ2FsbGJhY2ssIG9wdGlvbnMpIHtcclxuICAgIGlmIChsb2dDYWxsYmFjayAhPT0gbnVsbCAmJiB0eXBlb2YgbG9nQ2FsbGJhY2sgIT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcImludmFsaWQtbG9nLWFyZ3VtZW50XCIgLyogQXBwRXJyb3IuSU5WQUxJRF9MT0dfQVJHVU1FTlQgKi8pO1xyXG4gICAgfVxyXG4gICAgc2V0VXNlckxvZ0hhbmRsZXIobG9nQ2FsbGJhY2ssIG9wdGlvbnMpO1xyXG59XHJcbi8qKlxyXG4gKiBTZXRzIGxvZyBsZXZlbCBmb3IgYWxsIEZpcmViYXNlIFNES3MuXHJcbiAqXHJcbiAqIEFsbCBvZiB0aGUgbG9nIHR5cGVzIGFib3ZlIHRoZSBjdXJyZW50IGxvZyBsZXZlbCBhcmUgY2FwdHVyZWQgKGkuZS4gaWZcclxuICogeW91IHNldCB0aGUgbG9nIGxldmVsIHRvIGBpbmZvYCwgZXJyb3JzIGFyZSBsb2dnZWQsIGJ1dCBgZGVidWdgIGFuZFxyXG4gKiBgdmVyYm9zZWAgbG9ncyBhcmUgbm90KS5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKi9cclxuZnVuY3Rpb24gc2V0TG9nTGV2ZWwobG9nTGV2ZWwpIHtcclxuICAgIHNldExvZ0xldmVsJDEobG9nTGV2ZWwpO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IERCX05BTUUgPSAnZmlyZWJhc2UtaGVhcnRiZWF0LWRhdGFiYXNlJztcclxuY29uc3QgREJfVkVSU0lPTiA9IDE7XHJcbmNvbnN0IFNUT1JFX05BTUUgPSAnZmlyZWJhc2UtaGVhcnRiZWF0LXN0b3JlJztcclxubGV0IGRiUHJvbWlzZSA9IG51bGw7XHJcbmZ1bmN0aW9uIGdldERiUHJvbWlzZSgpIHtcclxuICAgIGlmICghZGJQcm9taXNlKSB7XHJcbiAgICAgICAgZGJQcm9taXNlID0gb3BlbkRCKERCX05BTUUsIERCX1ZFUlNJT04sIHtcclxuICAgICAgICAgICAgdXBncmFkZTogKGRiLCBvbGRWZXJzaW9uKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyBXZSBkb24ndCB1c2UgJ2JyZWFrJyBpbiB0aGlzIHN3aXRjaCBzdGF0ZW1lbnQsIHRoZSBmYWxsLXRocm91Z2hcclxuICAgICAgICAgICAgICAgIC8vIGJlaGF2aW9yIGlzIHdoYXQgd2Ugd2FudCwgYmVjYXVzZSBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgdmVyc2lvbnMgYmV0d2VlblxyXG4gICAgICAgICAgICAgICAgLy8gdGhlIG9sZCB2ZXJzaW9uIGFuZCB0aGUgY3VycmVudCB2ZXJzaW9uLCB3ZSB3YW50IEFMTCB0aGUgbWlncmF0aW9uc1xyXG4gICAgICAgICAgICAgICAgLy8gdGhhdCBjb3JyZXNwb25kIHRvIHRob3NlIHZlcnNpb25zIHRvIHJ1biwgbm90IG9ubHkgdGhlIGxhc3Qgb25lLlxyXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlZmF1bHQtY2FzZVxyXG4gICAgICAgICAgICAgICAgc3dpdGNoIChvbGRWZXJzaW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYi5jcmVhdGVPYmplY3RTdG9yZShTVE9SRV9OQU1FKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pLmNhdGNoKGUgPT4ge1xyXG4gICAgICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcImlkYi1vcGVuXCIgLyogQXBwRXJyb3IuSURCX09QRU4gKi8sIHtcclxuICAgICAgICAgICAgICAgIG9yaWdpbmFsRXJyb3JNZXNzYWdlOiBlLm1lc3NhZ2VcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGJQcm9taXNlO1xyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIHJlYWRIZWFydGJlYXRzRnJvbUluZGV4ZWREQihhcHApIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZGIgPSBhd2FpdCBnZXREYlByb21pc2UoKTtcclxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYlxyXG4gICAgICAgICAgICAudHJhbnNhY3Rpb24oU1RPUkVfTkFNRSlcclxuICAgICAgICAgICAgLm9iamVjdFN0b3JlKFNUT1JFX05BTUUpXHJcbiAgICAgICAgICAgIC5nZXQoY29tcHV0ZUtleShhcHApKTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIEZpcmViYXNlRXJyb3IpIHtcclxuICAgICAgICAgICAgbG9nZ2VyLndhcm4oZS5tZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkYkdldEVycm9yID0gRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJpZGItZ2V0XCIgLyogQXBwRXJyb3IuSURCX0dFVCAqLywge1xyXG4gICAgICAgICAgICAgICAgb3JpZ2luYWxFcnJvck1lc3NhZ2U6IGUgPT09IG51bGwgfHwgZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZS5tZXNzYWdlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBsb2dnZXIud2FybihpZGJHZXRFcnJvci5tZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gd3JpdGVIZWFydGJlYXRzVG9JbmRleGVkREIoYXBwLCBoZWFydGJlYXRPYmplY3QpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZGIgPSBhd2FpdCBnZXREYlByb21pc2UoKTtcclxuICAgICAgICBjb25zdCB0eCA9IGRiLnRyYW5zYWN0aW9uKFNUT1JFX05BTUUsICdyZWFkd3JpdGUnKTtcclxuICAgICAgICBjb25zdCBvYmplY3RTdG9yZSA9IHR4Lm9iamVjdFN0b3JlKFNUT1JFX05BTUUpO1xyXG4gICAgICAgIGF3YWl0IG9iamVjdFN0b3JlLnB1dChoZWFydGJlYXRPYmplY3QsIGNvbXB1dGVLZXkoYXBwKSk7XHJcbiAgICAgICAgYXdhaXQgdHguZG9uZTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBGaXJlYmFzZUVycm9yKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci53YXJuKGUubWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBpZGJHZXRFcnJvciA9IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiaWRiLXNldFwiIC8qIEFwcEVycm9yLklEQl9XUklURSAqLywge1xyXG4gICAgICAgICAgICAgICAgb3JpZ2luYWxFcnJvck1lc3NhZ2U6IGUgPT09IG51bGwgfHwgZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZS5tZXNzYWdlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBsb2dnZXIud2FybihpZGJHZXRFcnJvci5tZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gY29tcHV0ZUtleShhcHApIHtcclxuICAgIHJldHVybiBgJHthcHAubmFtZX0hJHthcHAub3B0aW9ucy5hcHBJZH1gO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IE1BWF9IRUFERVJfQllURVMgPSAxMDI0O1xyXG4vLyAzMCBkYXlzXHJcbmNvbnN0IFNUT1JFRF9IRUFSVEJFQVRfUkVURU5USU9OX01BWF9NSUxMSVMgPSAzMCAqIDI0ICogNjAgKiA2MCAqIDEwMDA7XHJcbmNsYXNzIEhlYXJ0YmVhdFNlcnZpY2VJbXBsIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lcikge1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEluLW1lbW9yeSBjYWNoZSBmb3IgaGVhcnRiZWF0cywgdXNlZCBieSBnZXRIZWFydGJlYXRzSGVhZGVyKCkgdG8gZ2VuZXJhdGVcclxuICAgICAgICAgKiB0aGUgaGVhZGVyIHN0cmluZy5cclxuICAgICAgICAgKiBTdG9yZXMgb25lIHJlY29yZCBwZXIgZGF0ZS4gVGhpcyB3aWxsIGJlIGNvbnNvbGlkYXRlZCBpbnRvIHRoZSBzdGFuZGFyZFxyXG4gICAgICAgICAqIGZvcm1hdCBvZiBvbmUgcmVjb3JkIHBlciB1c2VyIGFnZW50IHN0cmluZyBiZWZvcmUgYmVpbmcgc2VudCBhcyBhIGhlYWRlci5cclxuICAgICAgICAgKiBQb3B1bGF0ZWQgZnJvbSBpbmRleGVkREIgd2hlbiB0aGUgY29udHJvbGxlciBpcyBpbnN0YW50aWF0ZWQgYW5kIHNob3VsZFxyXG4gICAgICAgICAqIGJlIGtlcHQgaW4gc3luYyB3aXRoIGluZGV4ZWREQi5cclxuICAgICAgICAgKiBMZWF2ZSBwdWJsaWMgZm9yIGVhc2llciB0ZXN0aW5nLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuX2hlYXJ0YmVhdHNDYWNoZSA9IG51bGw7XHJcbiAgICAgICAgY29uc3QgYXBwID0gdGhpcy5jb250YWluZXIuZ2V0UHJvdmlkZXIoJ2FwcCcpLmdldEltbWVkaWF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX3N0b3JhZ2UgPSBuZXcgSGVhcnRiZWF0U3RvcmFnZUltcGwoYXBwKTtcclxuICAgICAgICB0aGlzLl9oZWFydGJlYXRzQ2FjaGVQcm9taXNlID0gdGhpcy5fc3RvcmFnZS5yZWFkKCkudGhlbihyZXN1bHQgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oZWFydGJlYXRzQ2FjaGUgPSByZXN1bHQ7XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENhbGxlZCB0byByZXBvcnQgYSBoZWFydGJlYXQuIFRoZSBmdW5jdGlvbiB3aWxsIGdlbmVyYXRlXHJcbiAgICAgKiBhIEhlYXJ0YmVhdHNCeVVzZXJBZ2VudCBvYmplY3QsIHVwZGF0ZSBoZWFydGJlYXRzQ2FjaGUsIGFuZCBwZXJzaXN0IGl0XHJcbiAgICAgKiB0byBJbmRleGVkREIuXHJcbiAgICAgKiBOb3RlIHRoYXQgd2Ugb25seSBzdG9yZSBvbmUgaGVhcnRiZWF0IHBlciBkYXkuIFNvIGlmIGEgaGVhcnRiZWF0IGZvciB0b2RheSBpc1xyXG4gICAgICogYWxyZWFkeSBsb2dnZWQsIHN1YnNlcXVlbnQgY2FsbHMgdG8gdGhpcyBmdW5jdGlvbiBpbiB0aGUgc2FtZSBkYXkgd2lsbCBiZSBpZ25vcmVkLlxyXG4gICAgICovXHJcbiAgICBhc3luYyB0cmlnZ2VySGVhcnRiZWF0KCkge1xyXG4gICAgICAgIGNvbnN0IHBsYXRmb3JtTG9nZ2VyID0gdGhpcy5jb250YWluZXJcclxuICAgICAgICAgICAgLmdldFByb3ZpZGVyKCdwbGF0Zm9ybS1sb2dnZXInKVxyXG4gICAgICAgICAgICAuZ2V0SW1tZWRpYXRlKCk7XHJcbiAgICAgICAgLy8gVGhpcyBpcyB0aGUgXCJGaXJlYmFzZSB1c2VyIGFnZW50XCIgc3RyaW5nIGZyb20gdGhlIHBsYXRmb3JtIGxvZ2dlclxyXG4gICAgICAgIC8vIHNlcnZpY2UsIG5vdCB0aGUgYnJvd3NlciB1c2VyIGFnZW50LlxyXG4gICAgICAgIGNvbnN0IGFnZW50ID0gcGxhdGZvcm1Mb2dnZXIuZ2V0UGxhdGZvcm1JbmZvU3RyaW5nKCk7XHJcbiAgICAgICAgY29uc3QgZGF0ZSA9IGdldFVUQ0RhdGVTdHJpbmcoKTtcclxuICAgICAgICBpZiAodGhpcy5faGVhcnRiZWF0c0NhY2hlID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hlYXJ0YmVhdHNDYWNoZSA9IGF3YWl0IHRoaXMuX2hlYXJ0YmVhdHNDYWNoZVByb21pc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIERvIG5vdCBzdG9yZSBhIGhlYXJ0YmVhdCBpZiBvbmUgaXMgYWxyZWFkeSBzdG9yZWQgZm9yIHRoaXMgZGF5XHJcbiAgICAgICAgLy8gb3IgaWYgYSBoZWFkZXIgaGFzIGFscmVhZHkgYmVlbiBzZW50IHRvZGF5LlxyXG4gICAgICAgIGlmICh0aGlzLl9oZWFydGJlYXRzQ2FjaGUubGFzdFNlbnRIZWFydGJlYXREYXRlID09PSBkYXRlIHx8XHJcbiAgICAgICAgICAgIHRoaXMuX2hlYXJ0YmVhdHNDYWNoZS5oZWFydGJlYXRzLnNvbWUoc2luZ2xlRGF0ZUhlYXJ0YmVhdCA9PiBzaW5nbGVEYXRlSGVhcnRiZWF0LmRhdGUgPT09IGRhdGUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIFRoZXJlIGlzIG5vIGVudHJ5IGZvciB0aGlzIGRhdGUuIENyZWF0ZSBvbmUuXHJcbiAgICAgICAgICAgIHRoaXMuX2hlYXJ0YmVhdHNDYWNoZS5oZWFydGJlYXRzLnB1c2goeyBkYXRlLCBhZ2VudCB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gUmVtb3ZlIGVudHJpZXMgb2xkZXIgdGhhbiAzMCBkYXlzLlxyXG4gICAgICAgIHRoaXMuX2hlYXJ0YmVhdHNDYWNoZS5oZWFydGJlYXRzID0gdGhpcy5faGVhcnRiZWF0c0NhY2hlLmhlYXJ0YmVhdHMuZmlsdGVyKHNpbmdsZURhdGVIZWFydGJlYXQgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBoYlRpbWVzdGFtcCA9IG5ldyBEYXRlKHNpbmdsZURhdGVIZWFydGJlYXQuZGF0ZSkudmFsdWVPZigpO1xyXG4gICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICByZXR1cm4gbm93IC0gaGJUaW1lc3RhbXAgPD0gU1RPUkVEX0hFQVJUQkVBVF9SRVRFTlRJT05fTUFYX01JTExJUztcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc3RvcmFnZS5vdmVyd3JpdGUodGhpcy5faGVhcnRiZWF0c0NhY2hlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIGJhc2U2NCBlbmNvZGVkIHN0cmluZyB3aGljaCBjYW4gYmUgYXR0YWNoZWQgdG8gdGhlIGhlYXJ0YmVhdC1zcGVjaWZpYyBoZWFkZXIgZGlyZWN0bHkuXHJcbiAgICAgKiBJdCBhbHNvIGNsZWFycyBhbGwgaGVhcnRiZWF0cyBmcm9tIG1lbW9yeSBhcyB3ZWxsIGFzIGluIEluZGV4ZWREQi5cclxuICAgICAqXHJcbiAgICAgKiBOT1RFOiBDb25zdW1pbmcgcHJvZHVjdCBTREtzIHNob3VsZCBub3Qgc2VuZCB0aGUgaGVhZGVyIGlmIHRoaXMgbWV0aG9kXHJcbiAgICAgKiByZXR1cm5zIGFuIGVtcHR5IHN0cmluZy5cclxuICAgICAqL1xyXG4gICAgYXN5bmMgZ2V0SGVhcnRiZWF0c0hlYWRlcigpIHtcclxuICAgICAgICBpZiAodGhpcy5faGVhcnRiZWF0c0NhY2hlID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuX2hlYXJ0YmVhdHNDYWNoZVByb21pc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIElmIGl0J3Mgc3RpbGwgbnVsbCBvciB0aGUgYXJyYXkgaXMgZW1wdHksIHRoZXJlIGlzIG5vIGRhdGEgdG8gc2VuZC5cclxuICAgICAgICBpZiAodGhpcy5faGVhcnRiZWF0c0NhY2hlID09PSBudWxsIHx8XHJcbiAgICAgICAgICAgIHRoaXMuX2hlYXJ0YmVhdHNDYWNoZS5oZWFydGJlYXRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJyc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGRhdGUgPSBnZXRVVENEYXRlU3RyaW5nKCk7XHJcbiAgICAgICAgLy8gRXh0cmFjdCBhcyBtYW55IGhlYXJ0YmVhdHMgZnJvbSB0aGUgY2FjaGUgYXMgd2lsbCBmaXQgdW5kZXIgdGhlIHNpemUgbGltaXQuXHJcbiAgICAgICAgY29uc3QgeyBoZWFydGJlYXRzVG9TZW5kLCB1bnNlbnRFbnRyaWVzIH0gPSBleHRyYWN0SGVhcnRiZWF0c0ZvckhlYWRlcih0aGlzLl9oZWFydGJlYXRzQ2FjaGUuaGVhcnRiZWF0cyk7XHJcbiAgICAgICAgY29uc3QgaGVhZGVyU3RyaW5nID0gYmFzZTY0dXJsRW5jb2RlV2l0aG91dFBhZGRpbmcoSlNPTi5zdHJpbmdpZnkoeyB2ZXJzaW9uOiAyLCBoZWFydGJlYXRzOiBoZWFydGJlYXRzVG9TZW5kIH0pKTtcclxuICAgICAgICAvLyBTdG9yZSBsYXN0IHNlbnQgZGF0ZSB0byBwcmV2ZW50IGFub3RoZXIgYmVpbmcgbG9nZ2VkL3NlbnQgZm9yIHRoZSBzYW1lIGRheS5cclxuICAgICAgICB0aGlzLl9oZWFydGJlYXRzQ2FjaGUubGFzdFNlbnRIZWFydGJlYXREYXRlID0gZGF0ZTtcclxuICAgICAgICBpZiAodW5zZW50RW50cmllcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIC8vIFN0b3JlIGFueSB1bnNlbnQgZW50cmllcyBpZiB0aGV5IGV4aXN0LlxyXG4gICAgICAgICAgICB0aGlzLl9oZWFydGJlYXRzQ2FjaGUuaGVhcnRiZWF0cyA9IHVuc2VudEVudHJpZXM7XHJcbiAgICAgICAgICAgIC8vIFRoaXMgc2VlbXMgbW9yZSBsaWtlbHkgdGhhbiBlbXB0eWluZyB0aGUgYXJyYXkgKGJlbG93KSB0byBsZWFkIHRvIHNvbWUgb2RkIHN0YXRlXHJcbiAgICAgICAgICAgIC8vIHNpbmNlIHRoZSBjYWNoZSBpc24ndCBlbXB0eSBhbmQgdGhpcyB3aWxsIGJlIGNhbGxlZCBhZ2FpbiBvbiB0aGUgbmV4dCByZXF1ZXN0LFxyXG4gICAgICAgICAgICAvLyBhbmQgaXMgcHJvYmFibHkgc2FmZXN0IGlmIHdlIGF3YWl0IGl0LlxyXG4gICAgICAgICAgICBhd2FpdCB0aGlzLl9zdG9yYWdlLm92ZXJ3cml0ZSh0aGlzLl9oZWFydGJlYXRzQ2FjaGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5faGVhcnRiZWF0c0NhY2hlLmhlYXJ0YmVhdHMgPSBbXTtcclxuICAgICAgICAgICAgLy8gRG8gbm90IHdhaXQgZm9yIHRoaXMsIHRvIHJlZHVjZSBsYXRlbmN5LlxyXG4gICAgICAgICAgICB2b2lkIHRoaXMuX3N0b3JhZ2Uub3ZlcndyaXRlKHRoaXMuX2hlYXJ0YmVhdHNDYWNoZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBoZWFkZXJTdHJpbmc7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gZ2V0VVRDRGF0ZVN0cmluZygpIHtcclxuICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcclxuICAgIC8vIFJldHVybnMgZGF0ZSBmb3JtYXQgJ1lZWVktTU0tREQnXHJcbiAgICByZXR1cm4gdG9kYXkudG9JU09TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMTApO1xyXG59XHJcbmZ1bmN0aW9uIGV4dHJhY3RIZWFydGJlYXRzRm9ySGVhZGVyKGhlYXJ0YmVhdHNDYWNoZSwgbWF4U2l6ZSA9IE1BWF9IRUFERVJfQllURVMpIHtcclxuICAgIC8vIEhlYXJ0YmVhdHMgZ3JvdXBlZCBieSB1c2VyIGFnZW50IGluIHRoZSBzdGFuZGFyZCBmb3JtYXQgdG8gYmUgc2VudCBpblxyXG4gICAgLy8gdGhlIGhlYWRlci5cclxuICAgIGNvbnN0IGhlYXJ0YmVhdHNUb1NlbmQgPSBbXTtcclxuICAgIC8vIFNpbmdsZSBkYXRlIGZvcm1hdCBoZWFydGJlYXRzIHRoYXQgYXJlIG5vdCBzZW50LlxyXG4gICAgbGV0IHVuc2VudEVudHJpZXMgPSBoZWFydGJlYXRzQ2FjaGUuc2xpY2UoKTtcclxuICAgIGZvciAoY29uc3Qgc2luZ2xlRGF0ZUhlYXJ0YmVhdCBvZiBoZWFydGJlYXRzQ2FjaGUpIHtcclxuICAgICAgICAvLyBMb29rIGZvciBhbiBleGlzdGluZyBlbnRyeSB3aXRoIHRoZSBzYW1lIHVzZXIgYWdlbnQuXHJcbiAgICAgICAgY29uc3QgaGVhcnRiZWF0RW50cnkgPSBoZWFydGJlYXRzVG9TZW5kLmZpbmQoaGIgPT4gaGIuYWdlbnQgPT09IHNpbmdsZURhdGVIZWFydGJlYXQuYWdlbnQpO1xyXG4gICAgICAgIGlmICghaGVhcnRiZWF0RW50cnkpIHtcclxuICAgICAgICAgICAgLy8gSWYgbm8gZW50cnkgZm9yIHRoaXMgdXNlciBhZ2VudCBleGlzdHMsIGNyZWF0ZSBvbmUuXHJcbiAgICAgICAgICAgIGhlYXJ0YmVhdHNUb1NlbmQucHVzaCh7XHJcbiAgICAgICAgICAgICAgICBhZ2VudDogc2luZ2xlRGF0ZUhlYXJ0YmVhdC5hZ2VudCxcclxuICAgICAgICAgICAgICAgIGRhdGVzOiBbc2luZ2xlRGF0ZUhlYXJ0YmVhdC5kYXRlXVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaWYgKGNvdW50Qnl0ZXMoaGVhcnRiZWF0c1RvU2VuZCkgPiBtYXhTaXplKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgaGVhZGVyIHdvdWxkIGV4Y2VlZCBtYXggc2l6ZSwgcmVtb3ZlIHRoZSBhZGRlZCBoZWFydGJlYXRcclxuICAgICAgICAgICAgICAgIC8vIGVudHJ5IGFuZCBzdG9wIGFkZGluZyB0byB0aGUgaGVhZGVyLlxyXG4gICAgICAgICAgICAgICAgaGVhcnRiZWF0c1RvU2VuZC5wb3AoKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBoZWFydGJlYXRFbnRyeS5kYXRlcy5wdXNoKHNpbmdsZURhdGVIZWFydGJlYXQuZGF0ZSk7XHJcbiAgICAgICAgICAgIC8vIElmIHRoZSBoZWFkZXIgd291bGQgZXhjZWVkIG1heCBzaXplLCByZW1vdmUgdGhlIGFkZGVkIGRhdGVcclxuICAgICAgICAgICAgLy8gYW5kIHN0b3AgYWRkaW5nIHRvIHRoZSBoZWFkZXIuXHJcbiAgICAgICAgICAgIGlmIChjb3VudEJ5dGVzKGhlYXJ0YmVhdHNUb1NlbmQpID4gbWF4U2l6ZSkge1xyXG4gICAgICAgICAgICAgICAgaGVhcnRiZWF0RW50cnkuZGF0ZXMucG9wKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBQb3AgdW5zZW50IGVudHJ5IGZyb20gcXVldWUuIChTa2lwcGVkIGlmIGFkZGluZyB0aGUgZW50cnkgZXhjZWVkZWRcclxuICAgICAgICAvLyBxdW90YSBhbmQgdGhlIGxvb3AgYnJlYWtzIGVhcmx5LilcclxuICAgICAgICB1bnNlbnRFbnRyaWVzID0gdW5zZW50RW50cmllcy5zbGljZSgxKTtcclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaGVhcnRiZWF0c1RvU2VuZCxcclxuICAgICAgICB1bnNlbnRFbnRyaWVzXHJcbiAgICB9O1xyXG59XHJcbmNsYXNzIEhlYXJ0YmVhdFN0b3JhZ2VJbXBsIHtcclxuICAgIGNvbnN0cnVjdG9yKGFwcCkge1xyXG4gICAgICAgIHRoaXMuYXBwID0gYXBwO1xyXG4gICAgICAgIHRoaXMuX2NhblVzZUluZGV4ZWREQlByb21pc2UgPSB0aGlzLnJ1bkluZGV4ZWREQkVudmlyb25tZW50Q2hlY2soKTtcclxuICAgIH1cclxuICAgIGFzeW5jIHJ1bkluZGV4ZWREQkVudmlyb25tZW50Q2hlY2soKSB7XHJcbiAgICAgICAgaWYgKCFpc0luZGV4ZWREQkF2YWlsYWJsZSgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZUluZGV4ZWREQk9wZW5hYmxlKClcclxuICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHRydWUpXHJcbiAgICAgICAgICAgICAgICAuY2F0Y2goKCkgPT4gZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVhZCBhbGwgaGVhcnRiZWF0cy5cclxuICAgICAqL1xyXG4gICAgYXN5bmMgcmVhZCgpIHtcclxuICAgICAgICBjb25zdCBjYW5Vc2VJbmRleGVkREIgPSBhd2FpdCB0aGlzLl9jYW5Vc2VJbmRleGVkREJQcm9taXNlO1xyXG4gICAgICAgIGlmICghY2FuVXNlSW5kZXhlZERCKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IGhlYXJ0YmVhdHM6IFtdIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBpZGJIZWFydGJlYXRPYmplY3QgPSBhd2FpdCByZWFkSGVhcnRiZWF0c0Zyb21JbmRleGVkREIodGhpcy5hcHApO1xyXG4gICAgICAgICAgICByZXR1cm4gaWRiSGVhcnRiZWF0T2JqZWN0IHx8IHsgaGVhcnRiZWF0czogW10gfTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBvdmVyd3JpdGUgdGhlIHN0b3JhZ2Ugd2l0aCB0aGUgcHJvdmlkZWQgaGVhcnRiZWF0c1xyXG4gICAgYXN5bmMgb3ZlcndyaXRlKGhlYXJ0YmVhdHNPYmplY3QpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgY29uc3QgY2FuVXNlSW5kZXhlZERCID0gYXdhaXQgdGhpcy5fY2FuVXNlSW5kZXhlZERCUHJvbWlzZTtcclxuICAgICAgICBpZiAoIWNhblVzZUluZGV4ZWREQikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ0hlYXJ0YmVhdHNPYmplY3QgPSBhd2FpdCB0aGlzLnJlYWQoKTtcclxuICAgICAgICAgICAgcmV0dXJuIHdyaXRlSGVhcnRiZWF0c1RvSW5kZXhlZERCKHRoaXMuYXBwLCB7XHJcbiAgICAgICAgICAgICAgICBsYXN0U2VudEhlYXJ0YmVhdERhdGU6IChfYSA9IGhlYXJ0YmVhdHNPYmplY3QubGFzdFNlbnRIZWFydGJlYXREYXRlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBleGlzdGluZ0hlYXJ0YmVhdHNPYmplY3QubGFzdFNlbnRIZWFydGJlYXREYXRlLFxyXG4gICAgICAgICAgICAgICAgaGVhcnRiZWF0czogaGVhcnRiZWF0c09iamVjdC5oZWFydGJlYXRzXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIGFkZCBoZWFydGJlYXRzXHJcbiAgICBhc3luYyBhZGQoaGVhcnRiZWF0c09iamVjdCkge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICBjb25zdCBjYW5Vc2VJbmRleGVkREIgPSBhd2FpdCB0aGlzLl9jYW5Vc2VJbmRleGVkREJQcm9taXNlO1xyXG4gICAgICAgIGlmICghY2FuVXNlSW5kZXhlZERCKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nSGVhcnRiZWF0c09iamVjdCA9IGF3YWl0IHRoaXMucmVhZCgpO1xyXG4gICAgICAgICAgICByZXR1cm4gd3JpdGVIZWFydGJlYXRzVG9JbmRleGVkREIodGhpcy5hcHAsIHtcclxuICAgICAgICAgICAgICAgIGxhc3RTZW50SGVhcnRiZWF0RGF0ZTogKF9hID0gaGVhcnRiZWF0c09iamVjdC5sYXN0U2VudEhlYXJ0YmVhdERhdGUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGV4aXN0aW5nSGVhcnRiZWF0c09iamVjdC5sYXN0U2VudEhlYXJ0YmVhdERhdGUsXHJcbiAgICAgICAgICAgICAgICBoZWFydGJlYXRzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgLi4uZXhpc3RpbmdIZWFydGJlYXRzT2JqZWN0LmhlYXJ0YmVhdHMsXHJcbiAgICAgICAgICAgICAgICAgICAgLi4uaGVhcnRiZWF0c09iamVjdC5oZWFydGJlYXRzXHJcbiAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4vKipcclxuICogQ2FsY3VsYXRlIGJ5dGVzIG9mIGEgSGVhcnRiZWF0c0J5VXNlckFnZW50IGFycmF5IGFmdGVyIGJlaW5nIHdyYXBwZWRcclxuICogaW4gYSBwbGF0Zm9ybSBsb2dnaW5nIGhlYWRlciBKU09OIG9iamVjdCwgc3RyaW5naWZpZWQsIGFuZCBjb252ZXJ0ZWRcclxuICogdG8gYmFzZSA2NC5cclxuICovXHJcbmZ1bmN0aW9uIGNvdW50Qnl0ZXMoaGVhcnRiZWF0c0NhY2hlKSB7XHJcbiAgICAvLyBiYXNlNjQgaGFzIGEgcmVzdHJpY3RlZCBzZXQgb2YgY2hhcmFjdGVycywgYWxsIG9mIHdoaWNoIHNob3VsZCBiZSAxIGJ5dGUuXHJcbiAgICByZXR1cm4gYmFzZTY0dXJsRW5jb2RlV2l0aG91dFBhZGRpbmcoXHJcbiAgICAvLyBoZWFydGJlYXRzQ2FjaGUgd3JhcHBlciBwcm9wZXJ0aWVzXHJcbiAgICBKU09OLnN0cmluZ2lmeSh7IHZlcnNpb246IDIsIGhlYXJ0YmVhdHM6IGhlYXJ0YmVhdHNDYWNoZSB9KSkubGVuZ3RoO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIHJlZ2lzdGVyQ29yZUNvbXBvbmVudHModmFyaWFudCkge1xyXG4gICAgX3JlZ2lzdGVyQ29tcG9uZW50KG5ldyBDb21wb25lbnQoJ3BsYXRmb3JtLWxvZ2dlcicsIGNvbnRhaW5lciA9PiBuZXcgUGxhdGZvcm1Mb2dnZXJTZXJ2aWNlSW1wbChjb250YWluZXIpLCBcIlBSSVZBVEVcIiAvKiBDb21wb25lbnRUeXBlLlBSSVZBVEUgKi8pKTtcclxuICAgIF9yZWdpc3RlckNvbXBvbmVudChuZXcgQ29tcG9uZW50KCdoZWFydGJlYXQnLCBjb250YWluZXIgPT4gbmV3IEhlYXJ0YmVhdFNlcnZpY2VJbXBsKGNvbnRhaW5lciksIFwiUFJJVkFURVwiIC8qIENvbXBvbmVudFR5cGUuUFJJVkFURSAqLykpO1xyXG4gICAgLy8gUmVnaXN0ZXIgYGFwcGAgcGFja2FnZS5cclxuICAgIHJlZ2lzdGVyVmVyc2lvbihuYW1lJG8sIHZlcnNpb24kMSwgdmFyaWFudCk7XHJcbiAgICAvLyBCVUlMRF9UQVJHRVQgd2lsbCBiZSByZXBsYWNlZCBieSB2YWx1ZXMgbGlrZSBlc201LCBlc20yMDE3LCBjanM1LCBldGMgZHVyaW5nIHRoZSBjb21waWxhdGlvblxyXG4gICAgcmVnaXN0ZXJWZXJzaW9uKG5hbWUkbywgdmVyc2lvbiQxLCAnZXNtMjAxNycpO1xyXG4gICAgLy8gUmVnaXN0ZXIgcGxhdGZvcm0gU0RLIGlkZW50aWZpZXIgKG5vIHZlcnNpb24pLlxyXG4gICAgcmVnaXN0ZXJWZXJzaW9uKCdmaXJlLWpzJywgJycpO1xyXG59XG5cbi8qKlxyXG4gKiBGaXJlYmFzZSBBcHBcclxuICpcclxuICogQHJlbWFya3MgVGhpcyBwYWNrYWdlIGNvb3JkaW5hdGVzIHRoZSBjb21tdW5pY2F0aW9uIGJldHdlZW4gdGhlIGRpZmZlcmVudCBGaXJlYmFzZSBjb21wb25lbnRzXHJcbiAqIEBwYWNrYWdlRG9jdW1lbnRhdGlvblxyXG4gKi9cclxucmVnaXN0ZXJDb3JlQ29tcG9uZW50cygnJyk7XG5cbmV4cG9ydCB7IFNES19WRVJTSU9OLCBERUZBVUxUX0VOVFJZX05BTUUgYXMgX0RFRkFVTFRfRU5UUllfTkFNRSwgX2FkZENvbXBvbmVudCwgX2FkZE9yT3ZlcndyaXRlQ29tcG9uZW50LCBfYXBwcywgX2NsZWFyQ29tcG9uZW50cywgX2NvbXBvbmVudHMsIF9nZXRQcm92aWRlciwgX3JlZ2lzdGVyQ29tcG9uZW50LCBfcmVtb3ZlU2VydmljZUluc3RhbmNlLCBkZWxldGVBcHAsIGdldEFwcCwgZ2V0QXBwcywgaW5pdGlhbGl6ZUFwcCwgb25Mb2csIHJlZ2lzdGVyVmVyc2lvbiwgc2V0TG9nTGV2ZWwgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzbTIwMTcuanMubWFwXG4iLCJpbXBvcnQgeyBEZWZlcnJlZCB9IGZyb20gJ0BmaXJlYmFzZS91dGlsJztcblxuLyoqXHJcbiAqIENvbXBvbmVudCBmb3Igc2VydmljZSBuYW1lIFQsIGUuZy4gYGF1dGhgLCBgYXV0aC1pbnRlcm5hbGBcclxuICovXHJcbmNsYXNzIENvbXBvbmVudCB7XHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbmFtZSBUaGUgcHVibGljIHNlcnZpY2UgbmFtZSwgZS5nLiBhcHAsIGF1dGgsIGZpcmVzdG9yZSwgZGF0YWJhc2VcclxuICAgICAqIEBwYXJhbSBpbnN0YW5jZUZhY3RvcnkgU2VydmljZSBmYWN0b3J5IHJlc3BvbnNpYmxlIGZvciBjcmVhdGluZyB0aGUgcHVibGljIGludGVyZmFjZVxyXG4gICAgICogQHBhcmFtIHR5cGUgd2hldGhlciB0aGUgc2VydmljZSBwcm92aWRlZCBieSB0aGUgY29tcG9uZW50IGlzIHB1YmxpYyBvciBwcml2YXRlXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGluc3RhbmNlRmFjdG9yeSwgdHlwZSkge1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZUZhY3RvcnkgPSBpbnN0YW5jZUZhY3Rvcnk7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICB0aGlzLm11bHRpcGxlSW5zdGFuY2VzID0gZmFsc2U7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogUHJvcGVydGllcyB0byBiZSBhZGRlZCB0byB0aGUgc2VydmljZSBuYW1lc3BhY2VcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnNlcnZpY2VQcm9wcyA9IHt9O1xyXG4gICAgICAgIHRoaXMuaW5zdGFudGlhdGlvbk1vZGUgPSBcIkxBWllcIiAvKiBJbnN0YW50aWF0aW9uTW9kZS5MQVpZICovO1xyXG4gICAgICAgIHRoaXMub25JbnN0YW5jZUNyZWF0ZWQgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgc2V0SW5zdGFudGlhdGlvbk1vZGUobW9kZSkge1xyXG4gICAgICAgIHRoaXMuaW5zdGFudGlhdGlvbk1vZGUgPSBtb2RlO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgc2V0TXVsdGlwbGVJbnN0YW5jZXMobXVsdGlwbGVJbnN0YW5jZXMpIHtcclxuICAgICAgICB0aGlzLm11bHRpcGxlSW5zdGFuY2VzID0gbXVsdGlwbGVJbnN0YW5jZXM7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICBzZXRTZXJ2aWNlUHJvcHMocHJvcHMpIHtcclxuICAgICAgICB0aGlzLnNlcnZpY2VQcm9wcyA9IHByb3BzO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgc2V0SW5zdGFuY2VDcmVhdGVkQ2FsbGJhY2soY2FsbGJhY2spIHtcclxuICAgICAgICB0aGlzLm9uSW5zdGFuY2VDcmVhdGVkID0gY2FsbGJhY2s7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgREVGQVVMVF9FTlRSWV9OQU1FID0gJ1tERUZBVUxUXSc7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBQcm92aWRlciBmb3IgaW5zdGFuY2UgZm9yIHNlcnZpY2UgbmFtZSBULCBlLmcuICdhdXRoJywgJ2F1dGgtaW50ZXJuYWwnXHJcbiAqIE5hbWVTZXJ2aWNlTWFwcGluZ1tUXSBpcyBhbiBhbGlhcyBmb3IgdGhlIHR5cGUgb2YgdGhlIGluc3RhbmNlXHJcbiAqL1xyXG5jbGFzcyBQcm92aWRlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBjb250YWluZXIpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmluc3RhbmNlcyA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLmluc3RhbmNlc0RlZmVycmVkID0gbmV3IE1hcCgpO1xyXG4gICAgICAgIHRoaXMuaW5zdGFuY2VzT3B0aW9ucyA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLm9uSW5pdENhbGxiYWNrcyA9IG5ldyBNYXAoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIGlkZW50aWZpZXIgQSBwcm92aWRlciBjYW4gcHJvdmlkZSBtdWxpdHBsZSBpbnN0YW5jZXMgb2YgYSBzZXJ2aWNlXHJcbiAgICAgKiBpZiB0aGlzLmNvbXBvbmVudC5tdWx0aXBsZUluc3RhbmNlcyBpcyB0cnVlLlxyXG4gICAgICovXHJcbiAgICBnZXQoaWRlbnRpZmllcikge1xyXG4gICAgICAgIC8vIGlmIG11bHRpcGxlSW5zdGFuY2VzIGlzIG5vdCBzdXBwb3J0ZWQsIHVzZSB0aGUgZGVmYXVsdCBuYW1lXHJcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplZElkZW50aWZpZXIgPSB0aGlzLm5vcm1hbGl6ZUluc3RhbmNlSWRlbnRpZmllcihpZGVudGlmaWVyKTtcclxuICAgICAgICBpZiAoIXRoaXMuaW5zdGFuY2VzRGVmZXJyZWQuaGFzKG5vcm1hbGl6ZWRJZGVudGlmaWVyKSkge1xyXG4gICAgICAgICAgICBjb25zdCBkZWZlcnJlZCA9IG5ldyBEZWZlcnJlZCgpO1xyXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlc0RlZmVycmVkLnNldChub3JtYWxpemVkSWRlbnRpZmllciwgZGVmZXJyZWQpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0luaXRpYWxpemVkKG5vcm1hbGl6ZWRJZGVudGlmaWVyKSB8fFxyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG91bGRBdXRvSW5pdGlhbGl6ZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBpbml0aWFsaXplIHRoZSBzZXJ2aWNlIGlmIGl0IGNhbiBiZSBhdXRvLWluaXRpYWxpemVkXHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGluc3RhbmNlID0gdGhpcy5nZXRPckluaXRpYWxpemVTZXJ2aWNlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2VJZGVudGlmaWVyOiBub3JtYWxpemVkSWRlbnRpZmllclxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnN0YW5jZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGluc3RhbmNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHdoZW4gdGhlIGluc3RhbmNlIGZhY3RvcnkgdGhyb3dzIGFuIGV4Y2VwdGlvbiBkdXJpbmcgZ2V0KCksIGl0IHNob3VsZCBub3QgY2F1c2VcclxuICAgICAgICAgICAgICAgICAgICAvLyBhIGZhdGFsIGVycm9yLiBXZSBqdXN0IHJldHVybiB0aGUgdW5yZXNvbHZlZCBwcm9taXNlIGluIHRoaXMgY2FzZS5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZXNEZWZlcnJlZC5nZXQobm9ybWFsaXplZElkZW50aWZpZXIpLnByb21pc2U7XHJcbiAgICB9XHJcbiAgICBnZXRJbW1lZGlhdGUob3B0aW9ucykge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICAvLyBpZiBtdWx0aXBsZUluc3RhbmNlcyBpcyBub3Qgc3VwcG9ydGVkLCB1c2UgdGhlIGRlZmF1bHQgbmFtZVxyXG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRJZGVudGlmaWVyID0gdGhpcy5ub3JtYWxpemVJbnN0YW5jZUlkZW50aWZpZXIob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmlkZW50aWZpZXIpO1xyXG4gICAgICAgIGNvbnN0IG9wdGlvbmFsID0gKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm9wdGlvbmFsKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBmYWxzZTtcclxuICAgICAgICBpZiAodGhpcy5pc0luaXRpYWxpemVkKG5vcm1hbGl6ZWRJZGVudGlmaWVyKSB8fFxyXG4gICAgICAgICAgICB0aGlzLnNob3VsZEF1dG9Jbml0aWFsaXplKCkpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldE9ySW5pdGlhbGl6ZVNlcnZpY2Uoe1xyXG4gICAgICAgICAgICAgICAgICAgIGluc3RhbmNlSWRlbnRpZmllcjogbm9ybWFsaXplZElkZW50aWZpZXJcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAob3B0aW9uYWwpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIEluIGNhc2UgYSBjb21wb25lbnQgaXMgbm90IGluaXRpYWxpemVkIGFuZCBzaG91bGQvY2FuIG5vdCBiZSBhdXRvLWluaXRpYWxpemVkIGF0IHRoZSBtb21lbnQsIHJldHVybiBudWxsIGlmIHRoZSBvcHRpb25hbCBmbGFnIGlzIHNldCwgb3IgdGhyb3dcclxuICAgICAgICAgICAgaWYgKG9wdGlvbmFsKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKGBTZXJ2aWNlICR7dGhpcy5uYW1lfSBpcyBub3QgYXZhaWxhYmxlYCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBnZXRDb21wb25lbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcG9uZW50O1xyXG4gICAgfVxyXG4gICAgc2V0Q29tcG9uZW50KGNvbXBvbmVudCkge1xyXG4gICAgICAgIGlmIChjb21wb25lbnQubmFtZSAhPT0gdGhpcy5uYW1lKSB7XHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBNaXNtYXRjaGluZyBDb21wb25lbnQgJHtjb21wb25lbnQubmFtZX0gZm9yIFByb3ZpZGVyICR7dGhpcy5uYW1lfS5gKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuY29tcG9uZW50KSB7XHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBDb21wb25lbnQgZm9yICR7dGhpcy5uYW1lfSBoYXMgYWxyZWFkeSBiZWVuIHByb3ZpZGVkYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY29tcG9uZW50ID0gY29tcG9uZW50O1xyXG4gICAgICAgIC8vIHJldHVybiBlYXJseSB3aXRob3V0IGF0dGVtcHRpbmcgdG8gaW5pdGlhbGl6ZSB0aGUgY29tcG9uZW50IGlmIHRoZSBjb21wb25lbnQgcmVxdWlyZXMgZXhwbGljaXQgaW5pdGlhbGl6YXRpb24gKGNhbGxpbmcgYFByb3ZpZGVyLmluaXRpYWxpemUoKWApXHJcbiAgICAgICAgaWYgKCF0aGlzLnNob3VsZEF1dG9Jbml0aWFsaXplKCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpZiB0aGUgc2VydmljZSBpcyBlYWdlciwgaW5pdGlhbGl6ZSB0aGUgZGVmYXVsdCBpbnN0YW5jZVxyXG4gICAgICAgIGlmIChpc0NvbXBvbmVudEVhZ2VyKGNvbXBvbmVudCkpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0T3JJbml0aWFsaXplU2VydmljZSh7IGluc3RhbmNlSWRlbnRpZmllcjogREVGQVVMVF9FTlRSWV9OQU1FIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAvLyB3aGVuIHRoZSBpbnN0YW5jZSBmYWN0b3J5IGZvciBhbiBlYWdlciBDb21wb25lbnQgdGhyb3dzIGFuIGV4Y2VwdGlvbiBkdXJpbmcgdGhlIGVhZ2VyXHJcbiAgICAgICAgICAgICAgICAvLyBpbml0aWFsaXphdGlvbiwgaXQgc2hvdWxkIG5vdCBjYXVzZSBhIGZhdGFsIGVycm9yLlxyXG4gICAgICAgICAgICAgICAgLy8gVE9ETzogSW52ZXN0aWdhdGUgaWYgd2UgbmVlZCB0byBtYWtlIGl0IGNvbmZpZ3VyYWJsZSwgYmVjYXVzZSBzb21lIGNvbXBvbmVudCBtYXkgd2FudCB0byBjYXVzZVxyXG4gICAgICAgICAgICAgICAgLy8gYSBmYXRhbCBlcnJvciBpbiB0aGlzIGNhc2U/XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQ3JlYXRlIHNlcnZpY2UgaW5zdGFuY2VzIGZvciB0aGUgcGVuZGluZyBwcm9taXNlcyBhbmQgcmVzb2x2ZSB0aGVtXHJcbiAgICAgICAgLy8gTk9URTogaWYgdGhpcy5tdWx0aXBsZUluc3RhbmNlcyBpcyBmYWxzZSwgb25seSB0aGUgZGVmYXVsdCBpbnN0YW5jZSB3aWxsIGJlIGNyZWF0ZWRcclxuICAgICAgICAvLyBhbmQgYWxsIHByb21pc2VzIHdpdGggcmVzb2x2ZSB3aXRoIGl0IHJlZ2FyZGxlc3Mgb2YgdGhlIGlkZW50aWZpZXIuXHJcbiAgICAgICAgZm9yIChjb25zdCBbaW5zdGFuY2VJZGVudGlmaWVyLCBpbnN0YW5jZURlZmVycmVkXSBvZiB0aGlzLmluc3RhbmNlc0RlZmVycmVkLmVudHJpZXMoKSkge1xyXG4gICAgICAgICAgICBjb25zdCBub3JtYWxpemVkSWRlbnRpZmllciA9IHRoaXMubm9ybWFsaXplSW5zdGFuY2VJZGVudGlmaWVyKGluc3RhbmNlSWRlbnRpZmllcik7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAvLyBgZ2V0T3JJbml0aWFsaXplU2VydmljZSgpYCBzaG91bGQgYWx3YXlzIHJldHVybiBhIHZhbGlkIGluc3RhbmNlIHNpbmNlIGEgY29tcG9uZW50IGlzIGd1YXJhbnRlZWQuIHVzZSAhIHRvIG1ha2UgdHlwZXNjcmlwdCBoYXBweS5cclxuICAgICAgICAgICAgICAgIGNvbnN0IGluc3RhbmNlID0gdGhpcy5nZXRPckluaXRpYWxpemVTZXJ2aWNlKHtcclxuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZUlkZW50aWZpZXI6IG5vcm1hbGl6ZWRJZGVudGlmaWVyXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGluc3RhbmNlRGVmZXJyZWQucmVzb2x2ZShpbnN0YW5jZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIC8vIHdoZW4gdGhlIGluc3RhbmNlIGZhY3RvcnkgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgaXQgc2hvdWxkIG5vdCBjYXVzZVxyXG4gICAgICAgICAgICAgICAgLy8gYSBmYXRhbCBlcnJvci4gV2UganVzdCBsZWF2ZSB0aGUgcHJvbWlzZSB1bnJlc29sdmVkLlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgY2xlYXJJbnN0YW5jZShpZGVudGlmaWVyID0gREVGQVVMVF9FTlRSWV9OQU1FKSB7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZXNEZWZlcnJlZC5kZWxldGUoaWRlbnRpZmllcik7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZXNPcHRpb25zLmRlbGV0ZShpZGVudGlmaWVyKTtcclxuICAgICAgICB0aGlzLmluc3RhbmNlcy5kZWxldGUoaWRlbnRpZmllcik7XHJcbiAgICB9XHJcbiAgICAvLyBhcHAuZGVsZXRlKCkgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIG9uIGV2ZXJ5IHByb3ZpZGVyIHRvIGRlbGV0ZSB0aGUgc2VydmljZXNcclxuICAgIC8vIFRPRE86IHNob3VsZCB3ZSBtYXJrIHRoZSBwcm92aWRlciBhcyBkZWxldGVkP1xyXG4gICAgYXN5bmMgZGVsZXRlKCkge1xyXG4gICAgICAgIGNvbnN0IHNlcnZpY2VzID0gQXJyYXkuZnJvbSh0aGlzLmluc3RhbmNlcy52YWx1ZXMoKSk7XHJcbiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgICAgICAgICAuLi5zZXJ2aWNlc1xyXG4gICAgICAgICAgICAgICAgLmZpbHRlcihzZXJ2aWNlID0+ICdJTlRFUk5BTCcgaW4gc2VydmljZSkgLy8gbGVnYWN5IHNlcnZpY2VzXHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICAgICAgLm1hcChzZXJ2aWNlID0+IHNlcnZpY2UuSU5URVJOQUwuZGVsZXRlKCkpLFxyXG4gICAgICAgICAgICAuLi5zZXJ2aWNlc1xyXG4gICAgICAgICAgICAgICAgLmZpbHRlcihzZXJ2aWNlID0+ICdfZGVsZXRlJyBpbiBzZXJ2aWNlKSAvLyBtb2R1bGFyaXplZCBzZXJ2aWNlc1xyXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuICAgICAgICAgICAgICAgIC5tYXAoc2VydmljZSA9PiBzZXJ2aWNlLl9kZWxldGUoKSlcclxuICAgICAgICBdKTtcclxuICAgIH1cclxuICAgIGlzQ29tcG9uZW50U2V0KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBvbmVudCAhPSBudWxsO1xyXG4gICAgfVxyXG4gICAgaXNJbml0aWFsaXplZChpZGVudGlmaWVyID0gREVGQVVMVF9FTlRSWV9OQU1FKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2VzLmhhcyhpZGVudGlmaWVyKTtcclxuICAgIH1cclxuICAgIGdldE9wdGlvbnMoaWRlbnRpZmllciA9IERFRkFVTFRfRU5UUllfTkFNRSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmluc3RhbmNlc09wdGlvbnMuZ2V0KGlkZW50aWZpZXIpIHx8IHt9O1xyXG4gICAgfVxyXG4gICAgaW5pdGlhbGl6ZShvcHRzID0ge30pIHtcclxuICAgICAgICBjb25zdCB7IG9wdGlvbnMgPSB7fSB9ID0gb3B0cztcclxuICAgICAgICBjb25zdCBub3JtYWxpemVkSWRlbnRpZmllciA9IHRoaXMubm9ybWFsaXplSW5zdGFuY2VJZGVudGlmaWVyKG9wdHMuaW5zdGFuY2VJZGVudGlmaWVyKTtcclxuICAgICAgICBpZiAodGhpcy5pc0luaXRpYWxpemVkKG5vcm1hbGl6ZWRJZGVudGlmaWVyKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgJHt0aGlzLm5hbWV9KCR7bm9ybWFsaXplZElkZW50aWZpZXJ9KSBoYXMgYWxyZWFkeSBiZWVuIGluaXRpYWxpemVkYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5pc0NvbXBvbmVudFNldCgpKSB7XHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBDb21wb25lbnQgJHt0aGlzLm5hbWV9IGhhcyBub3QgYmVlbiByZWdpc3RlcmVkIHlldGApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBpbnN0YW5jZSA9IHRoaXMuZ2V0T3JJbml0aWFsaXplU2VydmljZSh7XHJcbiAgICAgICAgICAgIGluc3RhbmNlSWRlbnRpZmllcjogbm9ybWFsaXplZElkZW50aWZpZXIsXHJcbiAgICAgICAgICAgIG9wdGlvbnNcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyByZXNvbHZlIGFueSBwZW5kaW5nIHByb21pc2Ugd2FpdGluZyBmb3IgdGhlIHNlcnZpY2UgaW5zdGFuY2VcclxuICAgICAgICBmb3IgKGNvbnN0IFtpbnN0YW5jZUlkZW50aWZpZXIsIGluc3RhbmNlRGVmZXJyZWRdIG9mIHRoaXMuaW5zdGFuY2VzRGVmZXJyZWQuZW50cmllcygpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5vcm1hbGl6ZWREZWZlcnJlZElkZW50aWZpZXIgPSB0aGlzLm5vcm1hbGl6ZUluc3RhbmNlSWRlbnRpZmllcihpbnN0YW5jZUlkZW50aWZpZXIpO1xyXG4gICAgICAgICAgICBpZiAobm9ybWFsaXplZElkZW50aWZpZXIgPT09IG5vcm1hbGl6ZWREZWZlcnJlZElkZW50aWZpZXIpIHtcclxuICAgICAgICAgICAgICAgIGluc3RhbmNlRGVmZXJyZWQucmVzb2x2ZShpbnN0YW5jZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gYSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgaW52b2tlZCAgYWZ0ZXIgdGhlIHByb3ZpZGVyIGhhcyBiZWVuIGluaXRpYWxpemVkIGJ5IGNhbGxpbmcgcHJvdmlkZXIuaW5pdGlhbGl6ZSgpLlxyXG4gICAgICogVGhlIGZ1bmN0aW9uIGlzIGludm9rZWQgU1lOQ0hST05PVVNMWSwgc28gaXQgc2hvdWxkIG5vdCBleGVjdXRlIGFueSBsb25ncnVubmluZyB0YXNrcyBpbiBvcmRlciB0byBub3QgYmxvY2sgdGhlIHByb2dyYW0uXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGlkZW50aWZpZXIgQW4gb3B0aW9uYWwgaW5zdGFuY2UgaWRlbnRpZmllclxyXG4gICAgICogQHJldHVybnMgYSBmdW5jdGlvbiB0byB1bnJlZ2lzdGVyIHRoZSBjYWxsYmFja1xyXG4gICAgICovXHJcbiAgICBvbkluaXQoY2FsbGJhY2ssIGlkZW50aWZpZXIpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplZElkZW50aWZpZXIgPSB0aGlzLm5vcm1hbGl6ZUluc3RhbmNlSWRlbnRpZmllcihpZGVudGlmaWVyKTtcclxuICAgICAgICBjb25zdCBleGlzdGluZ0NhbGxiYWNrcyA9IChfYSA9IHRoaXMub25Jbml0Q2FsbGJhY2tzLmdldChub3JtYWxpemVkSWRlbnRpZmllcikpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG5ldyBTZXQoKTtcclxuICAgICAgICBleGlzdGluZ0NhbGxiYWNrcy5hZGQoY2FsbGJhY2spO1xyXG4gICAgICAgIHRoaXMub25Jbml0Q2FsbGJhY2tzLnNldChub3JtYWxpemVkSWRlbnRpZmllciwgZXhpc3RpbmdDYWxsYmFja3MpO1xyXG4gICAgICAgIGNvbnN0IGV4aXN0aW5nSW5zdGFuY2UgPSB0aGlzLmluc3RhbmNlcy5nZXQobm9ybWFsaXplZElkZW50aWZpZXIpO1xyXG4gICAgICAgIGlmIChleGlzdGluZ0luc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIGNhbGxiYWNrKGV4aXN0aW5nSW5zdGFuY2UsIG5vcm1hbGl6ZWRJZGVudGlmaWVyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICAgICAgZXhpc3RpbmdDYWxsYmFja3MuZGVsZXRlKGNhbGxiYWNrKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBJbnZva2Ugb25Jbml0IGNhbGxiYWNrcyBzeW5jaHJvbm91c2x5XHJcbiAgICAgKiBAcGFyYW0gaW5zdGFuY2UgdGhlIHNlcnZpY2UgaW5zdGFuY2VgXHJcbiAgICAgKi9cclxuICAgIGludm9rZU9uSW5pdENhbGxiYWNrcyhpbnN0YW5jZSwgaWRlbnRpZmllcikge1xyXG4gICAgICAgIGNvbnN0IGNhbGxiYWNrcyA9IHRoaXMub25Jbml0Q2FsbGJhY2tzLmdldChpZGVudGlmaWVyKTtcclxuICAgICAgICBpZiAoIWNhbGxiYWNrcykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAoY29uc3QgY2FsbGJhY2sgb2YgY2FsbGJhY2tzKSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhpbnN0YW5jZSwgaWRlbnRpZmllcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKF9hKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBpZ25vcmUgZXJyb3JzIGluIHRoZSBvbkluaXQgY2FsbGJhY2tcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGdldE9ySW5pdGlhbGl6ZVNlcnZpY2UoeyBpbnN0YW5jZUlkZW50aWZpZXIsIG9wdGlvbnMgPSB7fSB9KSB7XHJcbiAgICAgICAgbGV0IGluc3RhbmNlID0gdGhpcy5pbnN0YW5jZXMuZ2V0KGluc3RhbmNlSWRlbnRpZmllcik7XHJcbiAgICAgICAgaWYgKCFpbnN0YW5jZSAmJiB0aGlzLmNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICBpbnN0YW5jZSA9IHRoaXMuY29tcG9uZW50Lmluc3RhbmNlRmFjdG9yeSh0aGlzLmNvbnRhaW5lciwge1xyXG4gICAgICAgICAgICAgICAgaW5zdGFuY2VJZGVudGlmaWVyOiBub3JtYWxpemVJZGVudGlmaWVyRm9yRmFjdG9yeShpbnN0YW5jZUlkZW50aWZpZXIpLFxyXG4gICAgICAgICAgICAgICAgb3B0aW9uc1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZXMuc2V0KGluc3RhbmNlSWRlbnRpZmllciwgaW5zdGFuY2UpO1xyXG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlc09wdGlvbnMuc2V0KGluc3RhbmNlSWRlbnRpZmllciwgb3B0aW9ucyk7XHJcbiAgICAgICAgICAgIC8qKlxyXG4gICAgICAgICAgICAgKiBJbnZva2Ugb25Jbml0IGxpc3RlbmVycy5cclxuICAgICAgICAgICAgICogTm90ZSB0aGlzLmNvbXBvbmVudC5vbkluc3RhbmNlQ3JlYXRlZCBpcyBkaWZmZXJlbnQsIHdoaWNoIGlzIHVzZWQgYnkgdGhlIGNvbXBvbmVudCBjcmVhdG9yLFxyXG4gICAgICAgICAgICAgKiB3aGlsZSBvbkluaXQgbGlzdGVuZXJzIGFyZSByZWdpc3RlcmVkIGJ5IGNvbnN1bWVycyBvZiB0aGUgcHJvdmlkZXIuXHJcbiAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICB0aGlzLmludm9rZU9uSW5pdENhbGxiYWNrcyhpbnN0YW5jZSwgaW5zdGFuY2VJZGVudGlmaWVyKTtcclxuICAgICAgICAgICAgLyoqXHJcbiAgICAgICAgICAgICAqIE9yZGVyIGlzIGltcG9ydGFudFxyXG4gICAgICAgICAgICAgKiBvbkluc3RhbmNlQ3JlYXRlZCgpIHNob3VsZCBiZSBjYWxsZWQgYWZ0ZXIgdGhpcy5pbnN0YW5jZXMuc2V0KGluc3RhbmNlSWRlbnRpZmllciwgaW5zdGFuY2UpOyB3aGljaFxyXG4gICAgICAgICAgICAgKiBtYWtlcyBgaXNJbml0aWFsaXplZCgpYCByZXR1cm4gdHJ1ZS5cclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbXBvbmVudC5vbkluc3RhbmNlQ3JlYXRlZCkge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbXBvbmVudC5vbkluc3RhbmNlQ3JlYXRlZCh0aGlzLmNvbnRhaW5lciwgaW5zdGFuY2VJZGVudGlmaWVyLCBpbnN0YW5jZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXRjaCAoX2EpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBpZ25vcmUgZXJyb3JzIGluIHRoZSBvbkluc3RhbmNlQ3JlYXRlZENhbGxiYWNrXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlIHx8IG51bGw7XHJcbiAgICB9XHJcbiAgICBub3JtYWxpemVJbnN0YW5jZUlkZW50aWZpZXIoaWRlbnRpZmllciA9IERFRkFVTFRfRU5UUllfTkFNRSkge1xyXG4gICAgICAgIGlmICh0aGlzLmNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb21wb25lbnQubXVsdGlwbGVJbnN0YW5jZXMgPyBpZGVudGlmaWVyIDogREVGQVVMVF9FTlRSWV9OQU1FO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGlkZW50aWZpZXI7IC8vIGFzc3VtZSBtdWx0aXBsZSBpbnN0YW5jZXMgYXJlIHN1cHBvcnRlZCBiZWZvcmUgdGhlIGNvbXBvbmVudCBpcyBwcm92aWRlZC5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBzaG91bGRBdXRvSW5pdGlhbGl6ZSgpIHtcclxuICAgICAgICByZXR1cm4gKCEhdGhpcy5jb21wb25lbnQgJiZcclxuICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuaW5zdGFudGlhdGlvbk1vZGUgIT09IFwiRVhQTElDSVRcIiAvKiBJbnN0YW50aWF0aW9uTW9kZS5FWFBMSUNJVCAqLyk7XHJcbiAgICB9XHJcbn1cclxuLy8gdW5kZWZpbmVkIHNob3VsZCBiZSBwYXNzZWQgdG8gdGhlIHNlcnZpY2UgZmFjdG9yeSBmb3IgdGhlIGRlZmF1bHQgaW5zdGFuY2VcclxuZnVuY3Rpb24gbm9ybWFsaXplSWRlbnRpZmllckZvckZhY3RvcnkoaWRlbnRpZmllcikge1xyXG4gICAgcmV0dXJuIGlkZW50aWZpZXIgPT09IERFRkFVTFRfRU5UUllfTkFNRSA/IHVuZGVmaW5lZCA6IGlkZW50aWZpZXI7XHJcbn1cclxuZnVuY3Rpb24gaXNDb21wb25lbnRFYWdlcihjb21wb25lbnQpIHtcclxuICAgIHJldHVybiBjb21wb25lbnQuaW5zdGFudGlhdGlvbk1vZGUgPT09IFwiRUFHRVJcIiAvKiBJbnN0YW50aWF0aW9uTW9kZS5FQUdFUiAqLztcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQ29tcG9uZW50Q29udGFpbmVyIHRoYXQgcHJvdmlkZXMgUHJvdmlkZXJzIGZvciBzZXJ2aWNlIG5hbWUgVCwgZS5nLiBgYXV0aGAsIGBhdXRoLWludGVybmFsYFxyXG4gKi9cclxuY2xhc3MgQ29tcG9uZW50Q29udGFpbmVyIHtcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMucHJvdmlkZXJzID0gbmV3IE1hcCgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNvbXBvbmVudCBDb21wb25lbnQgYmVpbmcgYWRkZWRcclxuICAgICAqIEBwYXJhbSBvdmVyd3JpdGUgV2hlbiBhIGNvbXBvbmVudCB3aXRoIHRoZSBzYW1lIG5hbWUgaGFzIGFscmVhZHkgYmVlbiByZWdpc3RlcmVkLFxyXG4gICAgICogaWYgb3ZlcndyaXRlIGlzIHRydWU6IG92ZXJ3cml0ZSB0aGUgZXhpc3RpbmcgY29tcG9uZW50IHdpdGggdGhlIG5ldyBjb21wb25lbnQgYW5kIGNyZWF0ZSBhIG5ld1xyXG4gICAgICogcHJvdmlkZXIgd2l0aCB0aGUgbmV3IGNvbXBvbmVudC4gSXQgY2FuIGJlIHVzZWZ1bCBpbiB0ZXN0cyB3aGVyZSB5b3Ugd2FudCB0byB1c2UgZGlmZmVyZW50IG1vY2tzXHJcbiAgICAgKiBmb3IgZGlmZmVyZW50IHRlc3RzLlxyXG4gICAgICogaWYgb3ZlcndyaXRlIGlzIGZhbHNlOiB0aHJvdyBhbiBleGNlcHRpb25cclxuICAgICAqL1xyXG4gICAgYWRkQ29tcG9uZW50KGNvbXBvbmVudCkge1xyXG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gdGhpcy5nZXRQcm92aWRlcihjb21wb25lbnQubmFtZSk7XHJcbiAgICAgICAgaWYgKHByb3ZpZGVyLmlzQ29tcG9uZW50U2V0KCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb21wb25lbnQgJHtjb21wb25lbnQubmFtZX0gaGFzIGFscmVhZHkgYmVlbiByZWdpc3RlcmVkIHdpdGggJHt0aGlzLm5hbWV9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHByb3ZpZGVyLnNldENvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgfVxyXG4gICAgYWRkT3JPdmVyd3JpdGVDb21wb25lbnQoY29tcG9uZW50KSB7XHJcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSB0aGlzLmdldFByb3ZpZGVyKGNvbXBvbmVudC5uYW1lKTtcclxuICAgICAgICBpZiAocHJvdmlkZXIuaXNDb21wb25lbnRTZXQoKSkge1xyXG4gICAgICAgICAgICAvLyBkZWxldGUgdGhlIGV4aXN0aW5nIHByb3ZpZGVyIGZyb20gdGhlIGNvbnRhaW5lciwgc28gd2UgY2FuIHJlZ2lzdGVyIHRoZSBuZXcgY29tcG9uZW50XHJcbiAgICAgICAgICAgIHRoaXMucHJvdmlkZXJzLmRlbGV0ZShjb21wb25lbnQubmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYWRkQ29tcG9uZW50KGNvbXBvbmVudCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIGdldFByb3ZpZGVyIHByb3ZpZGVzIGEgdHlwZSBzYWZlIGludGVyZmFjZSB3aGVyZSBpdCBjYW4gb25seSBiZSBjYWxsZWQgd2l0aCBhIGZpZWxkIG5hbWVcclxuICAgICAqIHByZXNlbnQgaW4gTmFtZVNlcnZpY2VNYXBwaW5nIGludGVyZmFjZS5cclxuICAgICAqXHJcbiAgICAgKiBGaXJlYmFzZSBTREtzIHByb3ZpZGluZyBzZXJ2aWNlcyBzaG91bGQgZXh0ZW5kIE5hbWVTZXJ2aWNlTWFwcGluZyBpbnRlcmZhY2UgdG8gcmVnaXN0ZXJcclxuICAgICAqIHRoZW1zZWx2ZXMuXHJcbiAgICAgKi9cclxuICAgIGdldFByb3ZpZGVyKG5hbWUpIHtcclxuICAgICAgICBpZiAodGhpcy5wcm92aWRlcnMuaGFzKG5hbWUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByb3ZpZGVycy5nZXQobmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGNyZWF0ZSBhIFByb3ZpZGVyIGZvciBhIHNlcnZpY2UgdGhhdCBoYXNuJ3QgcmVnaXN0ZXJlZCB3aXRoIEZpcmViYXNlXHJcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgUHJvdmlkZXIobmFtZSwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5wcm92aWRlcnMuc2V0KG5hbWUsIHByb3ZpZGVyKTtcclxuICAgICAgICByZXR1cm4gcHJvdmlkZXI7XHJcbiAgICB9XHJcbiAgICBnZXRQcm92aWRlcnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5wcm92aWRlcnMudmFsdWVzKCkpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IENvbXBvbmVudCwgQ29tcG9uZW50Q29udGFpbmVyLCBQcm92aWRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXNtMjAxNy5qcy5tYXBcbiIsImltcG9ydCB7IF9nZXRQcm92aWRlciwgZ2V0QXBwLCBfcmVnaXN0ZXJDb21wb25lbnQsIHJlZ2lzdGVyVmVyc2lvbiB9IGZyb20gJ0BmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGZpcmViYXNlL2NvbXBvbmVudCc7XG5pbXBvcnQgeyBFcnJvckZhY3RvcnksIEZpcmViYXNlRXJyb3IgfSBmcm9tICdAZmlyZWJhc2UvdXRpbCc7XG5pbXBvcnQgeyBvcGVuREIgfSBmcm9tICdpZGInO1xuXG5jb25zdCBuYW1lID0gXCJAZmlyZWJhc2UvaW5zdGFsbGF0aW9uc1wiO1xuY29uc3QgdmVyc2lvbiA9IFwiMC42LjRcIjtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgUEVORElOR19USU1FT1VUX01TID0gMTAwMDA7XHJcbmNvbnN0IFBBQ0tBR0VfVkVSU0lPTiA9IGB3OiR7dmVyc2lvbn1gO1xyXG5jb25zdCBJTlRFUk5BTF9BVVRIX1ZFUlNJT04gPSAnRklTX3YyJztcclxuY29uc3QgSU5TVEFMTEFUSU9OU19BUElfVVJMID0gJ2h0dHBzOi8vZmlyZWJhc2VpbnN0YWxsYXRpb25zLmdvb2dsZWFwaXMuY29tL3YxJztcclxuY29uc3QgVE9LRU5fRVhQSVJBVElPTl9CVUZGRVIgPSA2MCAqIDYwICogMTAwMDsgLy8gT25lIGhvdXJcclxuY29uc3QgU0VSVklDRSA9ICdpbnN0YWxsYXRpb25zJztcclxuY29uc3QgU0VSVklDRV9OQU1FID0gJ0luc3RhbGxhdGlvbnMnO1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBFUlJPUl9ERVNDUklQVElPTl9NQVAgPSB7XHJcbiAgICBbXCJtaXNzaW5nLWFwcC1jb25maWctdmFsdWVzXCIgLyogRXJyb3JDb2RlLk1JU1NJTkdfQVBQX0NPTkZJR19WQUxVRVMgKi9dOiAnTWlzc2luZyBBcHAgY29uZmlndXJhdGlvbiB2YWx1ZTogXCJ7JHZhbHVlTmFtZX1cIicsXHJcbiAgICBbXCJub3QtcmVnaXN0ZXJlZFwiIC8qIEVycm9yQ29kZS5OT1RfUkVHSVNURVJFRCAqL106ICdGaXJlYmFzZSBJbnN0YWxsYXRpb24gaXMgbm90IHJlZ2lzdGVyZWQuJyxcclxuICAgIFtcImluc3RhbGxhdGlvbi1ub3QtZm91bmRcIiAvKiBFcnJvckNvZGUuSU5TVEFMTEFUSU9OX05PVF9GT1VORCAqL106ICdGaXJlYmFzZSBJbnN0YWxsYXRpb24gbm90IGZvdW5kLicsXHJcbiAgICBbXCJyZXF1ZXN0LWZhaWxlZFwiIC8qIEVycm9yQ29kZS5SRVFVRVNUX0ZBSUxFRCAqL106ICd7JHJlcXVlc3ROYW1lfSByZXF1ZXN0IGZhaWxlZCB3aXRoIGVycm9yIFwieyRzZXJ2ZXJDb2RlfSB7JHNlcnZlclN0YXR1c306IHskc2VydmVyTWVzc2FnZX1cIicsXHJcbiAgICBbXCJhcHAtb2ZmbGluZVwiIC8qIEVycm9yQ29kZS5BUFBfT0ZGTElORSAqL106ICdDb3VsZCBub3QgcHJvY2VzcyByZXF1ZXN0LiBBcHBsaWNhdGlvbiBvZmZsaW5lLicsXHJcbiAgICBbXCJkZWxldGUtcGVuZGluZy1yZWdpc3RyYXRpb25cIiAvKiBFcnJvckNvZGUuREVMRVRFX1BFTkRJTkdfUkVHSVNUUkFUSU9OICovXTogXCJDYW4ndCBkZWxldGUgaW5zdGFsbGF0aW9uIHdoaWxlIHRoZXJlIGlzIGEgcGVuZGluZyByZWdpc3RyYXRpb24gcmVxdWVzdC5cIlxyXG59O1xyXG5jb25zdCBFUlJPUl9GQUNUT1JZID0gbmV3IEVycm9yRmFjdG9yeShTRVJWSUNFLCBTRVJWSUNFX05BTUUsIEVSUk9SX0RFU0NSSVBUSU9OX01BUCk7XHJcbi8qKiBSZXR1cm5zIHRydWUgaWYgZXJyb3IgaXMgYSBGaXJlYmFzZUVycm9yIHRoYXQgaXMgYmFzZWQgb24gYW4gZXJyb3IgZnJvbSB0aGUgc2VydmVyLiAqL1xyXG5mdW5jdGlvbiBpc1NlcnZlckVycm9yKGVycm9yKSB7XHJcbiAgICByZXR1cm4gKGVycm9yIGluc3RhbmNlb2YgRmlyZWJhc2VFcnJvciAmJlxyXG4gICAgICAgIGVycm9yLmNvZGUuaW5jbHVkZXMoXCJyZXF1ZXN0LWZhaWxlZFwiIC8qIEVycm9yQ29kZS5SRVFVRVNUX0ZBSUxFRCAqLykpO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIGdldEluc3RhbGxhdGlvbnNFbmRwb2ludCh7IHByb2plY3RJZCB9KSB7XHJcbiAgICByZXR1cm4gYCR7SU5TVEFMTEFUSU9OU19BUElfVVJMfS9wcm9qZWN0cy8ke3Byb2plY3RJZH0vaW5zdGFsbGF0aW9uc2A7XHJcbn1cclxuZnVuY3Rpb24gZXh0cmFjdEF1dGhUb2tlbkluZm9Gcm9tUmVzcG9uc2UocmVzcG9uc2UpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdG9rZW46IHJlc3BvbnNlLnRva2VuLFxyXG4gICAgICAgIHJlcXVlc3RTdGF0dXM6IDIgLyogUmVxdWVzdFN0YXR1cy5DT01QTEVURUQgKi8sXHJcbiAgICAgICAgZXhwaXJlc0luOiBnZXRFeHBpcmVzSW5Gcm9tUmVzcG9uc2VFeHBpcmVzSW4ocmVzcG9uc2UuZXhwaXJlc0luKSxcclxuICAgICAgICBjcmVhdGlvblRpbWU6IERhdGUubm93KClcclxuICAgIH07XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gZ2V0RXJyb3JGcm9tUmVzcG9uc2UocmVxdWVzdE5hbWUsIHJlc3BvbnNlKSB7XHJcbiAgICBjb25zdCByZXNwb25zZUpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICBjb25zdCBlcnJvckRhdGEgPSByZXNwb25zZUpzb24uZXJyb3I7XHJcbiAgICByZXR1cm4gRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJyZXF1ZXN0LWZhaWxlZFwiIC8qIEVycm9yQ29kZS5SRVFVRVNUX0ZBSUxFRCAqLywge1xyXG4gICAgICAgIHJlcXVlc3ROYW1lLFxyXG4gICAgICAgIHNlcnZlckNvZGU6IGVycm9yRGF0YS5jb2RlLFxyXG4gICAgICAgIHNlcnZlck1lc3NhZ2U6IGVycm9yRGF0YS5tZXNzYWdlLFxyXG4gICAgICAgIHNlcnZlclN0YXR1czogZXJyb3JEYXRhLnN0YXR1c1xyXG4gICAgfSk7XHJcbn1cclxuZnVuY3Rpb24gZ2V0SGVhZGVycyh7IGFwaUtleSB9KSB7XHJcbiAgICByZXR1cm4gbmV3IEhlYWRlcnMoe1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgJ3gtZ29vZy1hcGkta2V5JzogYXBpS2V5XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBnZXRIZWFkZXJzV2l0aEF1dGgoYXBwQ29uZmlnLCB7IHJlZnJlc2hUb2tlbiB9KSB7XHJcbiAgICBjb25zdCBoZWFkZXJzID0gZ2V0SGVhZGVycyhhcHBDb25maWcpO1xyXG4gICAgaGVhZGVycy5hcHBlbmQoJ0F1dGhvcml6YXRpb24nLCBnZXRBdXRob3JpemF0aW9uSGVhZGVyKHJlZnJlc2hUb2tlbikpO1xyXG4gICAgcmV0dXJuIGhlYWRlcnM7XHJcbn1cclxuLyoqXHJcbiAqIENhbGxzIHRoZSBwYXNzZWQgaW4gZmV0Y2ggd3JhcHBlciBhbmQgcmV0dXJucyB0aGUgcmVzcG9uc2UuXHJcbiAqIElmIHRoZSByZXR1cm5lZCByZXNwb25zZSBoYXMgYSBzdGF0dXMgb2YgNXh4LCByZS1ydW5zIHRoZSBmdW5jdGlvbiBvbmNlIGFuZFxyXG4gKiByZXR1cm5zIHRoZSByZXNwb25zZS5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIHJldHJ5SWZTZXJ2ZXJFcnJvcihmbikge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZm4oKTtcclxuICAgIGlmIChyZXN1bHQuc3RhdHVzID49IDUwMCAmJiByZXN1bHQuc3RhdHVzIDwgNjAwKSB7XHJcbiAgICAgICAgLy8gSW50ZXJuYWwgU2VydmVyIEVycm9yLiBSZXRyeSByZXF1ZXN0LlxyXG4gICAgICAgIHJldHVybiBmbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG5mdW5jdGlvbiBnZXRFeHBpcmVzSW5Gcm9tUmVzcG9uc2VFeHBpcmVzSW4ocmVzcG9uc2VFeHBpcmVzSW4pIHtcclxuICAgIC8vIFRoaXMgd29ya3MgYmVjYXVzZSB0aGUgc2VydmVyIHdpbGwgbmV2ZXIgcmVzcG9uZCB3aXRoIGZyYWN0aW9ucyBvZiBhIHNlY29uZC5cclxuICAgIHJldHVybiBOdW1iZXIocmVzcG9uc2VFeHBpcmVzSW4ucmVwbGFjZSgncycsICcwMDAnKSk7XHJcbn1cclxuZnVuY3Rpb24gZ2V0QXV0aG9yaXphdGlvbkhlYWRlcihyZWZyZXNoVG9rZW4pIHtcclxuICAgIHJldHVybiBgJHtJTlRFUk5BTF9BVVRIX1ZFUlNJT059ICR7cmVmcmVzaFRva2VufWA7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlSW5zdGFsbGF0aW9uUmVxdWVzdCh7IGFwcENvbmZpZywgaGVhcnRiZWF0U2VydmljZVByb3ZpZGVyIH0sIHsgZmlkIH0pIHtcclxuICAgIGNvbnN0IGVuZHBvaW50ID0gZ2V0SW5zdGFsbGF0aW9uc0VuZHBvaW50KGFwcENvbmZpZyk7XHJcbiAgICBjb25zdCBoZWFkZXJzID0gZ2V0SGVhZGVycyhhcHBDb25maWcpO1xyXG4gICAgLy8gSWYgaGVhcnRiZWF0IHNlcnZpY2UgZXhpc3RzLCBhZGQgdGhlIGhlYXJ0YmVhdCBzdHJpbmcgdG8gdGhlIGhlYWRlci5cclxuICAgIGNvbnN0IGhlYXJ0YmVhdFNlcnZpY2UgPSBoZWFydGJlYXRTZXJ2aWNlUHJvdmlkZXIuZ2V0SW1tZWRpYXRlKHtcclxuICAgICAgICBvcHRpb25hbDogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBpZiAoaGVhcnRiZWF0U2VydmljZSkge1xyXG4gICAgICAgIGNvbnN0IGhlYXJ0YmVhdHNIZWFkZXIgPSBhd2FpdCBoZWFydGJlYXRTZXJ2aWNlLmdldEhlYXJ0YmVhdHNIZWFkZXIoKTtcclxuICAgICAgICBpZiAoaGVhcnRiZWF0c0hlYWRlcikge1xyXG4gICAgICAgICAgICBoZWFkZXJzLmFwcGVuZCgneC1maXJlYmFzZS1jbGllbnQnLCBoZWFydGJlYXRzSGVhZGVyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCBib2R5ID0ge1xyXG4gICAgICAgIGZpZCxcclxuICAgICAgICBhdXRoVmVyc2lvbjogSU5URVJOQUxfQVVUSF9WRVJTSU9OLFxyXG4gICAgICAgIGFwcElkOiBhcHBDb25maWcuYXBwSWQsXHJcbiAgICAgICAgc2RrVmVyc2lvbjogUEFDS0FHRV9WRVJTSU9OXHJcbiAgICB9O1xyXG4gICAgY29uc3QgcmVxdWVzdCA9IHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpXHJcbiAgICB9O1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXRyeUlmU2VydmVyRXJyb3IoKCkgPT4gZmV0Y2goZW5kcG9pbnQsIHJlcXVlc3QpKTtcclxuICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlVmFsdWUgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgY29uc3QgcmVnaXN0ZXJlZEluc3RhbGxhdGlvbkVudHJ5ID0ge1xyXG4gICAgICAgICAgICBmaWQ6IHJlc3BvbnNlVmFsdWUuZmlkIHx8IGZpZCxcclxuICAgICAgICAgICAgcmVnaXN0cmF0aW9uU3RhdHVzOiAyIC8qIFJlcXVlc3RTdGF0dXMuQ09NUExFVEVEICovLFxyXG4gICAgICAgICAgICByZWZyZXNoVG9rZW46IHJlc3BvbnNlVmFsdWUucmVmcmVzaFRva2VuLFxyXG4gICAgICAgICAgICBhdXRoVG9rZW46IGV4dHJhY3RBdXRoVG9rZW5JbmZvRnJvbVJlc3BvbnNlKHJlc3BvbnNlVmFsdWUuYXV0aFRva2VuKVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHJlZ2lzdGVyZWRJbnN0YWxsYXRpb25FbnRyeTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHRocm93IGF3YWl0IGdldEVycm9yRnJvbVJlc3BvbnNlKCdDcmVhdGUgSW5zdGFsbGF0aW9uJywgcmVzcG9uc2UpO1xyXG4gICAgfVxyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKiBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIGFmdGVyIGdpdmVuIHRpbWUgcGFzc2VzLiAqL1xyXG5mdW5jdGlvbiBzbGVlcChtcykge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpO1xyXG4gICAgfSk7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gYnVmZmVyVG9CYXNlNjRVcmxTYWZlKGFycmF5KSB7XHJcbiAgICBjb25zdCBiNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUoLi4uYXJyYXkpKTtcclxuICAgIHJldHVybiBiNjQucmVwbGFjZSgvXFwrL2csICctJykucmVwbGFjZSgvXFwvL2csICdfJyk7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgVkFMSURfRklEX1BBVFRFUk4gPSAvXltjZGVmXVtcXHctXXsyMX0kLztcclxuY29uc3QgSU5WQUxJRF9GSUQgPSAnJztcclxuLyoqXHJcbiAqIEdlbmVyYXRlcyBhIG5ldyBGSUQgdXNpbmcgcmFuZG9tIHZhbHVlcyBmcm9tIFdlYiBDcnlwdG8gQVBJLlxyXG4gKiBSZXR1cm5zIGFuIGVtcHR5IHN0cmluZyBpZiBGSUQgZ2VuZXJhdGlvbiBmYWlscyBmb3IgYW55IHJlYXNvbi5cclxuICovXHJcbmZ1bmN0aW9uIGdlbmVyYXRlRmlkKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICAvLyBBIHZhbGlkIEZJRCBoYXMgZXhhY3RseSAyMiBiYXNlNjQgY2hhcmFjdGVycywgd2hpY2ggaXMgMTMyIGJpdHMsIG9yIDE2LjVcclxuICAgICAgICAvLyBieXRlcy4gb3VyIGltcGxlbWVudGF0aW9uIGdlbmVyYXRlcyBhIDE3IGJ5dGUgYXJyYXkgaW5zdGVhZC5cclxuICAgICAgICBjb25zdCBmaWRCeXRlQXJyYXkgPSBuZXcgVWludDhBcnJheSgxNyk7XHJcbiAgICAgICAgY29uc3QgY3J5cHRvID0gc2VsZi5jcnlwdG8gfHwgc2VsZi5tc0NyeXB0bztcclxuICAgICAgICBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGZpZEJ5dGVBcnJheSk7XHJcbiAgICAgICAgLy8gUmVwbGFjZSB0aGUgZmlyc3QgNCByYW5kb20gYml0cyB3aXRoIHRoZSBjb25zdGFudCBGSUQgaGVhZGVyIG9mIDBiMDExMS5cclxuICAgICAgICBmaWRCeXRlQXJyYXlbMF0gPSAwYjAxMTEwMDAwICsgKGZpZEJ5dGVBcnJheVswXSAlIDBiMDAwMTAwMDApO1xyXG4gICAgICAgIGNvbnN0IGZpZCA9IGVuY29kZShmaWRCeXRlQXJyYXkpO1xyXG4gICAgICAgIHJldHVybiBWQUxJRF9GSURfUEFUVEVSTi50ZXN0KGZpZCkgPyBmaWQgOiBJTlZBTElEX0ZJRDtcclxuICAgIH1cclxuICAgIGNhdGNoIChfYSkge1xyXG4gICAgICAgIC8vIEZJRCBnZW5lcmF0aW9uIGVycm9yZWRcclxuICAgICAgICByZXR1cm4gSU5WQUxJRF9GSUQ7XHJcbiAgICB9XHJcbn1cclxuLyoqIENvbnZlcnRzIGEgRklEIFVpbnQ4QXJyYXkgdG8gYSBiYXNlNjQgc3RyaW5nIHJlcHJlc2VudGF0aW9uLiAqL1xyXG5mdW5jdGlvbiBlbmNvZGUoZmlkQnl0ZUFycmF5KSB7XHJcbiAgICBjb25zdCBiNjRTdHJpbmcgPSBidWZmZXJUb0Jhc2U2NFVybFNhZmUoZmlkQnl0ZUFycmF5KTtcclxuICAgIC8vIFJlbW92ZSB0aGUgMjNyZCBjaGFyYWN0ZXIgdGhhdCB3YXMgYWRkZWQgYmVjYXVzZSBvZiB0aGUgZXh0cmEgNCBiaXRzIGF0IHRoZVxyXG4gICAgLy8gZW5kIG9mIG91ciAxNyBieXRlIGFycmF5LCBhbmQgdGhlICc9JyBwYWRkaW5nLlxyXG4gICAgcmV0dXJuIGI2NFN0cmluZy5zdWJzdHIoMCwgMjIpO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKiBSZXR1cm5zIGEgc3RyaW5nIGtleSB0aGF0IGNhbiBiZSB1c2VkIHRvIGlkZW50aWZ5IHRoZSBhcHAuICovXHJcbmZ1bmN0aW9uIGdldEtleShhcHBDb25maWcpIHtcclxuICAgIHJldHVybiBgJHthcHBDb25maWcuYXBwTmFtZX0hJHthcHBDb25maWcuYXBwSWR9YDtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBmaWRDaGFuZ2VDYWxsYmFja3MgPSBuZXcgTWFwKCk7XHJcbi8qKlxyXG4gKiBDYWxscyB0aGUgb25JZENoYW5nZSBjYWxsYmFja3Mgd2l0aCB0aGUgbmV3IEZJRCB2YWx1ZSwgYW5kIGJyb2FkY2FzdHMgdGhlXHJcbiAqIGNoYW5nZSB0byBvdGhlciB0YWJzLlxyXG4gKi9cclxuZnVuY3Rpb24gZmlkQ2hhbmdlZChhcHBDb25maWcsIGZpZCkge1xyXG4gICAgY29uc3Qga2V5ID0gZ2V0S2V5KGFwcENvbmZpZyk7XHJcbiAgICBjYWxsRmlkQ2hhbmdlQ2FsbGJhY2tzKGtleSwgZmlkKTtcclxuICAgIGJyb2FkY2FzdEZpZENoYW5nZShrZXksIGZpZCk7XHJcbn1cclxuZnVuY3Rpb24gYWRkQ2FsbGJhY2soYXBwQ29uZmlnLCBjYWxsYmFjaykge1xyXG4gICAgLy8gT3BlbiB0aGUgYnJvYWRjYXN0IGNoYW5uZWwgaWYgaXQncyBub3QgYWxyZWFkeSBvcGVuLFxyXG4gICAgLy8gdG8gYmUgYWJsZSB0byBsaXN0ZW4gdG8gY2hhbmdlIGV2ZW50cyBmcm9tIG90aGVyIHRhYnMuXHJcbiAgICBnZXRCcm9hZGNhc3RDaGFubmVsKCk7XHJcbiAgICBjb25zdCBrZXkgPSBnZXRLZXkoYXBwQ29uZmlnKTtcclxuICAgIGxldCBjYWxsYmFja1NldCA9IGZpZENoYW5nZUNhbGxiYWNrcy5nZXQoa2V5KTtcclxuICAgIGlmICghY2FsbGJhY2tTZXQpIHtcclxuICAgICAgICBjYWxsYmFja1NldCA9IG5ldyBTZXQoKTtcclxuICAgICAgICBmaWRDaGFuZ2VDYWxsYmFja3Muc2V0KGtleSwgY2FsbGJhY2tTZXQpO1xyXG4gICAgfVxyXG4gICAgY2FsbGJhY2tTZXQuYWRkKGNhbGxiYWNrKTtcclxufVxyXG5mdW5jdGlvbiByZW1vdmVDYWxsYmFjayhhcHBDb25maWcsIGNhbGxiYWNrKSB7XHJcbiAgICBjb25zdCBrZXkgPSBnZXRLZXkoYXBwQ29uZmlnKTtcclxuICAgIGNvbnN0IGNhbGxiYWNrU2V0ID0gZmlkQ2hhbmdlQ2FsbGJhY2tzLmdldChrZXkpO1xyXG4gICAgaWYgKCFjYWxsYmFja1NldCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNhbGxiYWNrU2V0LmRlbGV0ZShjYWxsYmFjayk7XHJcbiAgICBpZiAoY2FsbGJhY2tTZXQuc2l6ZSA9PT0gMCkge1xyXG4gICAgICAgIGZpZENoYW5nZUNhbGxiYWNrcy5kZWxldGUoa2V5KTtcclxuICAgIH1cclxuICAgIC8vIENsb3NlIGJyb2FkY2FzdCBjaGFubmVsIGlmIHRoZXJlIGFyZSBubyBtb3JlIGNhbGxiYWNrcy5cclxuICAgIGNsb3NlQnJvYWRjYXN0Q2hhbm5lbCgpO1xyXG59XHJcbmZ1bmN0aW9uIGNhbGxGaWRDaGFuZ2VDYWxsYmFja3Moa2V5LCBmaWQpIHtcclxuICAgIGNvbnN0IGNhbGxiYWNrcyA9IGZpZENoYW5nZUNhbGxiYWNrcy5nZXQoa2V5KTtcclxuICAgIGlmICghY2FsbGJhY2tzKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgZm9yIChjb25zdCBjYWxsYmFjayBvZiBjYWxsYmFja3MpIHtcclxuICAgICAgICBjYWxsYmFjayhmaWQpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIGJyb2FkY2FzdEZpZENoYW5nZShrZXksIGZpZCkge1xyXG4gICAgY29uc3QgY2hhbm5lbCA9IGdldEJyb2FkY2FzdENoYW5uZWwoKTtcclxuICAgIGlmIChjaGFubmVsKSB7XHJcbiAgICAgICAgY2hhbm5lbC5wb3N0TWVzc2FnZSh7IGtleSwgZmlkIH0pO1xyXG4gICAgfVxyXG4gICAgY2xvc2VCcm9hZGNhc3RDaGFubmVsKCk7XHJcbn1cclxubGV0IGJyb2FkY2FzdENoYW5uZWwgPSBudWxsO1xyXG4vKiogT3BlbnMgYW5kIHJldHVybnMgYSBCcm9hZGNhc3RDaGFubmVsIGlmIGl0IGlzIHN1cHBvcnRlZCBieSB0aGUgYnJvd3Nlci4gKi9cclxuZnVuY3Rpb24gZ2V0QnJvYWRjYXN0Q2hhbm5lbCgpIHtcclxuICAgIGlmICghYnJvYWRjYXN0Q2hhbm5lbCAmJiAnQnJvYWRjYXN0Q2hhbm5lbCcgaW4gc2VsZikge1xyXG4gICAgICAgIGJyb2FkY2FzdENoYW5uZWwgPSBuZXcgQnJvYWRjYXN0Q2hhbm5lbCgnW0ZpcmViYXNlXSBGSUQgQ2hhbmdlJyk7XHJcbiAgICAgICAgYnJvYWRjYXN0Q2hhbm5lbC5vbm1lc3NhZ2UgPSBlID0+IHtcclxuICAgICAgICAgICAgY2FsbEZpZENoYW5nZUNhbGxiYWNrcyhlLmRhdGEua2V5LCBlLmRhdGEuZmlkKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGJyb2FkY2FzdENoYW5uZWw7XHJcbn1cclxuZnVuY3Rpb24gY2xvc2VCcm9hZGNhc3RDaGFubmVsKCkge1xyXG4gICAgaWYgKGZpZENoYW5nZUNhbGxiYWNrcy5zaXplID09PSAwICYmIGJyb2FkY2FzdENoYW5uZWwpIHtcclxuICAgICAgICBicm9hZGNhc3RDaGFubmVsLmNsb3NlKCk7XHJcbiAgICAgICAgYnJvYWRjYXN0Q2hhbm5lbCA9IG51bGw7XHJcbiAgICB9XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgREFUQUJBU0VfTkFNRSA9ICdmaXJlYmFzZS1pbnN0YWxsYXRpb25zLWRhdGFiYXNlJztcclxuY29uc3QgREFUQUJBU0VfVkVSU0lPTiA9IDE7XHJcbmNvbnN0IE9CSkVDVF9TVE9SRV9OQU1FID0gJ2ZpcmViYXNlLWluc3RhbGxhdGlvbnMtc3RvcmUnO1xyXG5sZXQgZGJQcm9taXNlID0gbnVsbDtcclxuZnVuY3Rpb24gZ2V0RGJQcm9taXNlKCkge1xyXG4gICAgaWYgKCFkYlByb21pc2UpIHtcclxuICAgICAgICBkYlByb21pc2UgPSBvcGVuREIoREFUQUJBU0VfTkFNRSwgREFUQUJBU0VfVkVSU0lPTiwge1xyXG4gICAgICAgICAgICB1cGdyYWRlOiAoZGIsIG9sZFZlcnNpb24pID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIFdlIGRvbid0IHVzZSAnYnJlYWsnIGluIHRoaXMgc3dpdGNoIHN0YXRlbWVudCwgdGhlIGZhbGwtdGhyb3VnaFxyXG4gICAgICAgICAgICAgICAgLy8gYmVoYXZpb3IgaXMgd2hhdCB3ZSB3YW50LCBiZWNhdXNlIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSB2ZXJzaW9ucyBiZXR3ZWVuXHJcbiAgICAgICAgICAgICAgICAvLyB0aGUgb2xkIHZlcnNpb24gYW5kIHRoZSBjdXJyZW50IHZlcnNpb24sIHdlIHdhbnQgQUxMIHRoZSBtaWdyYXRpb25zXHJcbiAgICAgICAgICAgICAgICAvLyB0aGF0IGNvcnJlc3BvbmQgdG8gdGhvc2UgdmVyc2lvbnMgdG8gcnVuLCBub3Qgb25seSB0aGUgbGFzdCBvbmUuXHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVmYXVsdC1jYXNlXHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKG9sZFZlcnNpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRiLmNyZWF0ZU9iamVjdFN0b3JlKE9CSkVDVF9TVE9SRV9OQU1FKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGRiUHJvbWlzZTtcclxufVxyXG4vKiogQXNzaWducyBvciBvdmVyd3JpdGVzIHRoZSByZWNvcmQgZm9yIHRoZSBnaXZlbiBrZXkgd2l0aCB0aGUgZ2l2ZW4gdmFsdWUuICovXHJcbmFzeW5jIGZ1bmN0aW9uIHNldChhcHBDb25maWcsIHZhbHVlKSB7XHJcbiAgICBjb25zdCBrZXkgPSBnZXRLZXkoYXBwQ29uZmlnKTtcclxuICAgIGNvbnN0IGRiID0gYXdhaXQgZ2V0RGJQcm9taXNlKCk7XHJcbiAgICBjb25zdCB0eCA9IGRiLnRyYW5zYWN0aW9uKE9CSkVDVF9TVE9SRV9OQU1FLCAncmVhZHdyaXRlJyk7XHJcbiAgICBjb25zdCBvYmplY3RTdG9yZSA9IHR4Lm9iamVjdFN0b3JlKE9CSkVDVF9TVE9SRV9OQU1FKTtcclxuICAgIGNvbnN0IG9sZFZhbHVlID0gKGF3YWl0IG9iamVjdFN0b3JlLmdldChrZXkpKTtcclxuICAgIGF3YWl0IG9iamVjdFN0b3JlLnB1dCh2YWx1ZSwga2V5KTtcclxuICAgIGF3YWl0IHR4LmRvbmU7XHJcbiAgICBpZiAoIW9sZFZhbHVlIHx8IG9sZFZhbHVlLmZpZCAhPT0gdmFsdWUuZmlkKSB7XHJcbiAgICAgICAgZmlkQ2hhbmdlZChhcHBDb25maWcsIHZhbHVlLmZpZCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdmFsdWU7XHJcbn1cclxuLyoqIFJlbW92ZXMgcmVjb3JkKHMpIGZyb20gdGhlIG9iamVjdFN0b3JlIHRoYXQgbWF0Y2ggdGhlIGdpdmVuIGtleS4gKi9cclxuYXN5bmMgZnVuY3Rpb24gcmVtb3ZlKGFwcENvbmZpZykge1xyXG4gICAgY29uc3Qga2V5ID0gZ2V0S2V5KGFwcENvbmZpZyk7XHJcbiAgICBjb25zdCBkYiA9IGF3YWl0IGdldERiUHJvbWlzZSgpO1xyXG4gICAgY29uc3QgdHggPSBkYi50cmFuc2FjdGlvbihPQkpFQ1RfU1RPUkVfTkFNRSwgJ3JlYWR3cml0ZScpO1xyXG4gICAgYXdhaXQgdHgub2JqZWN0U3RvcmUoT0JKRUNUX1NUT1JFX05BTUUpLmRlbGV0ZShrZXkpO1xyXG4gICAgYXdhaXQgdHguZG9uZTtcclxufVxyXG4vKipcclxuICogQXRvbWljYWxseSB1cGRhdGVzIGEgcmVjb3JkIHdpdGggdGhlIHJlc3VsdCBvZiB1cGRhdGVGbiwgd2hpY2ggZ2V0c1xyXG4gKiBjYWxsZWQgd2l0aCB0aGUgY3VycmVudCB2YWx1ZS4gSWYgbmV3VmFsdWUgaXMgdW5kZWZpbmVkLCB0aGUgcmVjb3JkIGlzXHJcbiAqIGRlbGV0ZWQgaW5zdGVhZC5cclxuICogQHJldHVybiBVcGRhdGVkIHZhbHVlXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiB1cGRhdGUoYXBwQ29uZmlnLCB1cGRhdGVGbikge1xyXG4gICAgY29uc3Qga2V5ID0gZ2V0S2V5KGFwcENvbmZpZyk7XHJcbiAgICBjb25zdCBkYiA9IGF3YWl0IGdldERiUHJvbWlzZSgpO1xyXG4gICAgY29uc3QgdHggPSBkYi50cmFuc2FjdGlvbihPQkpFQ1RfU1RPUkVfTkFNRSwgJ3JlYWR3cml0ZScpO1xyXG4gICAgY29uc3Qgc3RvcmUgPSB0eC5vYmplY3RTdG9yZShPQkpFQ1RfU1RPUkVfTkFNRSk7XHJcbiAgICBjb25zdCBvbGRWYWx1ZSA9IChhd2FpdCBzdG9yZS5nZXQoa2V5KSk7XHJcbiAgICBjb25zdCBuZXdWYWx1ZSA9IHVwZGF0ZUZuKG9sZFZhbHVlKTtcclxuICAgIGlmIChuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgYXdhaXQgc3RvcmUuZGVsZXRlKGtleSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBhd2FpdCBzdG9yZS5wdXQobmV3VmFsdWUsIGtleSk7XHJcbiAgICB9XHJcbiAgICBhd2FpdCB0eC5kb25lO1xyXG4gICAgaWYgKG5ld1ZhbHVlICYmICghb2xkVmFsdWUgfHwgb2xkVmFsdWUuZmlkICE9PSBuZXdWYWx1ZS5maWQpKSB7XHJcbiAgICAgICAgZmlkQ2hhbmdlZChhcHBDb25maWcsIG5ld1ZhbHVlLmZpZCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmV3VmFsdWU7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFVwZGF0ZXMgYW5kIHJldHVybnMgdGhlIEluc3RhbGxhdGlvbkVudHJ5IGZyb20gdGhlIGRhdGFiYXNlLlxyXG4gKiBBbHNvIHRyaWdnZXJzIGEgcmVnaXN0cmF0aW9uIHJlcXVlc3QgaWYgaXQgaXMgbmVjZXNzYXJ5IGFuZCBwb3NzaWJsZS5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGdldEluc3RhbGxhdGlvbkVudHJ5KGluc3RhbGxhdGlvbnMpIHtcclxuICAgIGxldCByZWdpc3RyYXRpb25Qcm9taXNlO1xyXG4gICAgY29uc3QgaW5zdGFsbGF0aW9uRW50cnkgPSBhd2FpdCB1cGRhdGUoaW5zdGFsbGF0aW9ucy5hcHBDb25maWcsIG9sZEVudHJ5ID0+IHtcclxuICAgICAgICBjb25zdCBpbnN0YWxsYXRpb25FbnRyeSA9IHVwZGF0ZU9yQ3JlYXRlSW5zdGFsbGF0aW9uRW50cnkob2xkRW50cnkpO1xyXG4gICAgICAgIGNvbnN0IGVudHJ5V2l0aFByb21pc2UgPSB0cmlnZ2VyUmVnaXN0cmF0aW9uSWZOZWNlc3NhcnkoaW5zdGFsbGF0aW9ucywgaW5zdGFsbGF0aW9uRW50cnkpO1xyXG4gICAgICAgIHJlZ2lzdHJhdGlvblByb21pc2UgPSBlbnRyeVdpdGhQcm9taXNlLnJlZ2lzdHJhdGlvblByb21pc2U7XHJcbiAgICAgICAgcmV0dXJuIGVudHJ5V2l0aFByb21pc2UuaW5zdGFsbGF0aW9uRW50cnk7XHJcbiAgICB9KTtcclxuICAgIGlmIChpbnN0YWxsYXRpb25FbnRyeS5maWQgPT09IElOVkFMSURfRklEKSB7XHJcbiAgICAgICAgLy8gRklEIGdlbmVyYXRpb24gZmFpbGVkLiBXYWl0aW5nIGZvciB0aGUgRklEIGZyb20gdGhlIHNlcnZlci5cclxuICAgICAgICByZXR1cm4geyBpbnN0YWxsYXRpb25FbnRyeTogYXdhaXQgcmVnaXN0cmF0aW9uUHJvbWlzZSB9O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbnN0YWxsYXRpb25FbnRyeSxcclxuICAgICAgICByZWdpc3RyYXRpb25Qcm9taXNlXHJcbiAgICB9O1xyXG59XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgbmV3IEluc3RhbGxhdGlvbiBFbnRyeSBpZiBvbmUgZG9lcyBub3QgZXhpc3QuXHJcbiAqIEFsc28gY2xlYXJzIHRpbWVkIG91dCBwZW5kaW5nIHJlcXVlc3RzLlxyXG4gKi9cclxuZnVuY3Rpb24gdXBkYXRlT3JDcmVhdGVJbnN0YWxsYXRpb25FbnRyeShvbGRFbnRyeSkge1xyXG4gICAgY29uc3QgZW50cnkgPSBvbGRFbnRyeSB8fCB7XHJcbiAgICAgICAgZmlkOiBnZW5lcmF0ZUZpZCgpLFxyXG4gICAgICAgIHJlZ2lzdHJhdGlvblN0YXR1czogMCAvKiBSZXF1ZXN0U3RhdHVzLk5PVF9TVEFSVEVEICovXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGNsZWFyVGltZWRPdXRSZXF1ZXN0KGVudHJ5KTtcclxufVxyXG4vKipcclxuICogSWYgdGhlIEZpcmViYXNlIEluc3RhbGxhdGlvbiBpcyBub3QgcmVnaXN0ZXJlZCB5ZXQsIHRoaXMgd2lsbCB0cmlnZ2VyIHRoZVxyXG4gKiByZWdpc3RyYXRpb24gYW5kIHJldHVybiBhbiBJblByb2dyZXNzSW5zdGFsbGF0aW9uRW50cnkuXHJcbiAqXHJcbiAqIElmIHJlZ2lzdHJhdGlvblByb21pc2UgZG9lcyBub3QgZXhpc3QsIHRoZSBpbnN0YWxsYXRpb25FbnRyeSBpcyBndWFyYW50ZWVkXHJcbiAqIHRvIGJlIHJlZ2lzdGVyZWQuXHJcbiAqL1xyXG5mdW5jdGlvbiB0cmlnZ2VyUmVnaXN0cmF0aW9uSWZOZWNlc3NhcnkoaW5zdGFsbGF0aW9ucywgaW5zdGFsbGF0aW9uRW50cnkpIHtcclxuICAgIGlmIChpbnN0YWxsYXRpb25FbnRyeS5yZWdpc3RyYXRpb25TdGF0dXMgPT09IDAgLyogUmVxdWVzdFN0YXR1cy5OT1RfU1RBUlRFRCAqLykge1xyXG4gICAgICAgIGlmICghbmF2aWdhdG9yLm9uTGluZSkge1xyXG4gICAgICAgICAgICAvLyBSZWdpc3RyYXRpb24gcmVxdWlyZWQgYnV0IGFwcCBpcyBvZmZsaW5lLlxyXG4gICAgICAgICAgICBjb25zdCByZWdpc3RyYXRpb25Qcm9taXNlV2l0aEVycm9yID0gUHJvbWlzZS5yZWplY3QoRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJhcHAtb2ZmbGluZVwiIC8qIEVycm9yQ29kZS5BUFBfT0ZGTElORSAqLykpO1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgaW5zdGFsbGF0aW9uRW50cnksXHJcbiAgICAgICAgICAgICAgICByZWdpc3RyYXRpb25Qcm9taXNlOiByZWdpc3RyYXRpb25Qcm9taXNlV2l0aEVycm9yXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFRyeSByZWdpc3RlcmluZy4gQ2hhbmdlIHN0YXR1cyB0byBJTl9QUk9HUkVTUy5cclxuICAgICAgICBjb25zdCBpblByb2dyZXNzRW50cnkgPSB7XHJcbiAgICAgICAgICAgIGZpZDogaW5zdGFsbGF0aW9uRW50cnkuZmlkLFxyXG4gICAgICAgICAgICByZWdpc3RyYXRpb25TdGF0dXM6IDEgLyogUmVxdWVzdFN0YXR1cy5JTl9QUk9HUkVTUyAqLyxcclxuICAgICAgICAgICAgcmVnaXN0cmF0aW9uVGltZTogRGF0ZS5ub3coKVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgcmVnaXN0cmF0aW9uUHJvbWlzZSA9IHJlZ2lzdGVySW5zdGFsbGF0aW9uKGluc3RhbGxhdGlvbnMsIGluUHJvZ3Jlc3NFbnRyeSk7XHJcbiAgICAgICAgcmV0dXJuIHsgaW5zdGFsbGF0aW9uRW50cnk6IGluUHJvZ3Jlc3NFbnRyeSwgcmVnaXN0cmF0aW9uUHJvbWlzZSB9O1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoaW5zdGFsbGF0aW9uRW50cnkucmVnaXN0cmF0aW9uU3RhdHVzID09PSAxIC8qIFJlcXVlc3RTdGF0dXMuSU5fUFJPR1JFU1MgKi8pIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpbnN0YWxsYXRpb25FbnRyeSxcclxuICAgICAgICAgICAgcmVnaXN0cmF0aW9uUHJvbWlzZTogd2FpdFVudGlsRmlkUmVnaXN0cmF0aW9uKGluc3RhbGxhdGlvbnMpXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiB7IGluc3RhbGxhdGlvbkVudHJ5IH07XHJcbiAgICB9XHJcbn1cclxuLyoqIFRoaXMgd2lsbCBiZSBleGVjdXRlZCBvbmx5IG9uY2UgZm9yIGVhY2ggbmV3IEZpcmViYXNlIEluc3RhbGxhdGlvbi4gKi9cclxuYXN5bmMgZnVuY3Rpb24gcmVnaXN0ZXJJbnN0YWxsYXRpb24oaW5zdGFsbGF0aW9ucywgaW5zdGFsbGF0aW9uRW50cnkpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVnaXN0ZXJlZEluc3RhbGxhdGlvbkVudHJ5ID0gYXdhaXQgY3JlYXRlSW5zdGFsbGF0aW9uUmVxdWVzdChpbnN0YWxsYXRpb25zLCBpbnN0YWxsYXRpb25FbnRyeSk7XHJcbiAgICAgICAgcmV0dXJuIHNldChpbnN0YWxsYXRpb25zLmFwcENvbmZpZywgcmVnaXN0ZXJlZEluc3RhbGxhdGlvbkVudHJ5KTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgaWYgKGlzU2VydmVyRXJyb3IoZSkgJiYgZS5jdXN0b21EYXRhLnNlcnZlckNvZGUgPT09IDQwOSkge1xyXG4gICAgICAgICAgICAvLyBTZXJ2ZXIgcmV0dXJuZWQgYSBcIkZJRCBjYW4gbm90IGJlIHVzZWRcIiBlcnJvci5cclxuICAgICAgICAgICAgLy8gR2VuZXJhdGUgYSBuZXcgSUQgbmV4dCB0aW1lLlxyXG4gICAgICAgICAgICBhd2FpdCByZW1vdmUoaW5zdGFsbGF0aW9ucy5hcHBDb25maWcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLy8gUmVnaXN0cmF0aW9uIGZhaWxlZC4gU2V0IEZJRCBhcyBub3QgcmVnaXN0ZXJlZC5cclxuICAgICAgICAgICAgYXdhaXQgc2V0KGluc3RhbGxhdGlvbnMuYXBwQ29uZmlnLCB7XHJcbiAgICAgICAgICAgICAgICBmaWQ6IGluc3RhbGxhdGlvbkVudHJ5LmZpZCxcclxuICAgICAgICAgICAgICAgIHJlZ2lzdHJhdGlvblN0YXR1czogMCAvKiBSZXF1ZXN0U3RhdHVzLk5PVF9TVEFSVEVEICovXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aHJvdyBlO1xyXG4gICAgfVxyXG59XHJcbi8qKiBDYWxsIGlmIEZJRCByZWdpc3RyYXRpb24gaXMgcGVuZGluZyBpbiBhbm90aGVyIHJlcXVlc3QuICovXHJcbmFzeW5jIGZ1bmN0aW9uIHdhaXRVbnRpbEZpZFJlZ2lzdHJhdGlvbihpbnN0YWxsYXRpb25zKSB7XHJcbiAgICAvLyBVbmZvcnR1bmF0ZWx5LCB0aGVyZSBpcyBubyB3YXkgb2YgcmVsaWFibHkgb2JzZXJ2aW5nIHdoZW4gYSB2YWx1ZSBpblxyXG4gICAgLy8gSW5kZXhlZERCIGNoYW5nZXMgKHlldCwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9XSUNHL2luZGV4ZWQtZGItb2JzZXJ2ZXJzKSxcclxuICAgIC8vIHNvIHdlIG5lZWQgdG8gcG9sbC5cclxuICAgIGxldCBlbnRyeSA9IGF3YWl0IHVwZGF0ZUluc3RhbGxhdGlvblJlcXVlc3QoaW5zdGFsbGF0aW9ucy5hcHBDb25maWcpO1xyXG4gICAgd2hpbGUgKGVudHJ5LnJlZ2lzdHJhdGlvblN0YXR1cyA9PT0gMSAvKiBSZXF1ZXN0U3RhdHVzLklOX1BST0dSRVNTICovKSB7XHJcbiAgICAgICAgLy8gY3JlYXRlSW5zdGFsbGF0aW9uIHJlcXVlc3Qgc3RpbGwgaW4gcHJvZ3Jlc3MuXHJcbiAgICAgICAgYXdhaXQgc2xlZXAoMTAwKTtcclxuICAgICAgICBlbnRyeSA9IGF3YWl0IHVwZGF0ZUluc3RhbGxhdGlvblJlcXVlc3QoaW5zdGFsbGF0aW9ucy5hcHBDb25maWcpO1xyXG4gICAgfVxyXG4gICAgaWYgKGVudHJ5LnJlZ2lzdHJhdGlvblN0YXR1cyA9PT0gMCAvKiBSZXF1ZXN0U3RhdHVzLk5PVF9TVEFSVEVEICovKSB7XHJcbiAgICAgICAgLy8gVGhlIHJlcXVlc3QgdGltZWQgb3V0IG9yIGZhaWxlZCBpbiBhIGRpZmZlcmVudCBjYWxsLiBUcnkgYWdhaW4uXHJcbiAgICAgICAgY29uc3QgeyBpbnN0YWxsYXRpb25FbnRyeSwgcmVnaXN0cmF0aW9uUHJvbWlzZSB9ID0gYXdhaXQgZ2V0SW5zdGFsbGF0aW9uRW50cnkoaW5zdGFsbGF0aW9ucyk7XHJcbiAgICAgICAgaWYgKHJlZ2lzdHJhdGlvblByb21pc2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlZ2lzdHJhdGlvblByb21pc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBpZiB0aGVyZSBpcyBubyByZWdpc3RyYXRpb25Qcm9taXNlLCBlbnRyeSBpcyByZWdpc3RlcmVkLlxyXG4gICAgICAgICAgICByZXR1cm4gaW5zdGFsbGF0aW9uRW50cnk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGVudHJ5O1xyXG59XHJcbi8qKlxyXG4gKiBDYWxsZWQgb25seSBpZiB0aGVyZSBpcyBhIENyZWF0ZUluc3RhbGxhdGlvbiByZXF1ZXN0IGluIHByb2dyZXNzLlxyXG4gKlxyXG4gKiBVcGRhdGVzIHRoZSBJbnN0YWxsYXRpb25FbnRyeSBpbiB0aGUgREIgYmFzZWQgb24gdGhlIHN0YXR1cyBvZiB0aGVcclxuICogQ3JlYXRlSW5zdGFsbGF0aW9uIHJlcXVlc3QuXHJcbiAqXHJcbiAqIFJldHVybnMgdGhlIHVwZGF0ZWQgSW5zdGFsbGF0aW9uRW50cnkuXHJcbiAqL1xyXG5mdW5jdGlvbiB1cGRhdGVJbnN0YWxsYXRpb25SZXF1ZXN0KGFwcENvbmZpZykge1xyXG4gICAgcmV0dXJuIHVwZGF0ZShhcHBDb25maWcsIG9sZEVudHJ5ID0+IHtcclxuICAgICAgICBpZiAoIW9sZEVudHJ5KSB7XHJcbiAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiaW5zdGFsbGF0aW9uLW5vdC1mb3VuZFwiIC8qIEVycm9yQ29kZS5JTlNUQUxMQVRJT05fTk9UX0ZPVU5EICovKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZWRPdXRSZXF1ZXN0KG9sZEVudHJ5KTtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIGNsZWFyVGltZWRPdXRSZXF1ZXN0KGVudHJ5KSB7XHJcbiAgICBpZiAoaGFzSW5zdGFsbGF0aW9uUmVxdWVzdFRpbWVkT3V0KGVudHJ5KSkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGZpZDogZW50cnkuZmlkLFxyXG4gICAgICAgICAgICByZWdpc3RyYXRpb25TdGF0dXM6IDAgLyogUmVxdWVzdFN0YXR1cy5OT1RfU1RBUlRFRCAqL1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZW50cnk7XHJcbn1cclxuZnVuY3Rpb24gaGFzSW5zdGFsbGF0aW9uUmVxdWVzdFRpbWVkT3V0KGluc3RhbGxhdGlvbkVudHJ5KSB7XHJcbiAgICByZXR1cm4gKGluc3RhbGxhdGlvbkVudHJ5LnJlZ2lzdHJhdGlvblN0YXR1cyA9PT0gMSAvKiBSZXF1ZXN0U3RhdHVzLklOX1BST0dSRVNTICovICYmXHJcbiAgICAgICAgaW5zdGFsbGF0aW9uRW50cnkucmVnaXN0cmF0aW9uVGltZSArIFBFTkRJTkdfVElNRU9VVF9NUyA8IERhdGUubm93KCkpO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlQXV0aFRva2VuUmVxdWVzdCh7IGFwcENvbmZpZywgaGVhcnRiZWF0U2VydmljZVByb3ZpZGVyIH0sIGluc3RhbGxhdGlvbkVudHJ5KSB7XHJcbiAgICBjb25zdCBlbmRwb2ludCA9IGdldEdlbmVyYXRlQXV0aFRva2VuRW5kcG9pbnQoYXBwQ29uZmlnLCBpbnN0YWxsYXRpb25FbnRyeSk7XHJcbiAgICBjb25zdCBoZWFkZXJzID0gZ2V0SGVhZGVyc1dpdGhBdXRoKGFwcENvbmZpZywgaW5zdGFsbGF0aW9uRW50cnkpO1xyXG4gICAgLy8gSWYgaGVhcnRiZWF0IHNlcnZpY2UgZXhpc3RzLCBhZGQgdGhlIGhlYXJ0YmVhdCBzdHJpbmcgdG8gdGhlIGhlYWRlci5cclxuICAgIGNvbnN0IGhlYXJ0YmVhdFNlcnZpY2UgPSBoZWFydGJlYXRTZXJ2aWNlUHJvdmlkZXIuZ2V0SW1tZWRpYXRlKHtcclxuICAgICAgICBvcHRpb25hbDogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBpZiAoaGVhcnRiZWF0U2VydmljZSkge1xyXG4gICAgICAgIGNvbnN0IGhlYXJ0YmVhdHNIZWFkZXIgPSBhd2FpdCBoZWFydGJlYXRTZXJ2aWNlLmdldEhlYXJ0YmVhdHNIZWFkZXIoKTtcclxuICAgICAgICBpZiAoaGVhcnRiZWF0c0hlYWRlcikge1xyXG4gICAgICAgICAgICBoZWFkZXJzLmFwcGVuZCgneC1maXJlYmFzZS1jbGllbnQnLCBoZWFydGJlYXRzSGVhZGVyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCBib2R5ID0ge1xyXG4gICAgICAgIGluc3RhbGxhdGlvbjoge1xyXG4gICAgICAgICAgICBzZGtWZXJzaW9uOiBQQUNLQUdFX1ZFUlNJT04sXHJcbiAgICAgICAgICAgIGFwcElkOiBhcHBDb25maWcuYXBwSWRcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgY29uc3QgcmVxdWVzdCA9IHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpXHJcbiAgICB9O1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXRyeUlmU2VydmVyRXJyb3IoKCkgPT4gZmV0Y2goZW5kcG9pbnQsIHJlcXVlc3QpKTtcclxuICAgIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlVmFsdWUgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgY29uc3QgY29tcGxldGVkQXV0aFRva2VuID0gZXh0cmFjdEF1dGhUb2tlbkluZm9Gcm9tUmVzcG9uc2UocmVzcG9uc2VWYWx1ZSk7XHJcbiAgICAgICAgcmV0dXJuIGNvbXBsZXRlZEF1dGhUb2tlbjtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHRocm93IGF3YWl0IGdldEVycm9yRnJvbVJlc3BvbnNlKCdHZW5lcmF0ZSBBdXRoIFRva2VuJywgcmVzcG9uc2UpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIGdldEdlbmVyYXRlQXV0aFRva2VuRW5kcG9pbnQoYXBwQ29uZmlnLCB7IGZpZCB9KSB7XHJcbiAgICByZXR1cm4gYCR7Z2V0SW5zdGFsbGF0aW9uc0VuZHBvaW50KGFwcENvbmZpZyl9LyR7ZmlkfS9hdXRoVG9rZW5zOmdlbmVyYXRlYDtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUmV0dXJucyBhIHZhbGlkIGF1dGhlbnRpY2F0aW9uIHRva2VuIGZvciB0aGUgaW5zdGFsbGF0aW9uLiBHZW5lcmF0ZXMgYSBuZXdcclxuICogdG9rZW4gaWYgb25lIGRvZXNuJ3QgZXhpc3QsIGlzIGV4cGlyZWQgb3IgYWJvdXQgdG8gZXhwaXJlLlxyXG4gKlxyXG4gKiBTaG91bGQgb25seSBiZSBjYWxsZWQgaWYgdGhlIEZpcmViYXNlIEluc3RhbGxhdGlvbiBpcyByZWdpc3RlcmVkLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gcmVmcmVzaEF1dGhUb2tlbihpbnN0YWxsYXRpb25zLCBmb3JjZVJlZnJlc2ggPSBmYWxzZSkge1xyXG4gICAgbGV0IHRva2VuUHJvbWlzZTtcclxuICAgIGNvbnN0IGVudHJ5ID0gYXdhaXQgdXBkYXRlKGluc3RhbGxhdGlvbnMuYXBwQ29uZmlnLCBvbGRFbnRyeSA9PiB7XHJcbiAgICAgICAgaWYgKCFpc0VudHJ5UmVnaXN0ZXJlZChvbGRFbnRyeSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJub3QtcmVnaXN0ZXJlZFwiIC8qIEVycm9yQ29kZS5OT1RfUkVHSVNURVJFRCAqLyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IG9sZEF1dGhUb2tlbiA9IG9sZEVudHJ5LmF1dGhUb2tlbjtcclxuICAgICAgICBpZiAoIWZvcmNlUmVmcmVzaCAmJiBpc0F1dGhUb2tlblZhbGlkKG9sZEF1dGhUb2tlbikpIHtcclxuICAgICAgICAgICAgLy8gVGhlcmUgaXMgYSB2YWxpZCB0b2tlbiBpbiB0aGUgREIuXHJcbiAgICAgICAgICAgIHJldHVybiBvbGRFbnRyeTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAob2xkQXV0aFRva2VuLnJlcXVlc3RTdGF0dXMgPT09IDEgLyogUmVxdWVzdFN0YXR1cy5JTl9QUk9HUkVTUyAqLykge1xyXG4gICAgICAgICAgICAvLyBUaGVyZSBhbHJlYWR5IGlzIGEgdG9rZW4gcmVxdWVzdCBpbiBwcm9ncmVzcy5cclxuICAgICAgICAgICAgdG9rZW5Qcm9taXNlID0gd2FpdFVudGlsQXV0aFRva2VuUmVxdWVzdChpbnN0YWxsYXRpb25zLCBmb3JjZVJlZnJlc2gpO1xyXG4gICAgICAgICAgICByZXR1cm4gb2xkRW50cnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBObyB0b2tlbiBvciB0b2tlbiBleHBpcmVkLlxyXG4gICAgICAgICAgICBpZiAoIW5hdmlnYXRvci5vbkxpbmUpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiYXBwLW9mZmxpbmVcIiAvKiBFcnJvckNvZGUuQVBQX09GRkxJTkUgKi8pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IGluUHJvZ3Jlc3NFbnRyeSA9IG1ha2VBdXRoVG9rZW5SZXF1ZXN0SW5Qcm9ncmVzc0VudHJ5KG9sZEVudHJ5KTtcclxuICAgICAgICAgICAgdG9rZW5Qcm9taXNlID0gZmV0Y2hBdXRoVG9rZW5Gcm9tU2VydmVyKGluc3RhbGxhdGlvbnMsIGluUHJvZ3Jlc3NFbnRyeSk7XHJcbiAgICAgICAgICAgIHJldHVybiBpblByb2dyZXNzRW50cnk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBjb25zdCBhdXRoVG9rZW4gPSB0b2tlblByb21pc2VcclxuICAgICAgICA/IGF3YWl0IHRva2VuUHJvbWlzZVxyXG4gICAgICAgIDogZW50cnkuYXV0aFRva2VuO1xyXG4gICAgcmV0dXJuIGF1dGhUb2tlbjtcclxufVxyXG4vKipcclxuICogQ2FsbCBvbmx5IGlmIEZJRCBpcyByZWdpc3RlcmVkIGFuZCBBdXRoIFRva2VuIHJlcXVlc3QgaXMgaW4gcHJvZ3Jlc3MuXHJcbiAqXHJcbiAqIFdhaXRzIHVudGlsIHRoZSBjdXJyZW50IHBlbmRpbmcgcmVxdWVzdCBmaW5pc2hlcy4gSWYgdGhlIHJlcXVlc3QgdGltZXMgb3V0LFxyXG4gKiB0cmllcyBvbmNlIGluIHRoaXMgdGhyZWFkIGFzIHdlbGwuXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiB3YWl0VW50aWxBdXRoVG9rZW5SZXF1ZXN0KGluc3RhbGxhdGlvbnMsIGZvcmNlUmVmcmVzaCkge1xyXG4gICAgLy8gVW5mb3J0dW5hdGVseSwgdGhlcmUgaXMgbm8gd2F5IG9mIHJlbGlhYmx5IG9ic2VydmluZyB3aGVuIGEgdmFsdWUgaW5cclxuICAgIC8vIEluZGV4ZWREQiBjaGFuZ2VzICh5ZXQsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vV0lDRy9pbmRleGVkLWRiLW9ic2VydmVycyksXHJcbiAgICAvLyBzbyB3ZSBuZWVkIHRvIHBvbGwuXHJcbiAgICBsZXQgZW50cnkgPSBhd2FpdCB1cGRhdGVBdXRoVG9rZW5SZXF1ZXN0KGluc3RhbGxhdGlvbnMuYXBwQ29uZmlnKTtcclxuICAgIHdoaWxlIChlbnRyeS5hdXRoVG9rZW4ucmVxdWVzdFN0YXR1cyA9PT0gMSAvKiBSZXF1ZXN0U3RhdHVzLklOX1BST0dSRVNTICovKSB7XHJcbiAgICAgICAgLy8gZ2VuZXJhdGVBdXRoVG9rZW4gc3RpbGwgaW4gcHJvZ3Jlc3MuXHJcbiAgICAgICAgYXdhaXQgc2xlZXAoMTAwKTtcclxuICAgICAgICBlbnRyeSA9IGF3YWl0IHVwZGF0ZUF1dGhUb2tlblJlcXVlc3QoaW5zdGFsbGF0aW9ucy5hcHBDb25maWcpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgYXV0aFRva2VuID0gZW50cnkuYXV0aFRva2VuO1xyXG4gICAgaWYgKGF1dGhUb2tlbi5yZXF1ZXN0U3RhdHVzID09PSAwIC8qIFJlcXVlc3RTdGF0dXMuTk9UX1NUQVJURUQgKi8pIHtcclxuICAgICAgICAvLyBUaGUgcmVxdWVzdCB0aW1lZCBvdXQgb3IgZmFpbGVkIGluIGEgZGlmZmVyZW50IGNhbGwuIFRyeSBhZ2Fpbi5cclxuICAgICAgICByZXR1cm4gcmVmcmVzaEF1dGhUb2tlbihpbnN0YWxsYXRpb25zLCBmb3JjZVJlZnJlc2gpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGF1dGhUb2tlbjtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogQ2FsbGVkIG9ubHkgaWYgdGhlcmUgaXMgYSBHZW5lcmF0ZUF1dGhUb2tlbiByZXF1ZXN0IGluIHByb2dyZXNzLlxyXG4gKlxyXG4gKiBVcGRhdGVzIHRoZSBJbnN0YWxsYXRpb25FbnRyeSBpbiB0aGUgREIgYmFzZWQgb24gdGhlIHN0YXR1cyBvZiB0aGVcclxuICogR2VuZXJhdGVBdXRoVG9rZW4gcmVxdWVzdC5cclxuICpcclxuICogUmV0dXJucyB0aGUgdXBkYXRlZCBJbnN0YWxsYXRpb25FbnRyeS5cclxuICovXHJcbmZ1bmN0aW9uIHVwZGF0ZUF1dGhUb2tlblJlcXVlc3QoYXBwQ29uZmlnKSB7XHJcbiAgICByZXR1cm4gdXBkYXRlKGFwcENvbmZpZywgb2xkRW50cnkgPT4ge1xyXG4gICAgICAgIGlmICghaXNFbnRyeVJlZ2lzdGVyZWQob2xkRW50cnkpKSB7XHJcbiAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwibm90LXJlZ2lzdGVyZWRcIiAvKiBFcnJvckNvZGUuTk9UX1JFR0lTVEVSRUQgKi8pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBvbGRBdXRoVG9rZW4gPSBvbGRFbnRyeS5hdXRoVG9rZW47XHJcbiAgICAgICAgaWYgKGhhc0F1dGhUb2tlblJlcXVlc3RUaW1lZE91dChvbGRBdXRoVG9rZW4pKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9sZEVudHJ5KSwgeyBhdXRoVG9rZW46IHsgcmVxdWVzdFN0YXR1czogMCAvKiBSZXF1ZXN0U3RhdHVzLk5PVF9TVEFSVEVEICovIH0gfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBvbGRFbnRyeTtcclxuICAgIH0pO1xyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIGZldGNoQXV0aFRva2VuRnJvbVNlcnZlcihpbnN0YWxsYXRpb25zLCBpbnN0YWxsYXRpb25FbnRyeSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBhdXRoVG9rZW4gPSBhd2FpdCBnZW5lcmF0ZUF1dGhUb2tlblJlcXVlc3QoaW5zdGFsbGF0aW9ucywgaW5zdGFsbGF0aW9uRW50cnkpO1xyXG4gICAgICAgIGNvbnN0IHVwZGF0ZWRJbnN0YWxsYXRpb25FbnRyeSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgaW5zdGFsbGF0aW9uRW50cnkpLCB7IGF1dGhUb2tlbiB9KTtcclxuICAgICAgICBhd2FpdCBzZXQoaW5zdGFsbGF0aW9ucy5hcHBDb25maWcsIHVwZGF0ZWRJbnN0YWxsYXRpb25FbnRyeSk7XHJcbiAgICAgICAgcmV0dXJuIGF1dGhUb2tlbjtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgaWYgKGlzU2VydmVyRXJyb3IoZSkgJiZcclxuICAgICAgICAgICAgKGUuY3VzdG9tRGF0YS5zZXJ2ZXJDb2RlID09PSA0MDEgfHwgZS5jdXN0b21EYXRhLnNlcnZlckNvZGUgPT09IDQwNCkpIHtcclxuICAgICAgICAgICAgLy8gU2VydmVyIHJldHVybmVkIGEgXCJGSUQgbm90IGZvdW5kXCIgb3IgYSBcIkludmFsaWQgYXV0aGVudGljYXRpb25cIiBlcnJvci5cclxuICAgICAgICAgICAgLy8gR2VuZXJhdGUgYSBuZXcgSUQgbmV4dCB0aW1lLlxyXG4gICAgICAgICAgICBhd2FpdCByZW1vdmUoaW5zdGFsbGF0aW9ucy5hcHBDb25maWcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3QgdXBkYXRlZEluc3RhbGxhdGlvbkVudHJ5ID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbnN0YWxsYXRpb25FbnRyeSksIHsgYXV0aFRva2VuOiB7IHJlcXVlc3RTdGF0dXM6IDAgLyogUmVxdWVzdFN0YXR1cy5OT1RfU1RBUlRFRCAqLyB9IH0pO1xyXG4gICAgICAgICAgICBhd2FpdCBzZXQoaW5zdGFsbGF0aW9ucy5hcHBDb25maWcsIHVwZGF0ZWRJbnN0YWxsYXRpb25FbnRyeSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRocm93IGU7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gaXNFbnRyeVJlZ2lzdGVyZWQoaW5zdGFsbGF0aW9uRW50cnkpIHtcclxuICAgIHJldHVybiAoaW5zdGFsbGF0aW9uRW50cnkgIT09IHVuZGVmaW5lZCAmJlxyXG4gICAgICAgIGluc3RhbGxhdGlvbkVudHJ5LnJlZ2lzdHJhdGlvblN0YXR1cyA9PT0gMiAvKiBSZXF1ZXN0U3RhdHVzLkNPTVBMRVRFRCAqLyk7XHJcbn1cclxuZnVuY3Rpb24gaXNBdXRoVG9rZW5WYWxpZChhdXRoVG9rZW4pIHtcclxuICAgIHJldHVybiAoYXV0aFRva2VuLnJlcXVlc3RTdGF0dXMgPT09IDIgLyogUmVxdWVzdFN0YXR1cy5DT01QTEVURUQgKi8gJiZcclxuICAgICAgICAhaXNBdXRoVG9rZW5FeHBpcmVkKGF1dGhUb2tlbikpO1xyXG59XHJcbmZ1bmN0aW9uIGlzQXV0aFRva2VuRXhwaXJlZChhdXRoVG9rZW4pIHtcclxuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XHJcbiAgICByZXR1cm4gKG5vdyA8IGF1dGhUb2tlbi5jcmVhdGlvblRpbWUgfHxcclxuICAgICAgICBhdXRoVG9rZW4uY3JlYXRpb25UaW1lICsgYXV0aFRva2VuLmV4cGlyZXNJbiA8IG5vdyArIFRPS0VOX0VYUElSQVRJT05fQlVGRkVSKTtcclxufVxyXG4vKiogUmV0dXJucyBhbiB1cGRhdGVkIEluc3RhbGxhdGlvbkVudHJ5IHdpdGggYW4gSW5Qcm9ncmVzc0F1dGhUb2tlbi4gKi9cclxuZnVuY3Rpb24gbWFrZUF1dGhUb2tlblJlcXVlc3RJblByb2dyZXNzRW50cnkob2xkRW50cnkpIHtcclxuICAgIGNvbnN0IGluUHJvZ3Jlc3NBdXRoVG9rZW4gPSB7XHJcbiAgICAgICAgcmVxdWVzdFN0YXR1czogMSAvKiBSZXF1ZXN0U3RhdHVzLklOX1BST0dSRVNTICovLFxyXG4gICAgICAgIHJlcXVlc3RUaW1lOiBEYXRlLm5vdygpXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb2xkRW50cnkpLCB7IGF1dGhUb2tlbjogaW5Qcm9ncmVzc0F1dGhUb2tlbiB9KTtcclxufVxyXG5mdW5jdGlvbiBoYXNBdXRoVG9rZW5SZXF1ZXN0VGltZWRPdXQoYXV0aFRva2VuKSB7XHJcbiAgICByZXR1cm4gKGF1dGhUb2tlbi5yZXF1ZXN0U3RhdHVzID09PSAxIC8qIFJlcXVlc3RTdGF0dXMuSU5fUFJPR1JFU1MgKi8gJiZcclxuICAgICAgICBhdXRoVG9rZW4ucmVxdWVzdFRpbWUgKyBQRU5ESU5HX1RJTUVPVVRfTVMgPCBEYXRlLm5vdygpKTtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQ3JlYXRlcyBhIEZpcmViYXNlIEluc3RhbGxhdGlvbiBpZiB0aGVyZSBpc24ndCBvbmUgZm9yIHRoZSBhcHAgYW5kXHJcbiAqIHJldHVybnMgdGhlIEluc3RhbGxhdGlvbiBJRC5cclxuICogQHBhcmFtIGluc3RhbGxhdGlvbnMgLSBUaGUgYEluc3RhbGxhdGlvbnNgIGluc3RhbmNlLlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBnZXRJZChpbnN0YWxsYXRpb25zKSB7XHJcbiAgICBjb25zdCBpbnN0YWxsYXRpb25zSW1wbCA9IGluc3RhbGxhdGlvbnM7XHJcbiAgICBjb25zdCB7IGluc3RhbGxhdGlvbkVudHJ5LCByZWdpc3RyYXRpb25Qcm9taXNlIH0gPSBhd2FpdCBnZXRJbnN0YWxsYXRpb25FbnRyeShpbnN0YWxsYXRpb25zSW1wbCk7XHJcbiAgICBpZiAocmVnaXN0cmF0aW9uUHJvbWlzZSkge1xyXG4gICAgICAgIHJlZ2lzdHJhdGlvblByb21pc2UuY2F0Y2goY29uc29sZS5lcnJvcik7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICAvLyBJZiB0aGUgaW5zdGFsbGF0aW9uIGlzIGFscmVhZHkgcmVnaXN0ZXJlZCwgdXBkYXRlIHRoZSBhdXRoZW50aWNhdGlvblxyXG4gICAgICAgIC8vIHRva2VuIGlmIG5lZWRlZC5cclxuICAgICAgICByZWZyZXNoQXV0aFRva2VuKGluc3RhbGxhdGlvbnNJbXBsKS5jYXRjaChjb25zb2xlLmVycm9yKTtcclxuICAgIH1cclxuICAgIHJldHVybiBpbnN0YWxsYXRpb25FbnRyeS5maWQ7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgYSBGaXJlYmFzZSBJbnN0YWxsYXRpb25zIGF1dGggdG9rZW4sIGlkZW50aWZ5aW5nIHRoZSBjdXJyZW50XHJcbiAqIEZpcmViYXNlIEluc3RhbGxhdGlvbi5cclxuICogQHBhcmFtIGluc3RhbGxhdGlvbnMgLSBUaGUgYEluc3RhbGxhdGlvbnNgIGluc3RhbmNlLlxyXG4gKiBAcGFyYW0gZm9yY2VSZWZyZXNoIC0gRm9yY2UgcmVmcmVzaCByZWdhcmRsZXNzIG9mIHRva2VuIGV4cGlyYXRpb24uXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGdldFRva2VuKGluc3RhbGxhdGlvbnMsIGZvcmNlUmVmcmVzaCA9IGZhbHNlKSB7XHJcbiAgICBjb25zdCBpbnN0YWxsYXRpb25zSW1wbCA9IGluc3RhbGxhdGlvbnM7XHJcbiAgICBhd2FpdCBjb21wbGV0ZUluc3RhbGxhdGlvblJlZ2lzdHJhdGlvbihpbnN0YWxsYXRpb25zSW1wbCk7XHJcbiAgICAvLyBBdCB0aGlzIHBvaW50IHdlIGVpdGhlciBoYXZlIGEgUmVnaXN0ZXJlZCBJbnN0YWxsYXRpb24gaW4gdGhlIERCLCBvciB3ZSd2ZVxyXG4gICAgLy8gYWxyZWFkeSB0aHJvd24gYW4gZXJyb3IuXHJcbiAgICBjb25zdCBhdXRoVG9rZW4gPSBhd2FpdCByZWZyZXNoQXV0aFRva2VuKGluc3RhbGxhdGlvbnNJbXBsLCBmb3JjZVJlZnJlc2gpO1xyXG4gICAgcmV0dXJuIGF1dGhUb2tlbi50b2tlbjtcclxufVxyXG5hc3luYyBmdW5jdGlvbiBjb21wbGV0ZUluc3RhbGxhdGlvblJlZ2lzdHJhdGlvbihpbnN0YWxsYXRpb25zKSB7XHJcbiAgICBjb25zdCB7IHJlZ2lzdHJhdGlvblByb21pc2UgfSA9IGF3YWl0IGdldEluc3RhbGxhdGlvbkVudHJ5KGluc3RhbGxhdGlvbnMpO1xyXG4gICAgaWYgKHJlZ2lzdHJhdGlvblByb21pc2UpIHtcclxuICAgICAgICAvLyBBIGNyZWF0ZUluc3RhbGxhdGlvbiByZXF1ZXN0IGlzIGluIHByb2dyZXNzLiBXYWl0IHVudGlsIGl0IGZpbmlzaGVzLlxyXG4gICAgICAgIGF3YWl0IHJlZ2lzdHJhdGlvblByb21pc2U7XHJcbiAgICB9XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlSW5zdGFsbGF0aW9uUmVxdWVzdChhcHBDb25maWcsIGluc3RhbGxhdGlvbkVudHJ5KSB7XHJcbiAgICBjb25zdCBlbmRwb2ludCA9IGdldERlbGV0ZUVuZHBvaW50KGFwcENvbmZpZywgaW5zdGFsbGF0aW9uRW50cnkpO1xyXG4gICAgY29uc3QgaGVhZGVycyA9IGdldEhlYWRlcnNXaXRoQXV0aChhcHBDb25maWcsIGluc3RhbGxhdGlvbkVudHJ5KTtcclxuICAgIGNvbnN0IHJlcXVlc3QgPSB7XHJcbiAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgICBoZWFkZXJzXHJcbiAgICB9O1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXRyeUlmU2VydmVyRXJyb3IoKCkgPT4gZmV0Y2goZW5kcG9pbnQsIHJlcXVlc3QpKTtcclxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBhd2FpdCBnZXRFcnJvckZyb21SZXNwb25zZSgnRGVsZXRlIEluc3RhbGxhdGlvbicsIHJlc3BvbnNlKTtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBnZXREZWxldGVFbmRwb2ludChhcHBDb25maWcsIHsgZmlkIH0pIHtcclxuICAgIHJldHVybiBgJHtnZXRJbnN0YWxsYXRpb25zRW5kcG9pbnQoYXBwQ29uZmlnKX0vJHtmaWR9YDtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogRGVsZXRlcyB0aGUgRmlyZWJhc2UgSW5zdGFsbGF0aW9uIGFuZCBhbGwgYXNzb2NpYXRlZCBkYXRhLlxyXG4gKiBAcGFyYW0gaW5zdGFsbGF0aW9ucyAtIFRoZSBgSW5zdGFsbGF0aW9uc2AgaW5zdGFuY2UuXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUluc3RhbGxhdGlvbnMoaW5zdGFsbGF0aW9ucykge1xyXG4gICAgY29uc3QgeyBhcHBDb25maWcgfSA9IGluc3RhbGxhdGlvbnM7XHJcbiAgICBjb25zdCBlbnRyeSA9IGF3YWl0IHVwZGF0ZShhcHBDb25maWcsIG9sZEVudHJ5ID0+IHtcclxuICAgICAgICBpZiAob2xkRW50cnkgJiYgb2xkRW50cnkucmVnaXN0cmF0aW9uU3RhdHVzID09PSAwIC8qIFJlcXVlc3RTdGF0dXMuTk9UX1NUQVJURUQgKi8pIHtcclxuICAgICAgICAgICAgLy8gRGVsZXRlIHRoZSB1bnJlZ2lzdGVyZWQgZW50cnkgd2l0aG91dCBzZW5kaW5nIGEgZGVsZXRlSW5zdGFsbGF0aW9uIHJlcXVlc3QuXHJcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBvbGRFbnRyeTtcclxuICAgIH0pO1xyXG4gICAgaWYgKGVudHJ5KSB7XHJcbiAgICAgICAgaWYgKGVudHJ5LnJlZ2lzdHJhdGlvblN0YXR1cyA9PT0gMSAvKiBSZXF1ZXN0U3RhdHVzLklOX1BST0dSRVNTICovKSB7XHJcbiAgICAgICAgICAgIC8vIENhbid0IGRlbGV0ZSB3aGlsZSB0cnlpbmcgdG8gcmVnaXN0ZXIuXHJcbiAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiZGVsZXRlLXBlbmRpbmctcmVnaXN0cmF0aW9uXCIgLyogRXJyb3JDb2RlLkRFTEVURV9QRU5ESU5HX1JFR0lTVFJBVElPTiAqLyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGVudHJ5LnJlZ2lzdHJhdGlvblN0YXR1cyA9PT0gMiAvKiBSZXF1ZXN0U3RhdHVzLkNPTVBMRVRFRCAqLykge1xyXG4gICAgICAgICAgICBpZiAoIW5hdmlnYXRvci5vbkxpbmUpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiYXBwLW9mZmxpbmVcIiAvKiBFcnJvckNvZGUuQVBQX09GRkxJTkUgKi8pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYXdhaXQgZGVsZXRlSW5zdGFsbGF0aW9uUmVxdWVzdChhcHBDb25maWcsIGVudHJ5KTtcclxuICAgICAgICAgICAgICAgIGF3YWl0IHJlbW92ZShhcHBDb25maWcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBTZXRzIGEgbmV3IGNhbGxiYWNrIHRoYXQgd2lsbCBnZXQgY2FsbGVkIHdoZW4gSW5zdGFsbGF0aW9uIElEIGNoYW5nZXMuXHJcbiAqIFJldHVybnMgYW4gdW5zdWJzY3JpYmUgZnVuY3Rpb24gdGhhdCB3aWxsIHJlbW92ZSB0aGUgY2FsbGJhY2sgd2hlbiBjYWxsZWQuXHJcbiAqIEBwYXJhbSBpbnN0YWxsYXRpb25zIC0gVGhlIGBJbnN0YWxsYXRpb25zYCBpbnN0YW5jZS5cclxuICogQHBhcmFtIGNhbGxiYWNrIC0gVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgaXMgaW52b2tlZCB3aGVuIEZJRCBjaGFuZ2VzLlxyXG4gKiBAcmV0dXJucyBBIGZ1bmN0aW9uIHRoYXQgY2FuIGJlIGNhbGxlZCB0byB1bnN1YnNjcmliZS5cclxuICpcclxuICogQHB1YmxpY1xyXG4gKi9cclxuZnVuY3Rpb24gb25JZENoYW5nZShpbnN0YWxsYXRpb25zLCBjYWxsYmFjaykge1xyXG4gICAgY29uc3QgeyBhcHBDb25maWcgfSA9IGluc3RhbGxhdGlvbnM7XHJcbiAgICBhZGRDYWxsYmFjayhhcHBDb25maWcsIGNhbGxiYWNrKTtcclxuICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgcmVtb3ZlQ2FsbGJhY2soYXBwQ29uZmlnLCBjYWxsYmFjayk7XHJcbiAgICB9O1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBSZXR1cm5zIGFuIGluc3RhbmNlIG9mIHtAbGluayBJbnN0YWxsYXRpb25zfSBhc3NvY2lhdGVkIHdpdGggdGhlIGdpdmVuXHJcbiAqIHtAbGluayBAZmlyZWJhc2UvYXBwI0ZpcmViYXNlQXBwfSBpbnN0YW5jZS5cclxuICogQHBhcmFtIGFwcCAtIFRoZSB7QGxpbmsgQGZpcmViYXNlL2FwcCNGaXJlYmFzZUFwcH0gaW5zdGFuY2UuXHJcbiAqXHJcbiAqIEBwdWJsaWNcclxuICovXHJcbmZ1bmN0aW9uIGdldEluc3RhbGxhdGlvbnMoYXBwID0gZ2V0QXBwKCkpIHtcclxuICAgIGNvbnN0IGluc3RhbGxhdGlvbnNJbXBsID0gX2dldFByb3ZpZGVyKGFwcCwgJ2luc3RhbGxhdGlvbnMnKS5nZXRJbW1lZGlhdGUoKTtcclxuICAgIHJldHVybiBpbnN0YWxsYXRpb25zSW1wbDtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5mdW5jdGlvbiBleHRyYWN0QXBwQ29uZmlnKGFwcCkge1xyXG4gICAgaWYgKCFhcHAgfHwgIWFwcC5vcHRpb25zKSB7XHJcbiAgICAgICAgdGhyb3cgZ2V0TWlzc2luZ1ZhbHVlRXJyb3IoJ0FwcCBDb25maWd1cmF0aW9uJyk7XHJcbiAgICB9XHJcbiAgICBpZiAoIWFwcC5uYW1lKSB7XHJcbiAgICAgICAgdGhyb3cgZ2V0TWlzc2luZ1ZhbHVlRXJyb3IoJ0FwcCBOYW1lJyk7XHJcbiAgICB9XHJcbiAgICAvLyBSZXF1aXJlZCBhcHAgY29uZmlnIGtleXNcclxuICAgIGNvbnN0IGNvbmZpZ0tleXMgPSBbXHJcbiAgICAgICAgJ3Byb2plY3RJZCcsXHJcbiAgICAgICAgJ2FwaUtleScsXHJcbiAgICAgICAgJ2FwcElkJ1xyXG4gICAgXTtcclxuICAgIGZvciAoY29uc3Qga2V5TmFtZSBvZiBjb25maWdLZXlzKSB7XHJcbiAgICAgICAgaWYgKCFhcHAub3B0aW9uc1trZXlOYW1lXSkge1xyXG4gICAgICAgICAgICB0aHJvdyBnZXRNaXNzaW5nVmFsdWVFcnJvcihrZXlOYW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGFwcE5hbWU6IGFwcC5uYW1lLFxyXG4gICAgICAgIHByb2plY3RJZDogYXBwLm9wdGlvbnMucHJvamVjdElkLFxyXG4gICAgICAgIGFwaUtleTogYXBwLm9wdGlvbnMuYXBpS2V5LFxyXG4gICAgICAgIGFwcElkOiBhcHAub3B0aW9ucy5hcHBJZFxyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBnZXRNaXNzaW5nVmFsdWVFcnJvcih2YWx1ZU5hbWUpIHtcclxuICAgIHJldHVybiBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcIm1pc3NpbmctYXBwLWNvbmZpZy12YWx1ZXNcIiAvKiBFcnJvckNvZGUuTUlTU0lOR19BUFBfQ09ORklHX1ZBTFVFUyAqLywge1xyXG4gICAgICAgIHZhbHVlTmFtZVxyXG4gICAgfSk7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgSU5TVEFMTEFUSU9OU19OQU1FID0gJ2luc3RhbGxhdGlvbnMnO1xyXG5jb25zdCBJTlNUQUxMQVRJT05TX05BTUVfSU5URVJOQUwgPSAnaW5zdGFsbGF0aW9ucy1pbnRlcm5hbCc7XHJcbmNvbnN0IHB1YmxpY0ZhY3RvcnkgPSAoY29udGFpbmVyKSA9PiB7XHJcbiAgICBjb25zdCBhcHAgPSBjb250YWluZXIuZ2V0UHJvdmlkZXIoJ2FwcCcpLmdldEltbWVkaWF0ZSgpO1xyXG4gICAgLy8gVGhyb3dzIGlmIGFwcCBpc24ndCBjb25maWd1cmVkIHByb3Blcmx5LlxyXG4gICAgY29uc3QgYXBwQ29uZmlnID0gZXh0cmFjdEFwcENvbmZpZyhhcHApO1xyXG4gICAgY29uc3QgaGVhcnRiZWF0U2VydmljZVByb3ZpZGVyID0gX2dldFByb3ZpZGVyKGFwcCwgJ2hlYXJ0YmVhdCcpO1xyXG4gICAgY29uc3QgaW5zdGFsbGF0aW9uc0ltcGwgPSB7XHJcbiAgICAgICAgYXBwLFxyXG4gICAgICAgIGFwcENvbmZpZyxcclxuICAgICAgICBoZWFydGJlYXRTZXJ2aWNlUHJvdmlkZXIsXHJcbiAgICAgICAgX2RlbGV0ZTogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcclxuICAgIH07XHJcbiAgICByZXR1cm4gaW5zdGFsbGF0aW9uc0ltcGw7XHJcbn07XHJcbmNvbnN0IGludGVybmFsRmFjdG9yeSA9IChjb250YWluZXIpID0+IHtcclxuICAgIGNvbnN0IGFwcCA9IGNvbnRhaW5lci5nZXRQcm92aWRlcignYXBwJykuZ2V0SW1tZWRpYXRlKCk7XHJcbiAgICAvLyBJbnRlcm5hbCBGSVMgaW5zdGFuY2UgcmVsaWVzIG9uIHB1YmxpYyBGSVMgaW5zdGFuY2UuXHJcbiAgICBjb25zdCBpbnN0YWxsYXRpb25zID0gX2dldFByb3ZpZGVyKGFwcCwgSU5TVEFMTEFUSU9OU19OQU1FKS5nZXRJbW1lZGlhdGUoKTtcclxuICAgIGNvbnN0IGluc3RhbGxhdGlvbnNJbnRlcm5hbCA9IHtcclxuICAgICAgICBnZXRJZDogKCkgPT4gZ2V0SWQoaW5zdGFsbGF0aW9ucyksXHJcbiAgICAgICAgZ2V0VG9rZW46IChmb3JjZVJlZnJlc2gpID0+IGdldFRva2VuKGluc3RhbGxhdGlvbnMsIGZvcmNlUmVmcmVzaClcclxuICAgIH07XHJcbiAgICByZXR1cm4gaW5zdGFsbGF0aW9uc0ludGVybmFsO1xyXG59O1xyXG5mdW5jdGlvbiByZWdpc3Rlckluc3RhbGxhdGlvbnMoKSB7XHJcbiAgICBfcmVnaXN0ZXJDb21wb25lbnQobmV3IENvbXBvbmVudChJTlNUQUxMQVRJT05TX05BTUUsIHB1YmxpY0ZhY3RvcnksIFwiUFVCTElDXCIgLyogQ29tcG9uZW50VHlwZS5QVUJMSUMgKi8pKTtcclxuICAgIF9yZWdpc3RlckNvbXBvbmVudChuZXcgQ29tcG9uZW50KElOU1RBTExBVElPTlNfTkFNRV9JTlRFUk5BTCwgaW50ZXJuYWxGYWN0b3J5LCBcIlBSSVZBVEVcIiAvKiBDb21wb25lbnRUeXBlLlBSSVZBVEUgKi8pKTtcclxufVxuXG4vKipcclxuICogRmlyZWJhc2UgSW5zdGFsbGF0aW9uc1xyXG4gKlxyXG4gKiBAcGFja2FnZURvY3VtZW50YXRpb25cclxuICovXHJcbnJlZ2lzdGVySW5zdGFsbGF0aW9ucygpO1xyXG5yZWdpc3RlclZlcnNpb24obmFtZSwgdmVyc2lvbik7XHJcbi8vIEJVSUxEX1RBUkdFVCB3aWxsIGJlIHJlcGxhY2VkIGJ5IHZhbHVlcyBsaWtlIGVzbTUsIGVzbTIwMTcsIGNqczUsIGV0YyBkdXJpbmcgdGhlIGNvbXBpbGF0aW9uXHJcbnJlZ2lzdGVyVmVyc2lvbihuYW1lLCB2ZXJzaW9uLCAnZXNtMjAxNycpO1xuXG5leHBvcnQgeyBkZWxldGVJbnN0YWxsYXRpb25zLCBnZXRJZCwgZ2V0SW5zdGFsbGF0aW9ucywgZ2V0VG9rZW4sIG9uSWRDaGFuZ2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzbTIwMTcuanMubWFwXG4iLCJpbXBvcnQgeyB3IGFzIHdyYXAsIHIgYXMgcmVwbGFjZVRyYXBzIH0gZnJvbSAnLi93cmFwLWlkYi12YWx1ZS5qcyc7XG5leHBvcnQgeyB1IGFzIHVud3JhcCwgdyBhcyB3cmFwIH0gZnJvbSAnLi93cmFwLWlkYi12YWx1ZS5qcyc7XG5cbi8qKlxuICogT3BlbiBhIGRhdGFiYXNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIE5hbWUgb2YgdGhlIGRhdGFiYXNlLlxuICogQHBhcmFtIHZlcnNpb24gU2NoZW1hIHZlcnNpb24uXG4gKiBAcGFyYW0gY2FsbGJhY2tzIEFkZGl0aW9uYWwgY2FsbGJhY2tzLlxuICovXG5mdW5jdGlvbiBvcGVuREIobmFtZSwgdmVyc2lvbiwgeyBibG9ja2VkLCB1cGdyYWRlLCBibG9ja2luZywgdGVybWluYXRlZCB9ID0ge30pIHtcbiAgICBjb25zdCByZXF1ZXN0ID0gaW5kZXhlZERCLm9wZW4obmFtZSwgdmVyc2lvbik7XG4gICAgY29uc3Qgb3BlblByb21pc2UgPSB3cmFwKHJlcXVlc3QpO1xuICAgIGlmICh1cGdyYWRlKSB7XG4gICAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcigndXBncmFkZW5lZWRlZCcsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgdXBncmFkZSh3cmFwKHJlcXVlc3QucmVzdWx0KSwgZXZlbnQub2xkVmVyc2lvbiwgZXZlbnQubmV3VmVyc2lvbiwgd3JhcChyZXF1ZXN0LnRyYW5zYWN0aW9uKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoYmxvY2tlZClcbiAgICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdibG9ja2VkJywgKCkgPT4gYmxvY2tlZCgpKTtcbiAgICBvcGVuUHJvbWlzZVxuICAgICAgICAudGhlbigoZGIpID0+IHtcbiAgICAgICAgaWYgKHRlcm1pbmF0ZWQpXG4gICAgICAgICAgICBkYi5hZGRFdmVudExpc3RlbmVyKCdjbG9zZScsICgpID0+IHRlcm1pbmF0ZWQoKSk7XG4gICAgICAgIGlmIChibG9ja2luZylcbiAgICAgICAgICAgIGRiLmFkZEV2ZW50TGlzdGVuZXIoJ3ZlcnNpb25jaGFuZ2UnLCAoKSA9PiBibG9ja2luZygpKTtcbiAgICB9KVxuICAgICAgICAuY2F0Y2goKCkgPT4geyB9KTtcbiAgICByZXR1cm4gb3BlblByb21pc2U7XG59XG4vKipcbiAqIERlbGV0ZSBhIGRhdGFiYXNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIE5hbWUgb2YgdGhlIGRhdGFiYXNlLlxuICovXG5mdW5jdGlvbiBkZWxldGVEQihuYW1lLCB7IGJsb2NrZWQgfSA9IHt9KSB7XG4gICAgY29uc3QgcmVxdWVzdCA9IGluZGV4ZWREQi5kZWxldGVEYXRhYmFzZShuYW1lKTtcbiAgICBpZiAoYmxvY2tlZClcbiAgICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdibG9ja2VkJywgKCkgPT4gYmxvY2tlZCgpKTtcbiAgICByZXR1cm4gd3JhcChyZXF1ZXN0KS50aGVuKCgpID0+IHVuZGVmaW5lZCk7XG59XG5cbmNvbnN0IHJlYWRNZXRob2RzID0gWydnZXQnLCAnZ2V0S2V5JywgJ2dldEFsbCcsICdnZXRBbGxLZXlzJywgJ2NvdW50J107XG5jb25zdCB3cml0ZU1ldGhvZHMgPSBbJ3B1dCcsICdhZGQnLCAnZGVsZXRlJywgJ2NsZWFyJ107XG5jb25zdCBjYWNoZWRNZXRob2RzID0gbmV3IE1hcCgpO1xuZnVuY3Rpb24gZ2V0TWV0aG9kKHRhcmdldCwgcHJvcCkge1xuICAgIGlmICghKHRhcmdldCBpbnN0YW5jZW9mIElEQkRhdGFiYXNlICYmXG4gICAgICAgICEocHJvcCBpbiB0YXJnZXQpICYmXG4gICAgICAgIHR5cGVvZiBwcm9wID09PSAnc3RyaW5nJykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoY2FjaGVkTWV0aG9kcy5nZXQocHJvcCkpXG4gICAgICAgIHJldHVybiBjYWNoZWRNZXRob2RzLmdldChwcm9wKTtcbiAgICBjb25zdCB0YXJnZXRGdW5jTmFtZSA9IHByb3AucmVwbGFjZSgvRnJvbUluZGV4JC8sICcnKTtcbiAgICBjb25zdCB1c2VJbmRleCA9IHByb3AgIT09IHRhcmdldEZ1bmNOYW1lO1xuICAgIGNvbnN0IGlzV3JpdGUgPSB3cml0ZU1ldGhvZHMuaW5jbHVkZXModGFyZ2V0RnVuY05hbWUpO1xuICAgIGlmIChcbiAgICAvLyBCYWlsIGlmIHRoZSB0YXJnZXQgZG9lc24ndCBleGlzdCBvbiB0aGUgdGFyZ2V0LiBFZywgZ2V0QWxsIGlzbid0IGluIEVkZ2UuXG4gICAgISh0YXJnZXRGdW5jTmFtZSBpbiAodXNlSW5kZXggPyBJREJJbmRleCA6IElEQk9iamVjdFN0b3JlKS5wcm90b3R5cGUpIHx8XG4gICAgICAgICEoaXNXcml0ZSB8fCByZWFkTWV0aG9kcy5pbmNsdWRlcyh0YXJnZXRGdW5jTmFtZSkpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgbWV0aG9kID0gYXN5bmMgZnVuY3Rpb24gKHN0b3JlTmFtZSwgLi4uYXJncykge1xuICAgICAgICAvLyBpc1dyaXRlID8gJ3JlYWR3cml0ZScgOiB1bmRlZmluZWQgZ3ppcHBzIGJldHRlciwgYnV0IGZhaWxzIGluIEVkZ2UgOihcbiAgICAgICAgY29uc3QgdHggPSB0aGlzLnRyYW5zYWN0aW9uKHN0b3JlTmFtZSwgaXNXcml0ZSA/ICdyZWFkd3JpdGUnIDogJ3JlYWRvbmx5Jyk7XG4gICAgICAgIGxldCB0YXJnZXQgPSB0eC5zdG9yZTtcbiAgICAgICAgaWYgKHVzZUluZGV4KVxuICAgICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0LmluZGV4KGFyZ3Muc2hpZnQoKSk7XG4gICAgICAgIC8vIE11c3QgcmVqZWN0IGlmIG9wIHJlamVjdHMuXG4gICAgICAgIC8vIElmIGl0J3MgYSB3cml0ZSBvcGVyYXRpb24sIG11c3QgcmVqZWN0IGlmIHR4LmRvbmUgcmVqZWN0cy5cbiAgICAgICAgLy8gTXVzdCByZWplY3Qgd2l0aCBvcCByZWplY3Rpb24gZmlyc3QuXG4gICAgICAgIC8vIE11c3QgcmVzb2x2ZSB3aXRoIG9wIHZhbHVlLlxuICAgICAgICAvLyBNdXN0IGhhbmRsZSBib3RoIHByb21pc2VzIChubyB1bmhhbmRsZWQgcmVqZWN0aW9ucylcbiAgICAgICAgcmV0dXJuIChhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICB0YXJnZXRbdGFyZ2V0RnVuY05hbWVdKC4uLmFyZ3MpLFxuICAgICAgICAgICAgaXNXcml0ZSAmJiB0eC5kb25lLFxuICAgICAgICBdKSlbMF07XG4gICAgfTtcbiAgICBjYWNoZWRNZXRob2RzLnNldChwcm9wLCBtZXRob2QpO1xuICAgIHJldHVybiBtZXRob2Q7XG59XG5yZXBsYWNlVHJhcHMoKG9sZFRyYXBzKSA9PiAoe1xuICAgIC4uLm9sZFRyYXBzLFxuICAgIGdldDogKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpID0+IGdldE1ldGhvZCh0YXJnZXQsIHByb3ApIHx8IG9sZFRyYXBzLmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSxcbiAgICBoYXM6ICh0YXJnZXQsIHByb3ApID0+ICEhZ2V0TWV0aG9kKHRhcmdldCwgcHJvcCkgfHwgb2xkVHJhcHMuaGFzKHRhcmdldCwgcHJvcCksXG59KSk7XG5cbmV4cG9ydCB7IGRlbGV0ZURCLCBvcGVuREIgfTtcbiIsImNvbnN0IGluc3RhbmNlT2ZBbnkgPSAob2JqZWN0LCBjb25zdHJ1Y3RvcnMpID0+IGNvbnN0cnVjdG9ycy5zb21lKChjKSA9PiBvYmplY3QgaW5zdGFuY2VvZiBjKTtcblxubGV0IGlkYlByb3h5YWJsZVR5cGVzO1xubGV0IGN1cnNvckFkdmFuY2VNZXRob2RzO1xuLy8gVGhpcyBpcyBhIGZ1bmN0aW9uIHRvIHByZXZlbnQgaXQgdGhyb3dpbmcgdXAgaW4gbm9kZSBlbnZpcm9ubWVudHMuXG5mdW5jdGlvbiBnZXRJZGJQcm94eWFibGVUeXBlcygpIHtcbiAgICByZXR1cm4gKGlkYlByb3h5YWJsZVR5cGVzIHx8XG4gICAgICAgIChpZGJQcm94eWFibGVUeXBlcyA9IFtcbiAgICAgICAgICAgIElEQkRhdGFiYXNlLFxuICAgICAgICAgICAgSURCT2JqZWN0U3RvcmUsXG4gICAgICAgICAgICBJREJJbmRleCxcbiAgICAgICAgICAgIElEQkN1cnNvcixcbiAgICAgICAgICAgIElEQlRyYW5zYWN0aW9uLFxuICAgICAgICBdKSk7XG59XG4vLyBUaGlzIGlzIGEgZnVuY3Rpb24gdG8gcHJldmVudCBpdCB0aHJvd2luZyB1cCBpbiBub2RlIGVudmlyb25tZW50cy5cbmZ1bmN0aW9uIGdldEN1cnNvckFkdmFuY2VNZXRob2RzKCkge1xuICAgIHJldHVybiAoY3Vyc29yQWR2YW5jZU1ldGhvZHMgfHxcbiAgICAgICAgKGN1cnNvckFkdmFuY2VNZXRob2RzID0gW1xuICAgICAgICAgICAgSURCQ3Vyc29yLnByb3RvdHlwZS5hZHZhbmNlLFxuICAgICAgICAgICAgSURCQ3Vyc29yLnByb3RvdHlwZS5jb250aW51ZSxcbiAgICAgICAgICAgIElEQkN1cnNvci5wcm90b3R5cGUuY29udGludWVQcmltYXJ5S2V5LFxuICAgICAgICBdKSk7XG59XG5jb25zdCBjdXJzb3JSZXF1ZXN0TWFwID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IHRyYW5zYWN0aW9uRG9uZU1hcCA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCB0cmFuc2FjdGlvblN0b3JlTmFtZXNNYXAgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgdHJhbnNmb3JtQ2FjaGUgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgcmV2ZXJzZVRyYW5zZm9ybUNhY2hlID0gbmV3IFdlYWtNYXAoKTtcbmZ1bmN0aW9uIHByb21pc2lmeVJlcXVlc3QocmVxdWVzdCkge1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHVubGlzdGVuID0gKCkgPT4ge1xuICAgICAgICAgICAgcmVxdWVzdC5yZW1vdmVFdmVudExpc3RlbmVyKCdzdWNjZXNzJywgc3VjY2Vzcyk7XG4gICAgICAgICAgICByZXF1ZXN0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZXJyb3IpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBzdWNjZXNzID0gKCkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZSh3cmFwKHJlcXVlc3QucmVzdWx0KSk7XG4gICAgICAgICAgICB1bmxpc3RlbigpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBlcnJvciA9ICgpID0+IHtcbiAgICAgICAgICAgIHJlamVjdChyZXF1ZXN0LmVycm9yKTtcbiAgICAgICAgICAgIHVubGlzdGVuKCk7XG4gICAgICAgIH07XG4gICAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcignc3VjY2VzcycsIHN1Y2Nlc3MpO1xuICAgICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZXJyb3IpO1xuICAgIH0pO1xuICAgIHByb21pc2VcbiAgICAgICAgLnRoZW4oKHZhbHVlKSA9PiB7XG4gICAgICAgIC8vIFNpbmNlIGN1cnNvcmluZyByZXVzZXMgdGhlIElEQlJlcXVlc3QgKCpzaWdoKiksIHdlIGNhY2hlIGl0IGZvciBsYXRlciByZXRyaWV2YWxcbiAgICAgICAgLy8gKHNlZSB3cmFwRnVuY3Rpb24pLlxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBJREJDdXJzb3IpIHtcbiAgICAgICAgICAgIGN1cnNvclJlcXVlc3RNYXAuc2V0KHZhbHVlLCByZXF1ZXN0KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBDYXRjaGluZyB0byBhdm9pZCBcIlVuY2F1Z2h0IFByb21pc2UgZXhjZXB0aW9uc1wiXG4gICAgfSlcbiAgICAgICAgLmNhdGNoKCgpID0+IHsgfSk7XG4gICAgLy8gVGhpcyBtYXBwaW5nIGV4aXN0cyBpbiByZXZlcnNlVHJhbnNmb3JtQ2FjaGUgYnV0IGRvZXNuJ3QgZG9lc24ndCBleGlzdCBpbiB0cmFuc2Zvcm1DYWNoZS4gVGhpc1xuICAgIC8vIGlzIGJlY2F1c2Ugd2UgY3JlYXRlIG1hbnkgcHJvbWlzZXMgZnJvbSBhIHNpbmdsZSBJREJSZXF1ZXN0LlxuICAgIHJldmVyc2VUcmFuc2Zvcm1DYWNoZS5zZXQocHJvbWlzZSwgcmVxdWVzdCk7XG4gICAgcmV0dXJuIHByb21pc2U7XG59XG5mdW5jdGlvbiBjYWNoZURvbmVQcm9taXNlRm9yVHJhbnNhY3Rpb24odHgpIHtcbiAgICAvLyBFYXJseSBiYWlsIGlmIHdlJ3ZlIGFscmVhZHkgY3JlYXRlZCBhIGRvbmUgcHJvbWlzZSBmb3IgdGhpcyB0cmFuc2FjdGlvbi5cbiAgICBpZiAodHJhbnNhY3Rpb25Eb25lTWFwLmhhcyh0eCkpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zdCBkb25lID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBjb25zdCB1bmxpc3RlbiA9ICgpID0+IHtcbiAgICAgICAgICAgIHR4LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NvbXBsZXRlJywgY29tcGxldGUpO1xuICAgICAgICAgICAgdHgucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXJyb3InLCBlcnJvcik7XG4gICAgICAgICAgICB0eC5yZW1vdmVFdmVudExpc3RlbmVyKCdhYm9ydCcsIGVycm9yKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgY29tcGxldGUgPSAoKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICB1bmxpc3RlbigpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBlcnJvciA9ICgpID0+IHtcbiAgICAgICAgICAgIHJlamVjdCh0eC5lcnJvciB8fCBuZXcgRE9NRXhjZXB0aW9uKCdBYm9ydEVycm9yJywgJ0Fib3J0RXJyb3InKSk7XG4gICAgICAgICAgICB1bmxpc3RlbigpO1xuICAgICAgICB9O1xuICAgICAgICB0eC5hZGRFdmVudExpc3RlbmVyKCdjb21wbGV0ZScsIGNvbXBsZXRlKTtcbiAgICAgICAgdHguYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBlcnJvcik7XG4gICAgICAgIHR4LmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgZXJyb3IpO1xuICAgIH0pO1xuICAgIC8vIENhY2hlIGl0IGZvciBsYXRlciByZXRyaWV2YWwuXG4gICAgdHJhbnNhY3Rpb25Eb25lTWFwLnNldCh0eCwgZG9uZSk7XG59XG5sZXQgaWRiUHJveHlUcmFwcyA9IHtcbiAgICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSURCVHJhbnNhY3Rpb24pIHtcbiAgICAgICAgICAgIC8vIFNwZWNpYWwgaGFuZGxpbmcgZm9yIHRyYW5zYWN0aW9uLmRvbmUuXG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gJ2RvbmUnKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2FjdGlvbkRvbmVNYXAuZ2V0KHRhcmdldCk7XG4gICAgICAgICAgICAvLyBQb2x5ZmlsbCBmb3Igb2JqZWN0U3RvcmVOYW1lcyBiZWNhdXNlIG9mIEVkZ2UuXG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gJ29iamVjdFN0b3JlTmFtZXMnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5vYmplY3RTdG9yZU5hbWVzIHx8IHRyYW5zYWN0aW9uU3RvcmVOYW1lc01hcC5nZXQodGFyZ2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE1ha2UgdHguc3RvcmUgcmV0dXJuIHRoZSBvbmx5IHN0b3JlIGluIHRoZSB0cmFuc2FjdGlvbiwgb3IgdW5kZWZpbmVkIGlmIHRoZXJlIGFyZSBtYW55LlxuICAgICAgICAgICAgaWYgKHByb3AgPT09ICdzdG9yZScpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVjZWl2ZXIub2JqZWN0U3RvcmVOYW1lc1sxXVxuICAgICAgICAgICAgICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICA6IHJlY2VpdmVyLm9iamVjdFN0b3JlKHJlY2VpdmVyLm9iamVjdFN0b3JlTmFtZXNbMF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIEVsc2UgdHJhbnNmb3JtIHdoYXRldmVyIHdlIGdldCBiYWNrLlxuICAgICAgICByZXR1cm4gd3JhcCh0YXJnZXRbcHJvcF0pO1xuICAgIH0sXG4gICAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpIHtcbiAgICAgICAgdGFyZ2V0W3Byb3BdID0gdmFsdWU7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgaGFzKHRhcmdldCwgcHJvcCkge1xuICAgICAgICBpZiAodGFyZ2V0IGluc3RhbmNlb2YgSURCVHJhbnNhY3Rpb24gJiZcbiAgICAgICAgICAgIChwcm9wID09PSAnZG9uZScgfHwgcHJvcCA9PT0gJ3N0b3JlJykpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcm9wIGluIHRhcmdldDtcbiAgICB9LFxufTtcbmZ1bmN0aW9uIHJlcGxhY2VUcmFwcyhjYWxsYmFjaykge1xuICAgIGlkYlByb3h5VHJhcHMgPSBjYWxsYmFjayhpZGJQcm94eVRyYXBzKTtcbn1cbmZ1bmN0aW9uIHdyYXBGdW5jdGlvbihmdW5jKSB7XG4gICAgLy8gRHVlIHRvIGV4cGVjdGVkIG9iamVjdCBlcXVhbGl0eSAod2hpY2ggaXMgZW5mb3JjZWQgYnkgdGhlIGNhY2hpbmcgaW4gYHdyYXBgKSwgd2VcbiAgICAvLyBvbmx5IGNyZWF0ZSBvbmUgbmV3IGZ1bmMgcGVyIGZ1bmMuXG4gICAgLy8gRWRnZSBkb2Vzbid0IHN1cHBvcnQgb2JqZWN0U3RvcmVOYW1lcyAoYm9vbyksIHNvIHdlIHBvbHlmaWxsIGl0IGhlcmUuXG4gICAgaWYgKGZ1bmMgPT09IElEQkRhdGFiYXNlLnByb3RvdHlwZS50cmFuc2FjdGlvbiAmJlxuICAgICAgICAhKCdvYmplY3RTdG9yZU5hbWVzJyBpbiBJREJUcmFuc2FjdGlvbi5wcm90b3R5cGUpKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoc3RvcmVOYW1lcywgLi4uYXJncykge1xuICAgICAgICAgICAgY29uc3QgdHggPSBmdW5jLmNhbGwodW53cmFwKHRoaXMpLCBzdG9yZU5hbWVzLCAuLi5hcmdzKTtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uU3RvcmVOYW1lc01hcC5zZXQodHgsIHN0b3JlTmFtZXMuc29ydCA/IHN0b3JlTmFtZXMuc29ydCgpIDogW3N0b3JlTmFtZXNdKTtcbiAgICAgICAgICAgIHJldHVybiB3cmFwKHR4KTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLy8gQ3Vyc29yIG1ldGhvZHMgYXJlIHNwZWNpYWwsIGFzIHRoZSBiZWhhdmlvdXIgaXMgYSBsaXR0bGUgbW9yZSBkaWZmZXJlbnQgdG8gc3RhbmRhcmQgSURCLiBJblxuICAgIC8vIElEQiwgeW91IGFkdmFuY2UgdGhlIGN1cnNvciBhbmQgd2FpdCBmb3IgYSBuZXcgJ3N1Y2Nlc3MnIG9uIHRoZSBJREJSZXF1ZXN0IHRoYXQgZ2F2ZSB5b3UgdGhlXG4gICAgLy8gY3Vyc29yLiBJdCdzIGtpbmRhIGxpa2UgYSBwcm9taXNlIHRoYXQgY2FuIHJlc29sdmUgd2l0aCBtYW55IHZhbHVlcy4gVGhhdCBkb2Vzbid0IG1ha2Ugc2Vuc2VcbiAgICAvLyB3aXRoIHJlYWwgcHJvbWlzZXMsIHNvIGVhY2ggYWR2YW5jZSBtZXRob2RzIHJldHVybnMgYSBuZXcgcHJvbWlzZSBmb3IgdGhlIGN1cnNvciBvYmplY3QsIG9yXG4gICAgLy8gdW5kZWZpbmVkIGlmIHRoZSBlbmQgb2YgdGhlIGN1cnNvciBoYXMgYmVlbiByZWFjaGVkLlxuICAgIGlmIChnZXRDdXJzb3JBZHZhbmNlTWV0aG9kcygpLmluY2x1ZGVzKGZ1bmMpKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICAgICAgLy8gQ2FsbGluZyB0aGUgb3JpZ2luYWwgZnVuY3Rpb24gd2l0aCB0aGUgcHJveHkgYXMgJ3RoaXMnIGNhdXNlcyBJTExFR0FMIElOVk9DQVRJT04sIHNvIHdlIHVzZVxuICAgICAgICAgICAgLy8gdGhlIG9yaWdpbmFsIG9iamVjdC5cbiAgICAgICAgICAgIGZ1bmMuYXBwbHkodW53cmFwKHRoaXMpLCBhcmdzKTtcbiAgICAgICAgICAgIHJldHVybiB3cmFwKGN1cnNvclJlcXVlc3RNYXAuZ2V0KHRoaXMpKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgIC8vIENhbGxpbmcgdGhlIG9yaWdpbmFsIGZ1bmN0aW9uIHdpdGggdGhlIHByb3h5IGFzICd0aGlzJyBjYXVzZXMgSUxMRUdBTCBJTlZPQ0FUSU9OLCBzbyB3ZSB1c2VcbiAgICAgICAgLy8gdGhlIG9yaWdpbmFsIG9iamVjdC5cbiAgICAgICAgcmV0dXJuIHdyYXAoZnVuYy5hcHBseSh1bndyYXAodGhpcyksIGFyZ3MpKTtcbiAgICB9O1xufVxuZnVuY3Rpb24gdHJhbnNmb3JtQ2FjaGFibGVWYWx1ZSh2YWx1ZSkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpXG4gICAgICAgIHJldHVybiB3cmFwRnVuY3Rpb24odmFsdWUpO1xuICAgIC8vIFRoaXMgZG9lc24ndCByZXR1cm4sIGl0IGp1c3QgY3JlYXRlcyBhICdkb25lJyBwcm9taXNlIGZvciB0aGUgdHJhbnNhY3Rpb24sXG4gICAgLy8gd2hpY2ggaXMgbGF0ZXIgcmV0dXJuZWQgZm9yIHRyYW5zYWN0aW9uLmRvbmUgKHNlZSBpZGJPYmplY3RIYW5kbGVyKS5cbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBJREJUcmFuc2FjdGlvbilcbiAgICAgICAgY2FjaGVEb25lUHJvbWlzZUZvclRyYW5zYWN0aW9uKHZhbHVlKTtcbiAgICBpZiAoaW5zdGFuY2VPZkFueSh2YWx1ZSwgZ2V0SWRiUHJveHlhYmxlVHlwZXMoKSkpXG4gICAgICAgIHJldHVybiBuZXcgUHJveHkodmFsdWUsIGlkYlByb3h5VHJhcHMpO1xuICAgIC8vIFJldHVybiB0aGUgc2FtZSB2YWx1ZSBiYWNrIGlmIHdlJ3JlIG5vdCBnb2luZyB0byB0cmFuc2Zvcm0gaXQuXG4gICAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gd3JhcCh2YWx1ZSkge1xuICAgIC8vIFdlIHNvbWV0aW1lcyBnZW5lcmF0ZSBtdWx0aXBsZSBwcm9taXNlcyBmcm9tIGEgc2luZ2xlIElEQlJlcXVlc3QgKGVnIHdoZW4gY3Vyc29yaW5nKSwgYmVjYXVzZVxuICAgIC8vIElEQiBpcyB3ZWlyZCBhbmQgYSBzaW5nbGUgSURCUmVxdWVzdCBjYW4geWllbGQgbWFueSByZXNwb25zZXMsIHNvIHRoZXNlIGNhbid0IGJlIGNhY2hlZC5cbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBJREJSZXF1ZXN0KVxuICAgICAgICByZXR1cm4gcHJvbWlzaWZ5UmVxdWVzdCh2YWx1ZSk7XG4gICAgLy8gSWYgd2UndmUgYWxyZWFkeSB0cmFuc2Zvcm1lZCB0aGlzIHZhbHVlIGJlZm9yZSwgcmV1c2UgdGhlIHRyYW5zZm9ybWVkIHZhbHVlLlxuICAgIC8vIFRoaXMgaXMgZmFzdGVyLCBidXQgaXQgYWxzbyBwcm92aWRlcyBvYmplY3QgZXF1YWxpdHkuXG4gICAgaWYgKHRyYW5zZm9ybUNhY2hlLmhhcyh2YWx1ZSkpXG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm1DYWNoZS5nZXQodmFsdWUpO1xuICAgIGNvbnN0IG5ld1ZhbHVlID0gdHJhbnNmb3JtQ2FjaGFibGVWYWx1ZSh2YWx1ZSk7XG4gICAgLy8gTm90IGFsbCB0eXBlcyBhcmUgdHJhbnNmb3JtZWQuXG4gICAgLy8gVGhlc2UgbWF5IGJlIHByaW1pdGl2ZSB0eXBlcywgc28gdGhleSBjYW4ndCBiZSBXZWFrTWFwIGtleXMuXG4gICAgaWYgKG5ld1ZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICB0cmFuc2Zvcm1DYWNoZS5zZXQodmFsdWUsIG5ld1ZhbHVlKTtcbiAgICAgICAgcmV2ZXJzZVRyYW5zZm9ybUNhY2hlLnNldChuZXdWYWx1ZSwgdmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3VmFsdWU7XG59XG5jb25zdCB1bndyYXAgPSAodmFsdWUpID0+IHJldmVyc2VUcmFuc2Zvcm1DYWNoZS5nZXQodmFsdWUpO1xuXG5leHBvcnQgeyByZXZlcnNlVHJhbnNmb3JtQ2FjaGUgYXMgYSwgaW5zdGFuY2VPZkFueSBhcyBpLCByZXBsYWNlVHJhcHMgYXMgciwgdW53cmFwIGFzIHUsIHdyYXAgYXMgdyB9O1xuIiwiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEEgY29udGFpbmVyIGZvciBhbGwgb2YgdGhlIExvZ2dlciBpbnN0YW5jZXNcclxuICovXHJcbmNvbnN0IGluc3RhbmNlcyA9IFtdO1xyXG4vKipcclxuICogVGhlIEpTIFNESyBzdXBwb3J0cyA1IGxvZyBsZXZlbHMgYW5kIGFsc28gYWxsb3dzIGEgdXNlciB0aGUgYWJpbGl0eSB0b1xyXG4gKiBzaWxlbmNlIHRoZSBsb2dzIGFsdG9nZXRoZXIuXHJcbiAqXHJcbiAqIFRoZSBvcmRlciBpcyBhIGZvbGxvd3M6XHJcbiAqIERFQlVHIDwgVkVSQk9TRSA8IElORk8gPCBXQVJOIDwgRVJST1JcclxuICpcclxuICogQWxsIG9mIHRoZSBsb2cgdHlwZXMgYWJvdmUgdGhlIGN1cnJlbnQgbG9nIGxldmVsIHdpbGwgYmUgY2FwdHVyZWQgKGkuZS4gaWZcclxuICogeW91IHNldCB0aGUgbG9nIGxldmVsIHRvIGBJTkZPYCwgZXJyb3JzIHdpbGwgc3RpbGwgYmUgbG9nZ2VkLCBidXQgYERFQlVHYCBhbmRcclxuICogYFZFUkJPU0VgIGxvZ3Mgd2lsbCBub3QpXHJcbiAqL1xyXG52YXIgTG9nTGV2ZWw7XHJcbihmdW5jdGlvbiAoTG9nTGV2ZWwpIHtcclxuICAgIExvZ0xldmVsW0xvZ0xldmVsW1wiREVCVUdcIl0gPSAwXSA9IFwiREVCVUdcIjtcclxuICAgIExvZ0xldmVsW0xvZ0xldmVsW1wiVkVSQk9TRVwiXSA9IDFdID0gXCJWRVJCT1NFXCI7XHJcbiAgICBMb2dMZXZlbFtMb2dMZXZlbFtcIklORk9cIl0gPSAyXSA9IFwiSU5GT1wiO1xyXG4gICAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJXQVJOXCJdID0gM10gPSBcIldBUk5cIjtcclxuICAgIExvZ0xldmVsW0xvZ0xldmVsW1wiRVJST1JcIl0gPSA0XSA9IFwiRVJST1JcIjtcclxuICAgIExvZ0xldmVsW0xvZ0xldmVsW1wiU0lMRU5UXCJdID0gNV0gPSBcIlNJTEVOVFwiO1xyXG59KShMb2dMZXZlbCB8fCAoTG9nTGV2ZWwgPSB7fSkpO1xyXG5jb25zdCBsZXZlbFN0cmluZ1RvRW51bSA9IHtcclxuICAgICdkZWJ1Zyc6IExvZ0xldmVsLkRFQlVHLFxyXG4gICAgJ3ZlcmJvc2UnOiBMb2dMZXZlbC5WRVJCT1NFLFxyXG4gICAgJ2luZm8nOiBMb2dMZXZlbC5JTkZPLFxyXG4gICAgJ3dhcm4nOiBMb2dMZXZlbC5XQVJOLFxyXG4gICAgJ2Vycm9yJzogTG9nTGV2ZWwuRVJST1IsXHJcbiAgICAnc2lsZW50JzogTG9nTGV2ZWwuU0lMRU5UXHJcbn07XHJcbi8qKlxyXG4gKiBUaGUgZGVmYXVsdCBsb2cgbGV2ZWxcclxuICovXHJcbmNvbnN0IGRlZmF1bHRMb2dMZXZlbCA9IExvZ0xldmVsLklORk87XHJcbi8qKlxyXG4gKiBCeSBkZWZhdWx0LCBgY29uc29sZS5kZWJ1Z2AgaXMgbm90IGRpc3BsYXllZCBpbiB0aGUgZGV2ZWxvcGVyIGNvbnNvbGUgKGluXHJcbiAqIGNocm9tZSkuIFRvIGF2b2lkIGZvcmNpbmcgdXNlcnMgdG8gaGF2ZSB0byBvcHQtaW4gdG8gdGhlc2UgbG9ncyB0d2ljZVxyXG4gKiAoaS5lLiBvbmNlIGZvciBmaXJlYmFzZSwgYW5kIG9uY2UgaW4gdGhlIGNvbnNvbGUpLCB3ZSBhcmUgc2VuZGluZyBgREVCVUdgXHJcbiAqIGxvZ3MgdG8gdGhlIGBjb25zb2xlLmxvZ2AgZnVuY3Rpb24uXHJcbiAqL1xyXG5jb25zdCBDb25zb2xlTWV0aG9kID0ge1xyXG4gICAgW0xvZ0xldmVsLkRFQlVHXTogJ2xvZycsXHJcbiAgICBbTG9nTGV2ZWwuVkVSQk9TRV06ICdsb2cnLFxyXG4gICAgW0xvZ0xldmVsLklORk9dOiAnaW5mbycsXHJcbiAgICBbTG9nTGV2ZWwuV0FSTl06ICd3YXJuJyxcclxuICAgIFtMb2dMZXZlbC5FUlJPUl06ICdlcnJvcidcclxufTtcclxuLyoqXHJcbiAqIFRoZSBkZWZhdWx0IGxvZyBoYW5kbGVyIHdpbGwgZm9yd2FyZCBERUJVRywgVkVSQk9TRSwgSU5GTywgV0FSTiwgYW5kIEVSUk9SXHJcbiAqIG1lc3NhZ2VzIG9uIHRvIHRoZWlyIGNvcnJlc3BvbmRpbmcgY29uc29sZSBjb3VudGVycGFydHMgKGlmIHRoZSBsb2cgbWV0aG9kXHJcbiAqIGlzIHN1cHBvcnRlZCBieSB0aGUgY3VycmVudCBsb2cgbGV2ZWwpXHJcbiAqL1xyXG5jb25zdCBkZWZhdWx0TG9nSGFuZGxlciA9IChpbnN0YW5jZSwgbG9nVHlwZSwgLi4uYXJncykgPT4ge1xyXG4gICAgaWYgKGxvZ1R5cGUgPCBpbnN0YW5jZS5sb2dMZXZlbCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcclxuICAgIGNvbnN0IG1ldGhvZCA9IENvbnNvbGVNZXRob2RbbG9nVHlwZV07XHJcbiAgICBpZiAobWV0aG9kKSB7XHJcbiAgICAgICAgY29uc29sZVttZXRob2RdKGBbJHtub3d9XSAgJHtpbnN0YW5jZS5uYW1lfTpgLCAuLi5hcmdzKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQXR0ZW1wdGVkIHRvIGxvZyBhIG1lc3NhZ2Ugd2l0aCBhbiBpbnZhbGlkIGxvZ1R5cGUgKHZhbHVlOiAke2xvZ1R5cGV9KWApO1xyXG4gICAgfVxyXG59O1xyXG5jbGFzcyBMb2dnZXIge1xyXG4gICAgLyoqXHJcbiAgICAgKiBHaXZlcyB5b3UgYW4gaW5zdGFuY2Ugb2YgYSBMb2dnZXIgdG8gY2FwdHVyZSBtZXNzYWdlcyBhY2NvcmRpbmcgdG9cclxuICAgICAqIEZpcmViYXNlJ3MgbG9nZ2luZyBzY2hlbWUuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG5hbWUgVGhlIG5hbWUgdGhhdCB0aGUgbG9ncyB3aWxsIGJlIGFzc29jaWF0ZWQgd2l0aFxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lKSB7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgbG9nIGxldmVsIG9mIHRoZSBnaXZlbiBMb2dnZXIgaW5zdGFuY2UuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fbG9nTGV2ZWwgPSBkZWZhdWx0TG9nTGV2ZWw7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIG1haW4gKGludGVybmFsKSBsb2cgaGFuZGxlciBmb3IgdGhlIExvZ2dlciBpbnN0YW5jZS5cclxuICAgICAgICAgKiBDYW4gYmUgc2V0IHRvIGEgbmV3IGZ1bmN0aW9uIGluIGludGVybmFsIHBhY2thZ2UgY29kZSBidXQgbm90IGJ5IHVzZXIuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fbG9nSGFuZGxlciA9IGRlZmF1bHRMb2dIYW5kbGVyO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBvcHRpb25hbCwgYWRkaXRpb25hbCwgdXNlci1kZWZpbmVkIGxvZyBoYW5kbGVyIGZvciB0aGUgTG9nZ2VyIGluc3RhbmNlLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuX3VzZXJMb2dIYW5kbGVyID0gbnVsbDtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDYXB0dXJlIHRoZSBjdXJyZW50IGluc3RhbmNlIGZvciBsYXRlciB1c2VcclxuICAgICAgICAgKi9cclxuICAgICAgICBpbnN0YW5jZXMucHVzaCh0aGlzKTtcclxuICAgIH1cclxuICAgIGdldCBsb2dMZXZlbCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbG9nTGV2ZWw7XHJcbiAgICB9XHJcbiAgICBzZXQgbG9nTGV2ZWwodmFsKSB7XHJcbiAgICAgICAgaWYgKCEodmFsIGluIExvZ0xldmVsKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIHZhbHVlIFwiJHt2YWx9XCIgYXNzaWduZWQgdG8gXFxgbG9nTGV2ZWxcXGBgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fbG9nTGV2ZWwgPSB2YWw7XHJcbiAgICB9XHJcbiAgICAvLyBXb3JrYXJvdW5kIGZvciBzZXR0ZXIvZ2V0dGVyIGhhdmluZyB0byBiZSB0aGUgc2FtZSB0eXBlLlxyXG4gICAgc2V0TG9nTGV2ZWwodmFsKSB7XHJcbiAgICAgICAgdGhpcy5fbG9nTGV2ZWwgPSB0eXBlb2YgdmFsID09PSAnc3RyaW5nJyA/IGxldmVsU3RyaW5nVG9FbnVtW3ZhbF0gOiB2YWw7XHJcbiAgICB9XHJcbiAgICBnZXQgbG9nSGFuZGxlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbG9nSGFuZGxlcjtcclxuICAgIH1cclxuICAgIHNldCBsb2dIYW5kbGVyKHZhbCkge1xyXG4gICAgICAgIGlmICh0eXBlb2YgdmFsICE9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1ZhbHVlIGFzc2lnbmVkIHRvIGBsb2dIYW5kbGVyYCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fbG9nSGFuZGxlciA9IHZhbDtcclxuICAgIH1cclxuICAgIGdldCB1c2VyTG9nSGFuZGxlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdXNlckxvZ0hhbmRsZXI7XHJcbiAgICB9XHJcbiAgICBzZXQgdXNlckxvZ0hhbmRsZXIodmFsKSB7XHJcbiAgICAgICAgdGhpcy5fdXNlckxvZ0hhbmRsZXIgPSB2YWw7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBmdW5jdGlvbnMgYmVsb3cgYXJlIGFsbCBiYXNlZCBvbiB0aGUgYGNvbnNvbGVgIGludGVyZmFjZVxyXG4gICAgICovXHJcbiAgICBkZWJ1ZyguLi5hcmdzKSB7XHJcbiAgICAgICAgdGhpcy5fdXNlckxvZ0hhbmRsZXIgJiYgdGhpcy5fdXNlckxvZ0hhbmRsZXIodGhpcywgTG9nTGV2ZWwuREVCVUcsIC4uLmFyZ3MpO1xyXG4gICAgICAgIHRoaXMuX2xvZ0hhbmRsZXIodGhpcywgTG9nTGV2ZWwuREVCVUcsIC4uLmFyZ3MpO1xyXG4gICAgfVxyXG4gICAgbG9nKC4uLmFyZ3MpIHtcclxuICAgICAgICB0aGlzLl91c2VyTG9nSGFuZGxlciAmJlxyXG4gICAgICAgICAgICB0aGlzLl91c2VyTG9nSGFuZGxlcih0aGlzLCBMb2dMZXZlbC5WRVJCT1NFLCAuLi5hcmdzKTtcclxuICAgICAgICB0aGlzLl9sb2dIYW5kbGVyKHRoaXMsIExvZ0xldmVsLlZFUkJPU0UsIC4uLmFyZ3MpO1xyXG4gICAgfVxyXG4gICAgaW5mbyguLi5hcmdzKSB7XHJcbiAgICAgICAgdGhpcy5fdXNlckxvZ0hhbmRsZXIgJiYgdGhpcy5fdXNlckxvZ0hhbmRsZXIodGhpcywgTG9nTGV2ZWwuSU5GTywgLi4uYXJncyk7XHJcbiAgICAgICAgdGhpcy5fbG9nSGFuZGxlcih0aGlzLCBMb2dMZXZlbC5JTkZPLCAuLi5hcmdzKTtcclxuICAgIH1cclxuICAgIHdhcm4oLi4uYXJncykge1xyXG4gICAgICAgIHRoaXMuX3VzZXJMb2dIYW5kbGVyICYmIHRoaXMuX3VzZXJMb2dIYW5kbGVyKHRoaXMsIExvZ0xldmVsLldBUk4sIC4uLmFyZ3MpO1xyXG4gICAgICAgIHRoaXMuX2xvZ0hhbmRsZXIodGhpcywgTG9nTGV2ZWwuV0FSTiwgLi4uYXJncyk7XHJcbiAgICB9XHJcbiAgICBlcnJvciguLi5hcmdzKSB7XHJcbiAgICAgICAgdGhpcy5fdXNlckxvZ0hhbmRsZXIgJiYgdGhpcy5fdXNlckxvZ0hhbmRsZXIodGhpcywgTG9nTGV2ZWwuRVJST1IsIC4uLmFyZ3MpO1xyXG4gICAgICAgIHRoaXMuX2xvZ0hhbmRsZXIodGhpcywgTG9nTGV2ZWwuRVJST1IsIC4uLmFyZ3MpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIHNldExvZ0xldmVsKGxldmVsKSB7XHJcbiAgICBpbnN0YW5jZXMuZm9yRWFjaChpbnN0ID0+IHtcclxuICAgICAgICBpbnN0LnNldExvZ0xldmVsKGxldmVsKTtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIHNldFVzZXJMb2dIYW5kbGVyKGxvZ0NhbGxiYWNrLCBvcHRpb25zKSB7XHJcbiAgICBmb3IgKGNvbnN0IGluc3RhbmNlIG9mIGluc3RhbmNlcykge1xyXG4gICAgICAgIGxldCBjdXN0b21Mb2dMZXZlbCA9IG51bGw7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5sZXZlbCkge1xyXG4gICAgICAgICAgICBjdXN0b21Mb2dMZXZlbCA9IGxldmVsU3RyaW5nVG9FbnVtW29wdGlvbnMubGV2ZWxdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobG9nQ2FsbGJhY2sgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgaW5zdGFuY2UudXNlckxvZ0hhbmRsZXIgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaW5zdGFuY2UudXNlckxvZ0hhbmRsZXIgPSAoaW5zdGFuY2UsIGxldmVsLCAuLi5hcmdzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gYXJnc1xyXG4gICAgICAgICAgICAgICAgICAgIC5tYXAoYXJnID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYXJnID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcmc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInIHx8IHR5cGVvZiBhcmcgPT09ICdib29sZWFuJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXJnLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGFyZyBpbnN0YW5jZW9mIEVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcmcubWVzc2FnZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoYXJnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoaWdub3JlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoYXJnID0+IGFyZylcclxuICAgICAgICAgICAgICAgICAgICAuam9pbignICcpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGxldmVsID49IChjdXN0b21Mb2dMZXZlbCAhPT0gbnVsbCAmJiBjdXN0b21Mb2dMZXZlbCAhPT0gdm9pZCAwID8gY3VzdG9tTG9nTGV2ZWwgOiBpbnN0YW5jZS5sb2dMZXZlbCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBsb2dDYWxsYmFjayh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldmVsOiBMb2dMZXZlbFtsZXZlbF0udG9Mb3dlckNhc2UoKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXJncyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogaW5zdGFuY2UubmFtZVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBMb2dMZXZlbCwgTG9nZ2VyLCBzZXRMb2dMZXZlbCwgc2V0VXNlckxvZ0hhbmRsZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzbTIwMTcuanMubWFwXG4iLCJpbXBvcnQgeyByZWdpc3RlclZlcnNpb24gfSBmcm9tICdAZmlyZWJhc2UvYXBwJztcbmV4cG9ydCAqIGZyb20gJ0BmaXJlYmFzZS9hcHAnO1xuXG52YXIgbmFtZSA9IFwiZmlyZWJhc2VcIjtcbnZhciB2ZXJzaW9uID0gXCIxMC4xLjBcIjtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxucmVnaXN0ZXJWZXJzaW9uKG5hbWUsIHZlcnNpb24sICdhcHAnKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzbS5qcy5tYXBcbiIsImltcG9ydCB7IHcgYXMgd3JhcCwgciBhcyByZXBsYWNlVHJhcHMgfSBmcm9tICcuL3dyYXAtaWRiLXZhbHVlLmpzJztcbmV4cG9ydCB7IHUgYXMgdW53cmFwLCB3IGFzIHdyYXAgfSBmcm9tICcuL3dyYXAtaWRiLXZhbHVlLmpzJztcblxuLyoqXG4gKiBPcGVuIGEgZGF0YWJhc2UuXG4gKlxuICogQHBhcmFtIG5hbWUgTmFtZSBvZiB0aGUgZGF0YWJhc2UuXG4gKiBAcGFyYW0gdmVyc2lvbiBTY2hlbWEgdmVyc2lvbi5cbiAqIEBwYXJhbSBjYWxsYmFja3MgQWRkaXRpb25hbCBjYWxsYmFja3MuXG4gKi9cbmZ1bmN0aW9uIG9wZW5EQihuYW1lLCB2ZXJzaW9uLCB7IGJsb2NrZWQsIHVwZ3JhZGUsIGJsb2NraW5nLCB0ZXJtaW5hdGVkIH0gPSB7fSkge1xuICAgIGNvbnN0IHJlcXVlc3QgPSBpbmRleGVkREIub3BlbihuYW1lLCB2ZXJzaW9uKTtcbiAgICBjb25zdCBvcGVuUHJvbWlzZSA9IHdyYXAocmVxdWVzdCk7XG4gICAgaWYgKHVwZ3JhZGUpIHtcbiAgICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCd1cGdyYWRlbmVlZGVkJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICB1cGdyYWRlKHdyYXAocmVxdWVzdC5yZXN1bHQpLCBldmVudC5vbGRWZXJzaW9uLCBldmVudC5uZXdWZXJzaW9uLCB3cmFwKHJlcXVlc3QudHJhbnNhY3Rpb24pLCBldmVudCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoYmxvY2tlZCkge1xuICAgICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ2Jsb2NrZWQnLCAoZXZlbnQpID0+IGJsb2NrZWQoXG4gICAgICAgIC8vIENhc3RpbmcgZHVlIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvVHlwZVNjcmlwdC1ET00tbGliLWdlbmVyYXRvci9wdWxsLzE0MDVcbiAgICAgICAgZXZlbnQub2xkVmVyc2lvbiwgZXZlbnQubmV3VmVyc2lvbiwgZXZlbnQpKTtcbiAgICB9XG4gICAgb3BlblByb21pc2VcbiAgICAgICAgLnRoZW4oKGRiKSA9PiB7XG4gICAgICAgIGlmICh0ZXJtaW5hdGVkKVxuICAgICAgICAgICAgZGIuYWRkRXZlbnRMaXN0ZW5lcignY2xvc2UnLCAoKSA9PiB0ZXJtaW5hdGVkKCkpO1xuICAgICAgICBpZiAoYmxvY2tpbmcpIHtcbiAgICAgICAgICAgIGRiLmFkZEV2ZW50TGlzdGVuZXIoJ3ZlcnNpb25jaGFuZ2UnLCAoZXZlbnQpID0+IGJsb2NraW5nKGV2ZW50Lm9sZFZlcnNpb24sIGV2ZW50Lm5ld1ZlcnNpb24sIGV2ZW50KSk7XG4gICAgICAgIH1cbiAgICB9KVxuICAgICAgICAuY2F0Y2goKCkgPT4geyB9KTtcbiAgICByZXR1cm4gb3BlblByb21pc2U7XG59XG4vKipcbiAqIERlbGV0ZSBhIGRhdGFiYXNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIE5hbWUgb2YgdGhlIGRhdGFiYXNlLlxuICovXG5mdW5jdGlvbiBkZWxldGVEQihuYW1lLCB7IGJsb2NrZWQgfSA9IHt9KSB7XG4gICAgY29uc3QgcmVxdWVzdCA9IGluZGV4ZWREQi5kZWxldGVEYXRhYmFzZShuYW1lKTtcbiAgICBpZiAoYmxvY2tlZCkge1xuICAgICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ2Jsb2NrZWQnLCAoZXZlbnQpID0+IGJsb2NrZWQoXG4gICAgICAgIC8vIENhc3RpbmcgZHVlIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvVHlwZVNjcmlwdC1ET00tbGliLWdlbmVyYXRvci9wdWxsLzE0MDVcbiAgICAgICAgZXZlbnQub2xkVmVyc2lvbiwgZXZlbnQpKTtcbiAgICB9XG4gICAgcmV0dXJuIHdyYXAocmVxdWVzdCkudGhlbigoKSA9PiB1bmRlZmluZWQpO1xufVxuXG5jb25zdCByZWFkTWV0aG9kcyA9IFsnZ2V0JywgJ2dldEtleScsICdnZXRBbGwnLCAnZ2V0QWxsS2V5cycsICdjb3VudCddO1xuY29uc3Qgd3JpdGVNZXRob2RzID0gWydwdXQnLCAnYWRkJywgJ2RlbGV0ZScsICdjbGVhciddO1xuY29uc3QgY2FjaGVkTWV0aG9kcyA9IG5ldyBNYXAoKTtcbmZ1bmN0aW9uIGdldE1ldGhvZCh0YXJnZXQsIHByb3ApIHtcbiAgICBpZiAoISh0YXJnZXQgaW5zdGFuY2VvZiBJREJEYXRhYmFzZSAmJlxuICAgICAgICAhKHByb3AgaW4gdGFyZ2V0KSAmJlxuICAgICAgICB0eXBlb2YgcHJvcCA9PT0gJ3N0cmluZycpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGNhY2hlZE1ldGhvZHMuZ2V0KHByb3ApKVxuICAgICAgICByZXR1cm4gY2FjaGVkTWV0aG9kcy5nZXQocHJvcCk7XG4gICAgY29uc3QgdGFyZ2V0RnVuY05hbWUgPSBwcm9wLnJlcGxhY2UoL0Zyb21JbmRleCQvLCAnJyk7XG4gICAgY29uc3QgdXNlSW5kZXggPSBwcm9wICE9PSB0YXJnZXRGdW5jTmFtZTtcbiAgICBjb25zdCBpc1dyaXRlID0gd3JpdGVNZXRob2RzLmluY2x1ZGVzKHRhcmdldEZ1bmNOYW1lKTtcbiAgICBpZiAoXG4gICAgLy8gQmFpbCBpZiB0aGUgdGFyZ2V0IGRvZXNuJ3QgZXhpc3Qgb24gdGhlIHRhcmdldC4gRWcsIGdldEFsbCBpc24ndCBpbiBFZGdlLlxuICAgICEodGFyZ2V0RnVuY05hbWUgaW4gKHVzZUluZGV4ID8gSURCSW5kZXggOiBJREJPYmplY3RTdG9yZSkucHJvdG90eXBlKSB8fFxuICAgICAgICAhKGlzV3JpdGUgfHwgcmVhZE1ldGhvZHMuaW5jbHVkZXModGFyZ2V0RnVuY05hbWUpKSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IG1ldGhvZCA9IGFzeW5jIGZ1bmN0aW9uIChzdG9yZU5hbWUsIC4uLmFyZ3MpIHtcbiAgICAgICAgLy8gaXNXcml0ZSA/ICdyZWFkd3JpdGUnIDogdW5kZWZpbmVkIGd6aXBwcyBiZXR0ZXIsIGJ1dCBmYWlscyBpbiBFZGdlIDooXG4gICAgICAgIGNvbnN0IHR4ID0gdGhpcy50cmFuc2FjdGlvbihzdG9yZU5hbWUsIGlzV3JpdGUgPyAncmVhZHdyaXRlJyA6ICdyZWFkb25seScpO1xuICAgICAgICBsZXQgdGFyZ2V0ID0gdHguc3RvcmU7XG4gICAgICAgIGlmICh1c2VJbmRleClcbiAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldC5pbmRleChhcmdzLnNoaWZ0KCkpO1xuICAgICAgICAvLyBNdXN0IHJlamVjdCBpZiBvcCByZWplY3RzLlxuICAgICAgICAvLyBJZiBpdCdzIGEgd3JpdGUgb3BlcmF0aW9uLCBtdXN0IHJlamVjdCBpZiB0eC5kb25lIHJlamVjdHMuXG4gICAgICAgIC8vIE11c3QgcmVqZWN0IHdpdGggb3AgcmVqZWN0aW9uIGZpcnN0LlxuICAgICAgICAvLyBNdXN0IHJlc29sdmUgd2l0aCBvcCB2YWx1ZS5cbiAgICAgICAgLy8gTXVzdCBoYW5kbGUgYm90aCBwcm9taXNlcyAobm8gdW5oYW5kbGVkIHJlamVjdGlvbnMpXG4gICAgICAgIHJldHVybiAoYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgdGFyZ2V0W3RhcmdldEZ1bmNOYW1lXSguLi5hcmdzKSxcbiAgICAgICAgICAgIGlzV3JpdGUgJiYgdHguZG9uZSxcbiAgICAgICAgXSkpWzBdO1xuICAgIH07XG4gICAgY2FjaGVkTWV0aG9kcy5zZXQocHJvcCwgbWV0aG9kKTtcbiAgICByZXR1cm4gbWV0aG9kO1xufVxucmVwbGFjZVRyYXBzKChvbGRUcmFwcykgPT4gKHtcbiAgICAuLi5vbGRUcmFwcyxcbiAgICBnZXQ6ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSA9PiBnZXRNZXRob2QodGFyZ2V0LCBwcm9wKSB8fCBvbGRUcmFwcy5nZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlciksXG4gICAgaGFzOiAodGFyZ2V0LCBwcm9wKSA9PiAhIWdldE1ldGhvZCh0YXJnZXQsIHByb3ApIHx8IG9sZFRyYXBzLmhhcyh0YXJnZXQsIHByb3ApLFxufSkpO1xuXG5leHBvcnQgeyBkZWxldGVEQiwgb3BlbkRCIH07XG4iLCJjb25zdCBpbnN0YW5jZU9mQW55ID0gKG9iamVjdCwgY29uc3RydWN0b3JzKSA9PiBjb25zdHJ1Y3RvcnMuc29tZSgoYykgPT4gb2JqZWN0IGluc3RhbmNlb2YgYyk7XG5cbmxldCBpZGJQcm94eWFibGVUeXBlcztcbmxldCBjdXJzb3JBZHZhbmNlTWV0aG9kcztcbi8vIFRoaXMgaXMgYSBmdW5jdGlvbiB0byBwcmV2ZW50IGl0IHRocm93aW5nIHVwIGluIG5vZGUgZW52aXJvbm1lbnRzLlxuZnVuY3Rpb24gZ2V0SWRiUHJveHlhYmxlVHlwZXMoKSB7XG4gICAgcmV0dXJuIChpZGJQcm94eWFibGVUeXBlcyB8fFxuICAgICAgICAoaWRiUHJveHlhYmxlVHlwZXMgPSBbXG4gICAgICAgICAgICBJREJEYXRhYmFzZSxcbiAgICAgICAgICAgIElEQk9iamVjdFN0b3JlLFxuICAgICAgICAgICAgSURCSW5kZXgsXG4gICAgICAgICAgICBJREJDdXJzb3IsXG4gICAgICAgICAgICBJREJUcmFuc2FjdGlvbixcbiAgICAgICAgXSkpO1xufVxuLy8gVGhpcyBpcyBhIGZ1bmN0aW9uIHRvIHByZXZlbnQgaXQgdGhyb3dpbmcgdXAgaW4gbm9kZSBlbnZpcm9ubWVudHMuXG5mdW5jdGlvbiBnZXRDdXJzb3JBZHZhbmNlTWV0aG9kcygpIHtcbiAgICByZXR1cm4gKGN1cnNvckFkdmFuY2VNZXRob2RzIHx8XG4gICAgICAgIChjdXJzb3JBZHZhbmNlTWV0aG9kcyA9IFtcbiAgICAgICAgICAgIElEQkN1cnNvci5wcm90b3R5cGUuYWR2YW5jZSxcbiAgICAgICAgICAgIElEQkN1cnNvci5wcm90b3R5cGUuY29udGludWUsXG4gICAgICAgICAgICBJREJDdXJzb3IucHJvdG90eXBlLmNvbnRpbnVlUHJpbWFyeUtleSxcbiAgICAgICAgXSkpO1xufVxuY29uc3QgY3Vyc29yUmVxdWVzdE1hcCA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCB0cmFuc2FjdGlvbkRvbmVNYXAgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgdHJhbnNhY3Rpb25TdG9yZU5hbWVzTWFwID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IHRyYW5zZm9ybUNhY2hlID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IHJldmVyc2VUcmFuc2Zvcm1DYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG5mdW5jdGlvbiBwcm9taXNpZnlSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBjb25zdCB1bmxpc3RlbiA9ICgpID0+IHtcbiAgICAgICAgICAgIHJlcXVlc3QucmVtb3ZlRXZlbnRMaXN0ZW5lcignc3VjY2VzcycsIHN1Y2Nlc3MpO1xuICAgICAgICAgICAgcmVxdWVzdC5yZW1vdmVFdmVudExpc3RlbmVyKCdlcnJvcicsIGVycm9yKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc3VjY2VzcyA9ICgpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUod3JhcChyZXF1ZXN0LnJlc3VsdCkpO1xuICAgICAgICAgICAgdW5saXN0ZW4oKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgZXJyb3IgPSAoKSA9PiB7XG4gICAgICAgICAgICByZWplY3QocmVxdWVzdC5lcnJvcik7XG4gICAgICAgICAgICB1bmxpc3RlbigpO1xuICAgICAgICB9O1xuICAgICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Y2Nlc3MnLCBzdWNjZXNzKTtcbiAgICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGVycm9yKTtcbiAgICB9KTtcbiAgICBwcm9taXNlXG4gICAgICAgIC50aGVuKCh2YWx1ZSkgPT4ge1xuICAgICAgICAvLyBTaW5jZSBjdXJzb3JpbmcgcmV1c2VzIHRoZSBJREJSZXF1ZXN0ICgqc2lnaCopLCB3ZSBjYWNoZSBpdCBmb3IgbGF0ZXIgcmV0cmlldmFsXG4gICAgICAgIC8vIChzZWUgd3JhcEZ1bmN0aW9uKS5cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgSURCQ3Vyc29yKSB7XG4gICAgICAgICAgICBjdXJzb3JSZXF1ZXN0TWFwLnNldCh2YWx1ZSwgcmVxdWVzdCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ2F0Y2hpbmcgdG8gYXZvaWQgXCJVbmNhdWdodCBQcm9taXNlIGV4Y2VwdGlvbnNcIlxuICAgIH0pXG4gICAgICAgIC5jYXRjaCgoKSA9PiB7IH0pO1xuICAgIC8vIFRoaXMgbWFwcGluZyBleGlzdHMgaW4gcmV2ZXJzZVRyYW5zZm9ybUNhY2hlIGJ1dCBkb2Vzbid0IGRvZXNuJ3QgZXhpc3QgaW4gdHJhbnNmb3JtQ2FjaGUuIFRoaXNcbiAgICAvLyBpcyBiZWNhdXNlIHdlIGNyZWF0ZSBtYW55IHByb21pc2VzIGZyb20gYSBzaW5nbGUgSURCUmVxdWVzdC5cbiAgICByZXZlcnNlVHJhbnNmb3JtQ2FjaGUuc2V0KHByb21pc2UsIHJlcXVlc3QpO1xuICAgIHJldHVybiBwcm9taXNlO1xufVxuZnVuY3Rpb24gY2FjaGVEb25lUHJvbWlzZUZvclRyYW5zYWN0aW9uKHR4KSB7XG4gICAgLy8gRWFybHkgYmFpbCBpZiB3ZSd2ZSBhbHJlYWR5IGNyZWF0ZWQgYSBkb25lIHByb21pc2UgZm9yIHRoaXMgdHJhbnNhY3Rpb24uXG4gICAgaWYgKHRyYW5zYWN0aW9uRG9uZU1hcC5oYXModHgpKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgZG9uZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY29uc3QgdW5saXN0ZW4gPSAoKSA9PiB7XG4gICAgICAgICAgICB0eC5yZW1vdmVFdmVudExpc3RlbmVyKCdjb21wbGV0ZScsIGNvbXBsZXRlKTtcbiAgICAgICAgICAgIHR4LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZXJyb3IpO1xuICAgICAgICAgICAgdHgucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBlcnJvcik7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGNvbXBsZXRlID0gKCkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgdW5saXN0ZW4oKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgZXJyb3IgPSAoKSA9PiB7XG4gICAgICAgICAgICByZWplY3QodHguZXJyb3IgfHwgbmV3IERPTUV4Y2VwdGlvbignQWJvcnRFcnJvcicsICdBYm9ydEVycm9yJykpO1xuICAgICAgICAgICAgdW5saXN0ZW4oKTtcbiAgICAgICAgfTtcbiAgICAgICAgdHguYWRkRXZlbnRMaXN0ZW5lcignY29tcGxldGUnLCBjb21wbGV0ZSk7XG4gICAgICAgIHR4LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZXJyb3IpO1xuICAgICAgICB0eC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIGVycm9yKTtcbiAgICB9KTtcbiAgICAvLyBDYWNoZSBpdCBmb3IgbGF0ZXIgcmV0cmlldmFsLlxuICAgIHRyYW5zYWN0aW9uRG9uZU1hcC5zZXQodHgsIGRvbmUpO1xufVxubGV0IGlkYlByb3h5VHJhcHMgPSB7XG4gICAgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgaWYgKHRhcmdldCBpbnN0YW5jZW9mIElEQlRyYW5zYWN0aW9uKSB7XG4gICAgICAgICAgICAvLyBTcGVjaWFsIGhhbmRsaW5nIGZvciB0cmFuc2FjdGlvbi5kb25lLlxuICAgICAgICAgICAgaWYgKHByb3AgPT09ICdkb25lJylcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNhY3Rpb25Eb25lTWFwLmdldCh0YXJnZXQpO1xuICAgICAgICAgICAgLy8gUG9seWZpbGwgZm9yIG9iamVjdFN0b3JlTmFtZXMgYmVjYXVzZSBvZiBFZGdlLlxuICAgICAgICAgICAgaWYgKHByb3AgPT09ICdvYmplY3RTdG9yZU5hbWVzJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQub2JqZWN0U3RvcmVOYW1lcyB8fCB0cmFuc2FjdGlvblN0b3JlTmFtZXNNYXAuZ2V0KHRhcmdldCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBNYWtlIHR4LnN0b3JlIHJldHVybiB0aGUgb25seSBzdG9yZSBpbiB0aGUgdHJhbnNhY3Rpb24sIG9yIHVuZGVmaW5lZCBpZiB0aGVyZSBhcmUgbWFueS5cbiAgICAgICAgICAgIGlmIChwcm9wID09PSAnc3RvcmUnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlY2VpdmVyLm9iamVjdFN0b3JlTmFtZXNbMV1cbiAgICAgICAgICAgICAgICAgICAgPyB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgOiByZWNlaXZlci5vYmplY3RTdG9yZShyZWNlaXZlci5vYmplY3RTdG9yZU5hbWVzWzBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBFbHNlIHRyYW5zZm9ybSB3aGF0ZXZlciB3ZSBnZXQgYmFjay5cbiAgICAgICAgcmV0dXJuIHdyYXAodGFyZ2V0W3Byb3BdKTtcbiAgICB9LFxuICAgIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKSB7XG4gICAgICAgIHRhcmdldFtwcm9wXSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIGhhcyh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgaWYgKHRhcmdldCBpbnN0YW5jZW9mIElEQlRyYW5zYWN0aW9uICYmXG4gICAgICAgICAgICAocHJvcCA9PT0gJ2RvbmUnIHx8IHByb3AgPT09ICdzdG9yZScpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJvcCBpbiB0YXJnZXQ7XG4gICAgfSxcbn07XG5mdW5jdGlvbiByZXBsYWNlVHJhcHMoY2FsbGJhY2spIHtcbiAgICBpZGJQcm94eVRyYXBzID0gY2FsbGJhY2soaWRiUHJveHlUcmFwcyk7XG59XG5mdW5jdGlvbiB3cmFwRnVuY3Rpb24oZnVuYykge1xuICAgIC8vIER1ZSB0byBleHBlY3RlZCBvYmplY3QgZXF1YWxpdHkgKHdoaWNoIGlzIGVuZm9yY2VkIGJ5IHRoZSBjYWNoaW5nIGluIGB3cmFwYCksIHdlXG4gICAgLy8gb25seSBjcmVhdGUgb25lIG5ldyBmdW5jIHBlciBmdW5jLlxuICAgIC8vIEVkZ2UgZG9lc24ndCBzdXBwb3J0IG9iamVjdFN0b3JlTmFtZXMgKGJvb28pLCBzbyB3ZSBwb2x5ZmlsbCBpdCBoZXJlLlxuICAgIGlmIChmdW5jID09PSBJREJEYXRhYmFzZS5wcm90b3R5cGUudHJhbnNhY3Rpb24gJiZcbiAgICAgICAgISgnb2JqZWN0U3RvcmVOYW1lcycgaW4gSURCVHJhbnNhY3Rpb24ucHJvdG90eXBlKSkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHN0b3JlTmFtZXMsIC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IHR4ID0gZnVuYy5jYWxsKHVud3JhcCh0aGlzKSwgc3RvcmVOYW1lcywgLi4uYXJncyk7XG4gICAgICAgICAgICB0cmFuc2FjdGlvblN0b3JlTmFtZXNNYXAuc2V0KHR4LCBzdG9yZU5hbWVzLnNvcnQgPyBzdG9yZU5hbWVzLnNvcnQoKSA6IFtzdG9yZU5hbWVzXSk7XG4gICAgICAgICAgICByZXR1cm4gd3JhcCh0eCk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIEN1cnNvciBtZXRob2RzIGFyZSBzcGVjaWFsLCBhcyB0aGUgYmVoYXZpb3VyIGlzIGEgbGl0dGxlIG1vcmUgZGlmZmVyZW50IHRvIHN0YW5kYXJkIElEQi4gSW5cbiAgICAvLyBJREIsIHlvdSBhZHZhbmNlIHRoZSBjdXJzb3IgYW5kIHdhaXQgZm9yIGEgbmV3ICdzdWNjZXNzJyBvbiB0aGUgSURCUmVxdWVzdCB0aGF0IGdhdmUgeW91IHRoZVxuICAgIC8vIGN1cnNvci4gSXQncyBraW5kYSBsaWtlIGEgcHJvbWlzZSB0aGF0IGNhbiByZXNvbHZlIHdpdGggbWFueSB2YWx1ZXMuIFRoYXQgZG9lc24ndCBtYWtlIHNlbnNlXG4gICAgLy8gd2l0aCByZWFsIHByb21pc2VzLCBzbyBlYWNoIGFkdmFuY2UgbWV0aG9kcyByZXR1cm5zIGEgbmV3IHByb21pc2UgZm9yIHRoZSBjdXJzb3Igb2JqZWN0LCBvclxuICAgIC8vIHVuZGVmaW5lZCBpZiB0aGUgZW5kIG9mIHRoZSBjdXJzb3IgaGFzIGJlZW4gcmVhY2hlZC5cbiAgICBpZiAoZ2V0Q3Vyc29yQWR2YW5jZU1ldGhvZHMoKS5pbmNsdWRlcyhmdW5jKSkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIC8vIENhbGxpbmcgdGhlIG9yaWdpbmFsIGZ1bmN0aW9uIHdpdGggdGhlIHByb3h5IGFzICd0aGlzJyBjYXVzZXMgSUxMRUdBTCBJTlZPQ0FUSU9OLCBzbyB3ZSB1c2VcbiAgICAgICAgICAgIC8vIHRoZSBvcmlnaW5hbCBvYmplY3QuXG4gICAgICAgICAgICBmdW5jLmFwcGx5KHVud3JhcCh0aGlzKSwgYXJncyk7XG4gICAgICAgICAgICByZXR1cm4gd3JhcChjdXJzb3JSZXF1ZXN0TWFwLmdldCh0aGlzKSk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICAvLyBDYWxsaW5nIHRoZSBvcmlnaW5hbCBmdW5jdGlvbiB3aXRoIHRoZSBwcm94eSBhcyAndGhpcycgY2F1c2VzIElMTEVHQUwgSU5WT0NBVElPTiwgc28gd2UgdXNlXG4gICAgICAgIC8vIHRoZSBvcmlnaW5hbCBvYmplY3QuXG4gICAgICAgIHJldHVybiB3cmFwKGZ1bmMuYXBwbHkodW53cmFwKHRoaXMpLCBhcmdzKSk7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIHRyYW5zZm9ybUNhY2hhYmxlVmFsdWUodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gd3JhcEZ1bmN0aW9uKHZhbHVlKTtcbiAgICAvLyBUaGlzIGRvZXNuJ3QgcmV0dXJuLCBpdCBqdXN0IGNyZWF0ZXMgYSAnZG9uZScgcHJvbWlzZSBmb3IgdGhlIHRyYW5zYWN0aW9uLFxuICAgIC8vIHdoaWNoIGlzIGxhdGVyIHJldHVybmVkIGZvciB0cmFuc2FjdGlvbi5kb25lIChzZWUgaWRiT2JqZWN0SGFuZGxlcikuXG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgSURCVHJhbnNhY3Rpb24pXG4gICAgICAgIGNhY2hlRG9uZVByb21pc2VGb3JUcmFuc2FjdGlvbih2YWx1ZSk7XG4gICAgaWYgKGluc3RhbmNlT2ZBbnkodmFsdWUsIGdldElkYlByb3h5YWJsZVR5cGVzKCkpKVxuICAgICAgICByZXR1cm4gbmV3IFByb3h5KHZhbHVlLCBpZGJQcm94eVRyYXBzKTtcbiAgICAvLyBSZXR1cm4gdGhlIHNhbWUgdmFsdWUgYmFjayBpZiB3ZSdyZSBub3QgZ29pbmcgdG8gdHJhbnNmb3JtIGl0LlxuICAgIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIHdyYXAodmFsdWUpIHtcbiAgICAvLyBXZSBzb21ldGltZXMgZ2VuZXJhdGUgbXVsdGlwbGUgcHJvbWlzZXMgZnJvbSBhIHNpbmdsZSBJREJSZXF1ZXN0IChlZyB3aGVuIGN1cnNvcmluZyksIGJlY2F1c2VcbiAgICAvLyBJREIgaXMgd2VpcmQgYW5kIGEgc2luZ2xlIElEQlJlcXVlc3QgY2FuIHlpZWxkIG1hbnkgcmVzcG9uc2VzLCBzbyB0aGVzZSBjYW4ndCBiZSBjYWNoZWQuXG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgSURCUmVxdWVzdClcbiAgICAgICAgcmV0dXJuIHByb21pc2lmeVJlcXVlc3QodmFsdWUpO1xuICAgIC8vIElmIHdlJ3ZlIGFscmVhZHkgdHJhbnNmb3JtZWQgdGhpcyB2YWx1ZSBiZWZvcmUsIHJldXNlIHRoZSB0cmFuc2Zvcm1lZCB2YWx1ZS5cbiAgICAvLyBUaGlzIGlzIGZhc3RlciwgYnV0IGl0IGFsc28gcHJvdmlkZXMgb2JqZWN0IGVxdWFsaXR5LlxuICAgIGlmICh0cmFuc2Zvcm1DYWNoZS5oYXModmFsdWUpKVxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtQ2FjaGUuZ2V0KHZhbHVlKTtcbiAgICBjb25zdCBuZXdWYWx1ZSA9IHRyYW5zZm9ybUNhY2hhYmxlVmFsdWUodmFsdWUpO1xuICAgIC8vIE5vdCBhbGwgdHlwZXMgYXJlIHRyYW5zZm9ybWVkLlxuICAgIC8vIFRoZXNlIG1heSBiZSBwcmltaXRpdmUgdHlwZXMsIHNvIHRoZXkgY2FuJ3QgYmUgV2Vha01hcCBrZXlzLlxuICAgIGlmIChuZXdWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgdHJhbnNmb3JtQ2FjaGUuc2V0KHZhbHVlLCBuZXdWYWx1ZSk7XG4gICAgICAgIHJldmVyc2VUcmFuc2Zvcm1DYWNoZS5zZXQobmV3VmFsdWUsIHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld1ZhbHVlO1xufVxuY29uc3QgdW53cmFwID0gKHZhbHVlKSA9PiByZXZlcnNlVHJhbnNmb3JtQ2FjaGUuZ2V0KHZhbHVlKTtcblxuZXhwb3J0IHsgcmV2ZXJzZVRyYW5zZm9ybUNhY2hlIGFzIGEsIGluc3RhbmNlT2ZBbnkgYXMgaSwgcmVwbGFjZVRyYXBzIGFzIHIsIHVud3JhcCBhcyB1LCB3cmFwIGFzIHcgfTtcbiIsInRyeXtzZWxmW1wid29ya2JveDp3aW5kb3c6NC4zLjFcIl0mJl8oKX1jYXRjaChuKXt9dmFyIG49ZnVuY3Rpb24obix0KXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24oaSl7dmFyIGU9bmV3IE1lc3NhZ2VDaGFubmVsO2UucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKG4pe3JldHVybiBpKG4uZGF0YSl9LG4ucG9zdE1lc3NhZ2UodCxbZS5wb3J0Ml0pfSl9O2Z1bmN0aW9uIHQobix0KXtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyl7dmFyIGU9dFtpXTtlLmVudW1lcmFibGU9ZS5lbnVtZXJhYmxlfHwhMSxlLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBlJiYoZS53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sZS5rZXksZSl9fWZ1bmN0aW9uIGkobil7aWYodm9pZCAwPT09bil0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIG59dHJ5e3NlbGZbXCJ3b3JrYm94OmNvcmU6NC4zLjFcIl0mJl8oKX1jYXRjaChuKXt9dmFyIGU9ZnVuY3Rpb24oKXt2YXIgbj10aGlzO3RoaXMucHJvbWlzZT1uZXcgUHJvbWlzZShmdW5jdGlvbih0LGkpe24ucmVzb2x2ZT10LG4ucmVqZWN0PWl9KX0scj1mdW5jdGlvbihuLHQpe3JldHVybiBuZXcgVVJMKG4sbG9jYXRpb24pLmhyZWY9PT1uZXcgVVJMKHQsbG9jYXRpb24pLmhyZWZ9LG89ZnVuY3Rpb24obix0KXtPYmplY3QuYXNzaWduKHRoaXMsdCx7dHlwZTpufSl9O2Z1bmN0aW9uIHUobil7cmV0dXJuIGZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXRbaV09YXJndW1lbnRzW2ldO3RyeXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG4uYXBwbHkodGhpcyx0KSl9Y2F0Y2gobil7cmV0dXJuIFByb21pc2UucmVqZWN0KG4pfX19ZnVuY3Rpb24gYShuLHQsaSl7cmV0dXJuIGk/dD90KG4pOm46KG4mJm4udGhlbnx8KG49UHJvbWlzZS5yZXNvbHZlKG4pKSx0P24udGhlbih0KTpuKX1mdW5jdGlvbiBzKCl7fXZhciBjPWZ1bmN0aW9uKGMpe3ZhciBmLGg7ZnVuY3Rpb24gdihuLHQpe3ZhciByO3JldHVybiB2b2lkIDA9PT10JiYodD17fSksKHI9Yy5jYWxsKHRoaXMpfHx0aGlzKS50PW4sci5pPXQsci5vPTAsci51PW5ldyBlLHIucz1uZXcgZSxyLmg9bmV3IGUsci52PXIudi5iaW5kKGkoaShyKSkpLHIubD1yLmwuYmluZChpKGkocikpKSxyLmc9ci5nLmJpbmQoaShpKHIpKSksci5tPXIubS5iaW5kKGkoaShyKSkpLHJ9aD1jLChmPXYpLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGgucHJvdG90eXBlKSxmLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1mLGYuX19wcm90b19fPWg7dmFyIGwsdyxnLGQ9di5wcm90b3R5cGU7cmV0dXJuIGQucmVnaXN0ZXI9dShmdW5jdGlvbihuKXt2YXIgdCxpLGU9dGhpcyx1PSh2b2lkIDA9PT1uP3t9Om4pLmltbWVkaWF0ZSxjPXZvaWQgMCE9PXUmJnU7cmV0dXJuIHQ9ZnVuY3Rpb24oKXtyZXR1cm4gZS5wPUJvb2xlYW4obmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuY29udHJvbGxlciksZS5QPWUuUigpLGEoZS5rKCksZnVuY3Rpb24obil7ZS5CPW4sZS5QJiYoZS5PPWUuUCxlLnMucmVzb2x2ZShlLlApLGUuaC5yZXNvbHZlKGUuUCksZS5qKGUuUCksZS5QLmFkZEV2ZW50TGlzdGVuZXIoXCJzdGF0ZWNoYW5nZVwiLGUubCx7b25jZTohMH0pKTt2YXIgdD1lLkIud2FpdGluZztyZXR1cm4gdCYmcih0LnNjcmlwdFVSTCxlLnQpJiYoZS5PPXQsUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbigpe2UuZGlzcGF0Y2hFdmVudChuZXcgbyhcIndhaXRpbmdcIix7c3c6dCx3YXNXYWl0aW5nQmVmb3JlUmVnaXN0ZXI6ITB9KSl9KSksZS5PJiZlLnUucmVzb2x2ZShlLk8pLGUuQi5hZGRFdmVudExpc3RlbmVyKFwidXBkYXRlZm91bmRcIixlLmcpLG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJjb250cm9sbGVyY2hhbmdlXCIsZS5tLHtvbmNlOiEwfSksXCJCcm9hZGNhc3RDaGFubmVsXCJpbiBzZWxmJiYoZS5DPW5ldyBCcm9hZGNhc3RDaGFubmVsKFwid29ya2JveFwiKSxlLkMuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixlLnYpKSxuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGUudiksZS5CfSl9LChpPWZ1bmN0aW9uKCl7aWYoIWMmJlwiY29tcGxldGVcIiE9PWRvY3VtZW50LnJlYWR5U3RhdGUpcmV0dXJuIGZ1bmN0aW9uKG4sdCl7aWYoIXQpcmV0dXJuIG4mJm4udGhlbj9uLnRoZW4ocyk6UHJvbWlzZS5yZXNvbHZlKCl9KG5ldyBQcm9taXNlKGZ1bmN0aW9uKG4pe3JldHVybiBhZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLG4pfSkpfSgpKSYmaS50aGVuP2kudGhlbih0KTp0KGkpfSksZC5nZXRTVz11KGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuT3x8dGhpcy51LnByb21pc2V9KSxkLm1lc3NhZ2VTVz11KGZ1bmN0aW9uKHQpe3JldHVybiBhKHRoaXMuZ2V0U1coKSxmdW5jdGlvbihpKXtyZXR1cm4gbihpLHQpfSl9KSxkLlI9ZnVuY3Rpb24oKXt2YXIgbj1uYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5jb250cm9sbGVyO2lmKG4mJnIobi5zY3JpcHRVUkwsdGhpcy50KSlyZXR1cm4gbn0sZC5rPXUoZnVuY3Rpb24oKXt2YXIgbj10aGlzO3JldHVybiBmdW5jdGlvbihuLHQpe3RyeXt2YXIgaT1uKCl9Y2F0Y2gobil7cmV0dXJuIHQobil9cmV0dXJuIGkmJmkudGhlbj9pLnRoZW4odm9pZCAwLHQpOml9KGZ1bmN0aW9uKCl7cmV0dXJuIGEobmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIobi50LG4uaSksZnVuY3Rpb24odCl7cmV0dXJuIG4uTD1wZXJmb3JtYW5jZS5ub3coKSx0fSl9LGZ1bmN0aW9uKG4pe3Rocm93IG59KX0pLGQuaj1mdW5jdGlvbih0KXtuKHQse3R5cGU6XCJXSU5ET1dfUkVBRFlcIixtZXRhOlwid29ya2JveC13aW5kb3dcIn0pfSxkLmc9ZnVuY3Rpb24oKXt2YXIgbj10aGlzLkIuaW5zdGFsbGluZzt0aGlzLm8+MHx8IXIobi5zY3JpcHRVUkwsdGhpcy50KXx8cGVyZm9ybWFuY2Uubm93KCk+dGhpcy5MKzZlND8odGhpcy5XPW4sdGhpcy5CLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ1cGRhdGVmb3VuZFwiLHRoaXMuZykpOih0aGlzLk89bix0aGlzLnUucmVzb2x2ZShuKSksKyt0aGlzLm8sbi5hZGRFdmVudExpc3RlbmVyKFwic3RhdGVjaGFuZ2VcIix0aGlzLmwpfSxkLmw9ZnVuY3Rpb24obil7dmFyIHQ9dGhpcyxpPW4udGFyZ2V0LGU9aS5zdGF0ZSxyPWk9PT10aGlzLlcsdT1yP1wiZXh0ZXJuYWxcIjpcIlwiLGE9e3N3Omksb3JpZ2luYWxFdmVudDpufTshciYmdGhpcy5wJiYoYS5pc1VwZGF0ZT0hMCksdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBvKHUrZSxhKSksXCJpbnN0YWxsZWRcIj09PWU/dGhpcy5fPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtcImluc3RhbGxlZFwiPT09ZSYmdC5CLndhaXRpbmc9PT1pJiZ0LmRpc3BhdGNoRXZlbnQobmV3IG8odStcIndhaXRpbmdcIixhKSl9LDIwMCk6XCJhY3RpdmF0aW5nXCI9PT1lJiYoY2xlYXJUaW1lb3V0KHRoaXMuXykscnx8dGhpcy5zLnJlc29sdmUoaSkpfSxkLm09ZnVuY3Rpb24obil7dmFyIHQ9dGhpcy5PO3Q9PT1uYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5jb250cm9sbGVyJiYodGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBvKFwiY29udHJvbGxpbmdcIix7c3c6dCxvcmlnaW5hbEV2ZW50Om59KSksdGhpcy5oLnJlc29sdmUodCkpfSxkLnY9ZnVuY3Rpb24obil7dmFyIHQ9bi5kYXRhO3RoaXMuZGlzcGF0Y2hFdmVudChuZXcgbyhcIm1lc3NhZ2VcIix7ZGF0YTp0LG9yaWdpbmFsRXZlbnQ6bn0pKX0sbD12LCh3PVt7a2V5OlwiYWN0aXZlXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucy5wcm9taXNlfX0se2tleTpcImNvbnRyb2xsaW5nXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaC5wcm9taXNlfX1dKSYmdChsLnByb3RvdHlwZSx3KSxnJiZ0KGwsZyksdn0oZnVuY3Rpb24oKXtmdW5jdGlvbiBuKCl7dGhpcy5EPXt9fXZhciB0PW4ucHJvdG90eXBlO3JldHVybiB0LmFkZEV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24obix0KXt0aGlzLlQobikuYWRkKHQpfSx0LnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24obix0KXt0aGlzLlQobikuZGVsZXRlKHQpfSx0LmRpc3BhdGNoRXZlbnQ9ZnVuY3Rpb24obil7bi50YXJnZXQ9dGhpcyx0aGlzLlQobi50eXBlKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiB0KG4pfSl9LHQuVD1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5EW25dPXRoaXMuRFtuXXx8bmV3IFNldH0sbn0oKSk7ZXhwb3J0e2MgYXMgV29ya2JveCxuIGFzIG1lc3NhZ2VTV307XG4vLyMgc291cmNlTWFwcGluZ1VSTD13b3JrYm94LXdpbmRvdy5wcm9kLmVzNS5tanMubWFwXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiaW1wb3J0IHsgZ2V0RGF0YSwgRGF0YU1vZGFsLCBjdXN0b21Gb250cyB9IGZyb20gXCJAZGF0YVwiO1xyXG5pbXBvcnQgeyBTY2VuZUhhbmRsZXIgfSBmcm9tIFwiQHNjZW5lSGFuZGxlclwiO1xyXG5pbXBvcnQgeyBBVURJT19VUkxfUFJFTE9BRCwgSXNDYWNoZWQsIFByZXZpb3VzUGxheWVkTGV2ZWwgfSBmcm9tIFwiQGNvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBXb3JrYm94IH0gZnJvbSBcIndvcmtib3gtd2luZG93XCI7XHJcbmltcG9ydCB7IEZpcmViYXNlSW50ZWdyYXRpb24gfSBmcm9tIFwiLi9zcmMvRmlyZWJhc2UvZmlyZWJhc2UtaW50ZWdyYXRpb25cIjtcclxuaW1wb3J0IHsgVXRpbHMsIFZJU0lCSUxJVFlfQ0hBTkdFLCBEZWJ1Z2dlciwgbGFuZywgcHNldWRvSWQsIGlzRG9jdW1lbnRWaXNpYmxlLCB9IGZyb20gXCJAY29tbW9uXCI7XHJcbmltcG9ydCB7IEF1ZGlvUGxheWVyIH0gZnJvbSBcIkBjb21wb25lbnRzXCI7XHJcbmltcG9ydCB7IFVSTCB9IGZyb20gXCJAZGF0YVwiO1xyXG5jbGFzcyBBcHAge1xyXG4gICAgY2FudmFzO1xyXG4gICAgdmVyc2lvbkluZm9FbGVtZW50O1xyXG4gICAgbGFuZztcclxuICAgIGlzX2NhY2hlZDtcclxuICAgIHByb2dyZXNzQmFyO1xyXG4gICAgcHJvZ3Jlc3NCYXJDb250YWluZXI7XHJcbiAgICBjaGFubmVsO1xyXG4gICAgc2NlbmVIYW5kbGVyO1xyXG4gICAgbG9hZGluZ0VsZW1lbnQ7XHJcbiAgICBtYWpWZXJzaW9uO1xyXG4gICAgbWluVmVyc2lvbjtcclxuICAgIGRhdGFNb2RhbDtcclxuICAgIHN0YXJ0U2Vzc2lvblRpbWU7XHJcbiAgICB0aXRsZVRleHRFbGVtZW50O1xyXG4gICAgZmVlZEJhY2tUZXh0RWxlbWVudDtcclxuICAgIGN1cnJlbnRQcm9ncmVzcztcclxuICAgIGZpcmViYXNlSW50ZWdyYXRpb247XHJcbiAgICBjb25zdHJ1Y3RvcihsYW5nKSB7XHJcbiAgICAgICAgdGhpcy5sYW5nID0gbGFuZztcclxuICAgICAgICB0aGlzLmN1cnJlbnRQcm9ncmVzcyA9IDEwOyAvLyBJbml0aWFsaXplIHByb2dyZXNzIHRvIDBcclxuICAgICAgICB0aGlzLmNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xyXG4gICAgICAgIHRoaXMuY2hhbm5lbCA9IG5ldyBCcm9hZGNhc3RDaGFubmVsKFwibXktY2hhbm5lbFwiKTtcclxuICAgICAgICB0aGlzLnByb2dyZXNzQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9ncmVzcy1iYXJcIik7XHJcbiAgICAgICAgdGhpcy50aXRsZVRleHRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0aXRsZVwiKTtcclxuICAgICAgICB0aGlzLmZlZWRCYWNrVGV4dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZlZWRiYWNrLXRleHRcIik7XHJcbiAgICAgICAgdGhpcy5wcm9ncmVzc0JhckNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvZ3Jlc3MtYmFyLWNvbnRhaW5lclwiKTtcclxuICAgICAgICB0aGlzLnZlcnNpb25JbmZvRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmVyc2lvbi1pbmZvLWlkXCIpO1xyXG4gICAgICAgIHRoaXMubG9hZGluZ0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvYWRpbmctc2NyZWVuXCIpO1xyXG4gICAgICAgIHRoaXMuaXNfY2FjaGVkID0gdGhpcy5pbml0aWFsaXplQ2FjaGVkRGF0YSgpO1xyXG4gICAgICAgIHRoaXMuZmlyZWJhc2VJbnRlZ3JhdGlvbiA9IG5ldyBGaXJlYmFzZUludGVncmF0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5zdGFydFNlc3Npb25UaW1lID0gMDtcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgICAgICB0aGlzLmNoYW5uZWwuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgdGhpcy5oYW5kbGVTZXJ2aWNlV29ya2VyTWVzc2FnZSk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJiZWZvcmV1bmxvYWRcIiwgdGhpcy5oYW5kbGVCZWZvcmVVbmxvYWQpO1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoVklTSUJJTElUWV9DSEFOR0UsIHRoaXMuaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSk7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdGhpcy5oYW5kbGVSZXNpemUuYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcbiAgICBhc3luYyBpbml0KCkge1xyXG4gICAgICAgIGNvbnN0IGZvbnQgPSBhd2FpdCBVdGlscy5nZXRMYW5ndWFnZVNwZWNpZmljRm9udCh0aGlzLmxhbmcpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMubG9hZEFuZENhY2hlRm9udChmb250LCBgLi9hc3NldHMvZm9udHMvJHtmb250fS50dGZgKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmxvYWRUaXRsZUZlZWRiYWNrQ3VzdG9tRm9udCgpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMucHJlbG9hZEdhbWVBdWRpb3MoKTtcclxuICAgICAgICB0aGlzLmhhbmRsZUxvYWRpbmdTY3JlZW4oKTtcclxuICAgICAgICB0aGlzLnNldHVwQ2FudmFzKCk7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGdldERhdGEoKTtcclxuICAgICAgICB0aGlzLm1halZlcnNpb24gPSBkYXRhLm1hanZlcnNpb247XHJcbiAgICAgICAgdGhpcy5taW5WZXJzaW9uID0gZGF0YS5taW52ZXJzaW9uO1xyXG4gICAgICAgIHRoaXMuZGF0YU1vZGFsID0gdGhpcy5jcmVhdGVEYXRhTW9kYWwoZGF0YSk7XHJcbiAgICAgICAgdGhpcy5nbG9iYWxJbml0aWFsaXphdGlvbihkYXRhKTtcclxuICAgICAgICB0aGlzLmxvZ1Nlc3Npb25TdGFydEZpcmViYXNlRXZlbnQoKTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlUmVzaXplKHRoaXMuZGF0YU1vZGFsKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCBwbGF5ZWRJbmZvID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5sYW5nICsgXCJnYW1lUGxheWVkSW5mb1wiKTtcclxuICAgICAgICBjb25zdCBuZXh0UGxheWFibGVMZXZlbCA9IHBsYXllZEluZm8gPyBKU09OLnBhcnNlKHBsYXllZEluZm8pLmxlbmd0aCAtIDEgOiAwO1xyXG4gICAgICAgIGNvbnN0IHN0b3JhZ2VLZXkgPSBEZWJ1Z2dlci5EZWJ1Z01vZGVcclxuICAgICAgICAgICAgPyBQcmV2aW91c1BsYXllZExldmVsICsgdGhpcy5sYW5nICsgXCJEZWJ1Z1wiXHJcbiAgICAgICAgICAgIDogUHJldmlvdXNQbGF5ZWRMZXZlbCArIHRoaXMubGFuZztcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShzdG9yYWdlS2V5LCBuZXh0UGxheWFibGVMZXZlbC50b1N0cmluZygpKTtcclxuICAgICAgICBpZiAodGhpcy5pc19jYWNoZWQuaGFzKHRoaXMubGFuZykpIHtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVDYWNoZWRTY2VuYXJpbyh0aGlzLmRhdGFNb2RhbCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVnaXN0ZXJXb3JrYm94KCk7XHJcbiAgICB9XHJcbiAgICBhc3luYyBsb2FkVGl0bGVGZWVkYmFja0N1c3RvbUZvbnQoKSB7XHJcbiAgICAgICAgY29uc3QgY3VzdG9tVGl0bGVGZWVkYmFja0ZvbnQgPSBjdXN0b21Gb250c1t0aGlzLmxhbmddIHx8IGN1c3RvbUZvbnRzLmRlZmF1bHQ7XHJcbiAgICAgICAgY29uc3QgZm9udEZhbWlseSA9IGAnJHtjdXN0b21UaXRsZUZlZWRiYWNrRm9udH0nLCBzYW5zLXNlcmlmYDtcclxuICAgICAgICBhd2FpdCB0aGlzLmxvYWRBbmRDYWNoZUZvbnQoY3VzdG9tVGl0bGVGZWVkYmFja0ZvbnQsIGAuL2Fzc2V0cy9mb250cy8ke2N1c3RvbVRpdGxlRmVlZGJhY2tGb250fS50dGZgKTtcclxuICAgICAgICBbdGhpcy50aXRsZVRleHRFbGVtZW50LCB0aGlzLmZlZWRCYWNrVGV4dEVsZW1lbnRdLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLmZvbnRGYW1pbHkgPSBmb250RmFtaWx5O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBsb2dTZXNzaW9uU3RhcnRGaXJlYmFzZUV2ZW50KCkge1xyXG4gICAgICAgIGxldCBsYXN0U2Vzc2lvbkVuZFRpbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImxhc3RTZXNzaW9uRW5kVGltZVwiKTtcclxuICAgICAgICBsZXQgbGFzdFRpbWUgPSAwO1xyXG4gICAgICAgIHRoaXMuc3RhcnRTZXNzaW9uVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gICAgICAgIGlmIChsYXN0U2Vzc2lvbkVuZFRpbWUpIHtcclxuICAgICAgICAgICAgbGV0IHBhcnNlZFRpbWVzdGFtcCA9IHBhcnNlSW50KGxhc3RTZXNzaW9uRW5kVGltZSk7XHJcbiAgICAgICAgICAgIGlmICghaXNOYU4ocGFyc2VkVGltZXN0YW1wKSkge1xyXG4gICAgICAgICAgICAgICAgbGFzdFRpbWUgPSBNYXRoLmFicyhuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHBhcnNlZFRpbWVzdGFtcCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZGF5c1NpbmNlTGFzdCA9IGxhc3RUaW1lID8gbGFzdFRpbWUgLyAoMTAwMCAqIDYwICogNjAgKiAyNCkgOiAwO1xyXG4gICAgICAgIGNvbnN0IHJvdW5kZWREYXlzU2luY2VMYXN0ID0gcGFyc2VGbG9hdChkYXlzU2luY2VMYXN0LnRvRml4ZWQoMykpO1xyXG4gICAgICAgIGNvbnN0IHNlc3Npb25TdGFydERhdGEgPSB7XHJcbiAgICAgICAgICAgIGNyX3VzZXJfaWQ6IHBzZXVkb0lkLFxyXG4gICAgICAgICAgICBmdG1fbGFuZ3VhZ2U6IGxhbmcsXHJcbiAgICAgICAgICAgIHByb2ZpbGVfbnVtYmVyOiAwLFxyXG4gICAgICAgICAgICB2ZXJzaW9uX251bWJlcjogdGhpcy52ZXJzaW9uSW5mb0VsZW1lbnQuaW5uZXJIVE1MLFxyXG4gICAgICAgICAgICBqc29uX3ZlcnNpb25fbnVtYmVyOiAhIXRoaXMubWFqVmVyc2lvbiAmJiAhIXRoaXMubWluVmVyc2lvblxyXG4gICAgICAgICAgICAgICAgPyB0aGlzLm1halZlcnNpb24udG9TdHJpbmcoKSArIFwiLlwiICsgdGhpcy5taW5WZXJzaW9uLnRvU3RyaW5nKClcclxuICAgICAgICAgICAgICAgIDogXCJcIixcclxuICAgICAgICAgICAgZGF5c19zaW5jZV9sYXN0OiByb3VuZGVkRGF5c1NpbmNlTGFzdCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuZmlyZWJhc2VJbnRlZ3JhdGlvbi5zZW5kU2Vzc2lvblN0YXJ0RXZlbnQoc2Vzc2lvblN0YXJ0RGF0YSk7XHJcbiAgICB9XHJcbiAgICBsb2dTZXNzaW9uRW5kRmlyZWJhc2VFdmVudCgpIHtcclxuICAgICAgICBjb25zdCBzZXNzaW9uRW5kRGF0YSA9IHtcclxuICAgICAgICAgICAgY3JfdXNlcl9pZDogcHNldWRvSWQsXHJcbiAgICAgICAgICAgIGZ0bV9sYW5ndWFnZTogbGFuZyxcclxuICAgICAgICAgICAgcHJvZmlsZV9udW1iZXI6IDAsXHJcbiAgICAgICAgICAgIHZlcnNpb25fbnVtYmVyOiB0aGlzLnZlcnNpb25JbmZvRWxlbWVudC5pbm5lckhUTUwsXHJcbiAgICAgICAgICAgIGpzb25fdmVyc2lvbl9udW1iZXI6ICEhdGhpcy5tYWpWZXJzaW9uICYmICEhdGhpcy5taW5WZXJzaW9uXHJcbiAgICAgICAgICAgICAgICA/IHRoaXMubWFqVmVyc2lvbi50b1N0cmluZygpICsgXCIuXCIgKyB0aGlzLm1pblZlcnNpb24udG9TdHJpbmcoKVxyXG4gICAgICAgICAgICAgICAgOiBcIlwiLFxyXG4gICAgICAgICAgICBkdXJhdGlvbjogKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gdGhpcy5zdGFydFNlc3Npb25UaW1lKSAvIDEwMDAsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImxhc3RTZXNzaW9uRW5kVGltZVwiLCBuZXcgRGF0ZSgpLmdldFRpbWUoKS50b1N0cmluZygpKTtcclxuICAgICAgICB0aGlzLmZpcmViYXNlSW50ZWdyYXRpb24uc2VuZFNlc3Npb25FbmRFdmVudChzZXNzaW9uRW5kRGF0YSk7XHJcbiAgICB9XHJcbiAgICBpbml0aWFsaXplQ2FjaGVkRGF0YSgpIHtcclxuICAgICAgICBjb25zdCBzdG9yZWREYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oSXNDYWNoZWQpO1xyXG4gICAgICAgIHJldHVybiBzdG9yZWREYXRhID8gbmV3IE1hcChKU09OLnBhcnNlKHN0b3JlZERhdGEpKSA6IG5ldyBNYXAoKTtcclxuICAgIH1cclxuICAgIGFzeW5jIGxvYWRBbmRDYWNoZUZvbnQoZm9udE5hbWUsIGZvbnRQYXRoKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgY2FjaGUgPSBhd2FpdCBjYWNoZXMub3BlbihcImZvbnRDYWNoZVwiKTtcclxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjYWNoZS5tYXRjaChmb250UGF0aCk7XHJcbiAgICAgICAgICAgIGlmICghcmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGZvbnRSZXNwb25zZSA9IGF3YWl0IGZldGNoKGZvbnRQYXRoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGZvbnRCbG9iID0gYXdhaXQgZm9udFJlc3BvbnNlLmJsb2IoKTtcclxuICAgICAgICAgICAgICAgIGF3YWl0IGNhY2hlLnB1dChmb250UGF0aCwgbmV3IFJlc3BvbnNlKGZvbnRCbG9iKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc3QgZm9udCA9IG5ldyBGb250RmFjZShmb250TmFtZSwgYHVybCgke2ZvbnRQYXRofSkgZm9ybWF0KCd0cnVldHlwZScpYCk7XHJcbiAgICAgICAgICAgIGF3YWl0IGZvbnQubG9hZCgpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5mb250cy5hZGQoZm9udCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSAqLyBjb25zb2xlLmVycm9yKC4uLm9vX3R4KGAxNjAzMDM4NDQ3XzE3NV82XzE3NV82Ml8xMWAsIGBGYWlsZWQgdG8gbG9hZCBhbmQgY2FjaGUgZm9udDogJHtlcnJvcn1gKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaGFuZGxlTG9hZGluZ1NjcmVlbiA9ICgpID0+IHtcclxuICAgICAgICBpZiAodGhpcy5pc19jYWNoZWQuZ2V0KGxhbmcpKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZGluZ0VsZW1lbnQuc3R5bGUuekluZGV4ID0gXCItMVwiO1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRpbmdFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0JhckNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NCYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0JhckNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XHJcbiAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NCYXIuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xyXG4gICAgICAgICAgICB0aGlzLnByb2dyZXNzQmFyLnN0eWxlLndpZHRoID0gXCIxMCVcIjtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgYXN5bmMgcmVnaXN0ZXJXb3JrYm94KCkge1xyXG4gICAgICAgIGlmIChcInNlcnZpY2VXb3JrZXJcIiBpbiBuYXZpZ2F0b3IpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHdiID0gbmV3IFdvcmtib3goXCIuL3N3LmpzXCIsIHt9KTtcclxuICAgICAgICAgICAgICAgIGF3YWl0IHdiLnJlZ2lzdGVyKCk7XHJcbiAgICAgICAgICAgICAgICBhd2FpdCBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWFkeTtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc19jYWNoZWQuaGFzKHRoaXMubGFuZykpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5uZWwucG9zdE1lc3NhZ2UoeyBjb21tYW5kOiBcIkNhY2hlXCIsIGRhdGE6IHRoaXMubGFuZyB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGZldGNoKFVSTCArIFwiP2NhY2hlLWJ1c3Q9XCIgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJDYWNoZS1Db250cm9sXCI6IFwibm8tc3RvcmVcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGU6IFwibm8tc3RvcmVcIixcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbihhc3luYyAocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8gY29uc29sZS5lcnJvciguLi5vb190eChgMTYwMzAzODQ0N18yMTJfMTZfMjE0XzE3XzExYCwgXCJGYWlsZWQgdG8gZmV0Y2ggdGhlIGNvbnRlbnQgZmlsZSBmcm9tIHRoZSBzZXJ2ZXIhXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdDb250ZW50RmlsZURhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFoZWFkQ29udGVudFZlcnNpb24gPSBuZXdDb250ZW50RmlsZURhdGFbXCJtYWp2ZXJzaW9uXCJdICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiLlwiICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NvbnRlbnRGaWxlRGF0YVtcIm1pbnZlcnNpb25cIl07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlZFZlcnNpb24gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInZlcnNpb25cIiArIGxhbmcudG9Mb3dlckNhc2UoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlIG5lZWQgdG8gY2hlY2sgaGVyZSBmb3IgdGhlIGNvbnRlbnQgdmVyc2lvbiB1cGRhdGVzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIElmIHRoZXJlJ3MgYSBuZXcgY29udGVudCB2ZXJzaW9uLCB3ZSBuZWVkIHRvIHJlbW92ZSB0aGUgY2FjaGVkIGNvbnRlbnQgYW5kIHJlbG9hZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBXZSBhcmUgY29tcGFyaW5nIGhlcmUgdGhlIGNvbnRlbnRWZXJzaW9uIHdpdGggdGhlIGFoZWFkQ29udGVudFZlcnNpb25cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFoZWFkQ29udGVudFZlcnNpb24gJiYgY2FjaGVkVmVyc2lvbiAhPSBhaGVhZENvbnRlbnRWZXJzaW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSAqLyBjb25zb2xlLmxvZyguLi5vb19vbyhgMTYwMzAzODQ0N18yMjlfMTZfMjI5XzY5XzRgLCBcIkNvbnRlbnQgdmVyc2lvbiBtaXNtYXRjaCEgUmVsb2FkaW5nLi4uXCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjYWNoZWRJdGVtID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzX2NhY2hlZFwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSAqLyBjb25zb2xlLmxvZyguLi5vb19vbyhgMTYwMzAzODQ0N18yMzFfMTZfMjMxXzUyXzRgLCBcImN1cnJlbnQgbGFuZyAgXCIgKyBsYW5nKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3Q2FjaGVkSXRlbSA9IGNhY2hlZEl0ZW0uZmlsdGVyKChlKSA9PiAhZS50b1N0cmluZygpLmluY2x1ZGVzKGxhbmcpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKElzQ2FjaGVkLCBKU09OLnN0cmluZ2lmeShuZXdDYWNoZWRJdGVtKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcInZlcnNpb25cIiArIGxhbmcudG9Mb3dlckNhc2UoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDbGVhciB0aGUgY2FjaGUgZm9yIHRodCBwYXJ0aWN1bGFyIGNvbnRlbnRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlcy5kZWxldGUobGFuZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZVVwZGF0ZUZvdW5kTWVzc2FnZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSAqLyBjb25zb2xlLmVycm9yKC4uLm9vX3R4KGAxNjAzMDM4NDQ3XzI0M18xNF8yNDNfNzJfMTFgLCBcIkVycm9yIGZldGNoaW5nIHRoZSBjb250ZW50IGZpbGU6IFwiICsgZXJyb3IpKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIHRoaXMuaGFuZGxlU2VydmljZVdvcmtlck1lc3NhZ2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8gY29uc29sZS5lcnJvciguLi5vb190eChgMTYwMzAzODQ0N18yNTFfOF8yNTFfNjhfMTFgLCBgRmFpbGVkIHRvIHJlZ2lzdGVyIHNlcnZpY2Ugd29ya2VyOiAke2Vycm9yfWApKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNldHVwQ2FudmFzKCkge1xyXG4gICAgICAgIHRoaXMuY2FudmFzLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcclxuICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCA9IHdpbmRvdy5zY3JlZW4ud2lkdGggPiAxMDgwID8gNzY4IDogd2luZG93LmlubmVyV2lkdGg7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVEYXRhTW9kYWwoZGF0YSkge1xyXG4gICAgICAgIHJldHVybiBuZXcgRGF0YU1vZGFsKGRhdGEudGl0bGUsIGRhdGEuT3RoZXJBdWRpb3MsIGRhdGEuTGV2ZWxzLCBkYXRhLkZlZWRiYWNrVGV4dHMsIGRhdGEuUmlnaHRUb0xlZnQsIGRhdGEuRmVlZGJhY2tBdWRpb3MsIGRhdGEubWFqdmVyc2lvbiwgZGF0YS5taW52ZXJzaW9uLCBkYXRhLnZlcnNpb24pO1xyXG4gICAgfVxyXG4gICAgZ2xvYmFsSW5pdGlhbGl6YXRpb24oZGF0YSkge1xyXG4gICAgICAgIGdsb2JhbFRoaXMuYWJvdXRDb21wYW55ID0gZGF0YS5hYm91dENvbXBhbnk7XHJcbiAgICAgICAgZ2xvYmFsVGhpcy5kZXNjcmlwdGlvblRleHQgPSBkYXRhLmRlc2NyaXB0aW9uVGV4dDtcclxuICAgIH1cclxuICAgIGhhbmRsZVJlc2l6ZShkYXRhTW9kYWwpIHtcclxuICAgICAgICBpZiAodGhpcy5pc19jYWNoZWQuaGFzKHRoaXMubGFuZykpIHtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVWZXJzaW9uSW5mb0VsZW1lbnQoZGF0YU1vZGFsKTtcclxuICAgICAgICAgICAgdGhpcy5zZXR1cENhbnZhcygpO1xyXG4gICAgICAgICAgICB0aGlzLnJlaW5pdGlhbGl6ZVNjZW5lSGFuZGxlcihkYXRhTW9kYWwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHVwZGF0ZVZlcnNpb25JbmZvRWxlbWVudChkYXRhTW9kYWwpIHtcclxuICAgICAgICBpZiAodGhpcy5pc19jYWNoZWQuaGFzKHRoaXMubGFuZykgJiYgRGVidWdnZXIuRGV2ZWxvcG1lbnRMaW5rKSB7XHJcbiAgICAgICAgICAgIGlmIChkYXRhTW9kYWwubWFqVmVyc2lvbiAmJiBkYXRhTW9kYWwubWluVmVyc2lvbikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy52ZXJzaW9uSW5mb0VsZW1lbnQuaW5uZXJIVE1MICs9IGAvai52JHtkYXRhTW9kYWwubWFqVmVyc2lvbn0uJHtkYXRhTW9kYWwubWluVmVyc2lvbn1gO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGRhdGFNb2RhbC52ZXJzaW9uKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnZlcnNpb25JbmZvRWxlbWVudC5pbm5lckhUTUwgKz0gYC9qLnYke2RhdGFNb2RhbC52ZXJzaW9ufWA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b2dnbGUtYnRuXCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmVpbml0aWFsaXplU2NlbmVIYW5kbGVyKGRhdGFNb2RhbCkge1xyXG4gICAgICAgIGRlbGV0ZSB0aGlzLnNjZW5lSGFuZGxlcjtcclxuICAgICAgICB0aGlzLnNjZW5lSGFuZGxlciA9IG5ldyBTY2VuZUhhbmRsZXIodGhpcy5jYW52YXMsIGRhdGFNb2RhbCk7XHJcbiAgICAgICAgdGhpcy5wYXNzaW5nRGF0YVRvQ29udGFpbmVyKCk7XHJcbiAgICB9XHJcbiAgICBoYW5kbGVDYWNoZWRTY2VuYXJpbyhkYXRhTW9kYWwpIHtcclxuICAgICAgICB0aGlzLnVwZGF0ZVZlcnNpb25JbmZvRWxlbWVudChkYXRhTW9kYWwpO1xyXG4gICAgICAgIHRoaXMuc2NlbmVIYW5kbGVyID0gbmV3IFNjZW5lSGFuZGxlcih0aGlzLmNhbnZhcywgZGF0YU1vZGFsKTtcclxuICAgICAgICB0aGlzLnBhc3NpbmdEYXRhVG9Db250YWluZXIoKTtcclxuICAgIH1cclxuICAgIHBhc3NpbmdEYXRhVG9Db250YWluZXIgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHdpbmRvdy5BbmRyb2lkKSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5BbmRyb2lkLmNhY2hlZFN0YXR1cyh0aGlzLmlzX2NhY2hlZC5nZXQodGhpcy5sYW5nKSA9PSB0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgc2V0Q29udGFpbmVyQXBwT3JpZW50YXRpb24oKSB7XHJcbiAgICAgICAgaWYgKHdpbmRvdy5BbmRyb2lkKSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5BbmRyb2lkLnNldENvbnRhaW5lckFwcE9yaWVudGF0aW9uKFwicG9ydHJhaXRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaGFuZGxlVXBkYXRlRm91bmRNZXNzYWdlKCkge1xyXG4gICAgICAgIGxldCB0ZXh0ID0gXCJVcGRhdGUgRm91bmRcXG5QcmVzcyBvayB0byB1cGRhdGVcIjtcclxuICAgICAgICBjb25zdCB1c2VyQ29uZmlybWVkID0gY29uZmlybSh0ZXh0KTtcclxuICAgICAgICBpZiAodXNlckNvbmZpcm1lZCkge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaGFuZGxlTG9hZGluZ01lc3NhZ2UgPSAoZGF0YSkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnByb2dyZXNzQmFyQ29udGFpbmVyICYmIHRoaXMucHJvZ3Jlc3NCYXIpIHtcclxuICAgICAgICAgICAgdGhpcy5zaG93UHJvZ3Jlc3NCYXIoKTtcclxuICAgICAgICAgICAgY29uc3QgcHJvZ3Jlc3NWYWx1ZSA9IE1hdGgubWluKDEwMCwgTWF0aC5tYXgoMCwgZGF0YS5kYXRhKSk7IC8vIEVuc3VyZSBwcm9ncmVzcyBpcyBiZXR3ZWVuIDAgYW5kIDEwMFxyXG4gICAgICAgICAgICAvLyBPbmx5IHVwZGF0ZSBpZiBuZXcgcHJvZ3Jlc3MgaXMgZ3JlYXRlciB0aGFuIHRoZSBjdXJyZW50IHByb2dyZXNzXHJcbiAgICAgICAgICAgIGlmIChwcm9ncmVzc1ZhbHVlID4gdGhpcy5jdXJyZW50UHJvZ3Jlc3MpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFByb2dyZXNzID0gcHJvZ3Jlc3NWYWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NCYXIuc3R5bGUud2lkdGggPSBgJHt0aGlzLmN1cnJlbnRQcm9ncmVzc30lYDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBDaGVjayBpZiBkb3dubG9hZCBjb21wbGV0ZWRcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNEb3dubG9hZENvbXBsZXRlZCh0aGlzLmN1cnJlbnRQcm9ncmVzcykpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FjaGVMYW5ndWFnZSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZW5kQ29tcGxldGlvbkV2ZW50KCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGVMb2FkaW5nU2NyZWVuKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLy9TaG93cyB0aGUgcHJvZ3Jlc3MgYmFyLlxyXG4gICAgc2hvd1Byb2dyZXNzQmFyKCkge1xyXG4gICAgICAgIHRoaXMucHJvZ3Jlc3NCYXJDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInZpc2libGVcIik7XHJcbiAgICAgICAgdGhpcy5wcm9ncmVzc0Jhci5jbGFzc0xpc3QuYWRkKFwidmlzaWJsZVwiKTtcclxuICAgIH1cclxuICAgIC8vQ2hlY2tzIGlmIGRvd25sb2FkIGlzIGNvbXBsZXRlZC5cclxuICAgIGlzRG93bmxvYWRDb21wbGV0ZWQocHJvZ3Jlc3MpIHtcclxuICAgICAgICByZXR1cm4gcHJvZ3Jlc3MgPT09IDEwMCAmJiAhdGhpcy5pc19jYWNoZWQuZ2V0KHRoaXMubGFuZyk7XHJcbiAgICB9XHJcbiAgICAvL0hhbmRsZXMgY2FjaGluZy5cclxuICAgIGNhY2hlTGFuZ3VhZ2UoKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdGhpcy5pc19jYWNoZWQuc2V0KHRoaXMubGFuZywgdHJ1ZSk7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKElzQ2FjaGVkLCBKU09OLnN0cmluZ2lmeShBcnJheS5mcm9tKHRoaXMuaXNfY2FjaGVkLmVudHJpZXMoKSkpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlICovIGNvbnNvbGUuZXJyb3IoLi4ub29fdHgoYDE2MDMwMzg0NDdfMzcxXzZfMzcxXzUzXzExYCwgXCJFcnJvciBjYWNoaW5nIGxhbmd1YWdlOlwiLCBlcnJvcikpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIEhhbmRsZXMgRXZlbnQgc2VuZGluZy5cclxuICAgIHNlbmRDb21wbGV0aW9uRXZlbnQoKSB7XHJcbiAgICAgICAgY29uc3QgZG93bmxvYWRDb21wbGV0ZWQgPSB7XHJcbiAgICAgICAgICAgIGNyX3VzZXJfaWQ6IHBzZXVkb0lkLFxyXG4gICAgICAgICAgICBmdG1fbGFuZ3VhZ2U6IGxhbmcsXHJcbiAgICAgICAgICAgIHByb2ZpbGVfbnVtYmVyOiAwLFxyXG4gICAgICAgICAgICB2ZXJzaW9uX251bWJlcjogdGhpcy52ZXJzaW9uSW5mb0VsZW1lbnQuaW5uZXJIVE1MLFxyXG4gICAgICAgICAgICBqc29uX3ZlcnNpb25fbnVtYmVyOiB0aGlzLmdldEpzb25WZXJzaW9uTnVtYmVyKCksXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmZpcmViYXNlSW50ZWdyYXRpb24uc2VuZERvd25sb2FkQ29tcGxldGVkRXZlbnQoZG93bmxvYWRDb21wbGV0ZWQpO1xyXG4gICAgfVxyXG4gICAgZ2V0SnNvblZlcnNpb25OdW1iZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuICEhdGhpcy5tYWpWZXJzaW9uICYmICEhdGhpcy5taW5WZXJzaW9uXHJcbiAgICAgICAgICAgID8gdGhpcy5tYWpWZXJzaW9uICsgXCIuXCIgKyB0aGlzLm1pblZlcnNpb25cclxuICAgICAgICAgICAgOiBcIlwiO1xyXG4gICAgfVxyXG4gICAgLy9IaWRlcyB0aGUgbG9hZGluZyBzY3JlZW4uXHJcbiAgICBoaWRlTG9hZGluZ1NjcmVlbigpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInZlcnNpb25cIiArIHRoaXMubGFuZywgdGhpcy5nZXRKc29uVmVyc2lvbk51bWJlcigpKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkaW5nRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlUmVzaXplKHRoaXMuZGF0YU1vZGFsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlICovIGNvbnNvbGUuZXJyb3IoLi4ub29fdHgoYDE2MDMwMzg0NDdfMzk4XzZfMzk4XzU4XzExYCwgXCJFcnJvciBoaWRpbmcgbG9hZGluZyBzY3JlZW46XCIsIGVycm9yKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaGFuZGxlU2VydmljZVdvcmtlck1lc3NhZ2UgPSAoZXZlbnQpID0+IHtcclxuICAgICAgICBpZiAoZXZlbnQuZGF0YS5tc2cgPT09IFwiTG9hZGluZ1wiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlTG9hZGluZ01lc3NhZ2UoZXZlbnQuZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGV2ZW50LmRhdGEubXNnID09PSBcIlVwZGF0ZSBGb3VuZFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlVXBkYXRlRm91bmRNZXNzYWdlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGhhbmRsZVZpc2liaWxpdHlDaGFuZ2UgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKGlzRG9jdW1lbnRWaXNpYmxlKCkpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dTZXNzaW9uU3RhcnRGaXJlYmFzZUV2ZW50KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ1Nlc3Npb25FbmRGaXJlYmFzZUV2ZW50KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGhhbmRsZUJlZm9yZVVubG9hZCA9IGFzeW5jIChldmVudCkgPT4ge1xyXG4gICAgICAgIHRoaXMubG9nU2Vzc2lvbkVuZEZpcmViYXNlRXZlbnQoKTtcclxuICAgICAgICB0aGlzLmRpc3Bvc2UoKTtcclxuICAgIH07XHJcbiAgICBwcmVsb2FkR2FtZUF1ZGlvcyA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBsZXQgYXVkaW9VcmxzID0gQVVESU9fVVJMX1BSRUxPQUQ7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcHJlbG9hZFByb21pc2VzID0gYXVkaW9VcmxzLm1hcCgoYXVkaW9TcmMpID0+IG5ldyBBdWRpb1BsYXllcigpLnByZWxvYWRHYW1lQXVkaW8oYXVkaW9TcmMpKTtcclxuICAgICAgICAgICAgUHJvbWlzZS5hbGwocHJlbG9hZFByb21pc2VzKVxyXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gcmVzb2x2ZSgpKVxyXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8gY29uc29sZS5lcnJvciguLi5vb190eChgMTYwMzAzODQ0N180MzVfMTBfNDM1XzU3XzExYCwgXCJFcnJvciBwcmVsb2FkaW5nIGF1ZGlvOlwiLCBlcnJvcikpO1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgLy8gQWRkIHRoZSBkaXNwb3NlIG1ldGhvZFxyXG4gICAgZGlzcG9zZSgpIHtcclxuICAgICAgICB0aGlzLmNoYW5uZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgdGhpcy5oYW5kbGVTZXJ2aWNlV29ya2VyTWVzc2FnZSk7XHJcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJiZWZvcmV1bmxvYWRcIiwgdGhpcy5oYW5kbGVCZWZvcmVVbmxvYWQpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoVklTSUJJTElUWV9DSEFOR0UsIHRoaXMuaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSk7XHJcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgdGhpcy5oYW5kbGVSZXNpemUpO1xyXG4gICAgICAgIGlmIChuYXZpZ2F0b3Iuc2VydmljZVdvcmtlcikge1xyXG4gICAgICAgICAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZW1vdmVFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCB0aGlzLmhhbmRsZVNlcnZpY2VXb3JrZXJNZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gUGVyZm9ybSBhZGRpdGlvbmFsIGNsZWFudXAgaWYgbmVjZXNzYXJ5XHJcbiAgICB9XHJcbn1cclxuY29uc3QgYXBwID0gbmV3IEFwcChsYW5nKTtcclxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8gLyogYzggaWdub3JlIHN0YXJ0ICovIC8qIGVzbGludC1kaXNhYmxlICovIDtcclxuZnVuY3Rpb24gb29fY20oKSB7IHRyeSB7XHJcbiAgICByZXR1cm4gKDAsIGV2YWwpKFwiZ2xvYmFsVGhpcy5fY29uc29sZV9uaW5qYVwiKSB8fCAoMCwgZXZhbCkoXCIvKiBodHRwczovL2dpdGh1Yi5jb20vd2FsbGFieWpzL2NvbnNvbGUtbmluamEjaG93LWRvZXMtaXQtd29yayAqLyd1c2Ugc3RyaWN0Jzt2YXIgXzB4ZmU1ZTQ0PV8weDI4MDA7KGZ1bmN0aW9uKF8weDIxNTQ5NSxfMHg1NGRiM2Ype3ZhciBfMHgxNWEwYzE9XzB4MjgwMCxfMHg1NmQ4NWY9XzB4MjE1NDk1KCk7d2hpbGUoISFbXSl7dHJ5e3ZhciBfMHg4NTg5ZjU9cGFyc2VJbnQoXzB4MTVhMGMxKDB4MWYzKSkvMHgxKihwYXJzZUludChfMHgxNWEwYzEoMHgxYmYpKS8weDIpK3BhcnNlSW50KF8weDE1YTBjMSgweDFlYykpLzB4MystcGFyc2VJbnQoXzB4MTVhMGMxKDB4MjhiKSkvMHg0K3BhcnNlSW50KF8weDE1YTBjMSgweDIyYikpLzB4NSooLXBhcnNlSW50KF8weDE1YTBjMSgweDFhNCkpLzB4NikrLXBhcnNlSW50KF8weDE1YTBjMSgweDFhZCkpLzB4NytwYXJzZUludChfMHgxNWEwYzEoMHgxZTgpKS8weDgqKHBhcnNlSW50KF8weDE1YTBjMSgweDI5NCkpLzB4OSkrLXBhcnNlSW50KF8weDE1YTBjMSgweDIwZCkpLzB4YTtpZihfMHg4NTg5ZjU9PT1fMHg1NGRiM2YpYnJlYWs7ZWxzZSBfMHg1NmQ4NWZbJ3B1c2gnXShfMHg1NmQ4NWZbJ3NoaWZ0J10oKSk7fWNhdGNoKF8weDEyOGY0MCl7XzB4NTZkODVmWydwdXNoJ10oXzB4NTZkODVmWydzaGlmdCddKCkpO319fShfMHg0ODQyLDB4ZTNlYjgpKTt2YXIgSz1PYmplY3RbJ2NyZWF0ZSddLFE9T2JqZWN0W18weGZlNWU0NCgweDFiZCldLEc9T2JqZWN0WydnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InXSxlZT1PYmplY3RbJ2dldE93blByb3BlcnR5TmFtZXMnXSx0ZT1PYmplY3RbXzB4ZmU1ZTQ0KDB4MjQ4KV0sbmU9T2JqZWN0Wydwcm90b3R5cGUnXVtfMHhmZTVlNDQoMHgyNGEpXSxyZT0oXzB4NWI3NWM2LF8weDM0ODNiNixfMHg1OTJiZmIsXzB4MzViZDhiKT0+e3ZhciBfMHgzNGM4ZjY9XzB4ZmU1ZTQ0O2lmKF8weDM0ODNiNiYmdHlwZW9mIF8weDM0ODNiNj09XzB4MzRjOGY2KDB4MjU5KXx8dHlwZW9mIF8weDM0ODNiNj09XzB4MzRjOGY2KDB4MjU0KSl7Zm9yKGxldCBfMHgxNWNmYmMgb2YgZWUoXzB4MzQ4M2I2KSkhbmVbJ2NhbGwnXShfMHg1Yjc1YzYsXzB4MTVjZmJjKSYmXzB4MTVjZmJjIT09XzB4NTkyYmZiJiZRKF8weDViNzVjNixfMHgxNWNmYmMseydnZXQnOigpPT5fMHgzNDgzYjZbXzB4MTVjZmJjXSwnZW51bWVyYWJsZSc6IShfMHgzNWJkOGI9RyhfMHgzNDgzYjYsXzB4MTVjZmJjKSl8fF8weDM1YmQ4YlsnZW51bWVyYWJsZSddfSk7fXJldHVybiBfMHg1Yjc1YzY7fSxWPShfMHg4M2E0OTEsXzB4MWM3ZmFiLF8weDMzMzkyMik9PihfMHgzMzM5MjI9XzB4ODNhNDkxIT1udWxsP0sodGUoXzB4ODNhNDkxKSk6e30scmUoXzB4MWM3ZmFifHwhXzB4ODNhNDkxfHwhXzB4ODNhNDkxW18weGZlNWU0NCgweDI1MCldP1EoXzB4MzMzOTIyLF8weGZlNWU0NCgweDI1ZSkseyd2YWx1ZSc6XzB4ODNhNDkxLCdlbnVtZXJhYmxlJzohMHgwfSk6XzB4MzMzOTIyLF8weDgzYTQ5MSkpLFo9Y2xhc3N7Y29uc3RydWN0b3IoXzB4M2I4MjAxLF8weDJlZGQyYixfMHgxNGMyNTEsXzB4MjFhMzc0LF8weDJkNzQwOSxfMHg0ODVkMjYpe3ZhciBfMHgzMjczZWI9XzB4ZmU1ZTQ0LF8weDIyMDcwZixfMHgxY2RkM2IsXzB4NTVmOWRlLF8weGNlNDY4Zjt0aGlzW18weDMyNzNlYigweDI5MSldPV8weDNiODIwMSx0aGlzW18weDMyNzNlYigweDI3MCldPV8weDJlZGQyYix0aGlzW18weDMyNzNlYigweDI2MildPV8weDE0YzI1MSx0aGlzW18weDMyNzNlYigweDFiYyldPV8weDIxYTM3NCx0aGlzW18weDMyNzNlYigweDI2NCldPV8weDJkNzQwOSx0aGlzW18weDMyNzNlYigweDI3YyldPV8weDQ4NWQyNix0aGlzWydfYWxsb3dlZFRvU2VuZCddPSEweDAsdGhpc1tfMHgzMjczZWIoMHgxYWIpXT0hMHgwLHRoaXNbXzB4MzI3M2ViKDB4MjAzKV09ITB4MSx0aGlzW18weDMyNzNlYigweDFjNSldPSEweDEsdGhpc1tfMHgzMjczZWIoMHgyMjEpXT0oKF8weDFjZGQzYj0oXzB4MjIwNzBmPV8weDNiODIwMVtfMHgzMjczZWIoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4MjIwNzBmW18weDMyNzNlYigweDFjYyldKT09bnVsbD92b2lkIDB4MDpfMHgxY2RkM2JbXzB4MzI3M2ViKDB4MWMzKV0pPT09XzB4MzI3M2ViKDB4MWZkKSx0aGlzWydfaW5Ccm93c2VyJ109ISgoXzB4Y2U0NjhmPShfMHg1NWY5ZGU9dGhpc1tfMHgzMjczZWIoMHgyOTEpXVtfMHgzMjczZWIoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4NTVmOWRlW18weDMyNzNlYigweDI2ZildKSE9bnVsbCYmXzB4Y2U0NjhmW18weDMyNzNlYigweDI4YyldKSYmIXRoaXNbJ19pbk5leHRFZGdlJ10sdGhpc1snX1dlYlNvY2tldENsYXNzJ109bnVsbCx0aGlzW18weDMyNzNlYigweDFhOCldPTB4MCx0aGlzW18weDMyNzNlYigweDI4ZildPTB4MTQsdGhpc1snX3dlYlNvY2tldEVycm9yRG9jc0xpbmsnXT1fMHgzMjczZWIoMHgyMTEpLHRoaXNbXzB4MzI3M2ViKDB4MWFlKV09KHRoaXNbXzB4MzI3M2ViKDB4MjNlKV0/XzB4MzI3M2ViKDB4MjQ3KTpfMHgzMjczZWIoMHgyOGEpKSt0aGlzW18weDMyNzNlYigweDIwMSldO31hc3luY1tfMHhmZTVlNDQoMHgyNzIpXSgpe3ZhciBfMHgyZWM0NTc9XzB4ZmU1ZTQ0LF8weDE2YjFmNixfMHg0NmFlNTY7aWYodGhpc1tfMHgyZWM0NTcoMHgxZDUpXSlyZXR1cm4gdGhpc1tfMHgyZWM0NTcoMHgxZDUpXTtsZXQgXzB4NDIwY2Q3O2lmKHRoaXNbJ19pbkJyb3dzZXInXXx8dGhpc1tfMHgyZWM0NTcoMHgyMjEpXSlfMHg0MjBjZDc9dGhpc1tfMHgyZWM0NTcoMHgyOTEpXVsnV2ViU29ja2V0J107ZWxzZXtpZigoXzB4MTZiMWY2PXRoaXNbXzB4MmVjNDU3KDB4MjkxKV1bXzB4MmVjNDU3KDB4MjA2KV0pIT1udWxsJiZfMHgxNmIxZjZbJ19XZWJTb2NrZXQnXSlfMHg0MjBjZDc9KF8weDQ2YWU1Nj10aGlzW18weDJlYzQ1NygweDI5MSldW18weDJlYzQ1NygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHg0NmFlNTZbJ19XZWJTb2NrZXQnXTtlbHNlIHRyeXtsZXQgXzB4NDkyNTExPWF3YWl0IGltcG9ydChfMHgyZWM0NTcoMHgyNTEpKTtfMHg0MjBjZDc9KGF3YWl0IGltcG9ydCgoYXdhaXQgaW1wb3J0KF8weDJlYzQ1NygweDI0NSkpKVtfMHgyZWM0NTcoMHgxYjMpXShfMHg0OTI1MTFbJ2pvaW4nXSh0aGlzWydub2RlTW9kdWxlcyddLCd3cy9pbmRleC5qcycpKVtfMHgyZWM0NTcoMHgyMzIpXSgpKSlbXzB4MmVjNDU3KDB4MjVlKV07fWNhdGNoe3RyeXtfMHg0MjBjZDc9cmVxdWlyZShyZXF1aXJlKF8weDJlYzQ1NygweDI1MSkpW18weDJlYzQ1NygweDIzYyldKHRoaXNbXzB4MmVjNDU3KDB4MWJjKV0sJ3dzJykpO31jYXRjaHt0aHJvdyBuZXcgRXJyb3IoXzB4MmVjNDU3KDB4MjdmKSk7fX19cmV0dXJuIHRoaXNbXzB4MmVjNDU3KDB4MWQ1KV09XzB4NDIwY2Q3LF8weDQyMGNkNzt9WydfY29ubmVjdFRvSG9zdE5vdyddKCl7dmFyIF8weDMxMWFlNT1fMHhmZTVlNDQ7dGhpc1snX2Nvbm5lY3RpbmcnXXx8dGhpc1snX2Nvbm5lY3RlZCddfHx0aGlzWydfY29ubmVjdEF0dGVtcHRDb3VudCddPj10aGlzWydfbWF4Q29ubmVjdEF0dGVtcHRDb3VudCddfHwodGhpc1snX2FsbG93ZWRUb0Nvbm5lY3RPblNlbmQnXT0hMHgxLHRoaXNbXzB4MzExYWU1KDB4MWM1KV09ITB4MCx0aGlzW18weDMxMWFlNSgweDFhOCldKyssdGhpc1tfMHgzMTFhZTUoMHgxZTcpXT1uZXcgUHJvbWlzZSgoXzB4M2Y0ZTVjLF8weDFiMWQ0Mik9Pnt2YXIgXzB4MWY2MTMwPV8weDMxMWFlNTt0aGlzWydnZXRXZWJTb2NrZXRDbGFzcyddKClbXzB4MWY2MTMwKDB4MWNmKV0oXzB4MWE4ZmMyPT57dmFyIF8weDI2NjU3Yj1fMHgxZjYxMzA7bGV0IF8weDNmNzJhMD1uZXcgXzB4MWE4ZmMyKF8weDI2NjU3YigweDFjOSkrKCF0aGlzWydfaW5Ccm93c2VyJ10mJnRoaXNbXzB4MjY2NTdiKDB4MjY0KV0/XzB4MjY2NTdiKDB4MjgxKTp0aGlzW18weDI2NjU3YigweDI3MCldKSsnOicrdGhpc1tfMHgyNjY1N2IoMHgyNjIpXSk7XzB4M2Y3MmEwW18weDI2NjU3YigweDI3NCldPSgpPT57dmFyIF8weDVlNGRjZD1fMHgyNjY1N2I7dGhpc1tfMHg1ZTRkY2QoMHgxZTIpXT0hMHgxLHRoaXNbXzB4NWU0ZGNkKDB4MjFkKV0oXzB4M2Y3MmEwKSx0aGlzW18weDVlNGRjZCgweDI0YildKCksXzB4MWIxZDQyKG5ldyBFcnJvcihfMHg1ZTRkY2QoMHgyMGMpKSk7fSxfMHgzZjcyYTBbXzB4MjY2NTdiKDB4MjgwKV09KCk9Pnt2YXIgXzB4NWRhMTUyPV8weDI2NjU3Yjt0aGlzW18weDVkYTE1MigweDIzZSldfHxfMHgzZjcyYTBbXzB4NWRhMTUyKDB4MWRkKV0mJl8weDNmNzJhMFtfMHg1ZGExNTIoMHgxZGQpXVtfMHg1ZGExNTIoMHgxYjcpXSYmXzB4M2Y3MmEwW18weDVkYTE1MigweDFkZCldW18weDVkYTE1MigweDFiNyldKCksXzB4M2Y0ZTVjKF8weDNmNzJhMCk7fSxfMHgzZjcyYTBbXzB4MjY2NTdiKDB4MWVhKV09KCk9Pnt2YXIgXzB4MzgyYzkyPV8weDI2NjU3Yjt0aGlzW18weDM4MmM5MigweDFhYildPSEweDAsdGhpc1tfMHgzODJjOTIoMHgyMWQpXShfMHgzZjcyYTApLHRoaXNbXzB4MzgyYzkyKDB4MjRiKV0oKTt9LF8weDNmNzJhMFtfMHgyNjY1N2IoMHgxZGYpXT1fMHgxMWZjYWI9Pnt2YXIgXzB4NWZkMDRkPV8weDI2NjU3Yjt0cnl7aWYoIShfMHgxMWZjYWIhPW51bGwmJl8weDExZmNhYltfMHg1ZmQwNGQoMHgxYjkpXSl8fCF0aGlzWydldmVudFJlY2VpdmVkQ2FsbGJhY2snXSlyZXR1cm47bGV0IF8weDRmZjY1NT1KU09OW18weDVmZDA0ZCgweDIzNCldKF8weDExZmNhYltfMHg1ZmQwNGQoMHgxYjkpXSk7dGhpc1tfMHg1ZmQwNGQoMHgyN2MpXShfMHg0ZmY2NTVbXzB4NWZkMDRkKDB4MWI0KV0sXzB4NGZmNjU1WydhcmdzJ10sdGhpc1snZ2xvYmFsJ10sdGhpc1tfMHg1ZmQwNGQoMHgyM2UpXSk7fWNhdGNoe319O30pW18weDFmNjEzMCgweDFjZildKF8weDNlYzE4Zj0+KHRoaXNbXzB4MWY2MTMwKDB4MjAzKV09ITB4MCx0aGlzW18weDFmNjEzMCgweDFjNSldPSEweDEsdGhpc1tfMHgxZjYxMzAoMHgxYWIpXT0hMHgxLHRoaXNbJ19hbGxvd2VkVG9TZW5kJ109ITB4MCx0aGlzW18weDFmNjEzMCgweDFhOCldPTB4MCxfMHgzZWMxOGYpKVtfMHgxZjYxMzAoMHgyNjApXShfMHg0ZDA4NDI9Pih0aGlzW18weDFmNjEzMCgweDIwMyldPSEweDEsdGhpc1tfMHgxZjYxMzAoMHgxYzUpXT0hMHgxLGNvbnNvbGVbXzB4MWY2MTMwKDB4MWYyKV0oXzB4MWY2MTMwKDB4MWNhKSt0aGlzW18weDFmNjEzMCgweDIwMSldKSxfMHgxYjFkNDIobmV3IEVycm9yKF8weDFmNjEzMCgweDI2NikrKF8weDRkMDg0MiYmXzB4NGQwODQyWydtZXNzYWdlJ10pKSkpKTt9KSk7fVtfMHhmZTVlNDQoMHgyMWQpXShfMHgyMDA1MDYpe3ZhciBfMHgzODI4ZDM9XzB4ZmU1ZTQ0O3RoaXNbXzB4MzgyOGQzKDB4MjAzKV09ITB4MSx0aGlzW18weDM4MjhkMygweDFjNSldPSEweDE7dHJ5e18weDIwMDUwNltfMHgzODI4ZDMoMHgxZWEpXT1udWxsLF8weDIwMDUwNltfMHgzODI4ZDMoMHgyNzQpXT1udWxsLF8weDIwMDUwNltfMHgzODI4ZDMoMHgyODApXT1udWxsO31jYXRjaHt9dHJ5e18weDIwMDUwNltfMHgzODI4ZDMoMHgxZTUpXTwweDImJl8weDIwMDUwNlsnY2xvc2UnXSgpO31jYXRjaHt9fVsnX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpe3ZhciBfMHgyYzllNTA9XzB4ZmU1ZTQ0O2NsZWFyVGltZW91dCh0aGlzW18weDJjOWU1MCgweDI0MCldKSwhKHRoaXNbXzB4MmM5ZTUwKDB4MWE4KV0+PXRoaXNbXzB4MmM5ZTUwKDB4MjhmKV0pJiYodGhpc1tfMHgyYzllNTAoMHgyNDApXT1zZXRUaW1lb3V0KCgpPT57dmFyIF8weDI2ZWI3MT1fMHgyYzllNTAsXzB4NTI5NjhkO3RoaXNbXzB4MjZlYjcxKDB4MjAzKV18fHRoaXNbXzB4MjZlYjcxKDB4MWM1KV18fCh0aGlzW18weDI2ZWI3MSgweDI4NCldKCksKF8weDUyOTY4ZD10aGlzW18weDI2ZWI3MSgweDFlNyldKT09bnVsbHx8XzB4NTI5NjhkW18weDI2ZWI3MSgweDI2MCldKCgpPT50aGlzW18weDI2ZWI3MSgweDI0YildKCkpKTt9LDB4MWY0KSx0aGlzW18weDJjOWU1MCgweDI0MCldW18weDJjOWU1MCgweDFiNyldJiZ0aGlzW18weDJjOWU1MCgweDI0MCldWyd1bnJlZiddKCkpO31hc3luY1tfMHhmZTVlNDQoMHgyNmUpXShfMHgyNTQ1NTMpe3ZhciBfMHgxMGUyMDY9XzB4ZmU1ZTQ0O3RyeXtpZighdGhpc1tfMHgxMGUyMDYoMHgxZTIpXSlyZXR1cm47dGhpc1snX2FsbG93ZWRUb0Nvbm5lY3RPblNlbmQnXSYmdGhpc1tfMHgxMGUyMDYoMHgyODQpXSgpLChhd2FpdCB0aGlzW18weDEwZTIwNigweDFlNyldKVtfMHgxMGUyMDYoMHgyNmUpXShKU09OWydzdHJpbmdpZnknXShfMHgyNTQ1NTMpKTt9Y2F0Y2goXzB4NGZiNjhkKXtjb25zb2xlW18weDEwZTIwNigweDFmMildKHRoaXNbXzB4MTBlMjA2KDB4MWFlKV0rJzpcXFxceDIwJysoXzB4NGZiNjhkJiZfMHg0ZmI2OGRbXzB4MTBlMjA2KDB4MjIyKV0pKSx0aGlzW18weDEwZTIwNigweDFlMildPSEweDEsdGhpc1snX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknXSgpO319fTtmdW5jdGlvbiBxKF8weDM2M2U4YixfMHg1OGJjMTEsXzB4NWE1N2JlLF8weDNjMjBlNSxfMHgzY2RmNGYsXzB4MmVlYzU0LF8weDM3N2I4MyxfMHgxYjBiZmY9aWUpe3ZhciBfMHhjOGYwMGU9XzB4ZmU1ZTQ0O2xldCBfMHhlMjRiYTA9XzB4NWE1N2JlW18weGM4ZjAwZSgweDFlNCldKCcsJylbJ21hcCddKF8weDQ2ZjJjZj0+e3ZhciBfMHgxNGQ3MDU9XzB4YzhmMDBlLF8weGRhZWM0OSxfMHgzYzkyMGMsXzB4MjA1Nzg2LF8weDE0YmExMDt0cnl7aWYoIV8weDM2M2U4YlsnX2NvbnNvbGVfbmluamFfc2Vzc2lvbiddKXtsZXQgXzB4MzhhZDRhPSgoXzB4M2M5MjBjPShfMHhkYWVjNDk9XzB4MzYzZThiWydwcm9jZXNzJ10pPT1udWxsP3ZvaWQgMHgwOl8weGRhZWM0OVsndmVyc2lvbnMnXSk9PW51bGw/dm9pZCAweDA6XzB4M2M5MjBjW18weDE0ZDcwNSgweDI4YyldKXx8KChfMHgxNGJhMTA9KF8weDIwNTc4Nj1fMHgzNjNlOGJbXzB4MTRkNzA1KDB4MjA2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDIwNTc4NltfMHgxNGQ3MDUoMHgxY2MpXSk9PW51bGw/dm9pZCAweDA6XzB4MTRiYTEwW18weDE0ZDcwNSgweDFjMyldKT09PV8weDE0ZDcwNSgweDFmZCk7KF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIzNyl8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIwMCl8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDFhNil8fF8weDNjZGY0Zj09PV8weDE0ZDcwNSgweDIzMykpJiYoXzB4M2NkZjRmKz1fMHgzOGFkNGE/XzB4MTRkNzA1KDB4MWY5KTpfMHgxNGQ3MDUoMHgxZWUpKSxfMHgzNjNlOGJbXzB4MTRkNzA1KDB4Mjg4KV09eydpZCc6K25ldyBEYXRlKCksJ3Rvb2wnOl8weDNjZGY0Zn0sXzB4Mzc3YjgzJiZfMHgzY2RmNGYmJiFfMHgzOGFkNGEmJmNvbnNvbGVbJ2xvZyddKF8weDE0ZDcwNSgweDFjNikrKF8weDNjZGY0ZltfMHgxNGQ3MDUoMHgyNmQpXSgweDApW18weDE0ZDcwNSgweDFjNyldKCkrXzB4M2NkZjRmW18weDE0ZDcwNSgweDFhOSldKDB4MSkpKycsJyxfMHgxNGQ3MDUoMHgyNTIpLF8weDE0ZDcwNSgweDI0NikpO31sZXQgXzB4NTFiNmExPW5ldyBaKF8weDM2M2U4YixfMHg1OGJjMTEsXzB4NDZmMmNmLF8weDNjMjBlNSxfMHgyZWVjNTQsXzB4MWIwYmZmKTtyZXR1cm4gXzB4NTFiNmExW18weDE0ZDcwNSgweDI2ZSldW18weDE0ZDcwNSgweDIxZildKF8weDUxYjZhMSk7fWNhdGNoKF8weGUxNGY0OCl7cmV0dXJuIGNvbnNvbGVbXzB4MTRkNzA1KDB4MWYyKV0oJ2xvZ2dlclxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwY29ubmVjdFxcXFx4MjB0b1xcXFx4MjBob3N0JyxfMHhlMTRmNDgmJl8weGUxNGY0OFtfMHgxNGQ3MDUoMHgyMjIpXSksKCk9Pnt9O319KTtyZXR1cm4gXzB4MTBmMDRjPT5fMHhlMjRiYTBbJ2ZvckVhY2gnXShfMHg1M2ZkZDY9Pl8weDUzZmRkNihfMHgxMGYwNGMpKTt9ZnVuY3Rpb24gaWUoXzB4MWUzYTRlLF8weDI2ZTliMSxfMHg0NWViMzEsXzB4NWRkMzRiKXt2YXIgXzB4YTc1OTc4PV8weGZlNWU0NDtfMHg1ZGQzNGImJl8weDFlM2E0ZT09PV8weGE3NTk3OCgweDI2MykmJl8weDQ1ZWIzMVsnbG9jYXRpb24nXVsncmVsb2FkJ10oKTt9ZnVuY3Rpb24gXzB4NDg0Migpe3ZhciBfMHg1NWExOTM9Wydvbm1lc3NhZ2UnLCdTeW1ib2wnLCdfbmluamFJZ25vcmVOZXh0RXJyb3InLCdfYWxsb3dlZFRvU2VuZCcsJ2FsbFN0ckxlbmd0aCcsJ3NwbGl0JywncmVhZHlTdGF0ZScsJ19nZXRPd25Qcm9wZXJ0eVN5bWJvbHMnLCdfd3MnLCcyMzgyNDgwTXBTTlVHJywncHJvcHMnLCdvbmNsb3NlJywnY291bnQnLCcxNzIwMjk2bkRpQ2JLJywnLi4uJywnXFxcXHgyMGJyb3dzZXInLCdfaXNVbmRlZmluZWQnLCdudW1iZXInLCdhdXRvRXhwYW5kTWF4RGVwdGgnLCd3YXJuJywnMXFMYXJHSycsJ3ZhbHVlJywnZ2V0T3duUHJvcGVydHlTeW1ib2xzJywnYXJncycsJ2xvY2F0aW9uJywnU2V0JywnXFxcXHgyMHNlcnZlcicsJ19udW1iZXJSZWdFeHAnLCdnZXQnLCdfaGFzU3ltYm9sUHJvcGVydHlPbkl0c1BhdGgnLCdlZGdlJywnX2FkZE9iamVjdFByb3BlcnR5JywncGVyZm9ybWFuY2UnLCdyZW1peCcsJ193ZWJTb2NrZXRFcnJvckRvY3NMaW5rJywnX2dldE93blByb3BlcnR5TmFtZXMnLCdfY29ubmVjdGVkJywncHVzaCcsJ3NldCcsJ3Byb2Nlc3MnLCdfcmVnRXhwVG9TdHJpbmcnLCdpc0FycmF5JywndGltZScsJ19zZXROb2RlTGFiZWwnLCd0ZXN0JywnbG9nZ2VyXFxcXHgyMHdlYnNvY2tldFxcXFx4MjBlcnJvcicsJzI0MjcwODBPeXJZUW0nLCdbb2JqZWN0XFxcXHgyME1hcF0nLCd1bmRlZmluZWQnLCdjYXBwZWQnLCdodHRwczovL3Rpbnl1cmwuY29tLzM3eDhiNzl0JywndGltZVN0YW1wJywnX3Byb3BlcnR5TmFtZScsJ2NhcHBlZFByb3BzJywnbmVnYXRpdmVJbmZpbml0eScsJ2NvbnN0cnVjdG9yJywnbnVsbCcsJ2Zyb21DaGFyQ29kZScsJ2hydGltZScsJ19vYmplY3RUb1N0cmluZycsJ25hbWUnLFtcXFwibG9jYWxob3N0XFxcIixcXFwiMTI3LjAuMC4xXFxcIixcXFwiZXhhbXBsZS5jeXByZXNzLmlvXFxcIixcXFwiQ0VCLUxBUFRPUC0wMDA2XFxcIixcXFwiMTkyLjE2OC4xLjc5XFxcIl0sJ19kaXNwb3NlV2Vic29ja2V0JywnaXNFeHByZXNzaW9uVG9FdmFsdWF0ZScsJ2JpbmQnLCdfY29uc29sZU5pbmphQWxsb3dlZFRvU3RhcnQnLCdfaW5OZXh0RWRnZScsJ21lc3NhZ2UnLCdwb3NpdGl2ZUluZmluaXR5JywnY29uY2F0JywnTnVtYmVyJywnX3NvcnRQcm9wcycsJ2NvbnNvbGUnLCd0eXBlJywncG9wJywnZXJyb3InLCcxMzIwNUJRYUdWcCcsJ2F1dG9FeHBhbmQnLCdlbGVtZW50cycsJ2F1dG9FeHBhbmRQcmV2aW91c09iamVjdHMnLCdfaXNQcmltaXRpdmVUeXBlJywnbG9nJywnX3RyZWVOb2RlUHJvcGVydGllc0JlZm9yZUZ1bGxWYWx1ZScsJ3RvU3RyaW5nJywnYW5ndWxhcicsJ3BhcnNlJywnW29iamVjdFxcXFx4MjBCaWdJbnRdJywnX2FkZGl0aW9uYWxNZXRhZGF0YScsJ25leHQuanMnLCdfdHJlZU5vZGVQcm9wZXJ0aWVzQWZ0ZXJGdWxsVmFsdWUnLCdIVE1MQWxsQ29sbGVjdGlvbicsJ3JlZHVjZUxpbWl0cycsJ3BhcmVudCcsJ2pvaW4nLCdzZXJpYWxpemUnLCdfaW5Ccm93c2VyJywnX2lzTmVnYXRpdmVaZXJvJywnX3JlY29ubmVjdFRpbWVvdXQnLCdhdXRvRXhwYW5kTGltaXQnLCdbb2JqZWN0XFxcXHgyMFNldF0nLCdbb2JqZWN0XFxcXHgyMERhdGVdJywnMScsJ3VybCcsJ3NlZVxcXFx4MjBodHRwczovL3Rpbnl1cmwuY29tLzJ2dDhqeHp3XFxcXHgyMGZvclxcXFx4MjBtb3JlXFxcXHgyMGluZm8uJywnQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwc2VuZFxcXFx4MjBsb2dzLFxcXFx4MjByZWZyZXNoaW5nXFxcXHgyMHRoZVxcXFx4MjBwYWdlXFxcXHgyMG1heVxcXFx4MjBoZWxwO1xcXFx4MjBhbHNvXFxcXHgyMHNlZVxcXFx4MjAnLCdnZXRQcm90b3R5cGVPZicsJ25vdycsJ2hhc093blByb3BlcnR5JywnX2F0dGVtcHRUb1JlY29ubmVjdFNob3J0bHknLCdfY29uc29sZV9uaW5qYScsJ2xlbmd0aCcsJ0Vycm9yJywnYXJyYXknLCdfX2VzJysnTW9kdWxlJywncGF0aCcsJ2JhY2tncm91bmQ6XFxcXHgyMHJnYigzMCwzMCwzMCk7XFxcXHgyMGNvbG9yOlxcXFx4MjByZ2IoMjU1LDIxMyw5MiknLCdfY2xlYW5Ob2RlJywnZnVuY3Rpb24nLCdyb290X2V4cF9pZCcsJ2dldE93blByb3BlcnR5RGVzY3JpcHRvcicsJ21hcCcsJ2ZvckVhY2gnLCdvYmplY3QnLCdjYXBwZWRFbGVtZW50cycsJ0J1ZmZlcicsJ19wcm9wZXJ0eScsJ2luZGV4JywnZGVmYXVsdCcsJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50JywnY2F0Y2gnLCdORUdBVElWRV9JTkZJTklUWScsJ3BvcnQnLCdyZWxvYWQnLCdkb2NrZXJpemVkQXBwJywnY3VycmVudCcsJ2ZhaWxlZFxcXFx4MjB0b1xcXFx4MjBjb25uZWN0XFxcXHgyMHRvXFxcXHgyMGhvc3Q6XFxcXHgyMCcsJ2Z1bmNOYW1lJywnc3RyTGVuZ3RoJywnYmlnaW50JywnbWF0Y2gnLCdzdGFjaycsJzEuMC4wJywnY2hhckF0Jywnc2VuZCcsJ3ZlcnNpb25zJywnaG9zdCcsJ19hZGRMb2FkTm9kZScsJ2dldFdlYlNvY2tldENsYXNzJywnY2FsbCcsJ29uZXJyb3InLCcnLCdfdHlwZScsJ2V4cHJlc3Npb25zVG9FdmFsdWF0ZScsJ3N0YWNrVHJhY2VMaW1pdCcsJ1BPU0lUSVZFX0lORklOSVRZJywnZGlzYWJsZWRUcmFjZScsJ191bmRlZmluZWQnLCdldmVudFJlY2VpdmVkQ2FsbGJhY2snLCdkaXNhYmxlZExvZycsJ3JlcGxhY2UnLCdmYWlsZWRcXFxceDIwdG9cXFxceDIwZmluZFxcXFx4MjBhbmRcXFxceDIwbG9hZFxcXFx4MjBXZWJTb2NrZXQnLCdvbm9wZW4nLCdnYXRld2F5LmRvY2tlci5pbnRlcm5hbCcsJ3N0cmluZycsJ19pc01hcCcsJ19jb25uZWN0VG9Ib3N0Tm93JywnX0hUTUxBbGxDb2xsZWN0aW9uJywnMTcyOTIzOTMxNDQ5NCcsJ19pc1NldCcsJ19jb25zb2xlX25pbmphX3Nlc3Npb24nLCdnZXRPd25Qcm9wZXJ0eU5hbWVzJywnQ29uc29sZVxcXFx4MjBOaW5qYVxcXFx4MjBmYWlsZWRcXFxceDIwdG9cXFxceDIwc2VuZFxcXFx4MjBsb2dzLFxcXFx4MjByZXN0YXJ0aW5nXFxcXHgyMHRoZVxcXFx4MjBwcm9jZXNzXFxcXHgyMG1heVxcXFx4MjBoZWxwO1xcXFx4MjBhbHNvXFxcXHgyMHNlZVxcXFx4MjAnLCczNzk5MTYwSm5IenBEJywnbm9kZScsJ3Byb3RvdHlwZScsJ19zZXROb2RlSWQnLCdfbWF4Q29ubmVjdEF0dGVtcHRDb3VudCcsJ3BlcmZfaG9va3MnLCdnbG9iYWwnLCdfaXNQcmltaXRpdmVXcmFwcGVyVHlwZScsJ1N0cmluZycsJzU0Y0tJbG5jJywnZW5kc1dpdGgnLCdpbmNsdWRlcycsJ2hpdHMnLCd0b0xvd2VyQ2FzZScsJ3RyYWNlJywnNDJTZm1kaUQnLCdzZXR0ZXInLCdhc3RybycsJ29yaWdpbicsJ19jb25uZWN0QXR0ZW1wdENvdW50Jywnc3Vic3RyJywndG90YWxTdHJMZW5ndGgnLCdfYWxsb3dlZFRvQ29ubmVjdE9uU2VuZCcsJ19wX2xlbmd0aCcsJzkwMjc0Mzh1Z1prZVYnLCdfc2VuZEVycm9yTWVzc2FnZScsJ19hZGRGdW5jdGlvbnNOb2RlJywnX2JsYWNrbGlzdGVkUHJvcGVydHknLCdlbGFwc2VkJywnc29ydCcsJ3BhdGhUb0ZpbGVVUkwnLCdtZXRob2QnLCdfU3ltYm9sJywnbm9GdW5jdGlvbnMnLCd1bnJlZicsJ19hZGRQcm9wZXJ0eScsJ2RhdGEnLCdyb290X2V4cCcsJ19xdW90ZWRSZWdFeHAnLCdub2RlTW9kdWxlcycsJ2RlZmluZVByb3BlcnR5JywncmVzb2x2ZUdldHRlcnMnLCcyMTQ3Nzc0cXJZUWF6JywnX2tleVN0clJlZ0V4cCcsJ19zZXROb2RlUXVlcnlQYXRoJywnc3RyaW5naWZ5JywnTkVYVF9SVU5USU1FJywnX2NhcElmU3RyaW5nJywnX2Nvbm5lY3RpbmcnLCclY1xcXFx4MjBDb25zb2xlXFxcXHgyME5pbmphXFxcXHgyMGV4dGVuc2lvblxcXFx4MjBpc1xcXFx4MjBjb25uZWN0ZWRcXFxceDIwdG9cXFxceDIwJywndG9VcHBlckNhc2UnLCd1bmtub3duJywnd3M6Ly8nLCdsb2dnZXJcXFxceDIwZmFpbGVkXFxcXHgyMHRvXFxcXHgyMGNvbm5lY3RcXFxceDIwdG9cXFxceDIwaG9zdCxcXFxceDIwc2VlXFxcXHgyMCcsJ19nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCdlbnYnLCcnLFxcXCJjOlxcXFxcXFxcVXNlcnNcXFxcXFxcXHNoZWVyd29vZGNcXFxcXFxcXC52c2NvZGVcXFxcXFxcXGV4dGVuc2lvbnNcXFxcXFxcXHdhbGxhYnlqcy5jb25zb2xlLW5pbmphLTEuMC4zNjNcXFxcXFxcXG5vZGVfbW9kdWxlc1xcXCIsJ3RoZW4nLCdfc2V0Tm9kZVBlcm1pc3Npb25zJywnZGVwdGgnLCdjb3ZlcmFnZScsJ2xldmVsJywnX3BfbmFtZScsJ19XZWJTb2NrZXRDbGFzcycsJ3NvcnRQcm9wcycsJ19wXycsJ2RhdGUnLCdzeW1ib2wnLCdfcHJvY2Vzc1RyZWVOb2RlUmVzdWx0JywnTWFwJywnc2xpY2UnLCdfc29ja2V0JywnX2lzQXJyYXknXTtfMHg0ODQyPWZ1bmN0aW9uKCl7cmV0dXJuIF8weDU1YTE5Mzt9O3JldHVybiBfMHg0ODQyKCk7fWZ1bmN0aW9uIEIoXzB4MmUzNmVhKXt2YXIgXzB4NWVhYjE4PV8weGZlNWU0NCxfMHg1N2NlYWMsXzB4MWNkM2ZmO2xldCBfMHgxNzRlNDM9ZnVuY3Rpb24oXzB4MmQ1MjE0LF8weDRkN2U4Mil7cmV0dXJuIF8weDRkN2U4Mi1fMHgyZDUyMTQ7fSxfMHgzNTVkZDk7aWYoXzB4MmUzNmVhW18weDVlYWIxOCgweDFmZildKV8weDM1NWRkOT1mdW5jdGlvbigpe3JldHVybiBfMHgyZTM2ZWFbJ3BlcmZvcm1hbmNlJ11bJ25vdyddKCk7fTtlbHNle2lmKF8weDJlMzZlYVtfMHg1ZWFiMTgoMHgyMDYpXSYmXzB4MmUzNmVhW18weDVlYWIxOCgweDIwNildW18weDVlYWIxOCgweDIxOSldJiYoKF8weDFjZDNmZj0oXzB4NTdjZWFjPV8weDJlMzZlYVsncHJvY2VzcyddKT09bnVsbD92b2lkIDB4MDpfMHg1N2NlYWNbXzB4NWVhYjE4KDB4MWNjKV0pPT1udWxsP3ZvaWQgMHgwOl8weDFjZDNmZltfMHg1ZWFiMTgoMHgxYzMpXSkhPT1fMHg1ZWFiMTgoMHgxZmQpKV8weDM1NWRkOT1mdW5jdGlvbigpe3ZhciBfMHgyYTViMjM9XzB4NWVhYjE4O3JldHVybiBfMHgyZTM2ZWFbXzB4MmE1YjIzKDB4MjA2KV1bJ2hydGltZSddKCk7fSxfMHgxNzRlNDM9ZnVuY3Rpb24oXzB4MzdhMTljLF8weDEzYjk2NSl7cmV0dXJuIDB4M2U4KihfMHgxM2I5NjVbMHgwXS1fMHgzN2ExOWNbMHgwXSkrKF8weDEzYjk2NVsweDFdLV8weDM3YTE5Y1sweDFdKS8weGY0MjQwO307ZWxzZSB0cnl7bGV0IHtwZXJmb3JtYW5jZTpfMHgyNDc0YTB9PXJlcXVpcmUoXzB4NWVhYjE4KDB4MjkwKSk7XzB4MzU1ZGQ5PWZ1bmN0aW9uKCl7dmFyIF8weDUwZGU5Yz1fMHg1ZWFiMTg7cmV0dXJuIF8weDI0NzRhMFtfMHg1MGRlOWMoMHgyNDkpXSgpO307fWNhdGNoe18weDM1NWRkOT1mdW5jdGlvbigpe3JldHVybituZXcgRGF0ZSgpO307fX1yZXR1cm57J2VsYXBzZWQnOl8weDE3NGU0MywndGltZVN0YW1wJzpfMHgzNTVkZDksJ25vdyc6KCk9PkRhdGVbJ25vdyddKCl9O31mdW5jdGlvbiBfMHgyODAwKF8weDIwYzMxNixfMHgyN2U0NGQpe3ZhciBfMHg0ODQyZDU9XzB4NDg0MigpO3JldHVybiBfMHgyODAwPWZ1bmN0aW9uKF8weDI4MDA3OSxfMHgyYjEzNmQpe18weDI4MDA3OT1fMHgyODAwNzktMHgxYTE7dmFyIF8weGY2ZGNlOT1fMHg0ODQyZDVbXzB4MjgwMDc5XTtyZXR1cm4gXzB4ZjZkY2U5O30sXzB4MjgwMChfMHgyMGMzMTYsXzB4MjdlNDRkKTt9ZnVuY3Rpb24gSChfMHg1ZjA0NmQsXzB4YmZlYTY3LF8weDRjOTg0Nyl7dmFyIF8weDQyMzMyYz1fMHhmZTVlNDQsXzB4NDUzNmRmLF8weDNlNTkxYixfMHgxYzAyZmQsXzB4NTY2MWI3LF8weGRhNzg4MjtpZihfMHg1ZjA0NmRbJ19jb25zb2xlTmluamFBbGxvd2VkVG9TdGFydCddIT09dm9pZCAweDApcmV0dXJuIF8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXTtsZXQgXzB4MTUyYTQyPSgoXzB4M2U1OTFiPShfMHg0NTM2ZGY9XzB4NWYwNDZkW18weDQyMzMyYygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHg0NTM2ZGZbJ3ZlcnNpb25zJ10pPT1udWxsP3ZvaWQgMHgwOl8weDNlNTkxYltfMHg0MjMzMmMoMHgyOGMpXSl8fCgoXzB4NTY2MWI3PShfMHgxYzAyZmQ9XzB4NWYwNDZkW18weDQyMzMyYygweDIwNildKT09bnVsbD92b2lkIDB4MDpfMHgxYzAyZmRbXzB4NDIzMzJjKDB4MWNjKV0pPT1udWxsP3ZvaWQgMHgwOl8weDU2NjFiN1tfMHg0MjMzMmMoMHgxYzMpXSk9PT1fMHg0MjMzMmMoMHgxZmQpO2Z1bmN0aW9uIF8weDQxMjU5NShfMHg1MDI3ZDQpe3ZhciBfMHg1NzgyYjE9XzB4NDIzMzJjO2lmKF8weDUwMjdkNFsnc3RhcnRzV2l0aCddKCcvJykmJl8weDUwMjdkNFtfMHg1NzgyYjEoMHgyOTUpXSgnLycpKXtsZXQgXzB4NTU4ZjAzPW5ldyBSZWdFeHAoXzB4NTAyN2Q0W18weDU3ODJiMSgweDFkYyldKDB4MSwtMHgxKSk7cmV0dXJuIF8weDNkMGQ2NT0+XzB4NTU4ZjAzWyd0ZXN0J10oXzB4M2QwZDY1KTt9ZWxzZXtpZihfMHg1MDI3ZDRbJ2luY2x1ZGVzJ10oJyonKXx8XzB4NTAyN2Q0W18weDU3ODJiMSgweDI5NildKCc/Jykpe2xldCBfMHg1MWJlYmY9bmV3IFJlZ0V4cCgnXicrXzB4NTAyN2Q0W18weDU3ODJiMSgweDI3ZSldKC9cXFxcLi9nLFN0cmluZ1tfMHg1NzgyYjEoMHgyMTgpXSgweDVjKSsnLicpW18weDU3ODJiMSgweDI3ZSldKC9cXFxcKi9nLCcuKicpW18weDU3ODJiMSgweDI3ZSldKC9cXFxcPy9nLCcuJykrU3RyaW5nWydmcm9tQ2hhckNvZGUnXSgweDI0KSk7cmV0dXJuIF8weDI0ZjY5OT0+XzB4NTFiZWJmW18weDU3ODJiMSgweDIwYildKF8weDI0ZjY5OSk7fWVsc2UgcmV0dXJuIF8weDIwNzYwMz0+XzB4MjA3NjAzPT09XzB4NTAyN2Q0O319bGV0IF8weDI3NWNlYT1fMHhiZmVhNjdbXzB4NDIzMzJjKDB4MjU3KV0oXzB4NDEyNTk1KTtyZXR1cm4gXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldPV8weDE1MmE0Mnx8IV8weGJmZWE2NywhXzB4NWYwNDZkW18weDQyMzMyYygweDIyMCldJiYoKF8weGRhNzg4Mj1fMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MWY3KV0pPT1udWxsP3ZvaWQgMHgwOl8weGRhNzg4MlsnaG9zdG5hbWUnXSkmJihfMHg1ZjA0NmRbXzB4NDIzMzJjKDB4MjIwKV09XzB4Mjc1Y2VhWydzb21lJ10oXzB4NTViNDM1PT5fMHg1NWI0MzUoXzB4NWYwNDZkWydsb2NhdGlvbiddWydob3N0bmFtZSddKSkpLF8weDVmMDQ2ZFtfMHg0MjMzMmMoMHgyMjApXTt9ZnVuY3Rpb24gWChfMHgyZjFhNzAsXzB4NWJlMDcyLF8weDM5YmUwMSxfMHg1YTU3NDUpe3ZhciBfMHgxYWU5ZGU9XzB4ZmU1ZTQ0O18weDJmMWE3MD1fMHgyZjFhNzAsXzB4NWJlMDcyPV8weDViZTA3MixfMHgzOWJlMDE9XzB4MzliZTAxLF8weDVhNTc0NT1fMHg1YTU3NDU7bGV0IF8weDQ1YWQyND1CKF8weDJmMWE3MCksXzB4MzQ5MTNiPV8weDQ1YWQyNFtfMHgxYWU5ZGUoMHgxYjEpXSxfMHg1ZjQyNTQ9XzB4NDVhZDI0W18weDFhZTlkZSgweDIxMildO2NsYXNzIF8weDM5YWVlM3tjb25zdHJ1Y3Rvcigpe3ZhciBfMHgyMDk0NjI9XzB4MWFlOWRlO3RoaXNbXzB4MjA5NDYyKDB4MWMwKV09L14oPyEoPzpkb3xpZnxpbnxmb3J8bGV0fG5ld3x0cnl8dmFyfGNhc2V8ZWxzZXxlbnVtfGV2YWx8ZmFsc2V8bnVsbHx0aGlzfHRydWV8dm9pZHx3aXRofGJyZWFrfGNhdGNofGNsYXNzfGNvbnN0fHN1cGVyfHRocm93fHdoaWxlfHlpZWxkfGRlbGV0ZXxleHBvcnR8aW1wb3J0fHB1YmxpY3xyZXR1cm58c3RhdGljfHN3aXRjaHx0eXBlb2Z8ZGVmYXVsdHxleHRlbmRzfGZpbmFsbHl8cGFja2FnZXxwcml2YXRlfGNvbnRpbnVlfGRlYnVnZ2VyfGZ1bmN0aW9ufGFyZ3VtZW50c3xpbnRlcmZhY2V8cHJvdGVjdGVkfGltcGxlbWVudHN8aW5zdGFuY2VvZikkKVtfJGEtekEtWlxcXFx4QTAtXFxcXHVGRkZGXVtfJGEtekEtWjAtOVxcXFx4QTAtXFxcXHVGRkZGXSokLyx0aGlzW18weDIwOTQ2MigweDFmYSldPS9eKDB8WzEtOV1bMC05XSopJC8sdGhpc1tfMHgyMDk0NjIoMHgxYmIpXT0vJyhbXlxcXFxcXFxcJ118XFxcXFxcXFwnKSonLyx0aGlzW18weDIwOTQ2MigweDI3YildPV8weDJmMWE3MFtfMHgyMDk0NjIoMHgyMGYpXSx0aGlzWydfSFRNTEFsbENvbGxlY3Rpb24nXT1fMHgyZjFhNzBbXzB4MjA5NDYyKDB4MjM5KV0sdGhpc1tfMHgyMDk0NjIoMHgxY2IpXT1PYmplY3RbXzB4MjA5NDYyKDB4MjU2KV0sdGhpc1tfMHgyMDk0NjIoMHgyMDIpXT1PYmplY3RbXzB4MjA5NDYyKDB4Mjg5KV0sdGhpc1tfMHgyMDk0NjIoMHgxYjUpXT1fMHgyZjFhNzBbXzB4MjA5NDYyKDB4MWUwKV0sdGhpc1snX3JlZ0V4cFRvU3RyaW5nJ109UmVnRXhwWydwcm90b3R5cGUnXVtfMHgyMDk0NjIoMHgyMzIpXSx0aGlzWydfZGF0ZVRvU3RyaW5nJ109RGF0ZVtfMHgyMDk0NjIoMHgyOGQpXVtfMHgyMDk0NjIoMHgyMzIpXTt9W18weDFhZTlkZSgweDIzZCldKF8weDI0YjdmMyxfMHgyOTZmNzMsXzB4NDY2NTNkLF8weDViZjlmZCl7dmFyIF8weGRhMjFiND1fMHgxYWU5ZGUsXzB4MmEyZmQwPXRoaXMsXzB4NGRkNmIwPV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmMpXTtmdW5jdGlvbiBfMHgxMzFlYjYoXzB4MjRjMWRmLF8weDI4YmY1NyxfMHg0MDhkNDgpe3ZhciBfMHg0NzkxMzE9XzB4ZGEyMWI0O18weDI4YmY1N1tfMHg0NzkxMzEoMHgyMjgpXT0ndW5rbm93bicsXzB4MjhiZjU3WydlcnJvciddPV8weDI0YzFkZltfMHg0NzkxMzEoMHgyMjIpXSxfMHgxZjBkNTY9XzB4NDA4ZDQ4W18weDQ3OTEzMSgweDI4YyldW18weDQ3OTEzMSgweDI2NSldLF8weDQwOGQ0OFtfMHg0NzkxMzEoMHgyOGMpXVtfMHg0NzkxMzEoMHgyNjUpXT1fMHgyOGJmNTcsXzB4MmEyZmQwW18weDQ3OTEzMSgweDIzMSldKF8weDI4YmY1NyxfMHg0MDhkNDgpO310cnl7XzB4NDY2NTNkWydsZXZlbCddKyssXzB4NDY2NTNkWydhdXRvRXhwYW5kJ10mJl8weDQ2NjUzZFsnYXV0b0V4cGFuZFByZXZpb3VzT2JqZWN0cyddW18weGRhMjFiNCgweDIwNCldKF8weDI5NmY3Myk7dmFyIF8weDFlMjA5NCxfMHgxNmFlZmEsXzB4NTQyNTY2LF8weDQyZTI4YixfMHhjZTdmOTU9W10sXzB4ZTZmMWMzPVtdLF8weGYxN2MyOSxfMHgyMDdkYjg9dGhpc1tfMHhkYTIxYjQoMHgyNzYpXShfMHgyOTZmNzMpLF8weDI3N2RlNj1fMHgyMDdkYjg9PT0nYXJyYXknLF8weDVjNDI2Yz0hMHgxLF8weDY2ZmUxYj1fMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyNTQpLF8weGNhNmU2ND10aGlzW18weGRhMjFiNCgweDIyZildKF8weDIwN2RiOCksXzB4MmM0MDVhPXRoaXNbXzB4ZGEyMWI0KDB4MjkyKV0oXzB4MjA3ZGI4KSxfMHg0ZjVkNjI9XzB4Y2E2ZTY0fHxfMHgyYzQwNWEsXzB4Njk2MWQzPXt9LF8weDFiYzY1Nz0weDAsXzB4MjAxMzM1PSEweDEsXzB4MWYwZDU2LF8weDQ2YWUyNj0vXigoWzEtOV17MX1bMC05XSopfDApJC87aWYoXzB4NDY2NTNkW18weGRhMjFiNCgweDFkMSldKXtpZihfMHgyNzdkZTYpe2lmKF8weDE2YWVmYT1fMHgyOTZmNzNbXzB4ZGEyMWI0KDB4MjRkKV0sXzB4MTZhZWZhPl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmQpXSl7Zm9yKF8weDU0MjU2Nj0weDAsXzB4NDJlMjhiPV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmQpXSxfMHgxZTIwOTQ9XzB4NTQyNTY2O18weDFlMjA5NDxfMHg0MmUyOGI7XzB4MWUyMDk0KyspXzB4ZTZmMWMzW18weGRhMjFiNCgweDIwNCldKF8weDJhMmZkMFsnX2FkZFByb3BlcnR5J10oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4MWUyMDk0LF8weDQ2NjUzZCkpO18weDI0YjdmM1tfMHhkYTIxYjQoMHgyNWEpXT0hMHgwO31lbHNle2ZvcihfMHg1NDI1NjY9MHgwLF8weDQyZTI4Yj1fMHgxNmFlZmEsXzB4MWUyMDk0PV8weDU0MjU2NjtfMHgxZTIwOTQ8XzB4NDJlMjhiO18weDFlMjA5NCsrKV8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyMDQpXShfMHgyYTJmZDBbXzB4ZGEyMWI0KDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4MWUyMDk0LF8weDQ2NjUzZCkpO31fMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J10rPV8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyNGQpXTt9aWYoIShfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMTcpfHxfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMGYpKSYmIV8weGNhNmU2NCYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjkzKSYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjViKSYmXzB4MjA3ZGI4IT09XzB4ZGEyMWI0KDB4MjY5KSl7dmFyIF8weDU2YjM4MD1fMHg1YmY5ZmRbXzB4ZGEyMWI0KDB4MWU5KV18fF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgxZTkpXTtpZih0aGlzWydfaXNTZXQnXShfMHgyOTZmNzMpPyhfMHgxZTIwOTQ9MHgwLF8weDI5NmY3M1tfMHhkYTIxYjQoMHgyNTgpXShmdW5jdGlvbihfMHgzNjU3ODIpe3ZhciBfMHgyMDQxNWU9XzB4ZGEyMWI0O2lmKF8weDFiYzY1NysrLF8weDQ2NjUzZFsnYXV0b0V4cGFuZFByb3BlcnR5Q291bnQnXSsrLF8weDFiYzY1Nz5fMHg1NmIzODApe18weDIwMTMzNT0hMHgwO3JldHVybjt9aWYoIV8weDQ2NjUzZFsnaXNFeHByZXNzaW9uVG9FdmFsdWF0ZSddJiZfMHg0NjY1M2RbJ2F1dG9FeHBhbmQnXSYmXzB4NDY2NTNkW18weDIwNDE1ZSgweDI1ZildPl8weDQ2NjUzZFtfMHgyMDQxNWUoMHgyNDEpXSl7XzB4MjAxMzM1PSEweDA7cmV0dXJuO31fMHhlNmYxYzNbJ3B1c2gnXShfMHgyYTJmZDBbXzB4MjA0MTVlKDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MywnU2V0JyxfMHgxZTIwOTQrKyxfMHg0NjY1M2QsZnVuY3Rpb24oXzB4NDY0MDc0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDY0MDc0O307fShfMHgzNjU3ODIpKSk7fSkpOnRoaXNbXzB4ZGEyMWI0KDB4MjgzKV0oXzB4Mjk2ZjczKSYmXzB4Mjk2ZjczW18weGRhMjFiNCgweDI1OCldKGZ1bmN0aW9uKF8weDM3ODQzMCxfMHgyOGIxYzYpe3ZhciBfMHgyOWFjMzg9XzB4ZGEyMWI0O2lmKF8weDFiYzY1NysrLF8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyNWYpXSsrLF8weDFiYzY1Nz5fMHg1NmIzODApe18weDIwMTMzNT0hMHgwO3JldHVybjt9aWYoIV8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyMWUpXSYmXzB4NDY2NTNkWydhdXRvRXhwYW5kJ10mJl8weDQ2NjUzZFtfMHgyOWFjMzgoMHgyNWYpXT5fMHg0NjY1M2RbXzB4MjlhYzM4KDB4MjQxKV0pe18weDIwMTMzNT0hMHgwO3JldHVybjt9dmFyIF8weDM5ZGRmMz1fMHgyOGIxYzZbJ3RvU3RyaW5nJ10oKTtfMHgzOWRkZjNbXzB4MjlhYzM4KDB4MjRkKV0+MHg2NCYmKF8weDM5ZGRmMz1fMHgzOWRkZjNbXzB4MjlhYzM4KDB4MWRjKV0oMHgwLDB4NjQpK18weDI5YWMzOCgweDFlZCkpLF8weGU2ZjFjM1tfMHgyOWFjMzgoMHgyMDQpXShfMHgyYTJmZDBbXzB4MjlhYzM4KDB4MWI4KV0oXzB4Y2U3Zjk1LF8weDI5NmY3MyxfMHgyOWFjMzgoMHgxZGIpLF8weDM5ZGRmMyxfMHg0NjY1M2QsZnVuY3Rpb24oXzB4NDZiZDdhKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDZiZDdhO307fShfMHgzNzg0MzApKSk7fSksIV8weDVjNDI2Yyl7dHJ5e2ZvcihfMHhmMTdjMjkgaW4gXzB4Mjk2ZjczKWlmKCEoXzB4Mjc3ZGU2JiZfMHg0NmFlMjZbXzB4ZGEyMWI0KDB4MjBiKV0oXzB4ZjE3YzI5KSkmJiF0aGlzWydfYmxhY2tsaXN0ZWRQcm9wZXJ0eSddKF8weDI5NmY3MyxfMHhmMTdjMjksXzB4NDY2NTNkKSl7aWYoXzB4MWJjNjU3KyssXzB4NDY2NTNkWydhdXRvRXhwYW5kUHJvcGVydHlDb3VudCddKyssXzB4MWJjNjU3Pl8weDU2YjM4MCl7XzB4MjAxMzM1PSEweDA7YnJlYWs7fWlmKCFfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjFlKV0mJl8weDQ2NjUzZFsnYXV0b0V4cGFuZCddJiZfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjVmKV0+XzB4NDY2NTNkW18weGRhMjFiNCgweDI0MSldKXtfMHgyMDEzMzU9ITB4MDticmVhazt9XzB4ZTZmMWMzW18weGRhMjFiNCgweDIwNCldKF8weDJhMmZkMFtfMHhkYTIxYjQoMHgxZmUpXShfMHhjZTdmOTUsXzB4Njk2MWQzLF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4ZjE3YzI5LF8weDQ2NjUzZCkpO319Y2F0Y2h7fWlmKF8weDY5NjFkM1tfMHhkYTIxYjQoMHgxYWMpXT0hMHgwLF8weDY2ZmUxYiYmKF8weDY5NjFkM1tfMHhkYTIxYjQoMHgxZDQpXT0hMHgwKSwhXzB4MjAxMzM1KXt2YXIgXzB4MjY1OGJhPVtdW18weGRhMjFiNCgweDIyNCldKHRoaXNbXzB4ZGEyMWI0KDB4MjAyKV0oXzB4Mjk2ZjczKSlbXzB4ZGEyMWI0KDB4MjI0KV0odGhpc1tfMHhkYTIxYjQoMHgxZTYpXShfMHgyOTZmNzMpKTtmb3IoXzB4MWUyMDk0PTB4MCxfMHgxNmFlZmE9XzB4MjY1OGJhW18weGRhMjFiNCgweDI0ZCldO18weDFlMjA5NDxfMHgxNmFlZmE7XzB4MWUyMDk0KyspaWYoXzB4ZjE3YzI5PV8weDI2NThiYVtfMHgxZTIwOTRdLCEoXzB4Mjc3ZGU2JiZfMHg0NmFlMjZbXzB4ZGEyMWI0KDB4MjBiKV0oXzB4ZjE3YzI5W18weGRhMjFiNCgweDIzMildKCkpKSYmIXRoaXNbXzB4ZGEyMWI0KDB4MWIwKV0oXzB4Mjk2ZjczLF8weGYxN2MyOSxfMHg0NjY1M2QpJiYhXzB4Njk2MWQzW18weGRhMjFiNCgweDFkNykrXzB4ZjE3YzI5W18weGRhMjFiNCgweDIzMildKCldKXtpZihfMHgxYmM2NTcrKyxfMHg0NjY1M2RbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J10rKyxfMHgxYmM2NTc+XzB4NTZiMzgwKXtfMHgyMDEzMzU9ITB4MDticmVhazt9aWYoIV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMWUpXSYmXzB4NDY2NTNkW18weGRhMjFiNCgweDIyYyldJiZfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjVmKV0+XzB4NDY2NTNkWydhdXRvRXhwYW5kTGltaXQnXSl7XzB4MjAxMzM1PSEweDA7YnJlYWs7fV8weGU2ZjFjM1sncHVzaCddKF8weDJhMmZkMFtfMHhkYTIxYjQoMHgxZmUpXShfMHhjZTdmOTUsXzB4Njk2MWQzLF8weDI5NmY3MyxfMHgyMDdkYjgsXzB4ZjE3YzI5LF8weDQ2NjUzZCkpO319fX19aWYoXzB4MjRiN2YzW18weGRhMjFiNCgweDIyOCldPV8weDIwN2RiOCxfMHg0ZjVkNjI/KF8weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT1fMHgyOTZmNzNbJ3ZhbHVlT2YnXSgpLHRoaXNbJ19jYXBJZlN0cmluZyddKF8weDIwN2RiOCxfMHgyNGI3ZjMsXzB4NDY2NTNkLF8weDViZjlmZCkpOl8weDIwN2RiOD09PSdkYXRlJz9fMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09dGhpc1snX2RhdGVUb1N0cmluZyddW18weGRhMjFiNCgweDI3MyldKF8weDI5NmY3Myk6XzB4MjA3ZGI4PT09XzB4ZGEyMWI0KDB4MjY5KT9fMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV09XzB4Mjk2ZjczW18weGRhMjFiNCgweDIzMildKCk6XzB4MjA3ZGI4PT09J1JlZ0V4cCc/XzB4MjRiN2YzW18weGRhMjFiNCgweDFmNCldPXRoaXNbXzB4ZGEyMWI0KDB4MjA3KV1bXzB4ZGEyMWI0KDB4MjczKV0oXzB4Mjk2ZjczKTpfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgxZDkpJiZ0aGlzW18weGRhMjFiNCgweDFiNSldP18weDI0YjdmM1tfMHhkYTIxYjQoMHgxZjQpXT10aGlzW18weGRhMjFiNCgweDFiNSldW18weGRhMjFiNCgweDI4ZCldW18weGRhMjFiNCgweDIzMildW18weGRhMjFiNCgweDI3MyldKF8weDI5NmY3Myk6IV8weDQ2NjUzZFtfMHhkYTIxYjQoMHgxZDEpXSYmIShfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMTcpfHxfMHgyMDdkYjg9PT1fMHhkYTIxYjQoMHgyMGYpKSYmKGRlbGV0ZSBfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWY0KV0sXzB4MjRiN2YzW18weGRhMjFiNCgweDIxMCldPSEweDApLF8weDIwMTMzNSYmKF8weDI0YjdmM1tfMHhkYTIxYjQoMHgyMTQpXT0hMHgwKSxfMHgxZjBkNTY9XzB4NDY2NTNkWydub2RlJ11bXzB4ZGEyMWI0KDB4MjY1KV0sXzB4NDY2NTNkW18weGRhMjFiNCgweDI4YyldW18weGRhMjFiNCgweDI2NSldPV8weDI0YjdmMyx0aGlzW18weGRhMjFiNCgweDIzMSldKF8weDI0YjdmMyxfMHg0NjY1M2QpLF8weGU2ZjFjM1tfMHhkYTIxYjQoMHgyNGQpXSl7Zm9yKF8weDFlMjA5ND0weDAsXzB4MTZhZWZhPV8weGU2ZjFjM1snbGVuZ3RoJ107XzB4MWUyMDk0PF8weDE2YWVmYTtfMHgxZTIwOTQrKylfMHhlNmYxYzNbXzB4MWUyMDk0XShfMHgxZTIwOTQpO31fMHhjZTdmOTVbXzB4ZGEyMWI0KDB4MjRkKV0mJihfMHgyNGI3ZjNbXzB4ZGEyMWI0KDB4MWU5KV09XzB4Y2U3Zjk1KTt9Y2F0Y2goXzB4MzhlZjZkKXtfMHgxMzFlYjYoXzB4MzhlZjZkLF8weDI0YjdmMyxfMHg0NjY1M2QpO31yZXR1cm4gdGhpc1tfMHhkYTIxYjQoMHgyMzYpXShfMHgyOTZmNzMsXzB4MjRiN2YzKSx0aGlzW18weGRhMjFiNCgweDIzOCldKF8weDI0YjdmMyxfMHg0NjY1M2QpLF8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyOGMpXVtfMHhkYTIxYjQoMHgyNjUpXT1fMHgxZjBkNTYsXzB4NDY2NTNkW18weGRhMjFiNCgweDFkMyldLS0sXzB4NDY2NTNkW18weGRhMjFiNCgweDIyYyldPV8weDRkZDZiMCxfMHg0NjY1M2RbXzB4ZGEyMWI0KDB4MjJjKV0mJl8weDQ2NjUzZFtfMHhkYTIxYjQoMHgyMmUpXVtfMHhkYTIxYjQoMHgyMjkpXSgpLF8weDI0YjdmMzt9W18weDFhZTlkZSgweDFlNildKF8weGI3NGViZCl7dmFyIF8weDE3NTNkNj1fMHgxYWU5ZGU7cmV0dXJuIE9iamVjdFtfMHgxNzUzZDYoMHgxZjUpXT9PYmplY3RbXzB4MTc1M2Q2KDB4MWY1KV0oXzB4Yjc0ZWJkKTpbXTt9W18weDFhZTlkZSgweDI4NyldKF8weDI4ZDJlZil7dmFyIF8weDMzZTE3Zj1fMHgxYWU5ZGU7cmV0dXJuISEoXzB4MjhkMmVmJiZfMHgyZjFhNzBbXzB4MzNlMTdmKDB4MWY4KV0mJnRoaXNbXzB4MzNlMTdmKDB4MjFhKV0oXzB4MjhkMmVmKT09PV8weDMzZTE3ZigweDI0MikmJl8weDI4ZDJlZltfMHgzM2UxN2YoMHgyNTgpXSk7fVtfMHgxYWU5ZGUoMHgxYjApXShfMHgzMjliMWIsXzB4NDIyOTJhLF8weDM3YWIyYyl7dmFyIF8weDQ1M2FjOT1fMHgxYWU5ZGU7cmV0dXJuIF8weDM3YWIyY1tfMHg0NTNhYzkoMHgxYjYpXT90eXBlb2YgXzB4MzI5YjFiW18weDQyMjkyYV09PSdmdW5jdGlvbic6ITB4MTt9W18weDFhZTlkZSgweDI3NildKF8weDIyZjA1OCl7dmFyIF8weDI0MWI3YT1fMHgxYWU5ZGUsXzB4M2Q0ZTY1PScnO3JldHVybiBfMHgzZDRlNjU9dHlwZW9mIF8weDIyZjA1OCxfMHgzZDRlNjU9PT0nb2JqZWN0Jz90aGlzWydfb2JqZWN0VG9TdHJpbmcnXShfMHgyMmYwNTgpPT09J1tvYmplY3RcXFxceDIwQXJyYXldJz9fMHgzZDRlNjU9J2FycmF5Jzp0aGlzW18weDI0MWI3YSgweDIxYSldKF8weDIyZjA1OCk9PT1fMHgyNDFiN2EoMHgyNDMpP18weDNkNGU2NT1fMHgyNDFiN2EoMHgxZDgpOnRoaXNbXzB4MjQxYjdhKDB4MjFhKV0oXzB4MjJmMDU4KT09PV8weDI0MWI3YSgweDIzNSk/XzB4M2Q0ZTY1PV8weDI0MWI3YSgweDI2OSk6XzB4MjJmMDU4PT09bnVsbD9fMHgzZDRlNjU9XzB4MjQxYjdhKDB4MjE3KTpfMHgyMmYwNThbXzB4MjQxYjdhKDB4MjE2KV0mJihfMHgzZDRlNjU9XzB4MjJmMDU4W18weDI0MWI3YSgweDIxNildW18weDI0MWI3YSgweDIxYildfHxfMHgzZDRlNjUpOl8weDNkNGU2NT09PV8weDI0MWI3YSgweDIwZikmJnRoaXNbJ19IVE1MQWxsQ29sbGVjdGlvbiddJiZfMHgyMmYwNTggaW5zdGFuY2VvZiB0aGlzW18weDI0MWI3YSgweDI4NSldJiYoXzB4M2Q0ZTY1PV8weDI0MWI3YSgweDIzOSkpLF8weDNkNGU2NTt9W18weDFhZTlkZSgweDIxYSldKF8weDFkZTg3Mil7dmFyIF8weDM1NzBlOT1fMHgxYWU5ZGU7cmV0dXJuIE9iamVjdFtfMHgzNTcwZTkoMHgyOGQpXVtfMHgzNTcwZTkoMHgyMzIpXVtfMHgzNTcwZTkoMHgyNzMpXShfMHgxZGU4NzIpO31bXzB4MWFlOWRlKDB4MjJmKV0oXzB4NDJiOTgxKXt2YXIgXzB4MWI0Mzg5PV8weDFhZTlkZTtyZXR1cm4gXzB4NDJiOTgxPT09J2Jvb2xlYW4nfHxfMHg0MmI5ODE9PT0nc3RyaW5nJ3x8XzB4NDJiOTgxPT09XzB4MWI0Mzg5KDB4MWYwKTt9WydfaXNQcmltaXRpdmVXcmFwcGVyVHlwZSddKF8weDU3ZDEyYSl7dmFyIF8weDUxZmE0MD1fMHgxYWU5ZGU7cmV0dXJuIF8weDU3ZDEyYT09PSdCb29sZWFuJ3x8XzB4NTdkMTJhPT09J1N0cmluZyd8fF8weDU3ZDEyYT09PV8weDUxZmE0MCgweDIyNSk7fVtfMHgxYWU5ZGUoMHgxYjgpXShfMHgzZGU5MGUsXzB4MTRiODJmLF8weDE1ODg1ZixfMHgyMmIyNmUsXzB4NWJmMDYxLF8weDJiYWU4NSl7dmFyIF8weDI3OWQzMD10aGlzO3JldHVybiBmdW5jdGlvbihfMHg1NmM2ODgpe3ZhciBfMHgzMWNiNDk9XzB4MjgwMCxfMHg2NGZjYTA9XzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldW18weDMxY2I0OSgweDI2NSldLF8weDE4OWNkOD1fMHg1YmYwNjFbJ25vZGUnXVtfMHgzMWNiNDkoMHgyNWQpXSxfMHg1ZWEyNWY9XzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldWydwYXJlbnQnXTtfMHg1YmYwNjFbJ25vZGUnXVtfMHgzMWNiNDkoMHgyM2IpXT1fMHg2NGZjYTAsXzB4NWJmMDYxWydub2RlJ11bXzB4MzFjYjQ5KDB4MjVkKV09dHlwZW9mIF8weDIyYjI2ZT09XzB4MzFjYjQ5KDB4MWYwKT9fMHgyMmIyNmU6XzB4NTZjNjg4LF8weDNkZTkwZVtfMHgzMWNiNDkoMHgyMDQpXShfMHgyNzlkMzBbXzB4MzFjYjQ5KDB4MjVjKV0oXzB4MTRiODJmLF8weDE1ODg1ZixfMHgyMmIyNmUsXzB4NWJmMDYxLF8weDJiYWU4NSkpLF8weDViZjA2MVtfMHgzMWNiNDkoMHgyOGMpXVtfMHgzMWNiNDkoMHgyM2IpXT1fMHg1ZWEyNWYsXzB4NWJmMDYxW18weDMxY2I0OSgweDI4YyldW18weDMxY2I0OSgweDI1ZCldPV8weDE4OWNkODt9O31bJ19hZGRPYmplY3RQcm9wZXJ0eSddKF8weDhmMTcxNCxfMHg0NmMxOWUsXzB4MzA4NzkzLF8weDUzYmYxMyxfMHgzYzU3MTIsXzB4M2ViN2RiLF8weDRkZDg4MSl7dmFyIF8weDU1NzQ0ND1fMHgxYWU5ZGUsXzB4NTg3NjZjPXRoaXM7cmV0dXJuIF8weDQ2YzE5ZVtfMHg1NTc0NDQoMHgxZDcpK18weDNjNTcxMlsndG9TdHJpbmcnXSgpXT0hMHgwLGZ1bmN0aW9uKF8weDQ5NGE3NCl7dmFyIF8weDNjNzM5Yj1fMHg1NTc0NDQsXzB4MzhjMDk5PV8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyNjUpXSxfMHhlYTg4NjU9XzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDI1ZCldLF8weDFkYTU4Mz1fMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjNiKV07XzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDIzYildPV8weDM4YzA5OSxfMHgzZWI3ZGJbXzB4M2M3MzliKDB4MjhjKV1bXzB4M2M3MzliKDB4MjVkKV09XzB4NDk0YTc0LF8weDhmMTcxNFtfMHgzYzczOWIoMHgyMDQpXShfMHg1ODc2NmNbXzB4M2M3MzliKDB4MjVjKV0oXzB4MzA4NzkzLF8weDUzYmYxMyxfMHgzYzU3MTIsXzB4M2ViN2RiLF8weDRkZDg4MSkpLF8weDNlYjdkYltfMHgzYzczOWIoMHgyOGMpXVtfMHgzYzczOWIoMHgyM2IpXT1fMHgxZGE1ODMsXzB4M2ViN2RiW18weDNjNzM5YigweDI4YyldW18weDNjNzM5YigweDI1ZCldPV8weGVhODg2NTt9O31bXzB4MWFlOWRlKDB4MjVjKV0oXzB4YTI2YWY3LF8weGQxNzgzYyxfMHg0YzM0MTAsXzB4YTNiZjIsXzB4OWZhZDk4KXt2YXIgXzB4YTYzYTRiPV8weDFhZTlkZSxfMHgzNmVjYTk9dGhpcztfMHg5ZmFkOTh8fChfMHg5ZmFkOTg9ZnVuY3Rpb24oXzB4NDk1OGE4LF8weDQxY2EyOCl7cmV0dXJuIF8weDQ5NThhOFtfMHg0MWNhMjhdO30pO3ZhciBfMHgyOWNiYjk9XzB4NGMzNDEwW18weGE2M2E0YigweDIzMildKCksXzB4NWNmYjQ2PV8weGEzYmYyW18weGE2M2E0YigweDI3NyldfHx7fSxfMHg0NDUxODM9XzB4YTNiZjJbXzB4YTYzYTRiKDB4MWQxKV0sXzB4MzE2ZjUwPV8weGEzYmYyWydpc0V4cHJlc3Npb25Ub0V2YWx1YXRlJ107dHJ5e3ZhciBfMHgxNDFkMjU9dGhpc1snX2lzTWFwJ10oXzB4YTI2YWY3KSxfMHhmZDVmNjc9XzB4MjljYmI5O18weDE0MWQyNSYmXzB4ZmQ1ZjY3WzB4MF09PT0nXFxcXHgyNycmJihfMHhmZDVmNjc9XzB4ZmQ1ZjY3W18weGE2M2E0YigweDFhOSldKDB4MSxfMHhmZDVmNjdbXzB4YTYzYTRiKDB4MjRkKV0tMHgyKSk7dmFyIF8weDRmZGI0ZD1fMHhhM2JmMltfMHhhNjNhNGIoMHgyNzcpXT1fMHg1Y2ZiNDZbXzB4YTYzYTRiKDB4MWQ3KStfMHhmZDVmNjddO18weDRmZGI0ZCYmKF8weGEzYmYyW18weGE2M2E0YigweDFkMSldPV8weGEzYmYyW18weGE2M2E0YigweDFkMSldKzB4MSksXzB4YTNiZjJbXzB4YTYzYTRiKDB4MjFlKV09ISFfMHg0ZmRiNGQ7dmFyIF8weDQ3NTE1Nz10eXBlb2YgXzB4NGMzNDEwPT0nc3ltYm9sJyxfMHgyOWQ4NWM9eyduYW1lJzpfMHg0NzUxNTd8fF8weDE0MWQyNT9fMHgyOWNiYjk6dGhpc1snX3Byb3BlcnR5TmFtZSddKF8weDI5Y2JiOSl9O2lmKF8weDQ3NTE1NyYmKF8weDI5ZDg1Y1tfMHhhNjNhNGIoMHgxZDkpXT0hMHgwKSwhKF8weGQxNzgzYz09PV8weGE2M2E0YigweDI0Zil8fF8weGQxNzgzYz09PV8weGE2M2E0YigweDI0ZSkpKXt2YXIgXzB4MjYwYjczPXRoaXNbXzB4YTYzYTRiKDB4MWNiKV0oXzB4YTI2YWY3LF8weDRjMzQxMCk7aWYoXzB4MjYwYjczJiYoXzB4MjYwYjczW18weGE2M2E0YigweDIwNSldJiYoXzB4MjlkODVjW18weGE2M2E0YigweDFhNSldPSEweDApLF8weDI2MGI3M1tfMHhhNjNhNGIoMHgxZmIpXSYmIV8weDRmZGI0ZCYmIV8weGEzYmYyW18weGE2M2E0YigweDFiZSldKSlyZXR1cm4gXzB4MjlkODVjWydnZXR0ZXInXT0hMHgwLHRoaXNbXzB4YTYzYTRiKDB4MWRhKV0oXzB4MjlkODVjLF8weGEzYmYyKSxfMHgyOWQ4NWM7fXZhciBfMHgxOTRmYTU7dHJ5e18weDE5NGZhNT1fMHg5ZmFkOTgoXzB4YTI2YWY3LF8weDRjMzQxMCk7fWNhdGNoKF8weDJjMzE0Mil7cmV0dXJuIF8weDI5ZDg1Yz17J25hbWUnOl8weDI5Y2JiOSwndHlwZSc6XzB4YTYzYTRiKDB4MWM4KSwnZXJyb3InOl8weDJjMzE0MltfMHhhNjNhNGIoMHgyMjIpXX0sdGhpc1tfMHhhNjNhNGIoMHgxZGEpXShfMHgyOWQ4NWMsXzB4YTNiZjIpLF8weDI5ZDg1Yzt9dmFyIF8weDUwODUyYT10aGlzW18weGE2M2E0YigweDI3NildKF8weDE5NGZhNSksXzB4M2FiNzllPXRoaXNbXzB4YTYzYTRiKDB4MjJmKV0oXzB4NTA4NTJhKTtpZihfMHgyOWQ4NWNbXzB4YTYzYTRiKDB4MjI4KV09XzB4NTA4NTJhLF8weDNhYjc5ZSl0aGlzW18weGE2M2E0YigweDFkYSldKF8weDI5ZDg1YyxfMHhhM2JmMixfMHgxOTRmYTUsZnVuY3Rpb24oKXt2YXIgXzB4MzBhMzNmPV8weGE2M2E0YjtfMHgyOWQ4NWNbXzB4MzBhMzNmKDB4MWY0KV09XzB4MTk0ZmE1Wyd2YWx1ZU9mJ10oKSwhXzB4NGZkYjRkJiZfMHgzNmVjYTlbXzB4MzBhMzNmKDB4MWM0KV0oXzB4NTA4NTJhLF8weDI5ZDg1YyxfMHhhM2JmMix7fSk7fSk7ZWxzZXt2YXIgXzB4MmViOGQxPV8weGEzYmYyW18weGE2M2E0YigweDIyYyldJiZfMHhhM2JmMltfMHhhNjNhNGIoMHgxZDMpXTxfMHhhM2JmMlsnYXV0b0V4cGFuZE1heERlcHRoJ10mJl8weGEzYmYyW18weGE2M2E0YigweDIyZSldWydpbmRleE9mJ10oXzB4MTk0ZmE1KTwweDAmJl8weDUwODUyYSE9PSdmdW5jdGlvbicmJl8weGEzYmYyW18weGE2M2E0YigweDI1ZildPF8weGEzYmYyWydhdXRvRXhwYW5kTGltaXQnXTtfMHgyZWI4ZDF8fF8weGEzYmYyW18weGE2M2E0YigweDFkMyldPF8weDQ0NTE4M3x8XzB4NGZkYjRkPyh0aGlzWydzZXJpYWxpemUnXShfMHgyOWQ4NWMsXzB4MTk0ZmE1LF8weGEzYmYyLF8weDRmZGI0ZHx8e30pLHRoaXNbXzB4YTYzYTRiKDB4MjM2KV0oXzB4MTk0ZmE1LF8weDI5ZDg1YykpOnRoaXNbXzB4YTYzYTRiKDB4MWRhKV0oXzB4MjlkODVjLF8weGEzYmYyLF8weDE5NGZhNSxmdW5jdGlvbigpe3ZhciBfMHgxYWMyZjQ9XzB4YTYzYTRiO18weDUwODUyYT09PV8weDFhYzJmNCgweDIxNyl8fF8weDUwODUyYT09PSd1bmRlZmluZWQnfHwoZGVsZXRlIF8weDI5ZDg1Y1sndmFsdWUnXSxfMHgyOWQ4NWNbXzB4MWFjMmY0KDB4MjEwKV09ITB4MCk7fSk7fXJldHVybiBfMHgyOWQ4NWM7fWZpbmFsbHl7XzB4YTNiZjJbXzB4YTYzYTRiKDB4Mjc3KV09XzB4NWNmYjQ2LF8weGEzYmYyWydkZXB0aCddPV8weDQ0NTE4MyxfMHhhM2JmMltfMHhhNjNhNGIoMHgyMWUpXT1fMHgzMTZmNTA7fX1bJ19jYXBJZlN0cmluZyddKF8weDE1YTYxOSxfMHgyZTk1NTEsXzB4MmQwZGM3LF8weDNhYTYxZCl7dmFyIF8weDFjY2ZkOD1fMHgxYWU5ZGUsXzB4MTRlNWNlPV8weDNhYTYxZFtfMHgxY2NmZDgoMHgyNjgpXXx8XzB4MmQwZGM3W18weDFjY2ZkOCgweDI2OCldO2lmKChfMHgxNWE2MTk9PT1fMHgxY2NmZDgoMHgyODIpfHxfMHgxNWE2MTk9PT1fMHgxY2NmZDgoMHgyOTMpKSYmXzB4MmU5NTUxWyd2YWx1ZSddKXtsZXQgXzB4MzgxNzQzPV8weDJlOTU1MVtfMHgxY2NmZDgoMHgxZjQpXVsnbGVuZ3RoJ107XzB4MmQwZGM3WydhbGxTdHJMZW5ndGgnXSs9XzB4MzgxNzQzLF8weDJkMGRjN1snYWxsU3RyTGVuZ3RoJ10+XzB4MmQwZGM3Wyd0b3RhbFN0ckxlbmd0aCddPyhfMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MjEwKV09JycsZGVsZXRlIF8weDJlOTU1MVtfMHgxY2NmZDgoMHgxZjQpXSk6XzB4MzgxNzQzPl8weDE0ZTVjZSYmKF8weDJlOTU1MVtfMHgxY2NmZDgoMHgyMTApXT1fMHgyZTk1NTFbXzB4MWNjZmQ4KDB4MWY0KV1bJ3N1YnN0ciddKDB4MCxfMHgxNGU1Y2UpLGRlbGV0ZSBfMHgyZTk1NTFbJ3ZhbHVlJ10pO319W18weDFhZTlkZSgweDI4MyldKF8weDExYWIzZSl7dmFyIF8weDQ1NWJjZD1fMHgxYWU5ZGU7cmV0dXJuISEoXzB4MTFhYjNlJiZfMHgyZjFhNzBbJ01hcCddJiZ0aGlzW18weDQ1NWJjZCgweDIxYSldKF8weDExYWIzZSk9PT1fMHg0NTViY2QoMHgyMGUpJiZfMHgxMWFiM2VbXzB4NDU1YmNkKDB4MjU4KV0pO31bXzB4MWFlOWRlKDB4MjEzKV0oXzB4NTk3NjFkKXt2YXIgXzB4MjA1ZDk0PV8weDFhZTlkZTtpZihfMHg1OTc2MWRbXzB4MjA1ZDk0KDB4MjZhKV0oL15cXFxcZCskLykpcmV0dXJuIF8weDU5NzYxZDt2YXIgXzB4MjgzYmFkO3RyeXtfMHgyODNiYWQ9SlNPTltfMHgyMDVkOTQoMHgxYzIpXSgnJytfMHg1OTc2MWQpO31jYXRjaHtfMHgyODNiYWQ9J1xcXFx4MjInK3RoaXNbXzB4MjA1ZDk0KDB4MjFhKV0oXzB4NTk3NjFkKSsnXFxcXHgyMic7fXJldHVybiBfMHgyODNiYWRbJ21hdGNoJ10oL15cXFwiKFthLXpBLVpfXVthLXpBLVpfMC05XSopXFxcIiQvKT9fMHgyODNiYWQ9XzB4MjgzYmFkW18weDIwNWQ5NCgweDFhOSldKDB4MSxfMHgyODNiYWRbXzB4MjA1ZDk0KDB4MjRkKV0tMHgyKTpfMHgyODNiYWQ9XzB4MjgzYmFkW18weDIwNWQ5NCgweDI3ZSldKC8nL2csJ1xcXFx4NWNcXFxceDI3JylbXzB4MjA1ZDk0KDB4MjdlKV0oL1xcXFxcXFxcXFxcIi9nLCdcXFxceDIyJylbXzB4MjA1ZDk0KDB4MjdlKV0oLyheXFxcInxcXFwiJCkvZywnXFxcXHgyNycpLF8weDI4M2JhZDt9W18weDFhZTlkZSgweDFkYSldKF8weDU1YmIxMSxfMHgxYjM3OTUsXzB4NDhmMjYxLF8weDNlMjFhYSl7dmFyIF8weDU3MWFkYz1fMHgxYWU5ZGU7dGhpc1tfMHg1NzFhZGMoMHgyMzEpXShfMHg1NWJiMTEsXzB4MWIzNzk1KSxfMHgzZTIxYWEmJl8weDNlMjFhYSgpLHRoaXNbJ19hZGRpdGlvbmFsTWV0YWRhdGEnXShfMHg0OGYyNjEsXzB4NTViYjExKSx0aGlzW18weDU3MWFkYygweDIzOCldKF8weDU1YmIxMSxfMHgxYjM3OTUpO31bXzB4MWFlOWRlKDB4MjMxKV0oXzB4ZTA4MmVkLF8weDUwYjcwMCl7dmFyIF8weDQ4OWQ5Zj1fMHgxYWU5ZGU7dGhpc1snX3NldE5vZGVJZCddKF8weGUwODJlZCxfMHg1MGI3MDApLHRoaXNbXzB4NDg5ZDlmKDB4MWMxKV0oXzB4ZTA4MmVkLF8weDUwYjcwMCksdGhpc1snX3NldE5vZGVFeHByZXNzaW9uUGF0aCddKF8weGUwODJlZCxfMHg1MGI3MDApLHRoaXNbJ19zZXROb2RlUGVybWlzc2lvbnMnXShfMHhlMDgyZWQsXzB4NTBiNzAwKTt9Wydfc2V0Tm9kZUlkJ10oXzB4NTZlMjAwLF8weDQ1MzE5OCl7fVsnX3NldE5vZGVRdWVyeVBhdGgnXShfMHg0MGE5NWYsXzB4MWY2MTdhKXt9W18weDFhZTlkZSgweDIwYSldKF8weDI5NWM2YSxfMHgyOTdiYjQpe31bXzB4MWFlOWRlKDB4MWVmKV0oXzB4M2Y2OTI1KXtyZXR1cm4gXzB4M2Y2OTI1PT09dGhpc1snX3VuZGVmaW5lZCddO31bXzB4MWFlOWRlKDB4MjM4KV0oXzB4MjE1ODQwLF8weDIyOTJmZCl7dmFyIF8weDU0NGMzNz1fMHgxYWU5ZGU7dGhpc1tfMHg1NDRjMzcoMHgyMGEpXShfMHgyMTU4NDAsXzB4MjI5MmZkKSx0aGlzWydfc2V0Tm9kZUV4cGFuZGFibGVTdGF0ZSddKF8weDIxNTg0MCksXzB4MjI5MmZkW18weDU0NGMzNygweDFkNildJiZ0aGlzWydfc29ydFByb3BzJ10oXzB4MjE1ODQwKSx0aGlzW18weDU0NGMzNygweDFhZildKF8weDIxNTg0MCxfMHgyMjkyZmQpLHRoaXNbXzB4NTQ0YzM3KDB4MjcxKV0oXzB4MjE1ODQwLF8weDIyOTJmZCksdGhpc1tfMHg1NDRjMzcoMHgyNTMpXShfMHgyMTU4NDApO31bXzB4MWFlOWRlKDB4MjM2KV0oXzB4OTBlMzdkLF8weDI5MDVhYyl7dmFyIF8weDI0NWJmND1fMHgxYWU5ZGU7bGV0IF8weDQwNGE1Mzt0cnl7XzB4MmYxYTcwW18weDI0NWJmNCgweDIyNyldJiYoXzB4NDA0YTUzPV8weDJmMWE3MFtfMHgyNDViZjQoMHgyMjcpXVtfMHgyNDViZjQoMHgyMmEpXSxfMHgyZjFhNzBbXzB4MjQ1YmY0KDB4MjI3KV1bXzB4MjQ1YmY0KDB4MjJhKV09ZnVuY3Rpb24oKXt9KSxfMHg5MGUzN2QmJnR5cGVvZiBfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjRkKV09PV8weDI0NWJmNCgweDFmMCkmJihfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjRkKV09XzB4OTBlMzdkW18weDI0NWJmNCgweDI0ZCldKTt9Y2F0Y2h7fWZpbmFsbHl7XzB4NDA0YTUzJiYoXzB4MmYxYTcwWydjb25zb2xlJ11bXzB4MjQ1YmY0KDB4MjJhKV09XzB4NDA0YTUzKTt9aWYoXzB4MjkwNWFjW18weDI0NWJmNCgweDIyOCldPT09XzB4MjQ1YmY0KDB4MWYwKXx8XzB4MjkwNWFjW18weDI0NWJmNCgweDIyOCldPT09XzB4MjQ1YmY0KDB4MjI1KSl7aWYoaXNOYU4oXzB4MjkwNWFjW18weDI0NWJmNCgweDFmNCldKSlfMHgyOTA1YWNbJ25hbiddPSEweDAsZGVsZXRlIF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXTtlbHNlIHN3aXRjaChfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV0pe2Nhc2UgTnVtYmVyW18weDI0NWJmNCgweDI3OSldOl8weDI5MDVhY1tfMHgyNDViZjQoMHgyMjMpXT0hMHgwLGRlbGV0ZSBfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MWY0KV07YnJlYWs7Y2FzZSBOdW1iZXJbXzB4MjQ1YmY0KDB4MjYxKV06XzB4MjkwNWFjW18weDI0NWJmNCgweDIxNSldPSEweDAsZGVsZXRlIF8weDI5MDVhY1tfMHgyNDViZjQoMHgxZjQpXTticmVhaztjYXNlIDB4MDp0aGlzWydfaXNOZWdhdGl2ZVplcm8nXShfMHgyOTA1YWNbJ3ZhbHVlJ10pJiYoXzB4MjkwNWFjWyduZWdhdGl2ZVplcm8nXT0hMHgwKTticmVhazt9fWVsc2UgXzB4MjkwNWFjWyd0eXBlJ109PT0nZnVuY3Rpb24nJiZ0eXBlb2YgXzB4OTBlMzdkW18weDI0NWJmNCgweDIxYildPT1fMHgyNDViZjQoMHgyODIpJiZfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjFiKV0mJl8weDI5MDVhY1snbmFtZSddJiZfMHg5MGUzN2RbXzB4MjQ1YmY0KDB4MjFiKV0hPT1fMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjFiKV0mJihfMHgyOTA1YWNbXzB4MjQ1YmY0KDB4MjY3KV09XzB4OTBlMzdkWyduYW1lJ10pO31bXzB4MWFlOWRlKDB4MjNmKV0oXzB4MzYwM2Y5KXtyZXR1cm4gMHgxL18weDM2MDNmOT09PU51bWJlclsnTkVHQVRJVkVfSU5GSU5JVFknXTt9W18weDFhZTlkZSgweDIyNildKF8weDkxMTM1Zil7dmFyIF8weDI3YmNjOT1fMHgxYWU5ZGU7IV8weDkxMTM1ZlsncHJvcHMnXXx8IV8weDkxMTM1ZlsncHJvcHMnXVtfMHgyN2JjYzkoMHgyNGQpXXx8XzB4OTExMzVmW18weDI3YmNjOSgweDIyOCldPT09J2FycmF5J3x8XzB4OTExMzVmW18weDI3YmNjOSgweDIyOCldPT09J01hcCd8fF8weDkxMTM1ZltfMHgyN2JjYzkoMHgyMjgpXT09PV8weDI3YmNjOSgweDFmOCl8fF8weDkxMTM1ZlsncHJvcHMnXVtfMHgyN2JjYzkoMHgxYjIpXShmdW5jdGlvbihfMHgyYTJjZGIsXzB4NDllZTRiKXt2YXIgXzB4NWU3NmIzPV8weDI3YmNjOSxfMHgxOTA2M2U9XzB4MmEyY2RiW18weDVlNzZiMygweDIxYildW18weDVlNzZiMygweDFhMildKCksXzB4NDQ2MDAzPV8weDQ5ZWU0YltfMHg1ZTc2YjMoMHgyMWIpXVtfMHg1ZTc2YjMoMHgxYTIpXSgpO3JldHVybiBfMHgxOTA2M2U8XzB4NDQ2MDAzPy0weDE6XzB4MTkwNjNlPl8weDQ0NjAwMz8weDE6MHgwO30pO31bJ19hZGRGdW5jdGlvbnNOb2RlJ10oXzB4MmU4ZTRkLF8weDE5OWMzMCl7dmFyIF8weDNkM2FhMD1fMHgxYWU5ZGU7aWYoIShfMHgxOTljMzBbXzB4M2QzYWEwKDB4MWI2KV18fCFfMHgyZThlNGRbXzB4M2QzYWEwKDB4MWU5KV18fCFfMHgyZThlNGRbJ3Byb3BzJ11bJ2xlbmd0aCddKSl7Zm9yKHZhciBfMHg0MzUxMzM9W10sXzB4MjUzMWU3PVtdLF8weDRiNWE2MT0weDAsXzB4MzZkMjhiPV8weDJlOGU0ZFtfMHgzZDNhYTAoMHgxZTkpXVsnbGVuZ3RoJ107XzB4NGI1YTYxPF8weDM2ZDI4YjtfMHg0YjVhNjErKyl7dmFyIF8weDEwZDc5NT1fMHgyZThlNGRbJ3Byb3BzJ11bXzB4NGI1YTYxXTtfMHgxMGQ3OTVbXzB4M2QzYWEwKDB4MjI4KV09PT1fMHgzZDNhYTAoMHgyNTQpP18weDQzNTEzM1tfMHgzZDNhYTAoMHgyMDQpXShfMHgxMGQ3OTUpOl8weDI1MzFlN1tfMHgzZDNhYTAoMHgyMDQpXShfMHgxMGQ3OTUpO31pZighKCFfMHgyNTMxZTdbXzB4M2QzYWEwKDB4MjRkKV18fF8weDQzNTEzM1snbGVuZ3RoJ108PTB4MSkpe18weDJlOGU0ZFsncHJvcHMnXT1fMHgyNTMxZTc7dmFyIF8weDE0ZGVjND17J2Z1bmN0aW9uc05vZGUnOiEweDAsJ3Byb3BzJzpfMHg0MzUxMzN9O3RoaXNbXzB4M2QzYWEwKDB4MjhlKV0oXzB4MTRkZWM0LF8weDE5OWMzMCksdGhpc1tfMHgzZDNhYTAoMHgyMGEpXShfMHgxNGRlYzQsXzB4MTk5YzMwKSx0aGlzWydfc2V0Tm9kZUV4cGFuZGFibGVTdGF0ZSddKF8weDE0ZGVjNCksdGhpc1snX3NldE5vZGVQZXJtaXNzaW9ucyddKF8weDE0ZGVjNCxfMHgxOTljMzApLF8weDE0ZGVjNFsnaWQnXSs9J1xcXFx4MjBmJyxfMHgyZThlNGRbJ3Byb3BzJ11bJ3Vuc2hpZnQnXShfMHgxNGRlYzQpO319fVsnX2FkZExvYWROb2RlJ10oXzB4NGE4ZjdhLF8weDM0NmRiMCl7fVsnX3NldE5vZGVFeHBhbmRhYmxlU3RhdGUnXShfMHgxYzZmZDEpe31bXzB4MWFlOWRlKDB4MWRlKV0oXzB4MTIxMWU5KXt2YXIgXzB4MzkwM2I1PV8weDFhZTlkZTtyZXR1cm4gQXJyYXlbXzB4MzkwM2I1KDB4MjA4KV0oXzB4MTIxMWU5KXx8dHlwZW9mIF8weDEyMTFlOT09J29iamVjdCcmJnRoaXNbXzB4MzkwM2I1KDB4MjFhKV0oXzB4MTIxMWU5KT09PSdbb2JqZWN0XFxcXHgyMEFycmF5XSc7fVtfMHgxYWU5ZGUoMHgxZDApXShfMHgzMTFlOGMsXzB4NjlmOGYwKXt9W18weDFhZTlkZSgweDI1MyldKF8weDFmYjVhZCl7dmFyIF8weDRlNTE2YT1fMHgxYWU5ZGU7ZGVsZXRlIF8weDFmYjVhZFtfMHg0ZTUxNmEoMHgxZmMpXSxkZWxldGUgXzB4MWZiNWFkWydfaGFzU2V0T25JdHNQYXRoJ10sZGVsZXRlIF8weDFmYjVhZFsnX2hhc01hcE9uSXRzUGF0aCddO31bJ19zZXROb2RlRXhwcmVzc2lvblBhdGgnXShfMHgxZjQzZjAsXzB4NWRjMThjKXt9fWxldCBfMHg0NGUwOTc9bmV3IF8weDM5YWVlMygpLF8weDU1NTkzMz17J3Byb3BzJzoweDY0LCdlbGVtZW50cyc6MHg2NCwnc3RyTGVuZ3RoJzoweDQwMCoweDMyLCd0b3RhbFN0ckxlbmd0aCc6MHg0MDAqMHgzMiwnYXV0b0V4cGFuZExpbWl0JzoweDEzODgsJ2F1dG9FeHBhbmRNYXhEZXB0aCc6MHhhfSxfMHg1ZWY0YmI9eydwcm9wcyc6MHg1LCdlbGVtZW50cyc6MHg1LCdzdHJMZW5ndGgnOjB4MTAwLCd0b3RhbFN0ckxlbmd0aCc6MHgxMDAqMHgzLCdhdXRvRXhwYW5kTGltaXQnOjB4MWUsJ2F1dG9FeHBhbmRNYXhEZXB0aCc6MHgyfTtmdW5jdGlvbiBfMHg0N2FlZTAoXzB4NWY1MTliLF8weDM2ZTFjMixfMHgzOGE1YjIsXzB4MjQ1YTMzLF8weDMzODQyZSxfMHg0N2Y5OWQpe3ZhciBfMHgxYjZkYzk9XzB4MWFlOWRlO2xldCBfMHg0ZTkwOTcsXzB4MmQ1ZjA4O3RyeXtfMHgyZDVmMDg9XzB4NWY0MjU0KCksXzB4NGU5MDk3PV8weDM5YmUwMVtfMHgzNmUxYzJdLCFfMHg0ZTkwOTd8fF8weDJkNWYwOC1fMHg0ZTkwOTdbJ3RzJ10+MHgxZjQmJl8weDRlOTA5N1tfMHgxYjZkYzkoMHgxZWIpXSYmXzB4NGU5MDk3W18weDFiNmRjOSgweDIwOSldL18weDRlOTA5N1tfMHgxYjZkYzkoMHgxZWIpXTwweDY0PyhfMHgzOWJlMDFbXzB4MzZlMWMyXT1fMHg0ZTkwOTc9eydjb3VudCc6MHgwLCd0aW1lJzoweDAsJ3RzJzpfMHgyZDVmMDh9LF8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXT17fSk6XzB4MmQ1ZjA4LV8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsndHMnXT4weDMyJiZfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ2NvdW50J10mJl8weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVsndGltZSddL18weDM5YmUwMVtfMHgxYjZkYzkoMHgxYTEpXVtfMHgxYjZkYzkoMHgxZWIpXTwweDY0JiYoXzB4MzliZTAxW18weDFiNmRjOSgweDFhMSldPXt9KTtsZXQgXzB4MzIxYzVlPVtdLF8weDEwMzg3MT1fMHg0ZTkwOTdbJ3JlZHVjZUxpbWl0cyddfHxfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ3JlZHVjZUxpbWl0cyddP18weDVlZjRiYjpfMHg1NTU5MzMsXzB4MWU0YWVjPV8weDExZjAwYj0+e3ZhciBfMHgxZDkzYzM9XzB4MWI2ZGM5O2xldCBfMHgzOTcwYzU9e307cmV0dXJuIF8weDM5NzBjNVsncHJvcHMnXT1fMHgxMWYwMGJbXzB4MWQ5M2MzKDB4MWU5KV0sXzB4Mzk3MGM1W18weDFkOTNjMygweDIyZCldPV8weDExZjAwYltfMHgxZDkzYzMoMHgyMmQpXSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MjY4KV09XzB4MTFmMDBiW18weDFkOTNjMygweDI2OCldLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxYWEpXT1fMHgxMWYwMGJbXzB4MWQ5M2MzKDB4MWFhKV0sXzB4Mzk3MGM1W18weDFkOTNjMygweDI0MSldPV8weDExZjAwYlsnYXV0b0V4cGFuZExpbWl0J10sXzB4Mzk3MGM1W18weDFkOTNjMygweDFmMSldPV8weDExZjAwYlsnYXV0b0V4cGFuZE1heERlcHRoJ10sXzB4Mzk3MGM1W18weDFkOTNjMygweDFkNildPSEweDEsXzB4Mzk3MGM1Wydub0Z1bmN0aW9ucyddPSFfMHg1YmUwNzIsXzB4Mzk3MGM1W18weDFkOTNjMygweDFkMSldPTB4MSxfMHgzOTcwYzVbXzB4MWQ5M2MzKDB4MWQzKV09MHgwLF8weDM5NzBjNVsnZXhwSWQnXT1fMHgxZDkzYzMoMHgyNTUpLF8weDM5NzBjNVsncm9vdEV4cHJlc3Npb24nXT1fMHgxZDkzYzMoMHgxYmEpLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyMmMpXT0hMHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgyMmUpXT1bXSxfMHgzOTcwYzVbJ2F1dG9FeHBhbmRQcm9wZXJ0eUNvdW50J109MHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxYmUpXT0hMHgwLF8weDM5NzBjNVtfMHgxZDkzYzMoMHgxZTMpXT0weDAsXzB4Mzk3MGM1W18weDFkOTNjMygweDI4YyldPXsnY3VycmVudCc6dm9pZCAweDAsJ3BhcmVudCc6dm9pZCAweDAsJ2luZGV4JzoweDB9LF8weDM5NzBjNTt9O2Zvcih2YXIgXzB4NGUwNjZlPTB4MDtfMHg0ZTA2NmU8XzB4MzM4NDJlW18weDFiNmRjOSgweDI0ZCldO18weDRlMDY2ZSsrKV8weDMyMWM1ZVtfMHgxYjZkYzkoMHgyMDQpXShfMHg0NGUwOTdbXzB4MWI2ZGM5KDB4MjNkKV0oeyd0aW1lTm9kZSc6XzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MjA5KXx8dm9pZCAweDB9LF8weDMzODQyZVtfMHg0ZTA2NmVdLF8weDFlNGFlYyhfMHgxMDM4NzEpLHt9KSk7aWYoXzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MWEzKXx8XzB4NWY1MTliPT09XzB4MWI2ZGM5KDB4MjJhKSl7bGV0IF8weDQyMjNhMD1FcnJvclsnc3RhY2tUcmFjZUxpbWl0J107dHJ5e0Vycm9yW18weDFiNmRjOSgweDI3OCldPTB4MS8weDAsXzB4MzIxYzVlW18weDFiNmRjOSgweDIwNCldKF8weDQ0ZTA5N1tfMHgxYjZkYzkoMHgyM2QpXSh7J3N0YWNrTm9kZSc6ITB4MH0sbmV3IEVycm9yKClbXzB4MWI2ZGM5KDB4MjZiKV0sXzB4MWU0YWVjKF8weDEwMzg3MSkseydzdHJMZW5ndGgnOjB4MS8weDB9KSk7fWZpbmFsbHl7RXJyb3JbXzB4MWI2ZGM5KDB4Mjc4KV09XzB4NDIyM2EwO319cmV0dXJueydtZXRob2QnOl8weDFiNmRjOSgweDIzMCksJ3ZlcnNpb24nOl8weDVhNTc0NSwnYXJncyc6W3sndHMnOl8weDM4YTViMiwnc2Vzc2lvbic6XzB4MjQ1YTMzLCdhcmdzJzpfMHgzMjFjNWUsJ2lkJzpfMHgzNmUxYzIsJ2NvbnRleHQnOl8weDQ3Zjk5ZH1dfTt9Y2F0Y2goXzB4NWIyOGVlKXtyZXR1cm57J21ldGhvZCc6XzB4MWI2ZGM5KDB4MjMwKSwndmVyc2lvbic6XzB4NWE1NzQ1LCdhcmdzJzpbeyd0cyc6XzB4MzhhNWIyLCdzZXNzaW9uJzpfMHgyNDVhMzMsJ2FyZ3MnOlt7J3R5cGUnOid1bmtub3duJywnZXJyb3InOl8weDViMjhlZSYmXzB4NWIyOGVlW18weDFiNmRjOSgweDIyMildfV0sJ2lkJzpfMHgzNmUxYzIsJ2NvbnRleHQnOl8weDQ3Zjk5ZH1dfTt9ZmluYWxseXt0cnl7aWYoXzB4NGU5MDk3JiZfMHgyZDVmMDgpe2xldCBfMHgxZDY1YzY9XzB4NWY0MjU0KCk7XzB4NGU5MDk3Wydjb3VudCddKyssXzB4NGU5MDk3W18weDFiNmRjOSgweDIwOSldKz1fMHgzNDkxM2IoXzB4MmQ1ZjA4LF8weDFkNjVjNiksXzB4NGU5MDk3Wyd0cyddPV8weDFkNjVjNixfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bJ2NvdW50J10rKyxfMHgzOWJlMDFbJ2hpdHMnXVtfMHgxYjZkYzkoMHgyMDkpXSs9XzB4MzQ5MTNiKF8weDJkNWYwOCxfMHgxZDY1YzYpLF8weDM5YmUwMVsnaGl0cyddWyd0cyddPV8weDFkNjVjNiwoXzB4NGU5MDk3W18weDFiNmRjOSgweDFlYildPjB4MzJ8fF8weDRlOTA5N1tfMHgxYjZkYzkoMHgyMDkpXT4weDY0KSYmKF8weDRlOTA5N1sncmVkdWNlTGltaXRzJ109ITB4MCksKF8weDM5YmUwMVsnaGl0cyddWydjb3VudCddPjB4M2U4fHxfMHgzOWJlMDFbXzB4MWI2ZGM5KDB4MWExKV1bXzB4MWI2ZGM5KDB4MjA5KV0+MHgxMmMpJiYoXzB4MzliZTAxWydoaXRzJ11bXzB4MWI2ZGM5KDB4MjNhKV09ITB4MCk7fX1jYXRjaHt9fX1yZXR1cm4gXzB4NDdhZWUwO30oKF8weDJhYmIwMCxfMHg3NDEzMjYsXzB4MjY4ODE2LF8weDgzMTY5NCxfMHgxNzIyYTEsXzB4MmRlMTlmLF8weDFlMzAyYSxfMHgzNjNiOGQsXzB4YTBhMzAzLF8weDVlNTVmMSxfMHgzMDZhYjMpPT57dmFyIF8weDMxMzQ0ND1fMHhmZTVlNDQ7aWYoXzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldKXJldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV07aWYoIUgoXzB4MmFiYjAwLF8weDM2M2I4ZCxfMHgxNzIyYTEpKXJldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV09eydjb25zb2xlTG9nJzooKT0+e30sJ2NvbnNvbGVUcmFjZSc6KCk9Pnt9LCdjb25zb2xlVGltZSc6KCk9Pnt9LCdjb25zb2xlVGltZUVuZCc6KCk9Pnt9LCdhdXRvTG9nJzooKT0+e30sJ2F1dG9Mb2dNYW55JzooKT0+e30sJ2F1dG9UcmFjZU1hbnknOigpPT57fSwnY292ZXJhZ2UnOigpPT57fSwnYXV0b1RyYWNlJzooKT0+e30sJ2F1dG9UaW1lJzooKT0+e30sJ2F1dG9UaW1lRW5kJzooKT0+e319LF8weDJhYmIwMFtfMHgzMTM0NDQoMHgyNGMpXTtsZXQgXzB4M2I3ZDhkPUIoXzB4MmFiYjAwKSxfMHg0ZDlmNDc9XzB4M2I3ZDhkW18weDMxMzQ0NCgweDFiMSldLF8weGZjNmY2Yz1fMHgzYjdkOGRbXzB4MzEzNDQ0KDB4MjEyKV0sXzB4MTc1ZjJiPV8weDNiN2Q4ZFtfMHgzMTM0NDQoMHgyNDkpXSxfMHgxMjg3MjU9eydoaXRzJzp7fSwndHMnOnt9fSxfMHg0MmQ2Y2U9WChfMHgyYWJiMDAsXzB4YTBhMzAzLF8weDEyODcyNSxfMHgyZGUxOWYpLF8weDU0MWI0ZT1fMHgxODdjOGQ9PntfMHgxMjg3MjVbJ3RzJ11bXzB4MTg3YzhkXT1fMHhmYzZmNmMoKTt9LF8weDQ5ZWEwOD0oXzB4Mjk2NWY3LF8weDU0ZTBiNCk9PntsZXQgXzB4YTNhN2ExPV8weDEyODcyNVsndHMnXVtfMHg1NGUwYjRdO2lmKGRlbGV0ZSBfMHgxMjg3MjVbJ3RzJ11bXzB4NTRlMGI0XSxfMHhhM2E3YTEpe2xldCBfMHgzNzk5YTU9XzB4NGQ5ZjQ3KF8weGEzYTdhMSxfMHhmYzZmNmMoKSk7XzB4NDhhODk2KF8weDQyZDZjZSgndGltZScsXzB4Mjk2NWY3LF8weDE3NWYyYigpLF8weDFjOTZjYSxbXzB4Mzc5OWE1XSxfMHg1NGUwYjQpKTt9fSxfMHgxY2E5NWY9XzB4NTU2ZTJlPT57dmFyIF8weDYzNGM2ZD1fMHgzMTM0NDQsXzB4M2E3OGY5O3JldHVybiBfMHgxNzIyYTE9PT1fMHg2MzRjNmQoMHgyMzcpJiZfMHgyYWJiMDBbXzB4NjM0YzZkKDB4MWE3KV0mJigoXzB4M2E3OGY5PV8weDU1NmUyZT09bnVsbD92b2lkIDB4MDpfMHg1NTZlMmVbXzB4NjM0YzZkKDB4MWY2KV0pPT1udWxsP3ZvaWQgMHgwOl8weDNhNzhmOVtfMHg2MzRjNmQoMHgyNGQpXSkmJihfMHg1NTZlMmVbJ2FyZ3MnXVsweDBdW18weDYzNGM2ZCgweDFhNyldPV8weDJhYmIwMFtfMHg2MzRjNmQoMHgxYTcpXSksXzB4NTU2ZTJlO307XzB4MmFiYjAwW18weDMxMzQ0NCgweDI0YyldPXsnY29uc29sZUxvZyc6KF8weDFkOTA0NCxfMHgzZGEzYWIpPT57dmFyIF8weDU3OGExZT1fMHgzMTM0NDQ7XzB4MmFiYjAwW18weDU3OGExZSgweDIyNyldWydsb2cnXVtfMHg1NzhhMWUoMHgyMWIpXSE9PV8weDU3OGExZSgweDI3ZCkmJl8weDQ4YTg5NihfMHg0MmQ2Y2UoJ2xvZycsXzB4MWQ5MDQ0LF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHgzZGEzYWIpKTt9LCdjb25zb2xlVHJhY2UnOihfMHgzODQ2OGQsXzB4NTBiNTQ4KT0+e3ZhciBfMHgxNDQxMjM9XzB4MzEzNDQ0LF8weDJjMGEzYixfMHg0MWJkMzA7XzB4MmFiYjAwWydjb25zb2xlJ11bXzB4MTQ0MTIzKDB4MjMwKV1bXzB4MTQ0MTIzKDB4MjFiKV0hPT1fMHgxNDQxMjMoMHgyN2EpJiYoKF8weDQxYmQzMD0oXzB4MmMwYTNiPV8weDJhYmIwMFtfMHgxNDQxMjMoMHgyMDYpXSk9PW51bGw/dm9pZCAweDA6XzB4MmMwYTNiW18weDE0NDEyMygweDI2ZildKSE9bnVsbCYmXzB4NDFiZDMwW18weDE0NDEyMygweDI4YyldJiYoXzB4MmFiYjAwW18weDE0NDEyMygweDFlMSldPSEweDApLF8weDQ4YTg5NihfMHgxY2E5NWYoXzB4NDJkNmNlKCd0cmFjZScsXzB4Mzg0NjhkLF8weDE3NWYyYigpLF8weDFjOTZjYSxfMHg1MGI1NDgpKSkpO30sJ2NvbnNvbGVFcnJvcic6KF8weGU4M2MwMixfMHg1MjgyNmUpPT57dmFyIF8weDE0ZGNjYT1fMHgzMTM0NDQ7XzB4MmFiYjAwW18weDE0ZGNjYSgweDFlMSldPSEweDAsXzB4NDhhODk2KF8weDFjYTk1ZihfMHg0MmQ2Y2UoXzB4MTRkY2NhKDB4MjJhKSxfMHhlODNjMDIsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDUyODI2ZSkpKTt9LCdjb25zb2xlVGltZSc6XzB4NWNhZjNmPT57XzB4NTQxYjRlKF8weDVjYWYzZik7fSwnY29uc29sZVRpbWVFbmQnOihfMHgyN2Q4YzUsXzB4NDE3NDc0KT0+e18weDQ5ZWEwOChfMHg0MTc0NzQsXzB4MjdkOGM1KTt9LCdhdXRvTG9nJzooXzB4ODVjNmRmLF8weDdmMzlhMik9Pnt2YXIgXzB4NDBiYjQ5PV8weDMxMzQ0NDtfMHg0OGE4OTYoXzB4NDJkNmNlKF8weDQwYmI0OSgweDIzMCksXzB4N2YzOWEyLF8weDE3NWYyYigpLF8weDFjOTZjYSxbXzB4ODVjNmRmXSkpO30sJ2F1dG9Mb2dNYW55JzooXzB4NTE1OGMwLF8weDdiOTlkMik9PntfMHg0OGE4OTYoXzB4NDJkNmNlKCdsb2cnLF8weDUxNThjMCxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsXzB4N2I5OWQyKSk7fSwnYXV0b1RyYWNlJzooXzB4MWJjMTFkLF8weDU2NWNjOSk9PntfMHg0OGE4OTYoXzB4MWNhOTVmKF8weDQyZDZjZSgndHJhY2UnLF8weDU2NWNjOSxfMHgxNzVmMmIoKSxfMHgxYzk2Y2EsW18weDFiYzExZF0pKSk7fSwnYXV0b1RyYWNlTWFueSc6KF8weDM1MjM0NSxfMHg0YzdmOTUpPT57dmFyIF8weDM3OGUxMD1fMHgzMTM0NDQ7XzB4NDhhODk2KF8weDFjYTk1ZihfMHg0MmQ2Y2UoXzB4Mzc4ZTEwKDB4MWEzKSxfMHgzNTIzNDUsXzB4MTc1ZjJiKCksXzB4MWM5NmNhLF8weDRjN2Y5NSkpKTt9LCdhdXRvVGltZSc6KF8weDUzNTlmYSxfMHgyNTk5MGEsXzB4MzIzZDY4KT0+e18weDU0MWI0ZShfMHgzMjNkNjgpO30sJ2F1dG9UaW1lRW5kJzooXzB4NWJlOWJjLF8weDVkYmUwYSxfMHhiYTQ0NWYpPT57XzB4NDllYTA4KF8weDVkYmUwYSxfMHhiYTQ0NWYpO30sJ2NvdmVyYWdlJzpfMHgyN2JlNDE9Pnt2YXIgXzB4MjBhZmZlPV8weDMxMzQ0NDtfMHg0OGE4OTYoeydtZXRob2QnOl8weDIwYWZmZSgweDFkMiksJ3ZlcnNpb24nOl8weDJkZTE5ZiwnYXJncyc6W3snaWQnOl8weDI3YmU0MX1dfSk7fX07bGV0IF8weDQ4YTg5Nj1xKF8weDJhYmIwMCxfMHg3NDEzMjYsXzB4MjY4ODE2LF8weDgzMTY5NCxfMHgxNzIyYTEsXzB4NWU1NWYxLF8weDMwNmFiMyksXzB4MWM5NmNhPV8weDJhYmIwMFsnX2NvbnNvbGVfbmluamFfc2Vzc2lvbiddO3JldHVybiBfMHgyYWJiMDBbXzB4MzEzNDQ0KDB4MjRjKV07fSkoZ2xvYmFsVGhpcywnMTI3LjAuMC4xJywnNjA1OTEnLF8weGZlNWU0NCgweDFjZSksJ3dlYnBhY2snLF8weGZlNWU0NCgweDI2YyksXzB4ZmU1ZTQ0KDB4Mjg2KSxfMHhmZTVlNDQoMHgyMWMpLF8weGZlNWU0NCgweDFjZCksXzB4ZmU1ZTQ0KDB4Mjc1KSxfMHhmZTVlNDQoMHgyNDQpKTtcIik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSB9XHJcbjsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fb28oaSwgLi4udikgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlTG9nKGksIHYpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb19vbzsgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuZnVuY3Rpb24gb29fdHIoaSwgLi4udikgeyB0cnkge1xyXG4gICAgb29fY20oKS5jb25zb2xlVHJhY2UoaSwgdik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX3RyOyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb190eChpLCAuLi52KSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVFcnJvcihpLCB2KTtcclxufVxyXG5jYXRjaCAoZSkgeyB9IHJldHVybiB2OyB9XHJcbjtcclxub29fdHg7IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXHJcbmZ1bmN0aW9uIG9vX3RzKHYpIHsgdHJ5IHtcclxuICAgIG9vX2NtKCkuY29uc29sZVRpbWUodik7XHJcbn1cclxuY2F0Y2ggKGUpIHsgfSByZXR1cm4gdjsgfVxyXG47XHJcbm9vX3RzOyAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xyXG5mdW5jdGlvbiBvb190ZSh2LCBpKSB7IHRyeSB7XHJcbiAgICBvb19jbSgpLmNvbnNvbGVUaW1lRW5kKHYsIGkpO1xyXG59XHJcbmNhdGNoIChlKSB7IH0gcmV0dXJuIHY7IH1cclxuO1xyXG5vb190ZTsgLyplc2xpbnQgdW5pY29ybi9uby1hYnVzaXZlLWVzbGludC1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvZGlzYWJsZS1lbmFibGUtcGFpcjosZXNsaW50LWNvbW1lbnRzL25vLXVubGltaXRlZC1kaXNhYmxlOixlc2xpbnQtY29tbWVudHMvbm8tYWdncmVnYXRpbmctZW5hYmxlOixlc2xpbnQtY29tbWVudHMvbm8tZHVwbGljYXRlLWRpc2FibGU6LGVzbGludC1jb21tZW50cy9uby11bnVzZWQtZGlzYWJsZTosZXNsaW50LWNvbW1lbnRzL25vLXVudXNlZC1lbmFibGU6LCovXHJcbiJdLCJuYW1lcyI6WyJDT05TVEFOVFMiLCJOT0RFX0NMSUVOVCIsIk5PREVfQURNSU4iLCJTREtfVkVSU0lPTiIsImFzc2VydCIsImFzc2VydGlvbiIsIm1lc3NhZ2UiLCJhc3NlcnRpb25FcnJvciIsIkVycm9yIiwic3RyaW5nVG9CeXRlQXJyYXkkMSIsInN0ciIsIm91dCIsInAiLCJpIiwibGVuZ3RoIiwiYyIsImNoYXJDb2RlQXQiLCJiYXNlNjQiLCJieXRlVG9DaGFyTWFwXyIsImNoYXJUb0J5dGVNYXBfIiwiYnl0ZVRvQ2hhck1hcFdlYlNhZmVfIiwiY2hhclRvQnl0ZU1hcFdlYlNhZmVfIiwiRU5DT0RFRF9WQUxTX0JBU0UiLCJFTkNPREVEX1ZBTFMiLCJ0aGlzIiwiRU5DT0RFRF9WQUxTX1dFQlNBRkUiLCJIQVNfTkFUSVZFX1NVUFBPUlQiLCJhdG9iIiwiZW5jb2RlQnl0ZUFycmF5IiwiaW5wdXQiLCJ3ZWJTYWZlIiwiQXJyYXkiLCJpc0FycmF5IiwiaW5pdF8iLCJieXRlVG9DaGFyTWFwIiwib3V0cHV0IiwiYnl0ZTEiLCJoYXZlQnl0ZTIiLCJieXRlMiIsImhhdmVCeXRlMyIsImJ5dGUzIiwib3V0Qnl0ZTEiLCJvdXRCeXRlMiIsIm91dEJ5dGUzIiwib3V0Qnl0ZTQiLCJwdXNoIiwiam9pbiIsImVuY29kZVN0cmluZyIsImJ0b2EiLCJkZWNvZGVTdHJpbmciLCJieXRlcyIsInBvcyIsImMxIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiYzIiLCJ1IiwiYzMiLCJieXRlQXJyYXlUb1N0cmluZyIsImRlY29kZVN0cmluZ1RvQnl0ZUFycmF5IiwiY2hhclRvQnl0ZU1hcCIsImNoYXJBdCIsImJ5dGU0IiwiRGVjb2RlQmFzZTY0U3RyaW5nRXJyb3IiLCJjb25zdHJ1Y3RvciIsInN1cGVyIiwiYXJndW1lbnRzIiwibmFtZSIsImJhc2U2NEVuY29kZSIsInV0ZjhCeXRlcyIsImJhc2U2NHVybEVuY29kZVdpdGhvdXRQYWRkaW5nIiwicmVwbGFjZSIsImJhc2U2NERlY29kZSIsImUiLCJjb25zb2xlIiwiZXJyb3IiLCJkZWVwQ29weSIsInZhbHVlIiwiZGVlcEV4dGVuZCIsInVuZGVmaW5lZCIsInRhcmdldCIsInNvdXJjZSIsIk9iamVjdCIsIkRhdGUiLCJnZXRUaW1lIiwicHJvcCIsImhhc093blByb3BlcnR5IiwiZ2V0R2xvYmFsIiwic2VsZiIsIndpbmRvdyIsImciLCJnZXREZWZhdWx0cyIsIl9fRklSRUJBU0VfREVGQVVMVFNfXyIsInByb2Nlc3MiLCJlbnYiLCJkZWZhdWx0c0pzb25TdHJpbmciLCJKU09OIiwicGFyc2UiLCJnZXREZWZhdWx0c0Zyb21FbnZWYXJpYWJsZSIsImRvY3VtZW50IiwibWF0Y2giLCJjb29raWUiLCJkZWNvZGVkIiwiZ2V0RGVmYXVsdHNGcm9tQ29va2llIiwiaW5mbyIsImdldERlZmF1bHRFbXVsYXRvckhvc3QiLCJwcm9kdWN0TmFtZSIsIl9hIiwiX2IiLCJlbXVsYXRvckhvc3RzIiwiZ2V0RGVmYXVsdEVtdWxhdG9ySG9zdG5hbWVBbmRQb3J0IiwiaG9zdCIsInNlcGFyYXRvckluZGV4IiwibGFzdEluZGV4T2YiLCJwb3J0IiwicGFyc2VJbnQiLCJzdWJzdHJpbmciLCJnZXREZWZhdWx0QXBwQ29uZmlnIiwiY29uZmlnIiwiZ2V0RXhwZXJpbWVudGFsU2V0dGluZyIsIkRlZmVycmVkIiwicmVqZWN0IiwicmVzb2x2ZSIsInByb21pc2UiLCJQcm9taXNlIiwid3JhcENhbGxiYWNrIiwiY2FsbGJhY2siLCJjYXRjaCIsImNyZWF0ZU1vY2tVc2VyVG9rZW4iLCJ0b2tlbiIsInByb2plY3RJZCIsInVpZCIsInByb2plY3QiLCJpYXQiLCJzdWIiLCJ1c2VyX2lkIiwicGF5bG9hZCIsImFzc2lnbiIsImlzcyIsImF1ZCIsImV4cCIsImF1dGhfdGltZSIsImZpcmViYXNlIiwic2lnbl9pbl9wcm92aWRlciIsImlkZW50aXRpZXMiLCJzdHJpbmdpZnkiLCJhbGciLCJ0eXBlIiwiZ2V0VUEiLCJuYXZpZ2F0b3IiLCJpc01vYmlsZUNvcmRvdmEiLCJ0ZXN0IiwiaXNOb2RlIiwiZm9yY2VFbnZpcm9ubWVudCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsImlzQnJvd3NlciIsImlzQnJvd3NlckV4dGVuc2lvbiIsInJ1bnRpbWUiLCJjaHJvbWUiLCJicm93c2VyIiwiaWQiLCJpc1JlYWN0TmF0aXZlIiwiaXNFbGVjdHJvbiIsImluZGV4T2YiLCJpc0lFIiwidWEiLCJpc1VXUCIsImlzTm9kZVNkayIsImlzU2FmYXJpIiwidXNlckFnZW50IiwiaW5jbHVkZXMiLCJpc0luZGV4ZWREQkF2YWlsYWJsZSIsImluZGV4ZWREQiIsInZhbGlkYXRlSW5kZXhlZERCT3BlbmFibGUiLCJwcmVFeGlzdCIsIkRCX0NIRUNLX05BTUUiLCJyZXF1ZXN0Iiwib3BlbiIsIm9uc3VjY2VzcyIsInJlc3VsdCIsImNsb3NlIiwiZGVsZXRlRGF0YWJhc2UiLCJvbnVwZ3JhZGVuZWVkZWQiLCJvbmVycm9yIiwiYXJlQ29va2llc0VuYWJsZWQiLCJjb29raWVFbmFibGVkIiwiRmlyZWJhc2VFcnJvciIsImNvZGUiLCJjdXN0b21EYXRhIiwic2V0UHJvdG90eXBlT2YiLCJjYXB0dXJlU3RhY2tUcmFjZSIsIkVycm9yRmFjdG9yeSIsImNyZWF0ZSIsInNlcnZpY2UiLCJzZXJ2aWNlTmFtZSIsImVycm9ycyIsImRhdGEiLCJmdWxsQ29kZSIsInRlbXBsYXRlIiwiUEFUVEVSTiIsIl8iLCJrZXkiLCJyZXBsYWNlVGVtcGxhdGUiLCJmdWxsTWVzc2FnZSIsImpzb25FdmFsIiwiZGVjb2RlIiwiaGVhZGVyIiwiY2xhaW1zIiwic2lnbmF0dXJlIiwicGFydHMiLCJzcGxpdCIsImlzVmFsaWRUaW1lc3RhbXAiLCJub3ciLCJNYXRoIiwiZmxvb3IiLCJ2YWxpZFNpbmNlIiwidmFsaWRVbnRpbCIsImlzc3VlZEF0VGltZSIsImlzVmFsaWRGb3JtYXQiLCJpc0FkbWluIiwiY29udGFpbnMiLCJvYmoiLCJzYWZlR2V0IiwiaXNFbXB0eSIsIm1hcCIsImZuIiwiY29udGV4dE9iaiIsInJlcyIsImRlZXBFcXVhbCIsImEiLCJiIiwiYUtleXMiLCJrZXlzIiwiYktleXMiLCJrIiwiYVByb3AiLCJiUHJvcCIsImlzT2JqZWN0IiwidGhpbmciLCJwcm9taXNlV2l0aFRpbWVvdXQiLCJ0aW1lSW5NUyIsImRlZmVycmVkUHJvbWlzZSIsInNldFRpbWVvdXQiLCJ0aGVuIiwicXVlcnlzdHJpbmciLCJxdWVyeXN0cmluZ1BhcmFtcyIsInBhcmFtcyIsImVudHJpZXMiLCJmb3JFYWNoIiwiYXJyYXlWYWwiLCJlbmNvZGVVUklDb21wb25lbnQiLCJxdWVyeXN0cmluZ0RlY29kZSIsImRlY29kZVVSSUNvbXBvbmVudCIsImV4dHJhY3RRdWVyeXN0cmluZyIsInVybCIsInF1ZXJ5U3RhcnQiLCJmcmFnbWVudFN0YXJ0IiwiU2hhMSIsImNoYWluXyIsImJ1Zl8iLCJXXyIsInBhZF8iLCJpbmJ1Zl8iLCJ0b3RhbF8iLCJibG9ja1NpemUiLCJyZXNldCIsImNvbXByZXNzXyIsImJ1ZiIsIm9mZnNldCIsIlciLCJ0IiwiZiIsImQiLCJ1cGRhdGUiLCJsZW5ndGhNaW51c0Jsb2NrIiwibiIsImluYnVmIiwiZGlnZXN0IiwidG90YWxCaXRzIiwiaiIsImNyZWF0ZVN1YnNjcmliZSIsImV4ZWN1dG9yIiwib25Ob09ic2VydmVycyIsInByb3h5IiwiT2JzZXJ2ZXJQcm94eSIsInN1YnNjcmliZSIsImJpbmQiLCJvYnNlcnZlcnMiLCJ1bnN1YnNjcmliZXMiLCJvYnNlcnZlckNvdW50IiwidGFzayIsImZpbmFsaXplZCIsIm5leHQiLCJmb3JFYWNoT2JzZXJ2ZXIiLCJvYnNlcnZlciIsImNvbXBsZXRlIiwibmV4dE9yT2JzZXJ2ZXIiLCJtZXRob2RzIiwibWV0aG9kIiwiaW1wbGVtZW50c0FueU1ldGhvZHMiLCJub29wIiwidW5zdWIiLCJ1bnN1YnNjcmliZU9uZSIsImZpbmFsRXJyb3IiLCJzZW5kT25lIiwiZXJyIiwiYXN5bmMiLCJvbkVycm9yIiwiYXJncyIsInZhbGlkYXRlQXJnQ291bnQiLCJmbk5hbWUiLCJtaW5Db3VudCIsIm1heENvdW50IiwiYXJnQ291bnQiLCJhcmdFcnJvciIsImVycm9yUHJlZml4IiwiYXJnTmFtZSIsInZhbGlkYXRlTmFtZXNwYWNlIiwibmFtZXNwYWNlIiwib3B0aW9uYWwiLCJ2YWxpZGF0ZUNhbGxiYWNrIiwiYXJndW1lbnROYW1lIiwidmFsaWRhdGVDb250ZXh0T2JqZWN0IiwiY29udGV4dCIsInN0cmluZ1RvQnl0ZUFycmF5IiwiaGlnaCIsInN0cmluZ0xlbmd0aCIsInV1aWR2NCIsInIiLCJyYW5kb20iLCJERUZBVUxUX0lOVEVSVkFMX01JTExJUyIsIkRFRkFVTFRfQkFDS09GRl9GQUNUT1IiLCJNQVhfVkFMVUVfTUlMTElTIiwiUkFORE9NX0ZBQ1RPUiIsImNhbGN1bGF0ZUJhY2tvZmZNaWxsaXMiLCJiYWNrb2ZmQ291bnQiLCJpbnRlcnZhbE1pbGxpcyIsImJhY2tvZmZGYWN0b3IiLCJjdXJyQmFzZVZhbHVlIiwicG93IiwicmFuZG9tV2FpdCIsInJvdW5kIiwibWluIiwib3JkaW5hbCIsIk51bWJlciIsImlzRmluaXRlIiwiYWJzIiwiY2VudCIsImRlYyIsImluZGljYXRvciIsImdldE1vZHVsYXJJbnN0YW5jZSIsIl9kZWxlZ2F0ZSIsIkJhc2VGaXJlYmFzZUludGVncmF0aW9uIiwiZmlyZWJhc2VBcHAiLCJhbmFseXRpY3MiLCJpbml0aWFsaXplRmlyZWJhc2UiLCJjdXN0b21FdmVudHMiLCJldmVudE5hbWUiLCJldmVudCIsImxvZ0V2ZW50Iiwib29fdHgiLCJzZXNzaW9uRW5kIiwib25MaW5lIiwiaW5pdGlhbGl6ZUFwcCIsImZpcmViYXNlQ29uZmlnIiwiZ2V0QW5hbHl0aWNzIiwib29fY20iLCJldmFsIiwidiIsImNvbnNvbGVFcnJvciIsImFwaUtleSIsImF1dGhEb21haW4iLCJkYXRhYmFzZVVSTCIsInN0b3JhZ2VCdWNrZXQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsImFwcElkIiwibWVhc3VyZW1lbnRJZCIsIkZpcmViYXNlSW50ZWdyYXRpb24iLCJzdGF0aWMiLCJnZXRJbnN0YW5jZSIsImluc3RhbmNlIiwic2VuZFNlc3Npb25TdGFydEV2ZW50Iiwic2VuZFNlc3Npb25FbmRFdmVudCIsInNlbmRTZWxlY3RlZExldmVsRXZlbnQiLCJzZW5kVGFwcGVkU3RhcnRFdmVudCIsInNlbmRQdXp6bGVDb21wbGV0ZWRFdmVudCIsInNlbmRMZXZlbENvbXBsZXRlZEV2ZW50Iiwic2VuZFVzZXJDbGlja2VkT25QbGF5RXZlbnQiLCJjbGljayIsInNlbmREb3dubG9hZENvbXBsZXRlZEV2ZW50IiwiTE9BRFBVWlpMRSIsIlNUT05FRFJPUCIsIk1PVVNFTU9WRSIsIk1PVVNFRE9XTiIsIk1PVVNFVVAiLCJUT1VDSFNUQVJUIiwiVE9VQ0hNT1ZFIiwiVE9VQ0hFTkQiLCJDTElDSyIsIlZJU0lCSUxJVFlfQ0hBTkdFIiwidXJsUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwibG9jYXRpb24iLCJzZWFyY2giLCJwc2V1ZG9JZCIsImdldCIsImxhbmciLCJmb250IiwiVXRpbHMiLCJnZXRMYW5ndWFnZVNwZWNpZmljRm9udCIsIkRlYnVnZ2VyIiwiRGV2ZWxvcG1lbnRMaW5rIiwiaHJlZiIsIkRldmVsb3BtZW50U2VydmVyIiwiRGVidWdNb2RlIiwiU3RvbmVDb25maWciLCJ4IiwieSIsIm9yaWd4Iiwib3JpZ3kiLCJ0ZXh0IiwiaW1nIiwiaW1hZ2VTaXplIiwidGV4dEZvbnRTaXplIiwiY2FudmFzV2lkdGgiLCJjYW52YXNIZWlnaHQiLCJpbWFnZUNlbnRlck9mZnNldFgiLCJpbWFnZUNlbnRlck9mZnNldFkiLCJ0dXRvcmlhbEluc3RhbmNlIiwidGltZXJUaWNraW5nSW5zdGFuY2UiLCJmcmFtZSIsInN0b25lTGV0dGVyIiwieFBvcyIsInlQb3MiLCJjYWxjdWxhdGVJbWFnZUFuZEZvbnRTaXplIiwibWVhc3VyZVRleHQiLCJ3aWR0aCIsImdldEVhc2UiLCJjdXJyZW50UHJvZ3Jlc3MiLCJzdGFydCIsImRpc3RhbmNlIiwic3RlcHMiLCJjb3MiLCJQSSIsImdldFgiLCJnZXRZIiwiYWRqdXN0U2l6ZSIsInNob3VsZFJlc2l6ZSIsIm51bSIsImRyYXciLCJkZWx0YVRpbWUiLCJmaWxsU3R5bGUiLCJzaGFkb3dDb2xvciIsInNoYWRvd0JsdXIiLCJzaGFkb3dPZmZzZXRYIiwic2hhZG93T2Zmc2V0WSIsImRyYXdJbWFnZSIsInRleHRBbGlnbiIsImZpbGxUZXh0IiwiZ2V0Q29udmVydGVkRGV2UHJvZFVSTCIsInNsaWNlIiwiVXJsU3Vic3RyaW5nIiwibGFuZ3VhZ2UiLCJsb3dlckNhc2VMYW5ndWFnZSIsInRvTG93ZXJDYXNlIiwibGFuZ3VhZ2VGb250TWFwcGluZyIsImxvZyIsIm9vX29vIiwiZ2V0UmFuZG9tTnVtYmVyIiwibWF4IiwiZ2V0RXhjbHVkZWRDb29yZGluYXRlcyIsImNhbnZhcyIsImV4Y2x1c2lvblBlcmNlbnRhZ2UiLCJleGNsdWRlWCIsImV4Y2x1ZGVZIiwiaGVpZ2h0IiwiY3JlYXRlUmlwcGxlRWZmZWN0IiwiY3R4IiwiY2VudGVyWCIsImNlbnRlclkiLCJvdXRlclJhZGl1cyIsImlubmVyUmFkaXVzIiwicmVzdGFydCIsImJlZ2luUGF0aCIsImFyYyIsInN0cm9rZVN0eWxlIiwibGluZVdpZHRoIiwic3Ryb2tlIiwiY2xvc2VQYXRoIiwibG9hZEltYWdlcyIsInNvdXJjZXMiLCJpbWFnZXMiLCJsb2FkZWRJbWFnZXMiLCJudW1JbWFnZXMiLCJzcmMiLCJJbWFnZSIsIm9ubG9hZCIsInN5bmNMb2FkaW5nSW1hZ2VzIiwibG9hZEltZ1Byb21pc2VzIiwiYXJyS2V5IiwiaW1hZ2UiLCJuZXdJbWFnZSIsImNyZWF0ZUltZyIsImFsbCIsInJlZHVjZSIsImFjY3VtdWxhdG9yIiwiY3VycmVudCIsImlzQ2xpY2tJbnNpZGVCdXR0b24iLCJ4Q2xpY2siLCJ5Q2xpY2siLCJidXR0b25YIiwiYnV0dG9uWSIsImJ1dHRvbldpZHRoIiwiYnV0dG9uSGVpZ2h0IiwiaXNDaXJjdWxhciIsInNxcnQiLCJpc0RvY3VtZW50VmlzaWJsZSIsInZpc2liaWxpdHlTdGF0ZSIsInRvZ2dsZURlYnVnTW9kZSIsInRvZ2dsZUJ0biIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImlzT24iLCJpbm5lclRleHQiLCJoaWRlRWxlbWVudCIsImlzSGlkZSIsImVsZW1lbnQiLCJyZW1vdmUiLCJhZGQiLCJjb25zb2xlTG9nIiwiQXVkaW9QbGF5ZXIiLCJhdWRpb0NvbnRleHQiLCJzb3VyY2VOb2RlIiwiYXVkaW9RdWV1ZSIsInByb21wdEF1ZGlvQnVmZmVyIiwiY2xpY2tTb3VuZEJ1ZmZlciIsIk1hcCIsImF1ZGlvU291cmNzIiwiaXNDbGlja1NvdW5kTG9hZGVkIiwiQXVkaW9Db250ZXh0TWFuYWdlciIsImdldEF1ZGlvQ29udGV4dCIsInBsYXlCdXR0b25DbGlja1NvdW5kIiwiYXVkaW9TcmMiLCJBVURJT19QQVRIX0JUTl9DTElDSyIsImxvYWRBbmREZWNvZGVBdWRpbyIsImF1ZGlvQnVmZmVycyIsInNldCIsImNyZWF0ZUJ1ZmZlclNvdXJjZSIsImJ1ZmZlciIsImNvbm5lY3QiLCJkZXN0aW5hdGlvbiIsInJlc3BvbnNlIiwiZmV0Y2giLCJhcnJheUJ1ZmZlciIsImRlY29kZUF1ZGlvRGF0YSIsInByZWxvYWRQcm9tcHRBdWRpbyIsImF1ZGlvQnVmZmVyIiwicHJlbG9hZEdhbWVBdWRpbyIsImhhcyIsInBsYXlBdWRpbyIsInBsYXlGZWVkYmFja0F1ZGlvcyIsImxvb3AiLCJmaWxlVXJsIiwicGxheUZldGNoIiwicGxheVByb21wdEF1ZGlvIiwic3RvcEZlZWRiYWNrQXVkaW8iLCJzdG9wIiwic3RvcEFsbEF1ZGlvcyIsImluZGV4Iiwib25lbmRlZCIsImhhbmRsZUF1ZGlvRW5kZWQiLCJkaXNjb25uZWN0IiwiQXVkaW9Db250ZXh0Iiwid2Via2l0QXVkaW9Db250ZXh0IiwiQmFja2dyb3VuZENvbXBvbmVudCIsImxldmVsTnVtYmVyIiwiYmFja2dyb3VuZCIsInNldHVwQmciLCJCR19HUk9VUF9JTUdTIiwibG9hZER5bmFtaWNCZ0Fzc2V0cyIsIkJBQ0tHUk9VTkRfQVNTRVRfTElTVCIsImNyZWF0ZUJhY2tncm91bmQiLCJDYW5jZWxCdXR0b24iLCJwb3NYIiwicG9zWSIsImltYWdlc0xvYWRlZCIsImNhbmNlbF9idXR0b25faW1hZ2UiLCJidG5TaXplQW5pbWF0aW9uIiwiYnRuT3JpZ2luYWxTaXplIiwib3JpZ25hbFBvcyIsIkNBTkNFTF9CVE5fSU1HIiwib25DbGljayIsImlzSW5zaWRlIiwiQ2xvc2VCdXR0b24iLCJjbG9zZV9idXR0b25faW1hZ2UiLCJNQVBfQlROX0lNRyIsIkxldmVsQmxvb25CdXR0b24iLCJsZXZlbERhdGEiLCJvcmlnaW5hbFBvc1giLCJvcmlnaW5hbFBvc1kiLCJzaXplIiwicmFkaXVzT2ZmU2V0IiwiYmxvb25TaXplIiwiYnRuU2l6ZSIsImxvY2tTaXplIiwiaXNMZXZlbFNwZWNpYWwiLCJpc1NwZWNpYWxMZXZlbCIsIlNQRUNJQUxfTEVWRUxTIiwiaXNTcGVjaWFsIiwibGV2ZWxTZWxlY3Rpb25QYWdlSW5kZXgiLCJ1bmxvY2tMZXZlbEluZGV4IiwiZ2FtZUxldmVsRGF0YSIsInRvdGFsR2FtZUxldmVscyIsImJhbGxvb25JbWciLCJkcmF3SWNvbnMiLCJhcHBseVB1bHNlRWZmZWN0IiwiR3Jvd1BoYXNlVGhyZXNob2xkIiwiYW5pbWF0aW9uUHJvZ3Jlc3MiLCJncm93UGhhc2UiLCJwcm9ncmVzcyIsInNoYWRvd1NpemUiLCJzaGFkb3dPcGFjaXR5Iiwic2NhbGVYIiwic2NhbGVZIiwicmFkaXVzIiwic2NhbGVSYWRpdXMiLCJzYXZlIiwiZmlsbCIsInJlc3RvcmUiLCJwYWdlSW5kZXgiLCJkcmF3TG9jayIsImNoZWNrU3RhcnMiLCJzdGFyQ291bnQiLCJsb2NrSW1nIiwiZHJhd1N0YXIiLCJzdGFySW1nIiwiY2FsbEJhY2siLCJOZXh0QnV0dG9uIiwibmV4dF9idXR0b25faW1hZ2UiLCJORVhUX0JUTl9JTUciLCJOb0J1dHRvbiIsIm5vX2J1dHRvbl9pbWFnZSIsIlBhdXNlQnV0dG9uIiwicGF1c2VfYnV0dG9uX2ltYWdlIiwiUEFVU0VfQlROX0lNRyIsIlBsYXlCdXR0b24iLCJtYWpWZXJzaW9uIiwibWluVmVyc2lvbiIsImZpcmViYXNlSW50ZWdyYXRpb24iLCJpbml0IiwiUExBWV9CVE5fSU1HIiwiZ2V0RGF0YSIsIm1hanZlcnNpb24iLCJtaW52ZXJzaW9uIiwibG9nVGFwcGVkU3RhcnRGaXJlYmFzZUV2ZW50IiwidGFwcGVkU3RhcnREYXRhIiwiY3JfdXNlcl9pZCIsImZ0bV9sYW5ndWFnZSIsInByb2ZpbGVfbnVtYmVyIiwidmVyc2lvbl9udW1iZXIiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsImpzb25fdmVyc2lvbl9udW1iZXIiLCJSZXRyeUJ1dHRvbiIsInJldHJ5X2J1dHRvbl9pbWFnZSIsIlJFVFJZX0JUTl9JTUciLCJZZXNCdXR0b24iLCJ5ZXNfYnV0dG9uX2ltYWdlIiwiWUVTX0JUTl9JTUciLCJGZWVkYmFja1RleHRFZmZlY3RzIiwiZmVlZGJhY2tUZXh0RWxlbWVudCIsImhpZGVUaW1lb3V0SWQiLCJpbml0aWFsaXplIiwiaXNGZWVkYmFja0VsZW1lbnRBdmFpbGFibGUiLCJ3cmFwVGV4dCIsInRleHRDb250ZW50Iiwic2V0SGlkZVRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJMZXZlbEluZGljYXRvcnMiLCJFdmVudE1hbmFnZXIiLCJhY3RpdmVJbmRpY2F0b3JzIiwic3RvbmVEcm9wQ2FsbGJhY2tIYW5kbGVyIiwiaGFuZGxlU3RvbmVEcm9wIiwibG9hZFB1enpsZUNhbGxiYWNrSGFuZGxlciIsImhhbmRsZUxvYWRQdXp6bGUiLCJsZXZlbF9pbmRpY2F0b3IiLCJMRVZFTF9JTkRJQ0FUT1IiLCJiYXJfZW1wdHkiLCJCQVJfRU1QVFkiLCJiYXJfZnVsbCIsIkJBUl9GVUxMIiwic2V0SW5kaWNhdG9ycyIsImluZGljYXRvckNvdW50IiwiYWRkRHJvcFN0b25lRXZlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZGlzcG9zZSIsInVucmVnaXN0ZXJFdmVudExpc3RlbmVyIiwiZGV0YWlsIiwiY291bnRlciIsIk1vbnN0ZXIiLCJ6aW5kZXgiLCJmcmFtZVgiLCJmcmFtZVkiLCJtYXhGcmFtZSIsImZwcyIsImNvdW50RnJhbWUiLCJmcmFtZUludGVydmFsIiwiZnJhbWVUaW1lciIsImNhbnZhc1N0YWNrIiwiY2FuYXZzRWxlbWVudCIsImdhbWUiLCJtb25zdGVyUGhhc2UiLCJjYWxsQmFja0Z1bmN0aW9uIiwiZ2V0Q29udGV4dCIsImVhdEltZyIsImlkbGVJbWciLCJzcGl0SW1nIiwiZHJhZ0ltZyIsImNoYW5nZVRvSWRsZUFuaW1hdGlvbiIsImNoYW5nZUltYWdlIiwiY2hhbmdlVG9EcmFnQW5pbWF0aW9uIiwiY2hhbmdlVG9FYXRBbmltYXRpb24iLCJjaGFuZ2VUb1NwaXRBbmltYXRpb24iLCJpc0NvcnJlY3QiLCJQYXVzZVBvcFVwIiwiY2FuY2VsQnV0dG9uIiwicmV0cnlCdXR0b24iLCJjbG9zZUJ1dHRvbiIsInBvcF91cF9pbWFnZSIsInN3aXRjaFRvTGV2ZWxTZWxlY3Rpb24iLCJyZWxvYWRTY2VuZSIsImdhbWVwbGF5RGF0YSIsImF1ZGlvUGxheWVyIiwicmV0cnlTdXJlUG9wdXAiLCJDbG9zZVN1cmVQb3B1cCIsImlzUmV0cnlCdXR0b25DbGlja2VkIiwiaXNDbG9zZUJ1dHRvbkNsaWNrZWQiLCJzZWxmSWRFbGVtZW50IiwiUE9QVVBfQkdfSU1HIiwieWVzUmV0cnlDYWxsYmFjayIsIm5vUmV0cnlDYWxsYmFjayIsIm5vQ2xvc2VDYWxsYmFjayIsInBsYXlDbGlja1NvdW5kIiwiYWRkTGlzdG5lciIsImhhbmRsZU1vdXNlQ2xpY2siLCJzZWxmRWxlbWVudCIsInByZXZlbnREZWZhdWx0IiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImNsaWVudFgiLCJsZWZ0IiwiY2xpZW50WSIsInRvcCIsInBsYXlBcmVZb3VTdXJlU291bmQiLCJmaWxsUmVjdCIsIkFVRElPX0FSRV9ZT1VfU1VSRSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJBcmVZb3VTdXJlUG9wVXAiLCJ5ZXNCdXR0b24iLCJub0J1dHRvbiIsInllc0NhbGxiYWNrIiwibm9DYWxsYmFjayIsIlByb21wdFRleHQiLCJjdXJyZW50UHJvbXB0VGV4dCIsImN1cnJlbnRQdXp6bGVEYXRhIiwicHJvbXB0X2ltYWdlIiwidGFyZ2V0U3RvbmVzIiwicmlnaHRUb0xlZnQiLCJpc1N0b25lRHJvcHBlZCIsImRyb3BwZWRTdG9uZXMiLCJ0aW1lIiwicHJvbXB0SW1hZ2VXaWR0aCIsImlzQXBwRm9yZWdyb3VuZCIsInNjYWxlIiwiaXNTY2FsaW5nVXAiLCJzY2FsZUZhY3RvciIsInByb21wdEltYWdlSGVpZ2h0IiwicHJvbXB0UGxheUJ1dHRvbiIsInByb21wdCIsInByb21wdFRleHQiLCJnZXRQcm9tcHRBdWRpb1VybCIsImhhbmRsZVZpc2liaWxpdHlDaGFuZ2UiLCJoYW5kbGVNb3VzZURvd24iLCJwbGF5U291bmQiLCJwcm9tcHRBdWRpbyIsInNldEN1cnJyZW50UHV6emxlRGF0YSIsImRyYXdSVExMYW5nIiwiZm9udFNpemUiLCJjYWxjdWxhdGVGb250Iiwic2NhbGVkV2lkdGgiLCJzY2FsZWRIZWlnaHQiLCJsZXZlbE1ldGEiLCJsZXZlbFR5cGUiLCJwcm90b1R5cGUiLCJsZXR0ZXJJbldvcmQiLCJSZWdFeHAiLCJvZmZzZXRYIiwib2Zmc2V0WSIsImRyYXdPdGhlcnMiLCJwcm9tcHRUZXh0TGV0dGVycyIsInN0YXJ0UHJvbXB0dGV4dFgiLCJjdXJyZW50V29yZFdpZHRoIiwibGV0dGVySGlnaGxpZ2h0IiwidXBkYXRlU2NhbGluZyIsInB1enpsZXMiLCJkcm9wcGVkU3RvbmVJbmRleCIsImltYWdlMVByb21pc2UiLCJsb2FkSW1hZ2UiLCJQUk9NUFRfVEVYVF9CRyIsImltYWdlMlByb21pc2UiLCJQUk9NUFRfUExBWV9CVVRUT04iLCJTdG9uZUhhbmRsZXIiLCJzdG9uZVBvcyIsInBpY2tlZFN0b25lIiwiZm9pbFN0b25lcyIsImFuc3dlciIsInB1enpsZU51bWJlciIsImNvcnJlY3RBbnN3ZXIiLCJwdXp6bGVTdGFydFRpbWUiLCJzaG93VHV0b3JpYWwiLCJHYW1lU2NvcmUiLCJnZXREYXRhZnJvbVN0b3JhZ2UiLCJjb3JyZWN0U3RvbmVBdWRpbyIsInR1dG9yaWFsIiwiY29ycmVjdFRhcmdldFN0b25lIiwic3RvbmViZyIsImZlZWRiYWNrQXVkaW9zIiwiaXNHYW1lUGF1c2VkIiwic2V0VGFyZ2V0U3RvbmUiLCJpbml0aWFsaXplU3RvbmVQb3MiLCJBdWRpbyIsIkFVRElPX1BBVEhfQ09SUkVDVF9TVE9ORSIsImNvbnZlcnRGZWVkQmFja0F1ZGlvc1RvTGlzdCIsIlR1dG9yaWFsIiwiQVNTRVRTX1BBVEhfU1RPTkVfUElOS19CRyIsImNyZWF0ZVN0b25lcyIsImdldEZvaWxTdG9uZXMiLCJ1cGRhdGVUYXJnZXRTdG9uZVBvc2l0aW9ucyIsImRyYXdXb3JkUHV6emxlTGV0dGVycyIsInNob3VsZEhpZGVTdG9uZUNoZWNrZXIiLCJncm91cGVkTGV0dGVycyIsIm9mZnNldENvb3JkaW5hdGVWYWx1ZSIsInNvcnQiLCJzZXRQdXp6bGVOdW1iZXIiLCJpc1N0b25lTGV0dGVyRHJvcENvcnJlY3QiLCJkcm9wcGVkU3RvbmUiLCJmZWVkQmFja0luZGV4IiwiaXNXb3JkIiwiaXNMZXR0ZXJEcm9wQ29ycmVjdCIsInByb2Nlc3NMZXR0ZXJEcm9wRmVlZGJhY2tBdWRpbyIsImdldENvcnJlY3RUYXJnZXRTdG9uZSIsInBsYXlDb3JyZWN0QW5zd2VyRmVlZGJhY2tTb3VuZCIsIkFVRElPX1BBVEhfRUFUUyIsIkFVRElPX1BBVEhfQ0hFRVJJTkdfRlVOQyIsIkFVRElPX1BBVEhfTU9OU1RFUl9TUElUIiwiQVVESU9fUEFUSF9NT05TVEVSX0RJU1NBUE9JTlRFRCIsInNwbGljZSIsInRvdGFsU3RvbmVzQ291bnQiLCJleHRyYVN0b25lc0NvdW50IiwicGF1c2UiLCJzZXRHYW1lUGF1c2UiLCJyYW5kb21OdW1iZXIiLCJBVURJT19QQVRIX1BPSU5UU19BREQiLCJwbGF5IiwicmVzZXRTdG9uZVBvc2l0aW9uIiwicGlja2VkU3RvbmVPYmplY3QiLCJzdG9uZSIsInN0b25lT2JqIiwieExpbWl0IiwiaGFsZldpZHRoIiwiY29tcHV0ZUN1cnNvckRpc3RhbmNlIiwic2MiLCJoYW5kbGVQaWNrU3RvbmVVcCIsImN0ciIsImhhbmRsZUhvdmVyaW5nVG9Bbm90aGVyU3RvbmUiLCJzaG91bGRHcm91cExldHRlciIsImhhbmRsZU1vdmluZ1N0b25lTGV0dGVyIiwiZHJhZ2dpbmdTdG9uZSIsInVwZGF0ZWRTdG9uZUNvb3JkaW5hdGVzIiwiVGltZXJUaWNraW5nIiwidGltZXJXaWR0aCIsInRpbWVySGVpZ2h0Iiwid2lkdGhUb0NsZWFyIiwidGltZXIiLCJpc1RpbWVyU3RhcnRlZCIsImlzVGltZXJFbmRlZCIsImlzVGltZXJSdW5uaW5nT3V0IiwidGltZXJfZnVsbCIsInBhdXNlQnV0dG9uQ2xpY2tlZCIsInN0YXJ0TXlUaW1lciIsImlzTXlUaW1lck92ZXIiLCJwbGF5TGV2ZWxFbmRBdWRpb09uY2UiLCJ0aW1lcl9lbXB0eSIsIlRJTUVSX0VNUFRZIiwicm90YXRpbmdfY2xvY2siLCJST1RBVElOR19DTE9DSyIsIlRJTUVSX0ZVTEwiLCJzdGFydFRpbWVyIiwicmVhZHlUaW1lciIsIkFVRElPX1RJTUVPVVQiLCJUcmFpbEVmZmVjdCIsInBhcnRpY2xlcyIsIm1vdXNlIiwiaXNEaWFtb25kIiwiZHJhd1RyYWlsIiwidGVtcCIsInR0bCIsImFkZFRyYWlsUGFydGljbGVzT25Nb3ZlIiwiUGFydGljbGVzIiwicmVzZXRQYXJ0aWNsZXMiLCJlbmQiLCJzdHlsZSIsInJnYiIsImh5cCIsInN0YXJYIiwic3RhclkiLCJzdGFyQW5nbGUiLCJzdGFydFBvc1giLCJkZXRlcm1pbmVWYWx1ZUJ5U2NyZWVuV2lkdGgiLCJzdGFydFBvc1kiLCJlbmRQb3NYIiwiZW5kUG9zWSIsImdldFJhbmRvbUludCIsImJnU2NyZWVuVmFsIiwic21hbGxTY3JlZW5WYWwiLCJzY3JlZW4iLCJlYXNlT3V0UXVhcnQiLCJpc0RyYXdEaWFtb25kIiwic3RhclBhcnRpY2xlIiwiY2lyY2xlUGFydGljbGUiLCJtb3ZlVG8iLCJsaW5lVG8iLCJ0dXRvcmlhbEltZyIsInRhcmdldFN0b25lUG9zaXRpb25zIiwic3RhcnR4Iiwic3RhcnR5IiwiZW5keCIsImVuZHkiLCJlbmRUdXRvcmlhbCIsInBsYXlNbnN0ckNsa1R0cmxBbmltIiwidG90YWxUaW1lIiwibW9uc3RlclN0b25lRGlmZmVyZW5jZSIsImR4IiwiZHkiLCJhYnNkeCIsImFic2R5Iiwic3RhcnRSaXBwbGUiLCJkcmF3UmlwcGxlIiwiVFVUT1JJQUxfSEFORCIsInRhcmdldFN0b25lUG9zaXRpb24iLCJhbmltYXRlSW1hZ2UiLCJpc01vYmlsZSIsInNldFR1dG9yaWFsRW5kIiwic2hvdWxkUGxheVR1dG9yaWFsIiwiZGlzeCIsImRpc3kiLCJtb25zdGVyU3RvbmVEaWZmZXJlbmNlSW5QZXJjZW50YWdlIiwiY3JlYXRlSGFuZFNjYWxlQW5pbWF0aW9uIiwicHJldmlvdXNBbHBoYSIsImdsb2JhbEFscGhhIiwic2hvdWxkQ3JlYXRlUmlwcGxlIiwic2ludXNvaWRhbEludGVycG9sYXRpb24iLCJtaW5TY2FsZSIsIm1heFNjYWxlIiwiZHVyYXRpb24iLCJhbXBsaXR1ZGUiLCJmcmVxdWVuY3kiLCJzaW4iLCJjbGlja09uTW9uc3RlclR1dG9yaWFsIiwic2hvdWxkUGxheU1vbnN0ZXJDbGlja1R1dG9yaWFsQW5pbWF0aW9uIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiYm90dG9tUG9zaXRpb24iLCJ0b3BQb3NpdGlvbiIsImN1cnJlbnRPZmZzZXRZIiwiZ2V0QWxsR2FtZUxldmVsSW5mbyIsInB1enpsZU51bWVyIiwic2V0UGxheU1vbnN0ZXJDbGlja0FuaW1hdGlvbiIsInN1bW1lciIsIkRFRkFVTFRfQkdfR1JPVVBfSU1HUyIsImRlZmF1bHRCZ0RyYXdpbmciLCJhdXR1bW4iLCJBVVRVTU5fQkdfR1JPVVBfSU1HUyIsImF1dHVtQmdEcmF3aW5nIiwid2ludGVyIiwiV0lOVEVSX0JHX0dST1VQX0lNR1MiLCJ3aW50ZXJCZ0RyYXdpbmciLCJiYWNrZ3JvdW5kSW1nIiwiZHJhd01ldGhvZCIsImFzc2V0c0xpc3QiLCJhcnIiLCJiYWNrZ3JvdW5kVHlwZSIsImJnSW1hZ2VzIiwiY2xhc3NOYW1lIiwiQVNTRVRTX1BBVEhfVE9URU0iLCJBU1NFVFNfUEFUSF9GRU5DRSIsIkFTU0VUU19QQVRIX0hJTEwiLCJBVVRVTU5fUElMTEFSXzEiLCJBVVRVTU5fRkVOQ0VfMSIsIkFVVFVNTl9ISUxMXzEiLCJXSU5URVJfUElMTEFSXzEiLCJXSU5URVJfRkVOQ0VfMSIsIldJTlRFUl9ISUxMXzEiLCJsZXZlbFNlbGVjdEJnRHJhd2luZyIsIkxFVkVMX1NFTEVDVElPTl9CQUNLR1JPVU5EIiwiZ2V0ZGVmYXVsdENsb3VkQnRuc1BvcyIsImxvYWRMZXZlbEltYWdlcyIsIk1BUF9JQ09OX0lNRyIsInNwZWNpYWxCbG9vbkltZyIsIk1BUF9JQ09OX1NQRUNJQUxfSU1HIiwiTUFQX0xPQ0tfSU1HIiwiU1RBUl9JTUciLCJjcmVhdGVMZXZlbE9iamVjdCIsIkZpcmViYXNlVXNlckNsaWNrZWQiLCJGaXJlYmFzZVVzZXJJbnN0YWxsIiwiUFdBSW5zdGFsbFN0YXR1cyIsIlVzZXJDYW5jZWxsZWQiLCJOYXRpdmVQbGF5QnV0dG9uIiwiUHJldmlvdXNQbGF5ZWRMZXZlbCIsIlN0b3JlTW9uc3RlclBoYXNlTnVtYmVyIiwiSXNDYWNoZWQiLCJNb25zdGVyQXVkaW8iLCJGZWVkYmFja0F1ZGlvIiwiSW50cm9NdXNpYyIsIlByb21wdEF1ZGlvIiwiQnV0dG9uQ2xpY2siLCJUaW1lT3ZlciIsIlN0b25lTXVzaWMiLCJQaHJhc2VBdWRpbyIsIkxldmVsRW5kQXVkaW8iLCJTdGFydFNjZW5lMSIsIkxldmVsU2VsZWN0aW9uMSIsIkdhbWVTY2VuZTEiLCJFbmRTY2VuZTEiLCJGT05UX0JBU0VfUEFUSCIsIkFVRElPX1BBVEhfT05fRFJBRyIsIkFVRElPX0lOVFJPIiwiQVVESU9fTEVWRUxfTE9TRSIsIkFVRElPX0xFVkVMX1dJTiIsIkFVRElPX1VSTF9QUkVMT0FEIiwiQVNTRVRTX1BBVEhfQkdfMDEiLCJBU1NFVFNfUEFUSF9NT05TVEVSX0lETEUiLCJERUZBVUxUX0JBQ0tHUk9VTkRfMSIsIkFVVFVNTl9CQUNLR1JPVU5EXzEiLCJBVVRVTU5fU0lHTl8xIiwiV0lOVEVSX0JBQ0tHUk9VTkRfMSIsIldJTlRFUl9TSUdOXzEiLCJXSU5fQkciLCJQSU5fU1RBUl8xIiwiUElOX1NUQVJfMiIsIlBJTl9TVEFSXzMiLCJDTE9VRF82IiwiQ0xPVURfNyIsIkNMT1VEXzgiLCJCQUNLX0JUTl9JTUciLCJHQU1FUExBWV9CR19HUk9VUF9JTUdTIiwiU0NFTkVfTkFNRV9TVEFSVCIsIlNDRU5FX05BTUVfTEVWRUxfU0VMRUNUIiwiU0NFTkVfTkFNRV9HQU1FX1BMQVkiLCJTQ0VORV9OQU1FX0xFVkVMX0VORCIsIlVSTCIsImdldEZ0bURhdGEiLCJoZWFkZXJzIiwianNvbiIsImN1c3RvbUZvbnRzIiwiZGVmYXVsdCIsImVuZ2xpc2giLCJzd2FoaWxpIiwid29sb2YiLCJ0YWppayIsIm1hcmF0aGkiLCJhbWhhcmljIiwicHVuamFiaSIsInRhbWlsIiwic2VwZWRpIiwiZ3VqYXJhdGkiLCJ0ZWx1Z3UiLCJ0c29uZ2EiLCJtYWxheSIsIm5kZWJlbGUiLCJ2ZW5kYSIsInNpc3dhdGkiLCJ0c3dhbmEiLCJ0aGFpIiwiZnVsYSIsImZhcnNpIiwiYnVybWVzZSIsImJlbmdhbGkiLCJBemVyYmFpamFuaSIsIlNlc290aG8iLCJHZW9yZ2lhbiIsIkJyYXppbGlhblBvcnR1Z3Vlc2UiLCJTb21hbGkiLCJIYXVzYSIsIklnYm8iLCJIYXRpYW5DcmVvbGUiLCJPcm9tbyIsIkx1Z2FuZGEiLCJZb3J1YmEiLCJLaG1lciIsIkphdmFuZXNlIiwiVXJkdSIsIktpbnlhcndhbmRhIiwiU2hvbmEiLCJLdXJkaXNoIiwiRnJlbmNoIiwiaXNpWGhvc2EiLCJBZnJpa2FhbnMiLCJOZXBhbGkiLCJVa3JhaW5pYW4iLCJIaW5kaSIsIlRhZ2Fsb2ciLCJWaWV0bmFtZXNlIiwiUGFzaHRvIiwiVHdpIiwiQXJhYmljIiwiRGF0YU1vZGFsIiwidGl0bGUiLCJvdGhlckF1ZGlvcyIsImxldmVscyIsIkZlZWRiYWNrVGV4dHMiLCJGZWVkYmFja0F1ZGlvcyIsInZlcnNpb24iLCJmZWVkYmFja1RleHRzIiwiT3RoZXJBdWRpb3MiLCJnZXRMZXZlbHMiLCJsZXZlbEFycmF5IiwiTGV2ZWxzIiwic2VsY3RZb3VyUGxheWVyIiwid2F0Y2hNZUdyb3ciLCJhcmVZb3VTdXJlIiwiZmFudGFzdGljIiwiZ3JlYXQiLCJhbWF6aW5nIiwiZ2V0UHV6emxlRGF0YSIsIkxldmVsTWV0YSIsIkxldmVsTnVtYmVyIiwicHV6emxlT2JqZWN0cyIsIlB1enpsZXMiLCJwdXp6bGVEYXRhIiwic2VnbWVudE51bWJlciIsInB1enpsZSIsIlNlZ21lbnROdW1iZXIiLCJQcm9tcHQiLCJnZXRUYXJnZXRTdG9uZXMiLCJmb2lsU3RvbmVBcnJheSIsImZvaWxzdG9uZXMiLCJzdG9uZXMiLCJTdG9uZVRleHQiLCJ0YXJnZXRTdG9uZUFycmF5IiwidGFyZ2V0c3RvbmVzIiwiRm9pbFN0b25lIiwic3RvbmVUZXh0IiwiVGFyZ2V0U3RvbmUiLCJwcm9tcHRGYWRlT3V0IiwibGV0dGVyR3JvdXAiLCJQcm9tcHRGYWRlb3V0IiwiTGV0dGVyR3JvdXAiLCJQcm9tcHRUeXBlIiwiTGV2ZWxUeXBlIiwic2V0R2FtZUxldmVsU2NvcmUiLCJjdXJyZW50TGV2ZWxJbmZvIiwic2NvcmUiLCJzdGFyc0dhaW5lZCIsImNhbGN1bGF0ZVN0YXJDb3VudCIsImxldmVsUGxheWVkSW5mbyIsImxldmVsTmFtZSIsInNldFRvdGFsU3RhckNvdW50IiwiYWxsR2FtZWxldmVsSW5mbyIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJjdXJyZW50bGFuZ3VhZ2UiLCJnZXRJdGVtIiwidG90YWxTdGFyQ291bnQiLCJnZXRUb3RhbFN0YXJDb3VudCIsImhhbmRsZXIiLCJoYW5kbGVTdG9uZURyb3BwZWRFdmVudCIsImhhbmRsZUxvYWRQdXp6bGVFdmVudCIsIldvcmRQdXp6bGVMb2dpYyIsImRyb3BwZWRMZXR0ZXJzIiwiZ3JvdXBlZE9iaiIsImRyb3BwZWRIaXN0b3J5IiwiaGlkZUxpc3RPYmoiLCJnZXRUYXJnZXRXb3JkIiwiZ2V0VmFsdWVzIiwiY2hlY2tJc1dvcmRQdXp6bGUiLCJ1cGRhdGVQdXp6bGVMZXZlbCIsImNsZWFyQWxsVmFsdWVzIiwiY2xlYXJQaWNrZWRVcCIsInZhbGlkYXRlU2hvdWxkSGlkZUxldHRlciIsImZvaWxTdG9uZUluZGV4IiwiaGFuZGxlQ2hlY2tIb3ZlcmVkU3RvbmUiLCJmb2lsU3RvbmVUZXh0IiwiY29tYmluZWRMZXR0ZXJzIiwidGFyZ2V0V29yZCIsImlzTGV0dGVyQWxyZWFkeUFkZGVkIiwiaXNTYW1lTGV0dGVyVW5pcXVlIiwidmFsaWRhdGVGZWRMZXR0ZXJzIiwidmFsaWRhdGVXb3JkUHV6emxlIiwic2V0R3JvdXBUb0Ryb3BwZWQiLCJzZXRQaWNrVXBMZXR0ZXIiLCJsZXR0ZXIiLCJhcnJGb2lsU3RvbmVJbmRleCIsIlNjZW5lSGFuZGxlciIsInN0YXJ0U2NlbmUiLCJsZXZlbFNlbGVjdGlvblNjZW5lIiwiZ2FtZXBsYXlTY2VuZSIsImxldmVsRW5kU2NlbmUiLCJsb2FkaW5nU2NyZWVuIiwibG9hZGluZyIsImxhc3RUaW1lIiwidGl0bGVUZXh0RWxlbWVudCIsImhhbmRsZUluc3RhbGxQcm9tcHQiLCJTdGFydFNjZW5lIiwic3dpdGNoU2NlbmVUb0xldmVsU2VsZWN0aW9uIiwiU2NlbmVOYW1lIiwiTG9hZGluZ1NjZW5lIiwicmVtb3ZlTG9hZGluZyIsInN0YXJ0QW5pbWF0aW9uTG9vcCIsImFuaW1hdGUiLCJ0aW1lU3RhbXAiLCJhbmltYXRpb24iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJkZXZUb2dnbGUiLCJjaGVja01vbnN0ZXJQaGFzZVVwZGF0aW9uIiwibW9uc3RlclBoYXNlTnVtYmVyIiwiY2xlYXJSZWN0IiwiZHJhd0xldmVsU2VsZWN0aW9uIiwic3dpdGNoU2NlbmVUb0dhbWVwbGF5IiwiZ2FtZVBsYXlEYXRhIiwiY2hhbmdlU2NlbmVSZXF1ZXN0RnJvbSIsInNob3dMb2FkaW5nIiwianNvblZlcnNpb25OdW1iZXIiLCJHYW1lcGxheVNjZW5lIiwiY3VycmVudExldmVsRGF0YSIsInN3aXRjaFNjZW5lVG9FbmRMZXZlbCIsInNlbGVjdGVkTGV2ZWxOdW1iZXIiLCJjdXJyZW50TGV2ZWxOdW1iZXIiLCJpbml0Q2xvdWQiLCJMZXZlbEVuZFNjZW5lIiwiTGV2ZWxTZWxlY3Rpb25TY3JlZW4iLCJkaXNwbGF5IiwibGFzdFNjZW5lTmFtZSIsInpJbmRleCIsIm1vbnN0ZXIiLCJ0aW1lclRpY2tpbmciLCJwYXVzZUJ1dHRvbiIsImxldmVsSW5kaWNhdG9ycyIsInN0b25lc0NvdW50IiwiZmVlZEJhY2tUZXh0cyIsImlzUHV6emxlQ29tcGxldGVkIiwic3dpdGNoU2NlbmVUb0VuZCIsInN0b25lSGFuZGxlciIsInBhdXNlUG9wdXAiLCJpc1BhdXNlQnV0dG9uQ2xpY2tlZCIsImZlZWRCYWNrVGV4dENhbmF2c0VsZW1lbnQiLCJmZWVkYmFja1RleHRFZmZlY3RzIiwiaXNHYW1lU3RhcnRlZCIsInN0YXJ0VGltZSIsInB1enpsZVRpbWUiLCJpc0Rpc3Bvc2luZyIsInJlc2V0QW5pbWF0aW9uSUQiLCJ0cmFpbFBhcnRpY2xlcyIsImNsaWNrVHJhaWxUb2dnbGUiLCJoYXNGZWQiLCJ3b3JkUHV6emxlTG9naWMiLCJ3aWxsUmVhZEZyZXF1ZW50bHkiLCJzdGFydEdhbWVUaW1lIiwic3RhcnRQdXp6bGVUaW1lIiwibG9hZFB1enpsZSIsInJlc3VtZUdhbWUiLCJwcm9maWxlTW9uc3RlciIsInByZXZpb3VzUGxheWVkTGV2ZWwiLCJhZGRFdmVudExpc3RlbmVycyIsImdldFJhbmRvbUZlZWRCYWNrVGV4dCIsInJhbmRvbUluZGV4Iiwic2VsZWN0ZWRLZXkiLCJkZWZpbmVkVmFsdWVzTWF4Q291bnQiLCJ2YWx1ZXMiLCJmaWx0ZXIiLCJoYW5kbGVNb3VzZVVwIiwibGV0dGVyUHV6emxlIiwid29yZFB1enpsZSIsInNldFBpY2tlZFVwIiwiaGFuZGxlTW91c2VNb3ZlIiwidHJhaWxYIiwidHJhaWxZIiwibmV3U3RvbmVDb29yZGluYXRlcyIsIm5ld1N0b25lTGV0dGVyIiwicGF1c2VHYW1lUGxheSIsImhhbmRsZVRvdWNoU3RhcnQiLCJ0b3VjaCIsInRvdWNoZXMiLCJoYW5kbGVUb3VjaE1vdmUiLCJoYW5kbGVUb3VjaEVuZCIsImNoYW5nZWRUb3VjaGVzIiwiaGFuZGxlU3RvbmVMZXR0ZXJEcmF3aW5nIiwicmVtb3ZlRXZlbnRMaXN0ZW5lcnMiLCJ0aW1lckVuZGVkIiwiQm9vbGVhbiIsImxvZ1B1enpsZUVuZEZpcmViYXNlRXZlbnQiLCJsb2dMZXZlbEVuZEZpcmViYXNlRXZlbnQiLCJsb2FkUHV6emxlRXZlbnQiLCJDdXN0b21FdmVudCIsImluaXROZXdQdXp6bGUiLCJjaGVja1N0b25lRHJvcHBlZCIsImhhbmRsZUNvcnJlY3RTdG9uZURyb3AiLCJoYW5kbGVTdG9uZURyb3BFbmQiLCJkcm9wcGVkU3RvbmVJbnN0YW5jZSIsInJlc2V0VG9JZGxlQW5pbWF0aW9uIiwiZGVsYXkiLCJwdXp6bGVUeXBlIiwiZGlzcGF0Y2hTdG9uZURyb3BFdmVudCIsImZlZWRiYWNrSW5kZXgiLCJkcm9wU3RvbmVFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJlbmRUaW1lIiwicHV6emxlQ29tcGxldGVkRGF0YSIsInN1Y2Nlc3Nfb3JfZmFpbHVyZSIsImxldmVsX251bWJlciIsInB1enpsZV9udW1iZXIiLCJpdGVtX3NlbGVjdGVkIiwiZm9pbHMiLCJyZXNwb25zZV90aW1lIiwibGV2ZWxDb21wbGV0ZWREYXRhIiwibnVtYmVyX29mX3N1Y2Nlc3NmdWxfcHV6emxlcyIsImNhbnZhc0VsZW1lbnQiLCJ4RG93biIsInlEb3duIiwicHJldmlvdXNQbGF5ZWRMZXZlbE51bWJlciIsImxldmVsc1NlY3Rpb25Db3VudCIsInJpZ2h0QnRuU2l6ZSIsInJpZ2h0QnRuWCIsInJpZ2h0QnRuWSIsImxlZnRCdG5TaXplIiwibGVmdEJ0blgiLCJsZWZ0QnRuWSIsImxldmVsQnV0dG9ucyIsImNyZWF0ZUxldmVsQnV0dG9ucyIsIm5leHRidG4iLCJiYWNrYnRuIiwiYWRkTGlzdGVuZXJzIiwibGV2ZWxzQXJyIiwiY29vcmRpbmF0ZXMiLCJidG5Db29yZGluYXRlcyIsInBhdXNlUGxheUF1ZGlvcyIsImdldFRvdWNoZXMiLCJldnQiLCJvcmlnaW5hbEV2ZW50IiwiZmlyc3RUb3VjaCIsInhVcCIsInlVcCIsInhEaWZmIiwieURpZmYiLCJkb3duQnV0dG9uIiwiaXNXaXRoaW5CdXR0b25BcmVhIiwiYnRuWCIsImJ0blkiLCJpc1JpZ2h0IiwiaXNMZWZ0IiwiYnRuIiwic3RhcnRHYW1lIiwiZHJhd0xldmVsIiwibGV2ZWxCdG4iLCJjdXJyZW50TGV2ZWxJbmRleCIsImN1cnJlbnRMZXZlbCIsImNoZWNrVW5sb2NrZWRMZXZlbCIsImxldmVsIiwibG9nU2VsZWN0ZWRMZXZlbEV2ZW50Iiwic2VsZWN0ZWRMZXZlbHREYXRhIiwibGV2ZWxfc2VsZWN0ZWQiLCJuZXh0QnV0dG9uIiwic3dpdGNoVG9HYW1lcGxheUNCIiwic3dpdGNoVG9MZXZlbFNlbGVjdGlvbkNCIiwidGltZW91dHMiLCJzdGFyRHJhd25Db3VudCIsImlzTGFzdExldmVsIiwic3dpdGNoVG9SZWFjdGlvbkFuaW1hdGlvbiIsInN0YXIxSW1nIiwic3RhcjJJbWciLCJzdGFyM0ltZyIsIndpbkJhY2tncm91bmRJbWciLCJzdGFyQW5pbWF0aW9uIiwiZHJhd1N0YXJzIiwiY291bnQiLCJwYXVzZUF1ZGlvcyIsInRpbWVvdXQiLCJjbG91ZFhQb3NpdGlvbiIsInN0b3BDbG91ZE1vdmluZyIsImNsb3VkTW92aW5nVGltZU91dCIsImNsb3VkNiIsImNsb3VkNyIsImNsb3VkOCIsInB3YV9zdGF0dXMiLCJmaXJlYmFzZV9hbmFseXRpY3MiLCJidXR0b25Db250ZXh0IiwicGxheUJ1dHRvbiIsInB3YV9pbnN0YWxsX3N0YXR1cyIsImNyZWF0ZVBsYXlCdXR0b24iLCJoYW5kbGVySW5zdGFsbFByb21wdCIsImdlbmVyYXRlR2FtZVRpdGxlIiwiZmJxIiwiVGVzdEdhbWVwbGF5U2NlbmUiLCJsZXZlbEluZGljYXRvciIsIm91dGNvbWUiLCJwZXJmb3JtYW5jZSIsInRpbWVPdmVyQ2FsbGJhY2siLCJwaWxsZXJJbWciLCJiZ0ltZyIsImhpbGxJbWciLCJmZW5jaEltZyIsIm1vdXNlRXZlbnQiLCJNb3VzZUV2ZW50IiwiQU5BTFlUSUNTX1RZUEUiLCJHQV9GSURfS0VZIiwiT1JJR0lOX0tFWSIsIkZFVENIX1RJTUVPVVRfTUlMTElTIiwiRFlOQU1JQ19DT05GSUdfVVJMIiwiR1RBR19VUkwiLCJsb2dnZXIiLCJMb2dnZXIiLCJFUlJPUlMiLCJFUlJPUl9GQUNUT1JZIiwiY3JlYXRlR3RhZ1RydXN0ZWRUeXBlc1NjcmlwdFVSTCIsInN0YXJ0c1dpdGgiLCJndGFnVVJMIiwid2FybiIsInByb21pc2VBbGxTZXR0bGVkIiwicHJvbWlzZXMiLCJpbnNlcnRTY3JpcHRUYWciLCJkYXRhTGF5ZXJOYW1lIiwidHJ1c3RlZFR5cGVzUG9saWN5IiwicG9saWN5TmFtZSIsInBvbGljeU9wdGlvbnMiLCJ0cnVzdGVkVHlwZXMiLCJjcmVhdGVQb2xpY3kiLCJjcmVhdGVUcnVzdGVkVHlwZXNQb2xpY3kiLCJjcmVhdGVTY3JpcHRVUkwiLCJzY3JpcHQiLCJjcmVhdGVFbGVtZW50IiwiZ3RhZ1NjcmlwdFVSTCIsImhlYWQiLCJhcHBlbmRDaGlsZCIsIndyYXBHdGFnIiwiZ3RhZ0NvcmUiLCJpbml0aWFsaXphdGlvblByb21pc2VzTWFwIiwiZHluYW1pY0NvbmZpZ1Byb21pc2VzTGlzdCIsIm1lYXN1cmVtZW50SWRUb0FwcElkIiwiY29tbWFuZCIsImd0YWdQYXJhbXMiLCJpbml0aWFsaXphdGlvblByb21pc2VzVG9XYWl0Rm9yIiwiZ2FTZW5kVG9MaXN0IiwiZHluYW1pY0NvbmZpZ1Jlc3VsdHMiLCJzZW5kVG9JZCIsImZvdW5kQ29uZmlnIiwiZmluZCIsImluaXRpYWxpemF0aW9uUHJvbWlzZSIsImd0YWdPbkV2ZW50IiwiY29ycmVzcG9uZGluZ0FwcElkIiwiZ3RhZ09uQ29uZmlnIiwiZmllbGROYW1lIiwiY3VzdG9tUGFyYW1zIiwiTE9OR19SRVRSWV9GQUNUT1IiLCJkZWZhdWx0UmV0cnlEYXRhIiwidGhyb3R0bGVNZXRhZGF0YSIsImdldFRocm90dGxlTWV0YWRhdGEiLCJzZXRUaHJvdHRsZU1ldGFkYXRhIiwibWV0YWRhdGEiLCJkZWxldGVUaHJvdHRsZU1ldGFkYXRhIiwiZ2V0SGVhZGVycyIsIkhlYWRlcnMiLCJBY2NlcHQiLCJmZXRjaER5bmFtaWNDb25maWdXaXRoUmV0cnkiLCJhcHAiLCJyZXRyeURhdGEiLCJ0aW1lb3V0TWlsbGlzIiwib3B0aW9ucyIsInRocm90dGxlRW5kVGltZU1pbGxpcyIsInNpZ25hbCIsIkFuYWx5dGljc0Fib3J0U2lnbmFsIiwiYWJvcnQiLCJhdHRlbXB0RmV0Y2hEeW5hbWljQ29uZmlnV2l0aFJldHJ5IiwiYXBwRmllbGRzIiwiYmFja29mZk1pbGxpcyIsInNldEFib3J0YWJsZVRpbWVvdXQiLCJhcHBVcmwiLCJzdGF0dXMiLCJlcnJvck1lc3NhZ2UiLCJqc29uUmVzcG9uc2UiLCJfaWdub3JlZCIsImh0dHBTdGF0dXMiLCJyZXNwb25zZU1lc3NhZ2UiLCJmZXRjaER5bmFtaWNDb25maWciLCJpc1JldHJpYWJsZUVycm9yIiwiZGVidWciLCJsaXN0ZW5lcnMiLCJsaXN0ZW5lciIsImRlZmF1bHRFdmVudFBhcmFtZXRlcnNGb3JJbml0IiwiZGVmYXVsdENvbnNlbnRTZXR0aW5nc0ZvckluaXQiLCJfc2V0Q29uc2VudERlZmF1bHRGb3JJbml0IiwiY29uc2VudFNldHRpbmdzIiwiX3NldERlZmF1bHRFdmVudFBhcmFtZXRlcnNGb3JJbml0IiwiX2luaXRpYWxpemVBbmFseXRpY3MiLCJpbnN0YWxsYXRpb25zIiwiZHluYW1pY0NvbmZpZ1Byb21pc2UiLCJmaWRQcm9taXNlIiwiZXJyb3JJbmZvIiwidmFsaWRhdGVJbmRleGVkREIiLCJlbnZJc1ZhbGlkIiwiZ2V0SWQiLCJkeW5hbWljQ29uZmlnIiwiZmlkIiwic2NyaXB0VGFncyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwidGFnIiwiZmluZEd0YWdTY3JpcHRPblBhZ2UiLCJjb25maWdQcm9wZXJ0aWVzIiwiQW5hbHl0aWNzU2VydmljZSIsIl9kZWxldGUiLCJndGFnQ29yZUZ1bmN0aW9uIiwid3JhcHBlZEd0YWdGdW5jdGlvbiIsImd0YWdOYW1lIiwiZ2xvYmFsSW5pdERvbmUiLCJzZXR0aW5ncyIsImZhY3RvcnkiLCJtaXNtYXRjaGVkRW52TWVzc2FnZXMiLCJkZXRhaWxzIiwid2Fybk9uQnJvd3NlckNvbnRleHRNaXNtYXRjaCIsImRhdGFMYXllciIsImdldE9yQ3JlYXRlRGF0YUxheWVyIiwid3JhcHBlZEd0YWciLCJndGFnRnVuY3Rpb25OYW1lIiwiX2FyZ3MiLCJ3cmFwT3JDcmVhdGVHdGFnIiwiZ2V0QXBwIiwiYW5hbHl0aWNzUHJvdmlkZXIiLCJfZ2V0UHJvdmlkZXIiLCJpc0luaXRpYWxpemVkIiwiZ2V0SW1tZWRpYXRlIiwiaW5pdGlhbGl6ZUFuYWx5dGljcyIsImV4aXN0aW5nSW5zdGFuY2UiLCJnZXRPcHRpb25zIiwiaXNTdXBwb3J0ZWQiLCJzZXRDdXJyZW50U2NyZWVuIiwiYW5hbHl0aWNzSW5zdGFuY2UiLCJzY3JlZW5OYW1lIiwiZ3RhZ0Z1bmN0aW9uIiwiZ2xvYmFsIiwic2V0Q3VycmVudFNjcmVlbiQxIiwiZ2V0R29vZ2xlQW5hbHl0aWNzQ2xpZW50SWQiLCJjbGllbnRJZCIsImludGVybmFsR2V0R29vZ2xlQW5hbHl0aWNzQ2xpZW50SWQiLCJzZXRVc2VySWQiLCJzZXRVc2VySWQkMSIsInNldFVzZXJQcm9wZXJ0aWVzIiwicHJvcGVydGllcyIsImZsYXRQcm9wZXJ0aWVzIiwic2V0VXNlclByb3BlcnRpZXMkMSIsInNldEFuYWx5dGljc0NvbGxlY3Rpb25FbmFibGVkIiwiZW5hYmxlZCIsInNldEFuYWx5dGljc0NvbGxlY3Rpb25FbmFibGVkJDEiLCJzZXREZWZhdWx0RXZlbnRQYXJhbWV0ZXJzIiwiZXZlbnRQYXJhbXMiLCJsb2dFdmVudCQxIiwic2V0Q29uc2VudCIsIl9yZWdpc3RlckNvbXBvbmVudCIsIkNvbXBvbmVudCIsImNvbnRhaW5lciIsImFuYWx5dGljc09wdGlvbnMiLCJnZXRQcm92aWRlciIsInJlYXNvbiIsInJlZ2lzdGVyVmVyc2lvbiIsIlBsYXRmb3JtTG9nZ2VyU2VydmljZUltcGwiLCJnZXRQbGF0Zm9ybUluZm9TdHJpbmciLCJnZXRQcm92aWRlcnMiLCJwcm92aWRlciIsImNvbXBvbmVudCIsImdldENvbXBvbmVudCIsImlzVmVyc2lvblNlcnZpY2VQcm92aWRlciIsImxpYnJhcnkiLCJsb2dTdHJpbmciLCJuYW1lJG8iLCJ2ZXJzaW9uJDEiLCJuYW1lJG4iLCJuYW1lJG0iLCJuYW1lJGwiLCJuYW1lJGsiLCJuYW1lJGoiLCJuYW1lJGkiLCJuYW1lJGgiLCJuYW1lJGciLCJuYW1lJGYiLCJuYW1lJGUiLCJuYW1lJGQiLCJuYW1lJGMiLCJuYW1lJGIiLCJuYW1lJGEiLCJuYW1lJDkiLCJuYW1lJDgiLCJuYW1lJDciLCJuYW1lJDYiLCJuYW1lJDUiLCJuYW1lJDQiLCJuYW1lJDMiLCJuYW1lJDIiLCJuYW1lJDEiLCJERUZBVUxUX0VOVFJZX05BTUUiLCJQTEFURk9STV9MT0dfU1RSSU5HIiwiX2FwcHMiLCJfY29tcG9uZW50cyIsIl9hZGRDb21wb25lbnQiLCJhZGRDb21wb25lbnQiLCJfYWRkT3JPdmVyd3JpdGVDb21wb25lbnQiLCJhZGRPck92ZXJ3cml0ZUNvbXBvbmVudCIsImNvbXBvbmVudE5hbWUiLCJoZWFydGJlYXRDb250cm9sbGVyIiwidHJpZ2dlckhlYXJ0YmVhdCIsIl9yZW1vdmVTZXJ2aWNlSW5zdGFuY2UiLCJpbnN0YW5jZUlkZW50aWZpZXIiLCJjbGVhckluc3RhbmNlIiwiX2NsZWFyQ29tcG9uZW50cyIsImNsZWFyIiwiRmlyZWJhc2VBcHBJbXBsIiwiX2lzRGVsZXRlZCIsIl9vcHRpb25zIiwiX2NvbmZpZyIsIl9uYW1lIiwiX2F1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZCIsImF1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZCIsIl9jb250YWluZXIiLCJjaGVja0Rlc3Ryb3llZCIsInZhbCIsImlzRGVsZXRlZCIsImFwcE5hbWUiLCJyYXdDb25maWciLCJleGlzdGluZ0FwcCIsIkNvbXBvbmVudENvbnRhaW5lciIsIm5ld0FwcCIsImdldEFwcHMiLCJmcm9tIiwiZGVsZXRlQXBwIiwiZGVsZXRlIiwibGlicmFyeUtleU9yTmFtZSIsInZhcmlhbnQiLCJsaWJyYXJ5TWlzbWF0Y2giLCJ2ZXJzaW9uTWlzbWF0Y2giLCJ3YXJuaW5nIiwib25Mb2ciLCJsb2dDYWxsYmFjayIsInNldFVzZXJMb2dIYW5kbGVyIiwic2V0TG9nTGV2ZWwiLCJsb2dMZXZlbCIsIkRCX05BTUUiLCJEQl9WRVJTSU9OIiwiU1RPUkVfTkFNRSIsImRiUHJvbWlzZSIsImdldERiUHJvbWlzZSIsIm9wZW5EQiIsInVwZ3JhZGUiLCJkYiIsIm9sZFZlcnNpb24iLCJjcmVhdGVPYmplY3RTdG9yZSIsIm9yaWdpbmFsRXJyb3JNZXNzYWdlIiwid3JpdGVIZWFydGJlYXRzVG9JbmRleGVkREIiLCJoZWFydGJlYXRPYmplY3QiLCJ0eCIsInRyYW5zYWN0aW9uIiwib2JqZWN0U3RvcmUiLCJwdXQiLCJjb21wdXRlS2V5IiwiZG9uZSIsImlkYkdldEVycm9yIiwiSGVhcnRiZWF0U2VydmljZUltcGwiLCJfaGVhcnRiZWF0c0NhY2hlIiwiX3N0b3JhZ2UiLCJIZWFydGJlYXRTdG9yYWdlSW1wbCIsIl9oZWFydGJlYXRzQ2FjaGVQcm9taXNlIiwicmVhZCIsImFnZW50IiwiZGF0ZSIsImdldFVUQ0RhdGVTdHJpbmciLCJsYXN0U2VudEhlYXJ0YmVhdERhdGUiLCJoZWFydGJlYXRzIiwic29tZSIsInNpbmdsZURhdGVIZWFydGJlYXQiLCJoYlRpbWVzdGFtcCIsInZhbHVlT2YiLCJvdmVyd3JpdGUiLCJnZXRIZWFydGJlYXRzSGVhZGVyIiwiaGVhcnRiZWF0c1RvU2VuZCIsInVuc2VudEVudHJpZXMiLCJoZWFydGJlYXRzQ2FjaGUiLCJtYXhTaXplIiwiaGVhcnRiZWF0RW50cnkiLCJoYiIsImRhdGVzIiwiY291bnRCeXRlcyIsInBvcCIsImV4dHJhY3RIZWFydGJlYXRzRm9ySGVhZGVyIiwiaGVhZGVyU3RyaW5nIiwidG9JU09TdHJpbmciLCJfY2FuVXNlSW5kZXhlZERCUHJvbWlzZSIsInJ1bkluZGV4ZWREQkVudmlyb25tZW50Q2hlY2siLCJyZWFkSGVhcnRiZWF0c0Zyb21JbmRleGVkREIiLCJoZWFydGJlYXRzT2JqZWN0IiwiZXhpc3RpbmdIZWFydGJlYXRzT2JqZWN0IiwiaW5zdGFuY2VGYWN0b3J5IiwibXVsdGlwbGVJbnN0YW5jZXMiLCJzZXJ2aWNlUHJvcHMiLCJpbnN0YW50aWF0aW9uTW9kZSIsIm9uSW5zdGFuY2VDcmVhdGVkIiwic2V0SW5zdGFudGlhdGlvbk1vZGUiLCJtb2RlIiwic2V0TXVsdGlwbGVJbnN0YW5jZXMiLCJzZXRTZXJ2aWNlUHJvcHMiLCJwcm9wcyIsInNldEluc3RhbmNlQ3JlYXRlZENhbGxiYWNrIiwiUHJvdmlkZXIiLCJpbnN0YW5jZXMiLCJpbnN0YW5jZXNEZWZlcnJlZCIsImluc3RhbmNlc09wdGlvbnMiLCJvbkluaXRDYWxsYmFja3MiLCJpZGVudGlmaWVyIiwibm9ybWFsaXplZElkZW50aWZpZXIiLCJub3JtYWxpemVJbnN0YW5jZUlkZW50aWZpZXIiLCJkZWZlcnJlZCIsInNob3VsZEF1dG9Jbml0aWFsaXplIiwiZ2V0T3JJbml0aWFsaXplU2VydmljZSIsInNldENvbXBvbmVudCIsImlzQ29tcG9uZW50RWFnZXIiLCJpbnN0YW5jZURlZmVycmVkIiwic2VydmljZXMiLCJJTlRFUk5BTCIsImlzQ29tcG9uZW50U2V0Iiwib3B0cyIsIm9uSW5pdCIsImV4aXN0aW5nQ2FsbGJhY2tzIiwiU2V0IiwiaW52b2tlT25Jbml0Q2FsbGJhY2tzIiwiY2FsbGJhY2tzIiwicHJvdmlkZXJzIiwiUEVORElOR19USU1FT1VUX01TIiwiUEFDS0FHRV9WRVJTSU9OIiwiSU5URVJOQUxfQVVUSF9WRVJTSU9OIiwiSU5TVEFMTEFUSU9OU19BUElfVVJMIiwiVE9LRU5fRVhQSVJBVElPTl9CVUZGRVIiLCJFUlJPUl9ERVNDUklQVElPTl9NQVAiLCJpc1NlcnZlckVycm9yIiwiZ2V0SW5zdGFsbGF0aW9uc0VuZHBvaW50IiwiZXh0cmFjdEF1dGhUb2tlbkluZm9Gcm9tUmVzcG9uc2UiLCJyZXF1ZXN0U3RhdHVzIiwiZXhwaXJlc0luIiwicmVzcG9uc2VFeHBpcmVzSW4iLCJjcmVhdGlvblRpbWUiLCJnZXRFcnJvckZyb21SZXNwb25zZSIsInJlcXVlc3ROYW1lIiwiZXJyb3JEYXRhIiwic2VydmVyQ29kZSIsInNlcnZlck1lc3NhZ2UiLCJzZXJ2ZXJTdGF0dXMiLCJnZXRIZWFkZXJzV2l0aEF1dGgiLCJhcHBDb25maWciLCJyZWZyZXNoVG9rZW4iLCJhcHBlbmQiLCJnZXRBdXRob3JpemF0aW9uSGVhZGVyIiwicmV0cnlJZlNlcnZlckVycm9yIiwic2xlZXAiLCJtcyIsIlZBTElEX0ZJRF9QQVRURVJOIiwiSU5WQUxJRF9GSUQiLCJnZW5lcmF0ZUZpZCIsImZpZEJ5dGVBcnJheSIsIlVpbnQ4QXJyYXkiLCJjcnlwdG8iLCJtc0NyeXB0byIsImdldFJhbmRvbVZhbHVlcyIsImI2NFN0cmluZyIsImFycmF5Iiwic3Vic3RyIiwiZW5jb2RlIiwiZ2V0S2V5IiwiZmlkQ2hhbmdlQ2FsbGJhY2tzIiwiZmlkQ2hhbmdlZCIsImNhbGxGaWRDaGFuZ2VDYWxsYmFja3MiLCJjaGFubmVsIiwiZ2V0QnJvYWRjYXN0Q2hhbm5lbCIsInBvc3RNZXNzYWdlIiwiY2xvc2VCcm9hZGNhc3RDaGFubmVsIiwiYnJvYWRjYXN0RmlkQ2hhbmdlIiwiYnJvYWRjYXN0Q2hhbm5lbCIsIkJyb2FkY2FzdENoYW5uZWwiLCJvbm1lc3NhZ2UiLCJEQVRBQkFTRV9OQU1FIiwiREFUQUJBU0VfVkVSU0lPTiIsIk9CSkVDVF9TVE9SRV9OQU1FIiwib2xkVmFsdWUiLCJ1cGRhdGVGbiIsInN0b3JlIiwibmV3VmFsdWUiLCJnZXRJbnN0YWxsYXRpb25FbnRyeSIsInJlZ2lzdHJhdGlvblByb21pc2UiLCJpbnN0YWxsYXRpb25FbnRyeSIsIm9sZEVudHJ5IiwiZW50cnkiLCJyZWdpc3RyYXRpb25TdGF0dXMiLCJjbGVhclRpbWVkT3V0UmVxdWVzdCIsInVwZGF0ZU9yQ3JlYXRlSW5zdGFsbGF0aW9uRW50cnkiLCJlbnRyeVdpdGhQcm9taXNlIiwiaW5Qcm9ncmVzc0VudHJ5IiwicmVnaXN0cmF0aW9uVGltZSIsInJlZ2lzdGVyZWRJbnN0YWxsYXRpb25FbnRyeSIsImhlYXJ0YmVhdFNlcnZpY2VQcm92aWRlciIsImVuZHBvaW50IiwiaGVhcnRiZWF0U2VydmljZSIsImhlYXJ0YmVhdHNIZWFkZXIiLCJib2R5IiwiYXV0aFZlcnNpb24iLCJzZGtWZXJzaW9uIiwib2siLCJyZXNwb25zZVZhbHVlIiwiYXV0aFRva2VuIiwiY3JlYXRlSW5zdGFsbGF0aW9uUmVxdWVzdCIsInJlZ2lzdGVySW5zdGFsbGF0aW9uIiwid2FpdFVudGlsRmlkUmVnaXN0cmF0aW9uIiwidHJpZ2dlclJlZ2lzdHJhdGlvbklmTmVjZXNzYXJ5IiwidXBkYXRlSW5zdGFsbGF0aW9uUmVxdWVzdCIsImdlbmVyYXRlQXV0aFRva2VuUmVxdWVzdCIsImdldEdlbmVyYXRlQXV0aFRva2VuRW5kcG9pbnQiLCJpbnN0YWxsYXRpb24iLCJyZWZyZXNoQXV0aFRva2VuIiwiZm9yY2VSZWZyZXNoIiwidG9rZW5Qcm9taXNlIiwiaXNFbnRyeVJlZ2lzdGVyZWQiLCJvbGRBdXRoVG9rZW4iLCJpc0F1dGhUb2tlbkV4cGlyZWQiLCJpc0F1dGhUb2tlblZhbGlkIiwidXBkYXRlQXV0aFRva2VuUmVxdWVzdCIsIndhaXRVbnRpbEF1dGhUb2tlblJlcXVlc3QiLCJpblByb2dyZXNzQXV0aFRva2VuIiwicmVxdWVzdFRpbWUiLCJtYWtlQXV0aFRva2VuUmVxdWVzdEluUHJvZ3Jlc3NFbnRyeSIsInVwZGF0ZWRJbnN0YWxsYXRpb25FbnRyeSIsImZldGNoQXV0aFRva2VuRnJvbVNlcnZlciIsImluc3RhbGxhdGlvbnNJbXBsIiwiZ2V0VG9rZW4iLCJjb21wbGV0ZUluc3RhbGxhdGlvblJlZ2lzdHJhdGlvbiIsImRlbGV0ZUluc3RhbGxhdGlvblJlcXVlc3QiLCJnZXREZWxldGVFbmRwb2ludCIsImRlbGV0ZUluc3RhbGxhdGlvbnMiLCJvbklkQ2hhbmdlIiwiY2FsbGJhY2tTZXQiLCJhZGRDYWxsYmFjayIsInJlbW92ZUNhbGxiYWNrIiwiZ2V0SW5zdGFsbGF0aW9ucyIsImdldE1pc3NpbmdWYWx1ZUVycm9yIiwidmFsdWVOYW1lIiwiSU5TVEFMTEFUSU9OU19OQU1FIiwicHVibGljRmFjdG9yeSIsImNvbmZpZ0tleXMiLCJrZXlOYW1lIiwiZXh0cmFjdEFwcENvbmZpZyIsImludGVybmFsRmFjdG9yeSIsImJsb2NrZWQiLCJibG9ja2luZyIsInRlcm1pbmF0ZWQiLCJvcGVuUHJvbWlzZSIsInciLCJuZXdWZXJzaW9uIiwiZGVsZXRlREIiLCJyZWFkTWV0aG9kcyIsIndyaXRlTWV0aG9kcyIsImNhY2hlZE1ldGhvZHMiLCJnZXRNZXRob2QiLCJJREJEYXRhYmFzZSIsInRhcmdldEZ1bmNOYW1lIiwidXNlSW5kZXgiLCJpc1dyaXRlIiwiSURCSW5kZXgiLCJJREJPYmplY3RTdG9yZSIsInN0b3JlTmFtZSIsInNoaWZ0Iiwib2xkVHJhcHMiLCJyZWNlaXZlciIsImluc3RhbmNlT2ZBbnkiLCJvYmplY3QiLCJjb25zdHJ1Y3RvcnMiLCJpZGJQcm94eWFibGVUeXBlcyIsImN1cnNvckFkdmFuY2VNZXRob2RzIiwiY3Vyc29yUmVxdWVzdE1hcCIsIldlYWtNYXAiLCJ0cmFuc2FjdGlvbkRvbmVNYXAiLCJ0cmFuc2FjdGlvblN0b3JlTmFtZXNNYXAiLCJ0cmFuc2Zvcm1DYWNoZSIsInJldmVyc2VUcmFuc2Zvcm1DYWNoZSIsImlkYlByb3h5VHJhcHMiLCJJREJUcmFuc2FjdGlvbiIsIm9iamVjdFN0b3JlTmFtZXMiLCJ3cmFwIiwicmVwbGFjZVRyYXBzIiwid3JhcEZ1bmN0aW9uIiwiZnVuYyIsIklEQkN1cnNvciIsImFkdmFuY2UiLCJjb250aW51ZSIsImNvbnRpbnVlUHJpbWFyeUtleSIsImFwcGx5IiwidW53cmFwIiwic3RvcmVOYW1lcyIsInRyYW5zZm9ybUNhY2hhYmxlVmFsdWUiLCJ1bmxpc3RlbiIsIkRPTUV4Y2VwdGlvbiIsImNhY2hlRG9uZVByb21pc2VGb3JUcmFuc2FjdGlvbiIsIlByb3h5IiwiSURCUmVxdWVzdCIsInN1Y2Nlc3MiLCJwcm9taXNpZnlSZXF1ZXN0IiwiTG9nTGV2ZWwiLCJsZXZlbFN0cmluZ1RvRW51bSIsIkRFQlVHIiwiVkVSQk9TRSIsIklORk8iLCJXQVJOIiwiRVJST1IiLCJTSUxFTlQiLCJkZWZhdWx0TG9nTGV2ZWwiLCJDb25zb2xlTWV0aG9kIiwiZGVmYXVsdExvZ0hhbmRsZXIiLCJsb2dUeXBlIiwiX2xvZ0xldmVsIiwiX2xvZ0hhbmRsZXIiLCJfdXNlckxvZ0hhbmRsZXIiLCJUeXBlRXJyb3IiLCJsb2dIYW5kbGVyIiwidXNlckxvZ0hhbmRsZXIiLCJpbnN0IiwiY3VzdG9tTG9nTGV2ZWwiLCJhcmciLCJpZ25vcmVkIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MSIsInBvcnQyIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiZGVmaW5lUHJvcGVydHkiLCJSZWZlcmVuY2VFcnJvciIsIm8iLCJzIiwiaCIsImwiLCJtIiwiX19wcm90b19fIiwicmVnaXN0ZXIiLCJpbW1lZGlhdGUiLCJzZXJ2aWNlV29ya2VyIiwiY29udHJvbGxlciIsIlAiLCJSIiwiQiIsIk8iLCJvbmNlIiwid2FpdGluZyIsInNjcmlwdFVSTCIsInN3Iiwid2FzV2FpdGluZ0JlZm9yZVJlZ2lzdGVyIiwiQyIsInJlYWR5U3RhdGUiLCJnZXRTVyIsIm1lc3NhZ2VTVyIsIkwiLCJtZXRhIiwiaW5zdGFsbGluZyIsInN0YXRlIiwiaXNVcGRhdGUiLCJEIiwiVCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZGVmaW5pdGlvbiIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmVyc2lvbkluZm9FbGVtZW50IiwiaXNfY2FjaGVkIiwicHJvZ3Jlc3NCYXIiLCJwcm9ncmVzc0JhckNvbnRhaW5lciIsInNjZW5lSGFuZGxlciIsImxvYWRpbmdFbGVtZW50IiwiZGF0YU1vZGFsIiwic3RhcnRTZXNzaW9uVGltZSIsImZlZWRCYWNrVGV4dEVsZW1lbnQiLCJpbml0aWFsaXplQ2FjaGVkRGF0YSIsImhhbmRsZVNlcnZpY2VXb3JrZXJNZXNzYWdlIiwiaGFuZGxlQmVmb3JlVW5sb2FkIiwiaGFuZGxlUmVzaXplIiwibG9hZEFuZENhY2hlRm9udCIsImxvYWRUaXRsZUZlZWRiYWNrQ3VzdG9tRm9udCIsInByZWxvYWRHYW1lQXVkaW9zIiwiaGFuZGxlTG9hZGluZ1NjcmVlbiIsInNldHVwQ2FudmFzIiwiY3JlYXRlRGF0YU1vZGFsIiwiZ2xvYmFsSW5pdGlhbGl6YXRpb24iLCJsb2dTZXNzaW9uU3RhcnRGaXJlYmFzZUV2ZW50IiwicGxheWVkSW5mbyIsIm5leHRQbGF5YWJsZUxldmVsIiwic3RvcmFnZUtleSIsImhhbmRsZUNhY2hlZFNjZW5hcmlvIiwicmVnaXN0ZXJXb3JrYm94IiwiY3VzdG9tVGl0bGVGZWVkYmFja0ZvbnQiLCJmb250RmFtaWx5IiwibGFzdFNlc3Npb25FbmRUaW1lIiwicGFyc2VkVGltZXN0YW1wIiwiaXNOYU4iLCJyb3VuZGVkRGF5c1NpbmNlTGFzdCIsInBhcnNlRmxvYXQiLCJ0b0ZpeGVkIiwic2Vzc2lvblN0YXJ0RGF0YSIsImRheXNfc2luY2VfbGFzdCIsImxvZ1Nlc3Npb25FbmRGaXJlYmFzZUV2ZW50Iiwic2Vzc2lvbkVuZERhdGEiLCJzdG9yZWREYXRhIiwiZm9udE5hbWUiLCJmb250UGF0aCIsImNhY2hlIiwiY2FjaGVzIiwiZm9udFJlc3BvbnNlIiwiZm9udEJsb2IiLCJibG9iIiwiUmVzcG9uc2UiLCJGb250RmFjZSIsImxvYWQiLCJmb250cyIsIndiIiwiV29ya2JveCIsInJlYWR5IiwibmV3Q29udGVudEZpbGVEYXRhIiwiYWhlYWRDb250ZW50VmVyc2lvbiIsImNhY2hlZFZlcnNpb24iLCJjYWNoZWRJdGVtIiwibmV3Q2FjaGVkSXRlbSIsInJlbW92ZUl0ZW0iLCJoYW5kbGVVcGRhdGVGb3VuZE1lc3NhZ2UiLCJpbm5lckhlaWdodCIsImlubmVyV2lkdGgiLCJSaWdodFRvTGVmdCIsImFib3V0Q29tcGFueSIsImRlc2NyaXB0aW9uVGV4dCIsInVwZGF0ZVZlcnNpb25JbmZvRWxlbWVudCIsInJlaW5pdGlhbGl6ZVNjZW5lSGFuZGxlciIsInBhc3NpbmdEYXRhVG9Db250YWluZXIiLCJBbmRyb2lkIiwiY2FjaGVkU3RhdHVzIiwic2V0Q29udGFpbmVyQXBwT3JpZW50YXRpb24iLCJjb25maXJtIiwicmVsb2FkIiwiaGFuZGxlTG9hZGluZ01lc3NhZ2UiLCJzaG93UHJvZ3Jlc3NCYXIiLCJwcm9ncmVzc1ZhbHVlIiwiaXNEb3dubG9hZENvbXBsZXRlZCIsImNhY2hlTGFuZ3VhZ2UiLCJzZW5kQ29tcGxldGlvbkV2ZW50IiwiaGlkZUxvYWRpbmdTY3JlZW4iLCJkb3dubG9hZENvbXBsZXRlZCIsImdldEpzb25WZXJzaW9uTnVtYmVyIiwibXNnIiwiYXVkaW9VcmxzIiwicHJlbG9hZFByb21pc2VzIl0sInNvdXJjZVJvb3QiOiIifQ==