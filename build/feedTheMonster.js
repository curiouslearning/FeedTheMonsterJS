/*! For license information please see feedTheMonster.js.LICENSE.txt */
(()=>{"use strict";var e={"./node_modules/@firebase/util/dist/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{CONSTANTS:()=>a,DecodeBase64StringError:()=>o,Deferred:()=>v,ErrorFactory:()=>z,FirebaseError:()=>M,MAX_VALUE_MILLIS:()=>pe,RANDOM_FACTOR:()=>ge,Sha1:()=>xe,areCookiesEnabled:()=>O,assert:()=>i,assertionError:()=>s,async:()=>se,base64:()=>n,base64Decode:()=>d,base64Encode:()=>c,base64urlEncodeWithoutPadding:()=>r,calculateBackoffMillis:()=>me,contains:()=>X,createMockUserToken:()=>w,createSubscribe:()=>ae,decode:()=>U,deepCopy:()=>l,deepEqual:()=>q,deepExtend:()=>h,errorPrefix:()=>oe,extractQuerystring:()=>te,getDefaultAppConfig:()=>g,getDefaultEmulatorHost:()=>u,getDefaultEmulatorHostnameAndPort:()=>p,getDefaults:()=>b,getExperimentalSetting:()=>m,getGlobal:()=>f,getModularInstance:()=>we,getUA:()=>S,isAdmin:()=>W,isBrowser:()=>E,isBrowserExtension:()=>T,isElectron:()=>L,isEmpty:()=>$,isIE:()=>A,isIndexedDBAvailable:()=>D,isMobileCordova:()=>y,isNode:()=>I,isNodeSdk:()=>k,isReactNative:()=>P,isSafari:()=>N,isUWP:()=>C,isValidFormat:()=>V,isValidTimestamp:()=>H,issuedAtTime:()=>G,jsonEval:()=>R,map:()=>K,ordinal:()=>ve,promiseWithTimeout:()=>J,querystring:()=>Q,querystringDecode:()=>ee,safeGet:()=>Y,stringLength:()=>he,stringToByteArray:()=>le,stringify:()=>F,uuidv4:()=>fe,validateArgCount:()=>ne,validateCallback:()=>re,validateContextObject:()=>de,validateIndexedDBOpenable:()=>B,validateNamespace:()=>ce});const a={NODE_CLIENT:!1,NODE_ADMIN:!1,SDK_VERSION:"${JSCORE_VERSION}"},i=function(e,t){if(!e)throw s(t)},s=function(e){return new Error("Firebase Database ("+a.SDK_VERSION+") INTERNAL ASSERT FAILED: "+e)},_=function(e){const t=[];let x=0;for(let a=0;a<e.length;a++){let i=e.charCodeAt(a);i<128?t[x++]=i:i<2048?(t[x++]=i>>6|192,t[x++]=63&i|128):55296==(64512&i)&&a+1<e.length&&56320==(64512&e.charCodeAt(a+1))?(i=65536+((1023&i)<<10)+(1023&e.charCodeAt(++a)),t[x++]=i>>18|240,t[x++]=i>>12&63|128,t[x++]=i>>6&63|128,t[x++]=63&i|128):(t[x++]=i>>12|224,t[x++]=i>>6&63|128,t[x++]=63&i|128)}return t},n={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},HAS_NATIVE_SUPPORT:"function"==typeof atob,encodeByteArray(e,t){if(!Array.isArray(e))throw Error("encodeByteArray takes an array as a parameter");this.init_();const x=t?this.byteToCharMapWebSafe_:this.byteToCharMap_,a=[];for(let t=0;t<e.length;t+=3){const i=e[t],s=t+1<e.length,_=s?e[t+1]:0,n=t+2<e.length,o=n?e[t+2]:0,c=i>>2,r=(3&i)<<4|_>>4;let d=(15&_)<<2|o>>6,l=63&o;n||(l=64,s||(d=64)),a.push(x[c],x[r],x[d],x[l])}return a.join("")},encodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?btoa(e):this.encodeByteArray(_(e),t)},decodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?atob(e):function(e){const t=[];let x=0,a=0;for(;x<e.length;){const i=e[x++];if(i<128)t[a++]=String.fromCharCode(i);else if(i>191&&i<224){const s=e[x++];t[a++]=String.fromCharCode((31&i)<<6|63&s)}else if(i>239&&i<365){const s=((7&i)<<18|(63&e[x++])<<12|(63&e[x++])<<6|63&e[x++])-65536;t[a++]=String.fromCharCode(55296+(s>>10)),t[a++]=String.fromCharCode(56320+(1023&s))}else{const s=e[x++],_=e[x++];t[a++]=String.fromCharCode((15&i)<<12|(63&s)<<6|63&_)}}return t.join("")}(this.decodeStringToByteArray(e,t))},decodeStringToByteArray(e,t){this.init_();const x=t?this.charToByteMapWebSafe_:this.charToByteMap_,a=[];for(let t=0;t<e.length;){const i=x[e.charAt(t++)],s=t<e.length?x[e.charAt(t)]:0;++t;const _=t<e.length?x[e.charAt(t)]:64;++t;const n=t<e.length?x[e.charAt(t)]:64;if(++t,null==i||null==s||null==_||null==n)throw new o;const c=i<<2|s>>4;if(a.push(c),64!==_){const e=s<<4&240|_>>2;if(a.push(e),64!==n){const e=_<<6&192|n;a.push(e)}}}return a},init_(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(let e=0;e<this.ENCODED_VALS.length;e++)this.byteToCharMap_[e]=this.ENCODED_VALS.charAt(e),this.charToByteMap_[this.byteToCharMap_[e]]=e,this.byteToCharMapWebSafe_[e]=this.ENCODED_VALS_WEBSAFE.charAt(e),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[e]]=e,e>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(e)]=e,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(e)]=e)}}};class o extends Error{constructor(){super(...arguments),this.name="DecodeBase64StringError"}}const c=function(e){const t=_(e);return n.encodeByteArray(t,!0)},r=function(e){return c(e).replace(/\./g,"")},d=function(e){try{return n.decodeString(e,!0)}catch(e){console.error("base64Decode failed: ",e)}return null};function l(e){return h(void 0,e)}function h(e,t){if(!(t instanceof Object))return t;switch(t.constructor){case Date:return new Date(t.getTime());case Object:void 0===e&&(e={});break;case Array:e=[];break;default:return t}for(const x in t)t.hasOwnProperty(x)&&"__proto__"!==x&&(e[x]=h(e[x],t[x]));return e}function f(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==x.g)return x.g;throw new Error("Unable to locate global object.")}const b=()=>{try{return f().__FIREBASE_DEFAULTS__||(()=>{if("undefined"==typeof process||void 0===process.env)return;const e=process.env.__FIREBASE_DEFAULTS__;return e?JSON.parse(e):void 0})()||(()=>{if("undefined"==typeof document)return;let e;try{e=document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/)}catch(e){return}const t=e&&d(e[1]);return t&&JSON.parse(t)})()}catch(e){return void console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`)}},u=e=>{var t,x;return null===(x=null===(t=b())||void 0===t?void 0:t.emulatorHosts)||void 0===x?void 0:x[e]},p=e=>{const t=u(e);if(!t)return;const x=t.lastIndexOf(":");if(x<=0||x+1===t.length)throw new Error(`Invalid host ${t} with no separate hostname and port!`);const a=parseInt(t.substring(x+1),10);return"["===t[0]?[t.substring(1,x-1),a]:[t.substring(0,x),a]},g=()=>{var e;return null===(e=b())||void 0===e?void 0:e.config},m=e=>{var t;return null===(t=b())||void 0===t?void 0:t[`_${e}`]};class v{constructor(){this.reject=()=>{},this.resolve=()=>{},this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}wrapCallback(e){return(t,x)=>{t?this.reject(t):this.resolve(x),"function"==typeof e&&(this.promise.catch((()=>{})),1===e.length?e(t):e(t,x))}}}function w(e,t){if(e.uid)throw new Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');const x=t||"demo-project",a=e.iat||0,i=e.sub||e.user_id;if(!i)throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");const s=Object.assign({iss:`https://securetoken.google.com/${x}`,aud:x,iat:a,exp:a+3600,auth_time:a,sub:i,user_id:i,firebase:{sign_in_provider:"custom",identities:{}}},e);return[r(JSON.stringify({alg:"none",type:"JWT"})),r(JSON.stringify(s)),""].join(".")}function S(){return"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:""}function y(){return"undefined"!=typeof window&&!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(S())}function I(){var e;const t=null===(e=b())||void 0===e?void 0:e.forceEnvironment;if("node"===t)return!0;if("browser"===t)return!1;try{return"[object process]"===Object.prototype.toString.call(x.g.process)}catch(e){return!1}}function E(){return"object"==typeof self&&self.self===self}function T(){const e="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof e&&void 0!==e.id}function P(){return"object"==typeof navigator&&"ReactNative"===navigator.product}function L(){return S().indexOf("Electron/")>=0}function A(){const e=S();return e.indexOf("MSIE ")>=0||e.indexOf("Trident/")>=0}function C(){return S().indexOf("MSAppHost/")>=0}function k(){return!0===a.NODE_CLIENT||!0===a.NODE_ADMIN}function N(){return!I()&&navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome")}function D(){try{return"object"==typeof indexedDB}catch(e){return!1}}function B(){return new Promise(((e,t)=>{try{let x=!0;const a="validate-browser-context-for-indexeddb-analytics-module",i=self.indexedDB.open(a);i.onsuccess=()=>{i.result.close(),x||self.indexedDB.deleteDatabase(a),e(!0)},i.onupgradeneeded=()=>{x=!1},i.onerror=()=>{var e;t((null===(e=i.error)||void 0===e?void 0:e.message)||"")}}catch(e){t(e)}}))}function O(){return!("undefined"==typeof navigator||!navigator.cookieEnabled)}class M extends Error{constructor(e,t,x){super(t),this.code=e,this.customData=x,this.name="FirebaseError",Object.setPrototypeOf(this,M.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,z.prototype.create)}}class z{constructor(e,t,x){this.service=e,this.serviceName=t,this.errors=x}create(e,...t){const x=t[0]||{},a=`${this.service}/${e}`,i=this.errors[e],s=i?function(e,t){return e.replace(j,((e,x)=>{const a=t[x];return null!=a?String(a):`<${x}?>`}))}(i,x):"Error",_=`${this.serviceName}: ${s} (${a}).`;return new M(a,_,x)}}const j=/\{\$([^}]+)}/g;function R(e){return JSON.parse(e)}function F(e){return JSON.stringify(e)}const U=function(e){let t={},x={},a={},i="";try{const s=e.split(".");t=R(d(s[0])||""),x=R(d(s[1])||""),i=s[2],a=x.d||{},delete x.d}catch(e){}return{header:t,claims:x,data:a,signature:i}},H=function(e){const t=U(e).claims,x=Math.floor((new Date).getTime()/1e3);let a=0,i=0;return"object"==typeof t&&(t.hasOwnProperty("nbf")?a=t.nbf:t.hasOwnProperty("iat")&&(a=t.iat),i=t.hasOwnProperty("exp")?t.exp:a+86400),!!x&&!!a&&!!i&&x>=a&&x<=i},G=function(e){const t=U(e).claims;return"object"==typeof t&&t.hasOwnProperty("iat")?t.iat:null},V=function(e){const t=U(e).claims;return!!t&&"object"==typeof t&&t.hasOwnProperty("iat")},W=function(e){const t=U(e).claims;return"object"==typeof t&&!0===t.admin};function X(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function Y(e,t){return Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0}function $(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}function K(e,t,x){const a={};for(const i in e)Object.prototype.hasOwnProperty.call(e,i)&&(a[i]=t.call(x,e[i],i,e));return a}function q(e,t){if(e===t)return!0;const x=Object.keys(e),a=Object.keys(t);for(const i of x){if(!a.includes(i))return!1;const x=e[i],s=t[i];if(Z(x)&&Z(s)){if(!q(x,s))return!1}else if(x!==s)return!1}for(const e of a)if(!x.includes(e))return!1;return!0}function Z(e){return null!==e&&"object"==typeof e}function J(e,t=2e3){const x=new v;return setTimeout((()=>x.reject("timeout!")),t),e.then(x.resolve,x.reject),x.promise}function Q(e){const t=[];for(const[x,a]of Object.entries(e))Array.isArray(a)?a.forEach((e=>{t.push(encodeURIComponent(x)+"="+encodeURIComponent(e))})):t.push(encodeURIComponent(x)+"="+encodeURIComponent(a));return t.length?"&"+t.join("&"):""}function ee(e){const t={};return e.replace(/^\?/,"").split("&").forEach((e=>{if(e){const[x,a]=e.split("=");t[decodeURIComponent(x)]=decodeURIComponent(a)}})),t}function te(e){const t=e.indexOf("?");if(!t)return"";const x=e.indexOf("#",t);return e.substring(t,x>0?x:void 0)}class xe{constructor(){this.chain_=[],this.buf_=[],this.W_=[],this.pad_=[],this.inbuf_=0,this.total_=0,this.blockSize=64,this.pad_[0]=128;for(let e=1;e<this.blockSize;++e)this.pad_[e]=0;this.reset()}reset(){this.chain_[0]=1732584193,this.chain_[1]=4023233417,this.chain_[2]=2562383102,this.chain_[3]=271733878,this.chain_[4]=3285377520,this.inbuf_=0,this.total_=0}compress_(e,t){t||(t=0);const x=this.W_;if("string"==typeof e)for(let a=0;a<16;a++)x[a]=e.charCodeAt(t)<<24|e.charCodeAt(t+1)<<16|e.charCodeAt(t+2)<<8|e.charCodeAt(t+3),t+=4;else for(let a=0;a<16;a++)x[a]=e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3],t+=4;for(let e=16;e<80;e++){const t=x[e-3]^x[e-8]^x[e-14]^x[e-16];x[e]=4294967295&(t<<1|t>>>31)}let a,i,s=this.chain_[0],_=this.chain_[1],n=this.chain_[2],o=this.chain_[3],c=this.chain_[4];for(let e=0;e<80;e++){e<40?e<20?(a=o^_&(n^o),i=1518500249):(a=_^n^o,i=1859775393):e<60?(a=_&n|o&(_|n),i=2400959708):(a=_^n^o,i=3395469782);const t=(s<<5|s>>>27)+a+c+i+x[e]&4294967295;c=o,o=n,n=4294967295&(_<<30|_>>>2),_=s,s=t}this.chain_[0]=this.chain_[0]+s&4294967295,this.chain_[1]=this.chain_[1]+_&4294967295,this.chain_[2]=this.chain_[2]+n&4294967295,this.chain_[3]=this.chain_[3]+o&4294967295,this.chain_[4]=this.chain_[4]+c&4294967295}update(e,t){if(null==e)return;void 0===t&&(t=e.length);const x=t-this.blockSize;let a=0;const i=this.buf_;let s=this.inbuf_;for(;a<t;){if(0===s)for(;a<=x;)this.compress_(e,a),a+=this.blockSize;if("string"==typeof e){for(;a<t;)if(i[s]=e.charCodeAt(a),++s,++a,s===this.blockSize){this.compress_(i),s=0;break}}else for(;a<t;)if(i[s]=e[a],++s,++a,s===this.blockSize){this.compress_(i),s=0;break}}this.inbuf_=s,this.total_+=t}digest(){const e=[];let t=8*this.total_;this.inbuf_<56?this.update(this.pad_,56-this.inbuf_):this.update(this.pad_,this.blockSize-(this.inbuf_-56));for(let e=this.blockSize-1;e>=56;e--)this.buf_[e]=255&t,t/=256;this.compress_(this.buf_);let x=0;for(let t=0;t<5;t++)for(let a=24;a>=0;a-=8)e[x]=this.chain_[t]>>a&255,++x;return e}}function ae(e,t){const x=new ie(e,t);return x.subscribe.bind(x)}class ie{constructor(e,t){this.observers=[],this.unsubscribes=[],this.observerCount=0,this.task=Promise.resolve(),this.finalized=!1,this.onNoObservers=t,this.task.then((()=>{e(this)})).catch((e=>{this.error(e)}))}next(e){this.forEachObserver((t=>{t.next(e)}))}error(e){this.forEachObserver((t=>{t.error(e)})),this.close(e)}complete(){this.forEachObserver((e=>{e.complete()})),this.close()}subscribe(e,t,x){let a;if(void 0===e&&void 0===t&&void 0===x)throw new Error("Missing Observer.");a=function(e,t){if("object"!=typeof e||null===e)return!1;for(const x of t)if(x in e&&"function"==typeof e[x])return!0;return!1}(e,["next","error","complete"])?e:{next:e,error:t,complete:x},void 0===a.next&&(a.next=_e),void 0===a.error&&(a.error=_e),void 0===a.complete&&(a.complete=_e);const i=this.unsubscribeOne.bind(this,this.observers.length);return this.finalized&&this.task.then((()=>{try{this.finalError?a.error(this.finalError):a.complete()}catch(e){}})),this.observers.push(a),i}unsubscribeOne(e){void 0!==this.observers&&void 0!==this.observers[e]&&(delete this.observers[e],this.observerCount-=1,0===this.observerCount&&void 0!==this.onNoObservers&&this.onNoObservers(this))}forEachObserver(e){if(!this.finalized)for(let t=0;t<this.observers.length;t++)this.sendOne(t,e)}sendOne(e,t){this.task.then((()=>{if(void 0!==this.observers&&void 0!==this.observers[e])try{t(this.observers[e])}catch(e){"undefined"!=typeof console&&console.error&&console.error(e)}}))}close(e){this.finalized||(this.finalized=!0,void 0!==e&&(this.finalError=e),this.task.then((()=>{this.observers=void 0,this.onNoObservers=void 0})))}}function se(e,t){return(...x)=>{Promise.resolve(!0).then((()=>{e(...x)})).catch((e=>{t&&t(e)}))}}function _e(){}const ne=function(e,t,x,a){let i;if(a<t?i="at least "+t:a>x&&(i=0===x?"none":"no more than "+x),i){throw new Error(e+" failed: Was called with "+a+(1===a?" argument.":" arguments.")+" Expects "+i+".")}};function oe(e,t){return`${e} failed: ${t} argument `}function ce(e,t,x){if((!x||t)&&"string"!=typeof t)throw new Error(oe(e,"namespace")+"must be a valid firebase namespace.")}function re(e,t,x,a){if((!a||x)&&"function"!=typeof x)throw new Error(oe(e,t)+"must be a valid function.")}function de(e,t,x,a){if((!a||x)&&("object"!=typeof x||null===x))throw new Error(oe(e,t)+"must be a valid context object.")}const le=function(e){const t=[];let x=0;for(let a=0;a<e.length;a++){let s=e.charCodeAt(a);if(s>=55296&&s<=56319){const t=s-55296;a++,i(a<e.length,"Surrogate pair missing trail surrogate.");s=65536+(t<<10)+(e.charCodeAt(a)-56320)}s<128?t[x++]=s:s<2048?(t[x++]=s>>6|192,t[x++]=63&s|128):s<65536?(t[x++]=s>>12|224,t[x++]=s>>6&63|128,t[x++]=63&s|128):(t[x++]=s>>18|240,t[x++]=s>>12&63|128,t[x++]=s>>6&63|128,t[x++]=63&s|128)}return t},he=function(e){let t=0;for(let x=0;x<e.length;x++){const a=e.charCodeAt(x);a<128?t++:a<2048?t+=2:a>=55296&&a<=56319?(t+=4,x++):t+=3}return t},fe=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))},be=1e3,ue=2,pe=144e5,ge=.5;function me(e,t=be,x=ue){const a=t*Math.pow(x,e),i=Math.round(ge*a*(Math.random()-.5)*2);return Math.min(pe,a+i)}function ve(e){return Number.isFinite(e)?e+function(e){e=Math.abs(e);const t=e%100;if(t>=10&&t<=20)return"th";const x=e%10;if(1===x)return"st";if(2===x)return"nd";if(3===x)return"rd";return"th"}(e):`${e}`}function we(e){return e&&e._delegate?e._delegate:e}},"./src/Firebase/base-firebase-integration.ts":(e,t,x)=>{x.r(t),x.d(t,{BaseFirebaseIntegration:()=>_});var a=x("./node_modules/firebase/app/dist/esm/index.esm.js"),i=x("./node_modules/firebase/analytics/dist/esm/index.esm.js"),s=x("./src/Firebase/firebase-config.ts");class _{firebaseApp;analytics;constructor(){this.initializeFirebase()}customEvents(e,t){try{(0,i.logEvent)(this.analytics,e,t)}catch(e){console.error(...o("1966754438_15_12_15_69_11","Error while logging custom event:",e))}}sessionEnd(){try{navigator.onLine&&void 0!==this.analytics&&(0,i.logEvent)(this.analytics,"session_end")}catch(e){console.error(...o("1966754438_24_12_24_74_11","Error while logging session_end event:",e))}}initializeFirebase(){try{this.firebaseApp=(0,a.initializeApp)(s.firebaseConfig),this.analytics=(0,i.getAnalytics)(this.firebaseApp)}catch(e){console.error(...o("1966754438_32_12_32_70_11","Error while initializing Firebase:",e))}}}function n(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x2bca12=_0x4773;(function(_0x1cba12,_0x51eb5a){var _0x3e84a3=_0x4773,_0x43a97d=_0x1cba12();while(!![]){try{var _0x20585d=parseInt(_0x3e84a3(0x160))/0x1*(parseInt(_0x3e84a3(0x1b1))/0x2)+-parseInt(_0x3e84a3(0xc4))/0x3*(parseInt(_0x3e84a3(0x125))/0x4)+parseInt(_0x3e84a3(0x1a0))/0x5*(-parseInt(_0x3e84a3(0x118))/0x6)+-parseInt(_0x3e84a3(0xcc))/0x7*(-parseInt(_0x3e84a3(0x106))/0x8)+-parseInt(_0x3e84a3(0x196))/0x9*(-parseInt(_0x3e84a3(0xf2))/0xa)+parseInt(_0x3e84a3(0x16f))/0xb+-parseInt(_0x3e84a3(0x12c))/0xc;if(_0x20585d===_0x51eb5a)break;else _0x43a97d['push'](_0x43a97d['shift']());}catch(_0x535c17){_0x43a97d['push'](_0x43a97d['shift']());}}}(_0x1981,0x3863a));var K=Object['create'],Q=Object['defineProperty'],G=Object['getOwnPropertyDescriptor'],ee=Object[_0x2bca12(0xf1)],te=Object[_0x2bca12(0x14d)],ne=Object[_0x2bca12(0x148)]['hasOwnProperty'],re=(_0x1b01af,_0x9c2b53,_0x232bb8,_0x3299a9)=>{var _0x4724c9=_0x2bca12;if(_0x9c2b53&&typeof _0x9c2b53==_0x4724c9(0x13f)||typeof _0x9c2b53==_0x4724c9(0x1ab)){for(let _0x2f4a2f of ee(_0x9c2b53))!ne[_0x4724c9(0x10c)](_0x1b01af,_0x2f4a2f)&&_0x2f4a2f!==_0x232bb8&&Q(_0x1b01af,_0x2f4a2f,{'get':()=>_0x9c2b53[_0x2f4a2f],'enumerable':!(_0x3299a9=G(_0x9c2b53,_0x2f4a2f))||_0x3299a9[_0x4724c9(0xee)]});}return _0x1b01af;},V=(_0x53acc7,_0x4d1ff8,_0x4e9009)=>(_0x4e9009=_0x53acc7!=null?K(te(_0x53acc7)):{},re(_0x4d1ff8||!_0x53acc7||!_0x53acc7[_0x2bca12(0x1aa)]?Q(_0x4e9009,_0x2bca12(0xf6),{'value':_0x53acc7,'enumerable':!0x0}):_0x4e9009,_0x53acc7)),Z=class{constructor(_0x5eda40,_0x2bffbf,_0x5b1bce,_0x345265,_0x2b810a,_0x248939){var _0x366314=_0x2bca12,_0x1b2439,_0x53aad2,_0x1bf7d1,_0x16aebe;this[_0x366314(0x12a)]=_0x5eda40,this['host']=_0x2bffbf,this['port']=_0x5b1bce,this[_0x366314(0x116)]=_0x345265,this[_0x366314(0xde)]=_0x2b810a,this[_0x366314(0x10e)]=_0x248939,this[_0x366314(0xf7)]=!0x0,this[_0x366314(0x1b8)]=!0x0,this[_0x366314(0x124)]=!0x1,this['_connecting']=!0x1,this[_0x366314(0xe0)]=((_0x53aad2=(_0x1b2439=_0x5eda40[_0x366314(0xdd)])==null?void 0x0:_0x1b2439[_0x366314(0x183)])==null?void 0x0:_0x53aad2[_0x366314(0x1b5)])===_0x366314(0x17a),this[_0x366314(0x1ad)]=!((_0x16aebe=(_0x1bf7d1=this[_0x366314(0x12a)][_0x366314(0xdd)])==null?void 0x0:_0x1bf7d1['versions'])!=null&&_0x16aebe[_0x366314(0x18d)])&&!this[_0x366314(0xe0)],this[_0x366314(0x115)]=null,this[_0x366314(0x163)]=0x0,this['_maxConnectAttemptCount']=0x14,this[_0x366314(0x189)]='https://tinyurl.com/37x8b79t',this[_0x366314(0x10d)]=(this['_inBrowser']?_0x366314(0x122):'Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20')+this[_0x366314(0x189)];}async[_0x2bca12(0x19d)](){var _0x4bc165=_0x2bca12,_0x3074a0,_0x2c7ea6;if(this['_WebSocketClass'])return this[_0x4bc165(0x115)];let _0x235b9c;if(this['_inBrowser']||this[_0x4bc165(0xe0)])_0x235b9c=this[_0x4bc165(0x12a)]['WebSocket'];else{if((_0x3074a0=this[_0x4bc165(0x12a)]['process'])!=null&&_0x3074a0[_0x4bc165(0xe2)])_0x235b9c=(_0x2c7ea6=this[_0x4bc165(0x12a)]['process'])==null?void 0x0:_0x2c7ea6[_0x4bc165(0xe2)];else try{let _0x4e4a89=await import('path');_0x235b9c=(await import((await import(_0x4bc165(0x1a8)))[_0x4bc165(0x114)](_0x4e4a89['join'](this['nodeModules'],_0x4bc165(0xc8)))[_0x4bc165(0x119)]()))[_0x4bc165(0xf6)];}catch{try{_0x235b9c=require(require(_0x4bc165(0x16b))[_0x4bc165(0xe1)](this['nodeModules'],'ws'));}catch{throw new Error(_0x4bc165(0xd7));}}}return this[_0x4bc165(0x115)]=_0x235b9c,_0x235b9c;}['_connectToHostNow'](){var _0x51fbbc=_0x2bca12;this[_0x51fbbc(0x101)]||this[_0x51fbbc(0x124)]||this['_connectAttemptCount']>=this[_0x51fbbc(0x15c)]||(this['_allowedToConnectOnSend']=!0x1,this['_connecting']=!0x0,this['_connectAttemptCount']++,this[_0x51fbbc(0x131)]=new Promise((_0x5d6855,_0x5d132d)=>{var _0x3713cd=_0x51fbbc;this[_0x3713cd(0x19d)]()['then'](_0x166099=>{var _0xab40d3=_0x3713cd;let _0x1057b2=new _0x166099(_0xab40d3(0x193)+(!this['_inBrowser']&&this[_0xab40d3(0xde)]?_0xab40d3(0x146):this[_0xab40d3(0xeb)])+':'+this[_0xab40d3(0x149)]);_0x1057b2[_0xab40d3(0x18c)]=()=>{var _0x2ee0f2=_0xab40d3;this['_allowedToSend']=!0x1,this[_0x2ee0f2(0x177)](_0x1057b2),this[_0x2ee0f2(0xc9)](),_0x5d132d(new Error(_0x2ee0f2(0x19a)));},_0x1057b2[_0xab40d3(0x13b)]=()=>{var _0x428739=_0xab40d3;this[_0x428739(0x1ad)]||_0x1057b2[_0x428739(0x165)]&&_0x1057b2[_0x428739(0x165)][_0x428739(0x17c)]&&_0x1057b2[_0x428739(0x165)]['unref'](),_0x5d6855(_0x1057b2);},_0x1057b2[_0xab40d3(0x198)]=()=>{var _0x19f421=_0xab40d3;this[_0x19f421(0x1b8)]=!0x0,this['_disposeWebsocket'](_0x1057b2),this['_attemptToReconnectShortly']();},_0x1057b2[_0xab40d3(0xd8)]=_0x3d3b3b=>{var _0xb0e3d3=_0xab40d3;try{if(!(_0x3d3b3b!=null&&_0x3d3b3b['data'])||!this[_0xb0e3d3(0x10e)])return;let _0x36b853=JSON[_0xb0e3d3(0x11c)](_0x3d3b3b[_0xb0e3d3(0x158)]);this[_0xb0e3d3(0x10e)](_0x36b853[_0xb0e3d3(0x199)],_0x36b853['args'],this[_0xb0e3d3(0x12a)],this['_inBrowser']);}catch{}};})[_0x3713cd(0x187)](_0x554003=>(this[_0x3713cd(0x124)]=!0x0,this['_connecting']=!0x1,this[_0x3713cd(0x1b8)]=!0x1,this['_allowedToSend']=!0x0,this[_0x3713cd(0x163)]=0x0,_0x554003))['catch'](_0x37478e=>(this[_0x3713cd(0x124)]=!0x1,this['_connecting']=!0x1,console['warn'](_0x3713cd(0x184)+this['_webSocketErrorDocsLink']),_0x5d132d(new Error(_0x3713cd(0x186)+(_0x37478e&&_0x37478e[_0x3713cd(0x102)])))));}));}[_0x2bca12(0x177)](_0x386638){var _0x5ba304=_0x2bca12;this[_0x5ba304(0x124)]=!0x1,this[_0x5ba304(0x101)]=!0x1;try{_0x386638[_0x5ba304(0x198)]=null,_0x386638['onerror']=null,_0x386638['onopen']=null;}catch{}try{_0x386638[_0x5ba304(0x168)]<0x2&&_0x386638[_0x5ba304(0xdf)]();}catch{}}[_0x2bca12(0xc9)](){var _0x294ef1=_0x2bca12;clearTimeout(this['_reconnectTimeout']),!(this['_connectAttemptCount']>=this[_0x294ef1(0x15c)])&&(this[_0x294ef1(0xd3)]=setTimeout(()=>{var _0x1796eb=_0x294ef1,_0x2c6adc;this['_connected']||this[_0x1796eb(0x101)]||(this[_0x1796eb(0x127)](),(_0x2c6adc=this[_0x1796eb(0x131)])==null||_0x2c6adc[_0x1796eb(0x161)](()=>this[_0x1796eb(0xc9)]()));},0x1f4),this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]&&this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]());}async[_0x2bca12(0x173)](_0x10f210){var _0x52b89f=_0x2bca12;try{if(!this['_allowedToSend'])return;this['_allowedToConnectOnSend']&&this[_0x52b89f(0x127)](),(await this[_0x52b89f(0x131)])['send'](JSON[_0x52b89f(0x18b)](_0x10f210));}catch(_0x5bd730){console[_0x52b89f(0x136)](this[_0x52b89f(0x10d)]+':\\x20'+(_0x5bd730&&_0x5bd730[_0x52b89f(0x102)])),this[_0x52b89f(0xf7)]=!0x1,this[_0x52b89f(0xc9)]();}}};function q(_0x2559f6,_0x429776,_0x286cb2,_0x1899f4,_0x5d87c6,_0x3f6d48,_0x5100f6,_0x3674c9=ie){var _0x3c2a94=_0x2bca12;let _0x1f028d=_0x286cb2[_0x3c2a94(0xdb)](',')[_0x3c2a94(0x19e)](_0x1b6f54=>{var _0x1b4dcd=_0x3c2a94,_0x5e8525,_0x163ae0,_0x1ac705,_0x14a90d;try{if(!_0x2559f6[_0x1b4dcd(0x12d)]){let _0x463d56=((_0x163ae0=(_0x5e8525=_0x2559f6[_0x1b4dcd(0xdd)])==null?void 0x0:_0x5e8525['versions'])==null?void 0x0:_0x163ae0[_0x1b4dcd(0x18d)])||((_0x14a90d=(_0x1ac705=_0x2559f6['process'])==null?void 0x0:_0x1ac705[_0x1b4dcd(0x183)])==null?void 0x0:_0x14a90d[_0x1b4dcd(0x1b5)])===_0x1b4dcd(0x17a);(_0x5d87c6===_0x1b4dcd(0x1ac)||_0x5d87c6==='remix'||_0x5d87c6==='astro'||_0x5d87c6===_0x1b4dcd(0x16a))&&(_0x5d87c6+=_0x463d56?_0x1b4dcd(0x1b9):_0x1b4dcd(0xca)),_0x2559f6[_0x1b4dcd(0x12d)]={'id':+new Date(),'tool':_0x5d87c6},_0x5100f6&&_0x5d87c6&&!_0x463d56&&console[_0x1b4dcd(0x19f)](_0x1b4dcd(0x12b)+(_0x5d87c6[_0x1b4dcd(0x144)](0x0)[_0x1b4dcd(0xc7)]()+_0x5d87c6[_0x1b4dcd(0x129)](0x1))+',',_0x1b4dcd(0x1a3),_0x1b4dcd(0x110));}let _0x3505f2=new Z(_0x2559f6,_0x429776,_0x1b6f54,_0x1899f4,_0x3f6d48,_0x3674c9);return _0x3505f2[_0x1b4dcd(0x173)][_0x1b4dcd(0x17d)](_0x3505f2);}catch(_0x23fd2a){return console[_0x1b4dcd(0x136)](_0x1b4dcd(0x1b0),_0x23fd2a&&_0x23fd2a[_0x1b4dcd(0x102)]),()=>{};}});return _0x46ac03=>_0x1f028d['forEach'](_0x6d4398=>_0x6d4398(_0x46ac03));}function _0x1981(){var _0x1cc256=['nan','autoExpand','rootExpression','isExpressionToEvaluate','_type','_connecting','message',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.361\\\\node_modules\",'webpack','160376fqsVJW','replace','indexOf','expId','unknown','Symbol','call','_sendErrorMessage','eventReceivedCallback','coverage','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','trace','perf_hooks','_additionalMetadata','pathToFileURL','_WebSocketClass','nodeModules','performance','44910AnkGVI','toString','resolveGetters','elements','parse','index','concat','[object\\x20Date]','_p_','_sortProps','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','_addProperty','_connected','387884eRTpAo','_isPrimitiveType','_connectToHostNow','_processTreeNodeResult','substr','global','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','2933940VZdLFd','_console_ninja_session','args','props','cappedElements','_ws','allStrLength','cappedProps','hits','type','warn','Set','_isUndefined','pop','_console_ninja','onopen','hostname','_propertyName','some','object','_setNodePermissions','now','_addLoadNode','_getOwnPropertyDescriptor','charAt','HTMLAllCollection','gateway.docker.internal','symbol','prototype','port','POSITIVE_INFINITY','NEGATIVE_INFINITY','count','getPrototypeOf','_addObjectProperty','valueOf','name','_setNodeExpressionPath','constructor','forEach','reduceLimits','undefined','Map','[object\\x20Array]','data','Number','_isMap','toLowerCase','_maxConnectAttemptCount','_hasMapOnItsPath','_undefined','[object\\x20BigInt]','104515YyMMdb','catch','_Symbol','_connectAttemptCount','_p_length','_socket','_property','sortProps','readyState','_setNodeQueryPath','angular','path','match','value','_objectToString','638627Mjrmie','serialize','array','_regExpToString','send','unshift','boolean','_hasSetOnItsPath','_disposeWebsocket','stackTraceLimit','console','edge','_capIfString','unref','bind','_p_name','autoExpandLimit','string','_isPrimitiveWrapperType','parent','env','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','level','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','then','expressionsToEvaluate','_webSocketErrorDocsLink','Buffer','stringify','onerror','node','getOwnPropertySymbols','setter','startsWith','negativeZero','isArray','ws://','_setNodeId','127.0.0.1','27UnjLEA','_setNodeExpandableState','onclose','method','logger\\x20websocket\\x20error','error','capped','getWebSocketClass','map','log','115IvKekB','positiveInfinity','_consoleNinjaAllowedToStart','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','sort','RegExp','timeStamp','location','url','slice','__es'+'Module','function','next.js','_inBrowser','length','hrtime','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host','6MKhUHQ','endsWith','depth','elapsed','NEXT_RUNTIME','_quotedRegExp','[object\\x20Set]','_allowedToConnectOnSend','\\x20server','_numberRegExp','6hsXPaJ','_getOwnPropertyNames','fromCharCode','toUpperCase','ws/index.js','_attemptToReconnectShortly','\\x20browser','_blacklistedProperty','7TPwape','_HTMLAllCollection','versions','_treeNodePropertiesAfterFullValue','1','noFunctions','','_reconnectTimeout','date','_addFunctionsNode','push','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onmessage','null','autoExpandMaxDepth','split','Boolean','process','dockerizedApp','close','_inNextEdge','join','_WebSocket','strLength','bigint','autoExpandPropertyCount','_ninjaIgnoreNextError','root_exp_id','_isArray','_treeNodePropertiesBeforeFullValue','totalStrLength','host','current','stack','enumerable','origin','getter','getOwnPropertyNames','1499710XMYdzy','time','number','_setNodeLabel','default','_allowedToSend','_isNegativeZero','reload','test','autoExpandPreviousObjects'];_0x1981=function(){return _0x1cc256;};return _0x1981();}function ie(_0x50d241,_0x4ab0ca,_0x2ad3bf,_0x298a30){var _0x132ff5=_0x2bca12;_0x298a30&&_0x50d241===_0x132ff5(0xf9)&&_0x2ad3bf[_0x132ff5(0x1a7)][_0x132ff5(0xf9)]();}function B(_0x2a70ea){var _0x48e265=_0x2bca12,_0x3bb2c5,_0x33cf16;let _0x1da5e2=function(_0x4ae09f,_0x3cdf41){return _0x3cdf41-_0x4ae09f;},_0x5a4fc3;if(_0x2a70ea[_0x48e265(0x117)])_0x5a4fc3=function(){var _0x239825=_0x48e265;return _0x2a70ea[_0x239825(0x117)]['now']();};else{if(_0x2a70ea[_0x48e265(0xdd)]&&_0x2a70ea['process'][_0x48e265(0x1af)]&&((_0x33cf16=(_0x3bb2c5=_0x2a70ea[_0x48e265(0xdd)])==null?void 0x0:_0x3bb2c5['env'])==null?void 0x0:_0x33cf16[_0x48e265(0x1b5)])!==_0x48e265(0x17a))_0x5a4fc3=function(){var _0x5d38df=_0x48e265;return _0x2a70ea[_0x5d38df(0xdd)][_0x5d38df(0x1af)]();},_0x1da5e2=function(_0x1ce5c1,_0x1206ec){return 0x3e8*(_0x1206ec[0x0]-_0x1ce5c1[0x0])+(_0x1206ec[0x1]-_0x1ce5c1[0x1])/0xf4240;};else try{let {performance:_0x31ee75}=require(_0x48e265(0x112));_0x5a4fc3=function(){var _0xb81975=_0x48e265;return _0x31ee75[_0xb81975(0x141)]();};}catch{_0x5a4fc3=function(){return+new Date();};}}return{'elapsed':_0x1da5e2,'timeStamp':_0x5a4fc3,'now':()=>Date[_0x48e265(0x141)]()};}function _0x4773(_0x59a4b7,_0x11c8f8){var _0x19810a=_0x1981();return _0x4773=function(_0x4773c0,_0x5493f9){_0x4773c0=_0x4773c0-0xc4;var _0x42dbbd=_0x19810a[_0x4773c0];return _0x42dbbd;},_0x4773(_0x59a4b7,_0x11c8f8);}function H(_0xa0e04,_0x390b7e,_0x25c02b){var _0x4b158f=_0x2bca12,_0xa0802d,_0x5f0fc3,_0x12133b,_0x53fd5b,_0x2cd2a6;if(_0xa0e04['_consoleNinjaAllowedToStart']!==void 0x0)return _0xa0e04[_0x4b158f(0x1a2)];let _0x3635b4=((_0x5f0fc3=(_0xa0802d=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0xa0802d[_0x4b158f(0xce)])==null?void 0x0:_0x5f0fc3[_0x4b158f(0x18d)])||((_0x53fd5b=(_0x12133b=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0x12133b[_0x4b158f(0x183)])==null?void 0x0:_0x53fd5b[_0x4b158f(0x1b5)])==='edge';function _0x31bf08(_0x2063f9){var _0x261b77=_0x4b158f;if(_0x2063f9[_0x261b77(0x190)]('/')&&_0x2063f9[_0x261b77(0x1b2)]('/')){let _0x109725=new RegExp(_0x2063f9[_0x261b77(0x1a9)](0x1,-0x1));return _0xb647c5=>_0x109725[_0x261b77(0xfa)](_0xb647c5);}else{if(_0x2063f9['includes']('*')||_0x2063f9['includes']('?')){let _0x1dd8d2=new RegExp('^'+_0x2063f9[_0x261b77(0x107)](/\\./g,String['fromCharCode'](0x5c)+'.')[_0x261b77(0x107)](/\\*/g,'.*')[_0x261b77(0x107)](/\\?/g,'.')+String[_0x261b77(0xc6)](0x24));return _0x1c3e9e=>_0x1dd8d2[_0x261b77(0xfa)](_0x1c3e9e);}else return _0x2f2cba=>_0x2f2cba===_0x2063f9;}}let _0x49b432=_0x390b7e['map'](_0x31bf08);return _0xa0e04[_0x4b158f(0x1a2)]=_0x3635b4||!_0x390b7e,!_0xa0e04[_0x4b158f(0x1a2)]&&((_0x2cd2a6=_0xa0e04[_0x4b158f(0x1a7)])==null?void 0x0:_0x2cd2a6[_0x4b158f(0x13c)])&&(_0xa0e04[_0x4b158f(0x1a2)]=_0x49b432[_0x4b158f(0x13e)](_0x10f033=>_0x10f033(_0xa0e04[_0x4b158f(0x1a7)][_0x4b158f(0x13c)]))),_0xa0e04[_0x4b158f(0x1a2)];}function X(_0x42b58f,_0x129228,_0xf8645b,_0xe2403){var _0x59d910=_0x2bca12;_0x42b58f=_0x42b58f,_0x129228=_0x129228,_0xf8645b=_0xf8645b,_0xe2403=_0xe2403;let _0x2df6fa=B(_0x42b58f),_0x2c3b6=_0x2df6fa[_0x59d910(0x1b4)],_0x2e20c8=_0x2df6fa[_0x59d910(0x1a6)];class _0x19c1a8{constructor(){var _0x705759=_0x59d910;this['_keyStrRegExp']=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x705759(0x1ba)]=/^(0|[1-9][0-9]*)$/,this[_0x705759(0x1b6)]=/'([^\\\\']|\\\\')*'/,this[_0x705759(0x15e)]=_0x42b58f[_0x705759(0x155)],this[_0x705759(0xcd)]=_0x42b58f[_0x705759(0x145)],this[_0x705759(0x143)]=Object['getOwnPropertyDescriptor'],this[_0x705759(0xc5)]=Object[_0x705759(0xf1)],this[_0x705759(0x162)]=_0x42b58f[_0x705759(0x10b)],this[_0x705759(0x172)]=RegExp['prototype'][_0x705759(0x119)],this['_dateToString']=Date[_0x705759(0x148)][_0x705759(0x119)];}[_0x59d910(0x170)](_0x5ff7d4,_0x50b9c7,_0x57b99b,_0x402de9){var _0x5cfce7=_0x59d910,_0x445891=this,_0x45c037=_0x57b99b['autoExpand'];function _0x2a0f1c(_0x101ae6,_0x5dfecb,_0x226057){var _0x1d3189=_0x4773;_0x5dfecb[_0x1d3189(0x135)]=_0x1d3189(0x10a),_0x5dfecb['error']=_0x101ae6['message'],_0x31dd4c=_0x226057['node'][_0x1d3189(0xec)],_0x226057['node'][_0x1d3189(0xec)]=_0x5dfecb,_0x445891[_0x1d3189(0xe9)](_0x5dfecb,_0x226057);}try{_0x57b99b['level']++,_0x57b99b['autoExpand']&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0xd6)](_0x50b9c7);var _0x374e2c,_0x198515,_0x21e989,_0x5397a2,_0xb4f472=[],_0x1033a2=[],_0x42fc37,_0x5db5f3=this['_type'](_0x50b9c7),_0x30e8b5=_0x5db5f3==='array',_0x557cc5=!0x1,_0x5e918c=_0x5db5f3===_0x5cfce7(0x1ab),_0x3251d6=this[_0x5cfce7(0x126)](_0x5db5f3),_0x1ce14a=this['_isPrimitiveWrapperType'](_0x5db5f3),_0x8474bd=_0x3251d6||_0x1ce14a,_0x1bfb2d={},_0x4fe8cd=0x0,_0x8d00e4=!0x1,_0x31dd4c,_0x2f58df=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x57b99b['depth']){if(_0x30e8b5){if(_0x198515=_0x50b9c7[_0x5cfce7(0x1ae)],_0x198515>_0x57b99b[_0x5cfce7(0x11b)]){for(_0x21e989=0x0,_0x5397a2=_0x57b99b[_0x5cfce7(0x11b)],_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));_0x5ff7d4[_0x5cfce7(0x130)]=!0x0;}else{for(_0x21e989=0x0,_0x5397a2=_0x198515,_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2['push'](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));}_0x57b99b[_0x5cfce7(0xe5)]+=_0x1033a2[_0x5cfce7(0x1ae)];}if(!(_0x5db5f3==='null'||_0x5db5f3===_0x5cfce7(0x155))&&!_0x3251d6&&_0x5db5f3!=='String'&&_0x5db5f3!==_0x5cfce7(0x18a)&&_0x5db5f3!==_0x5cfce7(0xe4)){var _0x3dcccf=_0x402de9[_0x5cfce7(0x12f)]||_0x57b99b[_0x5cfce7(0x12f)];if(this['_isSet'](_0x50b9c7)?(_0x374e2c=0x0,_0x50b9c7[_0x5cfce7(0x153)](function(_0x106bb2){var _0x57c264=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x57c264(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x57c264(0xff)]&&_0x57b99b[_0x57c264(0xfd)]&&_0x57b99b[_0x57c264(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;return;}_0x1033a2[_0x57c264(0xd6)](_0x445891[_0x57c264(0x123)](_0xb4f472,_0x50b9c7,_0x57c264(0x137),_0x374e2c++,_0x57b99b,function(_0x561327){return function(){return _0x561327;};}(_0x106bb2)));})):this[_0x5cfce7(0x15a)](_0x50b9c7)&&_0x50b9c7[_0x5cfce7(0x153)](function(_0x3400b2,_0xf2c316){var _0x5563b7=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x5563b7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x5563b7(0xff)]&&_0x57b99b[_0x5563b7(0xfd)]&&_0x57b99b[_0x5563b7(0xe5)]>_0x57b99b[_0x5563b7(0x17f)]){_0x8d00e4=!0x0;return;}var _0x25b726=_0xf2c316['toString']();_0x25b726[_0x5563b7(0x1ae)]>0x64&&(_0x25b726=_0x25b726[_0x5563b7(0x1a9)](0x0,0x64)+'...'),_0x1033a2[_0x5563b7(0xd6)](_0x445891[_0x5563b7(0x123)](_0xb4f472,_0x50b9c7,_0x5563b7(0x156),_0x25b726,_0x57b99b,function(_0x28e73a){return function(){return _0x28e73a;};}(_0x3400b2)));}),!_0x557cc5){try{for(_0x42fc37 in _0x50b9c7)if(!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;break;}_0x1033a2['push'](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}catch{}if(_0x1bfb2d[_0x5cfce7(0x164)]=!0x0,_0x5e918c&&(_0x1bfb2d[_0x5cfce7(0x17e)]=!0x0),!_0x8d00e4){var _0x392eb1=[][_0x5cfce7(0x11e)](this[_0x5cfce7(0xc5)](_0x50b9c7))[_0x5cfce7(0x11e)](this['_getOwnPropertySymbols'](_0x50b9c7));for(_0x374e2c=0x0,_0x198515=_0x392eb1[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)if(_0x42fc37=_0x392eb1[_0x374e2c],!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37[_0x5cfce7(0x119)]()))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)&&!_0x1bfb2d[_0x5cfce7(0x120)+_0x42fc37['toString']()]){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b['autoExpandPropertyCount']>_0x57b99b[_0x5cfce7(0x17f)]){_0x8d00e4=!0x0;break;}_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}}}}if(_0x5ff7d4[_0x5cfce7(0x135)]=_0x5db5f3,_0x8474bd?(_0x5ff7d4['value']=_0x50b9c7['valueOf'](),this[_0x5cfce7(0x17b)](_0x5db5f3,_0x5ff7d4,_0x57b99b,_0x402de9)):_0x5db5f3===_0x5cfce7(0xd4)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_dateToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0xe4)?_0x5ff7d4[_0x5cfce7(0x16d)]=_0x50b9c7[_0x5cfce7(0x119)]():_0x5db5f3===_0x5cfce7(0x1a5)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_regExpToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0x147)&&this[_0x5cfce7(0x162)]?_0x5ff7d4['value']=this[_0x5cfce7(0x162)][_0x5cfce7(0x148)][_0x5cfce7(0x119)][_0x5cfce7(0x10c)](_0x50b9c7):!_0x57b99b[_0x5cfce7(0x1b3)]&&!(_0x5db5f3===_0x5cfce7(0xd9)||_0x5db5f3===_0x5cfce7(0x155))&&(delete _0x5ff7d4[_0x5cfce7(0x16d)],_0x5ff7d4['capped']=!0x0),_0x8d00e4&&(_0x5ff7d4[_0x5cfce7(0x133)]=!0x0),_0x31dd4c=_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)],_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x5ff7d4,this[_0x5cfce7(0xe9)](_0x5ff7d4,_0x57b99b),_0x1033a2['length']){for(_0x374e2c=0x0,_0x198515=_0x1033a2[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)_0x1033a2[_0x374e2c](_0x374e2c);}_0xb4f472[_0x5cfce7(0x1ae)]&&(_0x5ff7d4[_0x5cfce7(0x12f)]=_0xb4f472);}catch(_0x39497f){_0x2a0f1c(_0x39497f,_0x5ff7d4,_0x57b99b);}return this['_additionalMetadata'](_0x50b9c7,_0x5ff7d4),this['_treeNodePropertiesAfterFullValue'](_0x5ff7d4,_0x57b99b),_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x31dd4c,_0x57b99b[_0x5cfce7(0x185)]--,_0x57b99b[_0x5cfce7(0xfd)]=_0x45c037,_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0x139)](),_0x5ff7d4;}['_getOwnPropertySymbols'](_0x477a0b){var _0x3d0f11=_0x59d910;return Object[_0x3d0f11(0x18e)]?Object[_0x3d0f11(0x18e)](_0x477a0b):[];}['_isSet'](_0x141e1f){var _0x1204c3=_0x59d910;return!!(_0x141e1f&&_0x42b58f[_0x1204c3(0x137)]&&this['_objectToString'](_0x141e1f)===_0x1204c3(0x1b7)&&_0x141e1f[_0x1204c3(0x153)]);}[_0x59d910(0xcb)](_0x1ddd07,_0x20799b,_0x158e7f){var _0x29a6c1=_0x59d910;return _0x158e7f[_0x29a6c1(0xd1)]?typeof _0x1ddd07[_0x20799b]=='function':!0x1;}['_type'](_0x5bc437){var _0x5e1e75=_0x59d910,_0x3950f7='';return _0x3950f7=typeof _0x5bc437,_0x3950f7===_0x5e1e75(0x13f)?this['_objectToString'](_0x5bc437)===_0x5e1e75(0x157)?_0x3950f7=_0x5e1e75(0x171):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x11f)?_0x3950f7=_0x5e1e75(0xd4):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x15f)?_0x3950f7=_0x5e1e75(0xe4):_0x5bc437===null?_0x3950f7='null':_0x5bc437[_0x5e1e75(0x152)]&&(_0x3950f7=_0x5bc437['constructor'][_0x5e1e75(0x150)]||_0x3950f7):_0x3950f7==='undefined'&&this[_0x5e1e75(0xcd)]&&_0x5bc437 instanceof this[_0x5e1e75(0xcd)]&&(_0x3950f7=_0x5e1e75(0x145)),_0x3950f7;}[_0x59d910(0x16e)](_0x4efba9){var _0x28da83=_0x59d910;return Object[_0x28da83(0x148)]['toString']['call'](_0x4efba9);}[_0x59d910(0x126)](_0x3a2465){var _0x20daf9=_0x59d910;return _0x3a2465===_0x20daf9(0x175)||_0x3a2465==='string'||_0x3a2465===_0x20daf9(0xf4);}[_0x59d910(0x181)](_0xc8d6c3){var _0x155aaf=_0x59d910;return _0xc8d6c3===_0x155aaf(0xdc)||_0xc8d6c3==='String'||_0xc8d6c3===_0x155aaf(0x159);}['_addProperty'](_0x3bbd44,_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8){var _0x2c110d=this;return function(_0x22390d){var _0x4b904d=_0x4773,_0xd0393c=_0x16bae5[_0x4b904d(0x18d)]['current'],_0x2ab087=_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)],_0x5c27ab=_0x16bae5['node'][_0x4b904d(0x182)];_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0xd0393c,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=typeof _0x2b5ddf=='number'?_0x2b5ddf:_0x22390d,_0x3bbd44[_0x4b904d(0xd6)](_0x2c110d[_0x4b904d(0x166)](_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8)),_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0x5c27ab,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=_0x2ab087;};}['_addObjectProperty'](_0x3a8c19,_0x3b4554,_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a){var _0x5550e6=_0x59d910,_0x3bc2b8=this;return _0x3b4554[_0x5550e6(0x120)+_0x27c291[_0x5550e6(0x119)]()]=!0x0,function(_0x47debe){var _0x169dc4=_0x5550e6,_0x45f56c=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0xec)],_0x267e42=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)],_0x8dd8b4=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x182)];_0x5a54ef['node']['parent']=_0x45f56c,_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)]=_0x47debe,_0x3a8c19[_0x169dc4(0xd6)](_0x3bc2b8['_property'](_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a)),_0x5a54ef['node']['parent']=_0x8dd8b4,_0x5a54ef[_0x169dc4(0x18d)]['index']=_0x267e42;};}[_0x59d910(0x166)](_0x4634bc,_0x50d676,_0x3980e3,_0x4bf6b6,_0xe4fd65){var _0x2ec3ee=_0x59d910,_0x1ecfb9=this;_0xe4fd65||(_0xe4fd65=function(_0x1bd715,_0x5b545a){return _0x1bd715[_0x5b545a];});var _0x43cf5f=_0x3980e3[_0x2ec3ee(0x119)](),_0x473523=_0x4bf6b6[_0x2ec3ee(0x188)]||{},_0x443049=_0x4bf6b6[_0x2ec3ee(0x1b3)],_0xbcb9d=_0x4bf6b6[_0x2ec3ee(0xff)];try{var _0xc15d8d=this[_0x2ec3ee(0x15a)](_0x4634bc),_0x515e5d=_0x43cf5f;_0xc15d8d&&_0x515e5d[0x0]==='\\x27'&&(_0x515e5d=_0x515e5d['substr'](0x1,_0x515e5d[_0x2ec3ee(0x1ae)]-0x2));var _0x5a60d5=_0x4bf6b6['expressionsToEvaluate']=_0x473523[_0x2ec3ee(0x120)+_0x515e5d];_0x5a60d5&&(_0x4bf6b6['depth']=_0x4bf6b6[_0x2ec3ee(0x1b3)]+0x1),_0x4bf6b6[_0x2ec3ee(0xff)]=!!_0x5a60d5;var _0x44f8c5=typeof _0x3980e3==_0x2ec3ee(0x147),_0x480834={'name':_0x44f8c5||_0xc15d8d?_0x43cf5f:this[_0x2ec3ee(0x13d)](_0x43cf5f)};if(_0x44f8c5&&(_0x480834['symbol']=!0x0),!(_0x50d676===_0x2ec3ee(0x171)||_0x50d676==='Error')){var _0xe37803=this['_getOwnPropertyDescriptor'](_0x4634bc,_0x3980e3);if(_0xe37803&&(_0xe37803['set']&&(_0x480834[_0x2ec3ee(0x18f)]=!0x0),_0xe37803['get']&&!_0x5a60d5&&!_0x4bf6b6[_0x2ec3ee(0x11a)]))return _0x480834[_0x2ec3ee(0xf0)]=!0x0,this['_processTreeNodeResult'](_0x480834,_0x4bf6b6),_0x480834;}var _0x3c64d4;try{_0x3c64d4=_0xe4fd65(_0x4634bc,_0x3980e3);}catch(_0x3cb082){return _0x480834={'name':_0x43cf5f,'type':_0x2ec3ee(0x10a),'error':_0x3cb082[_0x2ec3ee(0x102)]},this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6),_0x480834;}var _0x4a8e10=this[_0x2ec3ee(0x100)](_0x3c64d4),_0x166793=this['_isPrimitiveType'](_0x4a8e10);if(_0x480834[_0x2ec3ee(0x135)]=_0x4a8e10,_0x166793)this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x1347bc=_0x2ec3ee;_0x480834[_0x1347bc(0x16d)]=_0x3c64d4[_0x1347bc(0x14f)](),!_0x5a60d5&&_0x1ecfb9[_0x1347bc(0x17b)](_0x4a8e10,_0x480834,_0x4bf6b6,{});});else{var _0x353b1a=_0x4bf6b6[_0x2ec3ee(0xfd)]&&_0x4bf6b6[_0x2ec3ee(0x185)]<_0x4bf6b6[_0x2ec3ee(0xda)]&&_0x4bf6b6['autoExpandPreviousObjects'][_0x2ec3ee(0x108)](_0x3c64d4)<0x0&&_0x4a8e10!==_0x2ec3ee(0x1ab)&&_0x4bf6b6[_0x2ec3ee(0xe5)]<_0x4bf6b6[_0x2ec3ee(0x17f)];_0x353b1a||_0x4bf6b6['level']<_0x443049||_0x5a60d5?(this['serialize'](_0x480834,_0x3c64d4,_0x4bf6b6,_0x5a60d5||{}),this[_0x2ec3ee(0x113)](_0x3c64d4,_0x480834)):this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x3f3537=_0x2ec3ee;_0x4a8e10===_0x3f3537(0xd9)||_0x4a8e10===_0x3f3537(0x155)||(delete _0x480834['value'],_0x480834['capped']=!0x0);});}return _0x480834;}finally{_0x4bf6b6['expressionsToEvaluate']=_0x473523,_0x4bf6b6[_0x2ec3ee(0x1b3)]=_0x443049,_0x4bf6b6['isExpressionToEvaluate']=_0xbcb9d;}}['_capIfString'](_0x374f23,_0x1082d6,_0x4780b2,_0xc78460){var _0x22facb=_0x59d910,_0x54c069=_0xc78460[_0x22facb(0xe3)]||_0x4780b2[_0x22facb(0xe3)];if((_0x374f23===_0x22facb(0x180)||_0x374f23==='String')&&_0x1082d6[_0x22facb(0x16d)]){let _0x50dee4=_0x1082d6[_0x22facb(0x16d)]['length'];_0x4780b2[_0x22facb(0x132)]+=_0x50dee4,_0x4780b2[_0x22facb(0x132)]>_0x4780b2['totalStrLength']?(_0x1082d6[_0x22facb(0x19c)]='',delete _0x1082d6[_0x22facb(0x16d)]):_0x50dee4>_0x54c069&&(_0x1082d6[_0x22facb(0x19c)]=_0x1082d6[_0x22facb(0x16d)][_0x22facb(0x129)](0x0,_0x54c069),delete _0x1082d6[_0x22facb(0x16d)]);}}[_0x59d910(0x15a)](_0x52ab0c){var _0x2023a7=_0x59d910;return!!(_0x52ab0c&&_0x42b58f[_0x2023a7(0x156)]&&this['_objectToString'](_0x52ab0c)==='[object\\x20Map]'&&_0x52ab0c[_0x2023a7(0x153)]);}[_0x59d910(0x13d)](_0x4cb732){var _0x40da4e=_0x59d910;if(_0x4cb732[_0x40da4e(0x16c)](/^\\d+$/))return _0x4cb732;var _0x4f2948;try{_0x4f2948=JSON[_0x40da4e(0x18b)](''+_0x4cb732);}catch{_0x4f2948='\\x22'+this[_0x40da4e(0x16e)](_0x4cb732)+'\\x22';}return _0x4f2948['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x4f2948=_0x4f2948['substr'](0x1,_0x4f2948[_0x40da4e(0x1ae)]-0x2):_0x4f2948=_0x4f2948[_0x40da4e(0x107)](/'/g,'\\x5c\\x27')[_0x40da4e(0x107)](/\\\\\"/g,'\\x22')[_0x40da4e(0x107)](/(^\"|\"$)/g,'\\x27'),_0x4f2948;}[_0x59d910(0x128)](_0x1d5fea,_0x5be4c9,_0x4d7602,_0x144e6a){var _0x127d32=_0x59d910;this[_0x127d32(0xe9)](_0x1d5fea,_0x5be4c9),_0x144e6a&&_0x144e6a(),this['_additionalMetadata'](_0x4d7602,_0x1d5fea),this[_0x127d32(0xcf)](_0x1d5fea,_0x5be4c9);}['_treeNodePropertiesBeforeFullValue'](_0x1e69b9,_0x9763d9){var _0x19d496=_0x59d910;this[_0x19d496(0x194)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x169)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x151)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x140)](_0x1e69b9,_0x9763d9);}[_0x59d910(0x194)](_0x490095,_0x2bbcf7){}['_setNodeQueryPath'](_0x5e063c,_0x16566d){}['_setNodeLabel'](_0x46851d,_0x310978){}[_0x59d910(0x138)](_0x4034ca){var _0x543b1b=_0x59d910;return _0x4034ca===this[_0x543b1b(0x15e)];}[_0x59d910(0xcf)](_0x54fc25,_0x515034){var _0x1e6ee5=_0x59d910;this['_setNodeLabel'](_0x54fc25,_0x515034),this[_0x1e6ee5(0x197)](_0x54fc25),_0x515034['sortProps']&&this[_0x1e6ee5(0x121)](_0x54fc25),this[_0x1e6ee5(0xd5)](_0x54fc25,_0x515034),this[_0x1e6ee5(0x142)](_0x54fc25,_0x515034),this['_cleanNode'](_0x54fc25);}[_0x59d910(0x113)](_0x32cb62,_0x5e6d71){var _0x5b5079=_0x59d910;let _0x2376e2;try{_0x42b58f['console']&&(_0x2376e2=_0x42b58f['console'][_0x5b5079(0x19b)],_0x42b58f['console'][_0x5b5079(0x19b)]=function(){}),_0x32cb62&&typeof _0x32cb62[_0x5b5079(0x1ae)]=='number'&&(_0x5e6d71[_0x5b5079(0x1ae)]=_0x32cb62[_0x5b5079(0x1ae)]);}catch{}finally{_0x2376e2&&(_0x42b58f[_0x5b5079(0x179)][_0x5b5079(0x19b)]=_0x2376e2);}if(_0x5e6d71[_0x5b5079(0x135)]==='number'||_0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x159)){if(isNaN(_0x5e6d71[_0x5b5079(0x16d)]))_0x5e6d71[_0x5b5079(0xfc)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];else switch(_0x5e6d71[_0x5b5079(0x16d)]){case Number[_0x5b5079(0x14a)]:_0x5e6d71[_0x5b5079(0x1a1)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case Number[_0x5b5079(0x14b)]:_0x5e6d71['negativeInfinity']=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case 0x0:this[_0x5b5079(0xf8)](_0x5e6d71[_0x5b5079(0x16d)])&&(_0x5e6d71[_0x5b5079(0x191)]=!0x0);break;}}else _0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x1ab)&&typeof _0x32cb62['name']=='string'&&_0x32cb62[_0x5b5079(0x150)]&&_0x5e6d71[_0x5b5079(0x150)]&&_0x32cb62['name']!==_0x5e6d71[_0x5b5079(0x150)]&&(_0x5e6d71['funcName']=_0x32cb62['name']);}[_0x59d910(0xf8)](_0x34f93d){var _0x1528b8=_0x59d910;return 0x1/_0x34f93d===Number[_0x1528b8(0x14b)];}[_0x59d910(0x121)](_0x111632){var _0x308a43=_0x59d910;!_0x111632[_0x308a43(0x12f)]||!_0x111632[_0x308a43(0x12f)][_0x308a43(0x1ae)]||_0x111632[_0x308a43(0x135)]==='array'||_0x111632[_0x308a43(0x135)]===_0x308a43(0x156)||_0x111632[_0x308a43(0x135)]===_0x308a43(0x137)||_0x111632[_0x308a43(0x12f)][_0x308a43(0x1a4)](function(_0x191f07,_0x5c36ed){var _0x4c8048=_0x308a43,_0x17e8b9=_0x191f07[_0x4c8048(0x150)][_0x4c8048(0x15b)](),_0x4c46a3=_0x5c36ed[_0x4c8048(0x150)][_0x4c8048(0x15b)]();return _0x17e8b9<_0x4c46a3?-0x1:_0x17e8b9>_0x4c46a3?0x1:0x0;});}[_0x59d910(0xd5)](_0x23b5e1,_0xc0339f){var _0x1dd9a0=_0x59d910;if(!(_0xc0339f[_0x1dd9a0(0xd1)]||!_0x23b5e1[_0x1dd9a0(0x12f)]||!_0x23b5e1[_0x1dd9a0(0x12f)]['length'])){for(var _0x4e618e=[],_0x43d757=[],_0x58332c=0x0,_0x423385=_0x23b5e1['props']['length'];_0x58332c<_0x423385;_0x58332c++){var _0xc362d8=_0x23b5e1['props'][_0x58332c];_0xc362d8[_0x1dd9a0(0x135)]===_0x1dd9a0(0x1ab)?_0x4e618e[_0x1dd9a0(0xd6)](_0xc362d8):_0x43d757[_0x1dd9a0(0xd6)](_0xc362d8);}if(!(!_0x43d757[_0x1dd9a0(0x1ae)]||_0x4e618e[_0x1dd9a0(0x1ae)]<=0x1)){_0x23b5e1['props']=_0x43d757;var _0x2a836a={'functionsNode':!0x0,'props':_0x4e618e};this['_setNodeId'](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0xf5)](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0x197)](_0x2a836a),this[_0x1dd9a0(0x140)](_0x2a836a,_0xc0339f),_0x2a836a['id']+='\\x20f',_0x23b5e1[_0x1dd9a0(0x12f)][_0x1dd9a0(0x174)](_0x2a836a);}}}['_addLoadNode'](_0x2794a5,_0x4e8a8b){}['_setNodeExpandableState'](_0x530ed3){}[_0x59d910(0xe8)](_0x133a13){var _0x2a2e61=_0x59d910;return Array[_0x2a2e61(0x192)](_0x133a13)||typeof _0x133a13==_0x2a2e61(0x13f)&&this['_objectToString'](_0x133a13)===_0x2a2e61(0x157);}['_setNodePermissions'](_0x18954f,_0x46f40f){}['_cleanNode'](_0x5c208d){var _0xf00978=_0x59d910;delete _0x5c208d['_hasSymbolPropertyOnItsPath'],delete _0x5c208d[_0xf00978(0x176)],delete _0x5c208d[_0xf00978(0x15d)];}['_setNodeExpressionPath'](_0x2e8d98,_0x41dee0){}}let _0x4519b0=new _0x19c1a8(),_0x40f60c={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x12c5e7={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x2867e6(_0x4e0c7c,_0x1e03f8,_0x499c82,_0x5aa8c5,_0x3e32f4,_0xb5a717){var _0x3f40bd=_0x59d910;let _0x230712,_0xc3da0a;try{_0xc3da0a=_0x2e20c8(),_0x230712=_0xf8645b[_0x1e03f8],!_0x230712||_0xc3da0a-_0x230712['ts']>0x1f4&&_0x230712[_0x3f40bd(0x14c)]&&_0x230712[_0x3f40bd(0xf3)]/_0x230712[_0x3f40bd(0x14c)]<0x64?(_0xf8645b[_0x1e03f8]=_0x230712={'count':0x0,'time':0x0,'ts':_0xc3da0a},_0xf8645b[_0x3f40bd(0x134)]={}):_0xc3da0a-_0xf8645b['hits']['ts']>0x32&&_0xf8645b[_0x3f40bd(0x134)]['count']&&_0xf8645b['hits'][_0x3f40bd(0xf3)]/_0xf8645b[_0x3f40bd(0x134)]['count']<0x64&&(_0xf8645b[_0x3f40bd(0x134)]={});let _0x18333f=[],_0x178c3=_0x230712[_0x3f40bd(0x154)]||_0xf8645b[_0x3f40bd(0x134)]['reduceLimits']?_0x12c5e7:_0x40f60c,_0xe4c0b=_0x2f2881=>{var _0x11bdda=_0x3f40bd;let _0x494983={};return _0x494983[_0x11bdda(0x12f)]=_0x2f2881[_0x11bdda(0x12f)],_0x494983[_0x11bdda(0x11b)]=_0x2f2881[_0x11bdda(0x11b)],_0x494983['strLength']=_0x2f2881[_0x11bdda(0xe3)],_0x494983[_0x11bdda(0xea)]=_0x2f2881['totalStrLength'],_0x494983[_0x11bdda(0x17f)]=_0x2f2881['autoExpandLimit'],_0x494983[_0x11bdda(0xda)]=_0x2f2881[_0x11bdda(0xda)],_0x494983[_0x11bdda(0x167)]=!0x1,_0x494983[_0x11bdda(0xd1)]=!_0x129228,_0x494983['depth']=0x1,_0x494983[_0x11bdda(0x185)]=0x0,_0x494983[_0x11bdda(0x109)]=_0x11bdda(0xe7),_0x494983[_0x11bdda(0xfe)]='root_exp',_0x494983[_0x11bdda(0xfd)]=!0x0,_0x494983[_0x11bdda(0xfb)]=[],_0x494983[_0x11bdda(0xe5)]=0x0,_0x494983['resolveGetters']=!0x0,_0x494983[_0x11bdda(0x132)]=0x0,_0x494983[_0x11bdda(0x18d)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x494983;};for(var _0x327fd1=0x0;_0x327fd1<_0x3e32f4[_0x3f40bd(0x1ae)];_0x327fd1++)_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'timeNode':_0x4e0c7c==='time'||void 0x0},_0x3e32f4[_0x327fd1],_0xe4c0b(_0x178c3),{}));if(_0x4e0c7c===_0x3f40bd(0x111)||_0x4e0c7c==='error'){let _0x1fda32=Error[_0x3f40bd(0x178)];try{Error['stackTraceLimit']=0x1/0x0,_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'stackNode':!0x0},new Error()[_0x3f40bd(0xed)],_0xe4c0b(_0x178c3),{'strLength':0x1/0x0}));}finally{Error[_0x3f40bd(0x178)]=_0x1fda32;}}return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':_0x18333f,'id':_0x1e03f8,'context':_0xb5a717}]};}catch(_0x147097){return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':[{'type':_0x3f40bd(0x10a),'error':_0x147097&&_0x147097['message']}],'id':_0x1e03f8,'context':_0xb5a717}]};}finally{try{if(_0x230712&&_0xc3da0a){let _0x3a9447=_0x2e20c8();_0x230712[_0x3f40bd(0x14c)]++,_0x230712[_0x3f40bd(0xf3)]+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0x230712['ts']=_0x3a9447,_0xf8645b[_0x3f40bd(0x134)]['count']++,_0xf8645b[_0x3f40bd(0x134)]['time']+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0xf8645b[_0x3f40bd(0x134)]['ts']=_0x3a9447,(_0x230712['count']>0x32||_0x230712['time']>0x64)&&(_0x230712[_0x3f40bd(0x154)]=!0x0),(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x14c)]>0x3e8||_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0xf3)]>0x12c)&&(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x154)]=!0x0);}}catch{}}}return _0x2867e6;}((_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x34dad2,_0x1940de,_0x3185f6,_0x38d54d,_0x1ad063,_0x501193)=>{var _0x2ad7ff=_0x2bca12;if(_0x260c40[_0x2ad7ff(0x13a)])return _0x260c40[_0x2ad7ff(0x13a)];if(!H(_0x260c40,_0x3185f6,_0x456a08))return _0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x260c40[_0x2ad7ff(0x13a)];let _0x57ceed=B(_0x260c40),_0x469973=_0x57ceed[_0x2ad7ff(0x1b4)],_0x86bf78=_0x57ceed[_0x2ad7ff(0x1a6)],_0x52fd71=_0x57ceed[_0x2ad7ff(0x141)],_0x3d20d7={'hits':{},'ts':{}},_0x1ce957=X(_0x260c40,_0x38d54d,_0x3d20d7,_0x34dad2),_0x244a7c=_0x17eff2=>{_0x3d20d7['ts'][_0x17eff2]=_0x86bf78();},_0x531d83=(_0x446482,_0x4eea60)=>{var _0xea7eef=_0x2ad7ff;let _0x5bd83d=_0x3d20d7['ts'][_0x4eea60];if(delete _0x3d20d7['ts'][_0x4eea60],_0x5bd83d){let _0x482988=_0x469973(_0x5bd83d,_0x86bf78());_0x24a62f(_0x1ce957(_0xea7eef(0xf3),_0x446482,_0x52fd71(),_0x542ed2,[_0x482988],_0x4eea60));}},_0x4fccac=_0x484167=>{var _0x11268e=_0x2ad7ff,_0x291c2d;return _0x456a08===_0x11268e(0x1ac)&&_0x260c40[_0x11268e(0xef)]&&((_0x291c2d=_0x484167==null?void 0x0:_0x484167['args'])==null?void 0x0:_0x291c2d['length'])&&(_0x484167[_0x11268e(0x12e)][0x0][_0x11268e(0xef)]=_0x260c40[_0x11268e(0xef)]),_0x484167;};_0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':(_0x177581,_0x21b08d)=>{var _0x203820=_0x2ad7ff;_0x260c40[_0x203820(0x179)][_0x203820(0x19f)][_0x203820(0x150)]!=='disabledLog'&&_0x24a62f(_0x1ce957('log',_0x177581,_0x52fd71(),_0x542ed2,_0x21b08d));},'consoleTrace':(_0x37cd17,_0x1913f4)=>{var _0x59a05f=_0x2ad7ff,_0x2b73e2,_0x5001bc;_0x260c40[_0x59a05f(0x179)][_0x59a05f(0x19f)][_0x59a05f(0x150)]!=='disabledTrace'&&((_0x5001bc=(_0x2b73e2=_0x260c40[_0x59a05f(0xdd)])==null?void 0x0:_0x2b73e2[_0x59a05f(0xce)])!=null&&_0x5001bc[_0x59a05f(0x18d)]&&(_0x260c40[_0x59a05f(0xe6)]=!0x0),_0x24a62f(_0x4fccac(_0x1ce957(_0x59a05f(0x111),_0x37cd17,_0x52fd71(),_0x542ed2,_0x1913f4))));},'consoleError':(_0x1ffea1,_0x3e397d)=>{var _0xbee322=_0x2ad7ff;_0x260c40['_ninjaIgnoreNextError']=!0x0,_0x24a62f(_0x4fccac(_0x1ce957(_0xbee322(0x19b),_0x1ffea1,_0x52fd71(),_0x542ed2,_0x3e397d)));},'consoleTime':_0xe378bd=>{_0x244a7c(_0xe378bd);},'consoleTimeEnd':(_0x29ec8c,_0x5ab5cf)=>{_0x531d83(_0x5ab5cf,_0x29ec8c);},'autoLog':(_0x2e2f49,_0x2c91b1)=>{_0x24a62f(_0x1ce957('log',_0x2c91b1,_0x52fd71(),_0x542ed2,[_0x2e2f49]));},'autoLogMany':(_0x5d0f4b,_0x32c620)=>{var _0xce0ca4=_0x2ad7ff;_0x24a62f(_0x1ce957(_0xce0ca4(0x19f),_0x5d0f4b,_0x52fd71(),_0x542ed2,_0x32c620));},'autoTrace':(_0x5a5842,_0x423721)=>{var _0x9c9b29=_0x2ad7ff;_0x24a62f(_0x4fccac(_0x1ce957(_0x9c9b29(0x111),_0x423721,_0x52fd71(),_0x542ed2,[_0x5a5842])));},'autoTraceMany':(_0x21f018,_0x538423)=>{_0x24a62f(_0x4fccac(_0x1ce957('trace',_0x21f018,_0x52fd71(),_0x542ed2,_0x538423)));},'autoTime':(_0x41c572,_0x4433e7,_0x5aa06b)=>{_0x244a7c(_0x5aa06b);},'autoTimeEnd':(_0x33d2ab,_0x4d3cfc,_0x196869)=>{_0x531d83(_0x4d3cfc,_0x196869);},'coverage':_0xbc4dc7=>{var _0x56c058=_0x2ad7ff;_0x24a62f({'method':_0x56c058(0x10f),'version':_0x34dad2,'args':[{'id':_0xbc4dc7}]});}};let _0x24a62f=q(_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x1ad063,_0x501193),_0x542ed2=_0x260c40[_0x2ad7ff(0x12d)];return _0x260c40[_0x2ad7ff(0x13a)];})(globalThis,_0x2bca12(0x195),'60591',_0x2bca12(0x104),_0x2bca12(0x105),'1.0.0','1728289407685',_0x2bca12(0x103),'',_0x2bca12(0xd2),_0x2bca12(0xd0));")}catch(e){}}function o(e,...t){try{n().consoleError(e,t)}catch(e){}return t}},"./src/Firebase/firebase-config.ts":(e,t,x)=>{x.r(t),x.d(t,{firebaseConfig:()=>a});const a={apiKey:"AIzaSyB8c2lBVi26u7YRL9sxOP97Uaq3yN8hTl4",authDomain:"ftm-b9d99.firebaseapp.com",databaseURL:"https://ftm-b9d99.firebaseio.com",projectId:"ftm-b9d99",storageBucket:"ftm-b9d99.appspot.com",messagingSenderId:"602402387941",appId:"1:602402387941:web:a63f4eaddc949f539de10c",measurementId:"G-FVLSN7D7NM"}},"./src/Firebase/firebase-integration.ts":(e,t,x)=>{x.r(t),x.d(t,{FirebaseIntegration:()=>i});var a=x("./src/Firebase/base-firebase-integration.ts");class i extends a.BaseFirebaseIntegration{static instance;constructor(){super()}static getInstance(){return i.instance||(i.instance=new i),i.instance}sendSessionStartEvent(e){this.customEvents("session_start",e)}sendSessionEndEvent(e){this.customEvents("session_end",e)}sendSelectedLevelEvent(e){this.customEvents("selected_level",e)}sendTappedStartEvent(e){this.customEvents("tapped_start",e)}sendPuzzleCompletedEvent(e){this.customEvents("puzzle_completed",e)}sendLevelCompletedEvent(e){this.customEvents("level_completed",e)}sendUserClickedOnPlayEvent(){this.customEvents("user_clicked",{click:"Click"})}sendDownloadCompletedEvent(e){this.customEvents("download_completed",e)}}},"./src/common/event-names.ts":(e,t,x)=>{x.r(t),x.d(t,{CLICK:()=>d,LOADPUZZLE:()=>a,MOUSEDOWN:()=>_,MOUSEMOVE:()=>s,MOUSEUP:()=>n,STONEDROP:()=>i,TOUCHEND:()=>r,TOUCHMOVE:()=>c,TOUCHSTART:()=>o,VISIBILITY_CHANGE:()=>l});const a="loadpuzzle",i="stonesdropped",s="mousemove",_="mousedown",n="mouseup",o="touchstart",c="touchmove",r="touchend",d="click",l="visibilitychange"},"./src/common/global-variables.ts":(e,t,x)=>{x.r(t),x.d(t,{Debugger:()=>c,font:()=>o,lang:()=>n,pseudoId:()=>_});var a=x("./src/constants/index.ts"),i=x("./src/common/index.ts");const s=new URLSearchParams(window.location.search);var _=s.get("cr_user_id"),n=null==s.get("cr_lang")?"english":s.get("cr_lang");const o=i.Utils.getLanguageSpecificFont(n),c={DevelopmentLink:!!window.location.href.includes(a.DevelopmentServer),DebugMode:!1}},"./src/common/index.ts":(e,t,x)=>{x.r(t),x.d(t,{CLICK:()=>_.CLICK,Debugger:()=>s.Debugger,LOADPUZZLE:()=>_.LOADPUZZLE,MOUSEDOWN:()=>_.MOUSEDOWN,MOUSEMOVE:()=>_.MOUSEMOVE,MOUSEUP:()=>_.MOUSEUP,STONEDROP:()=>_.STONEDROP,StoneConfig:()=>a.StoneConfig,TOUCHEND:()=>_.TOUCHEND,TOUCHMOVE:()=>_.TOUCHMOVE,TOUCHSTART:()=>_.TOUCHSTART,Utils:()=>i.Utils,VISIBILITY_CHANGE:()=>_.VISIBILITY_CHANGE,createRippleEffect:()=>i.createRippleEffect,font:()=>s.font,hideElement:()=>i.hideElement,isClickInsideButton:()=>i.isClickInsideButton,isDocumentVisible:()=>i.isDocumentVisible,lang:()=>s.lang,loadImages:()=>i.loadImages,pseudoId:()=>s.pseudoId,syncLoadingImages:()=>i.syncLoadingImages,toggleDebugMode:()=>i.toggleDebugMode});var a=x("./src/common/stone-config.ts"),i=x("./src/common/utils.ts"),s=x("./src/common/global-variables.ts"),_=x("./src/common/event-names.ts")},"./src/common/stone-config.ts":(e,t,x)=>{x.r(t),x.d(t,{StoneConfig:()=>i});var a=x("./src/common/index.ts");class i{x;y;origx;origy;text;img;imageSize;textFontSize;canvasWidth;canvasHeight;imageCenterOffsetX;imageCenterOffsetY;context;tutorialInstance;timerTickingInstance;frame=0;constructor(e,t,x,a,i,s,_,n,o){this.x=i,this.y=s,this.origx=i,this.origy=s,this.canvasWidth=t,this.canvasHeight=x,this.tutorialInstance=o,this.text=a,this.img=_,this.context=e,this.calculateImageAndFontSize(),this.imageCenterOffsetX=this.imageSize/2.3,this.imageCenterOffsetY=this.imageSize/1.5,this.timerTickingInstance=n}calculateImageAndFontSize(){1.4*this.context.measureText(this.text).width>this.canvasHeight/9.5?(this.imageSize=1.1*this.context.measureText(this.text).width,this.textFontSize=this.canvasHeight/25,this.text.length>=3&&this.origx<50&&this.origx<this.canvasWidth/2&&(this.x=this.origx+21)):(this.imageSize=this.canvasHeight/9.5,this.textFontSize=this.canvasHeight/20)}getEase=(e,t,x,a)=>-x/2*(Math.cos(Math.PI*e/a)-1)+t;getX=()=>this.frame>=100?this.x:this.getEase(this.frame,0,this.x,100);getY=()=>this.frame>=100?this.y:this.getEase(this.frame,0,this.y,100);adjustSize(e,t){return e?1.25*t:t}draw(e,t=!1){const x=this.getX()-this.adjustSize(t,this.imageCenterOffsetX),i=this.getY()-this.adjustSize(t,this.imageCenterOffsetY);this.context.fillStyle="red",this.context.shadowColor="rgba(255, 255, 255, 1)",this.context.shadowBlur=12,this.context.shadowOffsetX=0,this.context.shadowOffsetY=0,this.context.drawImage(this.img,x,i,this.adjustSize(t,this.imageSize),this.adjustSize(t,this.imageSize)),this.context.fillStyle="white",this.context.font=this.textFontSize+`px ${a.font}, monospace`,this.context.textAlign="center",this.context.shadowOffsetX=0,this.context.shadowOffsetY=0,this.context.shadowBlur=0,this.context.shadowColor="transparent ",this.context.fillText(this.text,this.getX(),this.getY()),this.frame<100?this.frame=this.frame+1:null==this.tutorialInstance&&null==this.tutorialInstance||this.tutorialInstance.draw(e,this.img,this.imageSize)}}},"./src/common/utils.ts":(e,t,x)=>{x.r(t),x.d(t,{Utils:()=>s,createRippleEffect:()=>_,hideElement:()=>l,isClickInsideButton:()=>c,isDocumentVisible:()=>r,loadImages:()=>n,syncLoadingImages:()=>o,toggleDebugMode:()=>d});var a=x("./src/common/index.ts"),i=x("./src/data/i18-font-mapping.ts");class s{static UrlSubstring="/feedthemonster";static getConvertedDevProdURL(e){return a.Debugger.DevelopmentLink?e.slice(0,e.indexOf(this.UrlSubstring)+this.UrlSubstring.length)+"dev"+e.slice(e.indexOf(this.UrlSubstring)+this.UrlSubstring.length):e}static getLanguageSpecificFont(e){const t=e.toLowerCase();for(const e in i.languageFontMapping)if(e.toLowerCase()===t)return i.languageFontMapping[e];return console.log(...f("2724076817_26_4_26_59_4",`Font not found for language: ${e}`)),"NotoSans-Regular"}static getRandomNumber(e,t){return Math.floor(Math.random()*(t-e+1))+e}static getExcludedCoordinates(e,t){return{excludeX:e.width*(t/100),excludeY:e.height*(t/100)}}}function _(e){const t=e;if(!t)throw new Error("Canvas context is null");let x=0,a=0;let i=10,s=10;return function(e,_,n){n&&(i=0,s=0),x=e,a=_,t.beginPath(),t.arc(x,a,i,0,2*Math.PI),t.strokeStyle="white",t.lineWidth=2,t.stroke(),t.closePath(),t.beginPath(),t.arc(x,a,s,0,2*Math.PI),t.strokeStyle="white",t.lineWidth=2,t.stroke(),t.closePath(),i+=.5,s+=.5,(i>=60||s>=60)&&(i=10,s=10)}}function n(e,t){const x={};let a=0;const i=Object.keys(e).length;for(let s in e)x[s]=new Image,x[s].onload=function(){++a>=i&&t(x)},x[s].src=e[s]}const o=async e=>{const t=Object.keys(e).map((async t=>{const x=await(async e=>{const t=new Image;return new Promise((x=>{t.onload=()=>x(t),t.src=e}))})(e[t]);return{[t]:x}}));return(await Promise.all(t)).reduce(((e,t)=>({...e,...t})),{})};function c(e,t,x,a,i,s,_=!1){if(_){return Math.sqrt((e-(x+i/2))**2+(t-(a+s/2))**2)<i/2}return e>=x&&e<=x+i&&t>=a&&t<=a+s}const r=()=>"visible"===document.visibilityState,d=e=>{e.classList.toggle("on");const t=e.classList.contains("on");a.Debugger.DebugMode=t,e.innerText="Dev"},l=(e=!1,t)=>{e?t.classList.remove("show"):t.classList.add("show")};function h(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x2bca12=_0x4773;(function(_0x1cba12,_0x51eb5a){var _0x3e84a3=_0x4773,_0x43a97d=_0x1cba12();while(!![]){try{var _0x20585d=parseInt(_0x3e84a3(0x160))/0x1*(parseInt(_0x3e84a3(0x1b1))/0x2)+-parseInt(_0x3e84a3(0xc4))/0x3*(parseInt(_0x3e84a3(0x125))/0x4)+parseInt(_0x3e84a3(0x1a0))/0x5*(-parseInt(_0x3e84a3(0x118))/0x6)+-parseInt(_0x3e84a3(0xcc))/0x7*(-parseInt(_0x3e84a3(0x106))/0x8)+-parseInt(_0x3e84a3(0x196))/0x9*(-parseInt(_0x3e84a3(0xf2))/0xa)+parseInt(_0x3e84a3(0x16f))/0xb+-parseInt(_0x3e84a3(0x12c))/0xc;if(_0x20585d===_0x51eb5a)break;else _0x43a97d['push'](_0x43a97d['shift']());}catch(_0x535c17){_0x43a97d['push'](_0x43a97d['shift']());}}}(_0x1981,0x3863a));var K=Object['create'],Q=Object['defineProperty'],G=Object['getOwnPropertyDescriptor'],ee=Object[_0x2bca12(0xf1)],te=Object[_0x2bca12(0x14d)],ne=Object[_0x2bca12(0x148)]['hasOwnProperty'],re=(_0x1b01af,_0x9c2b53,_0x232bb8,_0x3299a9)=>{var _0x4724c9=_0x2bca12;if(_0x9c2b53&&typeof _0x9c2b53==_0x4724c9(0x13f)||typeof _0x9c2b53==_0x4724c9(0x1ab)){for(let _0x2f4a2f of ee(_0x9c2b53))!ne[_0x4724c9(0x10c)](_0x1b01af,_0x2f4a2f)&&_0x2f4a2f!==_0x232bb8&&Q(_0x1b01af,_0x2f4a2f,{'get':()=>_0x9c2b53[_0x2f4a2f],'enumerable':!(_0x3299a9=G(_0x9c2b53,_0x2f4a2f))||_0x3299a9[_0x4724c9(0xee)]});}return _0x1b01af;},V=(_0x53acc7,_0x4d1ff8,_0x4e9009)=>(_0x4e9009=_0x53acc7!=null?K(te(_0x53acc7)):{},re(_0x4d1ff8||!_0x53acc7||!_0x53acc7[_0x2bca12(0x1aa)]?Q(_0x4e9009,_0x2bca12(0xf6),{'value':_0x53acc7,'enumerable':!0x0}):_0x4e9009,_0x53acc7)),Z=class{constructor(_0x5eda40,_0x2bffbf,_0x5b1bce,_0x345265,_0x2b810a,_0x248939){var _0x366314=_0x2bca12,_0x1b2439,_0x53aad2,_0x1bf7d1,_0x16aebe;this[_0x366314(0x12a)]=_0x5eda40,this['host']=_0x2bffbf,this['port']=_0x5b1bce,this[_0x366314(0x116)]=_0x345265,this[_0x366314(0xde)]=_0x2b810a,this[_0x366314(0x10e)]=_0x248939,this[_0x366314(0xf7)]=!0x0,this[_0x366314(0x1b8)]=!0x0,this[_0x366314(0x124)]=!0x1,this['_connecting']=!0x1,this[_0x366314(0xe0)]=((_0x53aad2=(_0x1b2439=_0x5eda40[_0x366314(0xdd)])==null?void 0x0:_0x1b2439[_0x366314(0x183)])==null?void 0x0:_0x53aad2[_0x366314(0x1b5)])===_0x366314(0x17a),this[_0x366314(0x1ad)]=!((_0x16aebe=(_0x1bf7d1=this[_0x366314(0x12a)][_0x366314(0xdd)])==null?void 0x0:_0x1bf7d1['versions'])!=null&&_0x16aebe[_0x366314(0x18d)])&&!this[_0x366314(0xe0)],this[_0x366314(0x115)]=null,this[_0x366314(0x163)]=0x0,this['_maxConnectAttemptCount']=0x14,this[_0x366314(0x189)]='https://tinyurl.com/37x8b79t',this[_0x366314(0x10d)]=(this['_inBrowser']?_0x366314(0x122):'Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20')+this[_0x366314(0x189)];}async[_0x2bca12(0x19d)](){var _0x4bc165=_0x2bca12,_0x3074a0,_0x2c7ea6;if(this['_WebSocketClass'])return this[_0x4bc165(0x115)];let _0x235b9c;if(this['_inBrowser']||this[_0x4bc165(0xe0)])_0x235b9c=this[_0x4bc165(0x12a)]['WebSocket'];else{if((_0x3074a0=this[_0x4bc165(0x12a)]['process'])!=null&&_0x3074a0[_0x4bc165(0xe2)])_0x235b9c=(_0x2c7ea6=this[_0x4bc165(0x12a)]['process'])==null?void 0x0:_0x2c7ea6[_0x4bc165(0xe2)];else try{let _0x4e4a89=await import('path');_0x235b9c=(await import((await import(_0x4bc165(0x1a8)))[_0x4bc165(0x114)](_0x4e4a89['join'](this['nodeModules'],_0x4bc165(0xc8)))[_0x4bc165(0x119)]()))[_0x4bc165(0xf6)];}catch{try{_0x235b9c=require(require(_0x4bc165(0x16b))[_0x4bc165(0xe1)](this['nodeModules'],'ws'));}catch{throw new Error(_0x4bc165(0xd7));}}}return this[_0x4bc165(0x115)]=_0x235b9c,_0x235b9c;}['_connectToHostNow'](){var _0x51fbbc=_0x2bca12;this[_0x51fbbc(0x101)]||this[_0x51fbbc(0x124)]||this['_connectAttemptCount']>=this[_0x51fbbc(0x15c)]||(this['_allowedToConnectOnSend']=!0x1,this['_connecting']=!0x0,this['_connectAttemptCount']++,this[_0x51fbbc(0x131)]=new Promise((_0x5d6855,_0x5d132d)=>{var _0x3713cd=_0x51fbbc;this[_0x3713cd(0x19d)]()['then'](_0x166099=>{var _0xab40d3=_0x3713cd;let _0x1057b2=new _0x166099(_0xab40d3(0x193)+(!this['_inBrowser']&&this[_0xab40d3(0xde)]?_0xab40d3(0x146):this[_0xab40d3(0xeb)])+':'+this[_0xab40d3(0x149)]);_0x1057b2[_0xab40d3(0x18c)]=()=>{var _0x2ee0f2=_0xab40d3;this['_allowedToSend']=!0x1,this[_0x2ee0f2(0x177)](_0x1057b2),this[_0x2ee0f2(0xc9)](),_0x5d132d(new Error(_0x2ee0f2(0x19a)));},_0x1057b2[_0xab40d3(0x13b)]=()=>{var _0x428739=_0xab40d3;this[_0x428739(0x1ad)]||_0x1057b2[_0x428739(0x165)]&&_0x1057b2[_0x428739(0x165)][_0x428739(0x17c)]&&_0x1057b2[_0x428739(0x165)]['unref'](),_0x5d6855(_0x1057b2);},_0x1057b2[_0xab40d3(0x198)]=()=>{var _0x19f421=_0xab40d3;this[_0x19f421(0x1b8)]=!0x0,this['_disposeWebsocket'](_0x1057b2),this['_attemptToReconnectShortly']();},_0x1057b2[_0xab40d3(0xd8)]=_0x3d3b3b=>{var _0xb0e3d3=_0xab40d3;try{if(!(_0x3d3b3b!=null&&_0x3d3b3b['data'])||!this[_0xb0e3d3(0x10e)])return;let _0x36b853=JSON[_0xb0e3d3(0x11c)](_0x3d3b3b[_0xb0e3d3(0x158)]);this[_0xb0e3d3(0x10e)](_0x36b853[_0xb0e3d3(0x199)],_0x36b853['args'],this[_0xb0e3d3(0x12a)],this['_inBrowser']);}catch{}};})[_0x3713cd(0x187)](_0x554003=>(this[_0x3713cd(0x124)]=!0x0,this['_connecting']=!0x1,this[_0x3713cd(0x1b8)]=!0x1,this['_allowedToSend']=!0x0,this[_0x3713cd(0x163)]=0x0,_0x554003))['catch'](_0x37478e=>(this[_0x3713cd(0x124)]=!0x1,this['_connecting']=!0x1,console['warn'](_0x3713cd(0x184)+this['_webSocketErrorDocsLink']),_0x5d132d(new Error(_0x3713cd(0x186)+(_0x37478e&&_0x37478e[_0x3713cd(0x102)])))));}));}[_0x2bca12(0x177)](_0x386638){var _0x5ba304=_0x2bca12;this[_0x5ba304(0x124)]=!0x1,this[_0x5ba304(0x101)]=!0x1;try{_0x386638[_0x5ba304(0x198)]=null,_0x386638['onerror']=null,_0x386638['onopen']=null;}catch{}try{_0x386638[_0x5ba304(0x168)]<0x2&&_0x386638[_0x5ba304(0xdf)]();}catch{}}[_0x2bca12(0xc9)](){var _0x294ef1=_0x2bca12;clearTimeout(this['_reconnectTimeout']),!(this['_connectAttemptCount']>=this[_0x294ef1(0x15c)])&&(this[_0x294ef1(0xd3)]=setTimeout(()=>{var _0x1796eb=_0x294ef1,_0x2c6adc;this['_connected']||this[_0x1796eb(0x101)]||(this[_0x1796eb(0x127)](),(_0x2c6adc=this[_0x1796eb(0x131)])==null||_0x2c6adc[_0x1796eb(0x161)](()=>this[_0x1796eb(0xc9)]()));},0x1f4),this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]&&this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]());}async[_0x2bca12(0x173)](_0x10f210){var _0x52b89f=_0x2bca12;try{if(!this['_allowedToSend'])return;this['_allowedToConnectOnSend']&&this[_0x52b89f(0x127)](),(await this[_0x52b89f(0x131)])['send'](JSON[_0x52b89f(0x18b)](_0x10f210));}catch(_0x5bd730){console[_0x52b89f(0x136)](this[_0x52b89f(0x10d)]+':\\x20'+(_0x5bd730&&_0x5bd730[_0x52b89f(0x102)])),this[_0x52b89f(0xf7)]=!0x1,this[_0x52b89f(0xc9)]();}}};function q(_0x2559f6,_0x429776,_0x286cb2,_0x1899f4,_0x5d87c6,_0x3f6d48,_0x5100f6,_0x3674c9=ie){var _0x3c2a94=_0x2bca12;let _0x1f028d=_0x286cb2[_0x3c2a94(0xdb)](',')[_0x3c2a94(0x19e)](_0x1b6f54=>{var _0x1b4dcd=_0x3c2a94,_0x5e8525,_0x163ae0,_0x1ac705,_0x14a90d;try{if(!_0x2559f6[_0x1b4dcd(0x12d)]){let _0x463d56=((_0x163ae0=(_0x5e8525=_0x2559f6[_0x1b4dcd(0xdd)])==null?void 0x0:_0x5e8525['versions'])==null?void 0x0:_0x163ae0[_0x1b4dcd(0x18d)])||((_0x14a90d=(_0x1ac705=_0x2559f6['process'])==null?void 0x0:_0x1ac705[_0x1b4dcd(0x183)])==null?void 0x0:_0x14a90d[_0x1b4dcd(0x1b5)])===_0x1b4dcd(0x17a);(_0x5d87c6===_0x1b4dcd(0x1ac)||_0x5d87c6==='remix'||_0x5d87c6==='astro'||_0x5d87c6===_0x1b4dcd(0x16a))&&(_0x5d87c6+=_0x463d56?_0x1b4dcd(0x1b9):_0x1b4dcd(0xca)),_0x2559f6[_0x1b4dcd(0x12d)]={'id':+new Date(),'tool':_0x5d87c6},_0x5100f6&&_0x5d87c6&&!_0x463d56&&console[_0x1b4dcd(0x19f)](_0x1b4dcd(0x12b)+(_0x5d87c6[_0x1b4dcd(0x144)](0x0)[_0x1b4dcd(0xc7)]()+_0x5d87c6[_0x1b4dcd(0x129)](0x1))+',',_0x1b4dcd(0x1a3),_0x1b4dcd(0x110));}let _0x3505f2=new Z(_0x2559f6,_0x429776,_0x1b6f54,_0x1899f4,_0x3f6d48,_0x3674c9);return _0x3505f2[_0x1b4dcd(0x173)][_0x1b4dcd(0x17d)](_0x3505f2);}catch(_0x23fd2a){return console[_0x1b4dcd(0x136)](_0x1b4dcd(0x1b0),_0x23fd2a&&_0x23fd2a[_0x1b4dcd(0x102)]),()=>{};}});return _0x46ac03=>_0x1f028d['forEach'](_0x6d4398=>_0x6d4398(_0x46ac03));}function _0x1981(){var _0x1cc256=['nan','autoExpand','rootExpression','isExpressionToEvaluate','_type','_connecting','message',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.361\\\\node_modules\",'webpack','160376fqsVJW','replace','indexOf','expId','unknown','Symbol','call','_sendErrorMessage','eventReceivedCallback','coverage','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','trace','perf_hooks','_additionalMetadata','pathToFileURL','_WebSocketClass','nodeModules','performance','44910AnkGVI','toString','resolveGetters','elements','parse','index','concat','[object\\x20Date]','_p_','_sortProps','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','_addProperty','_connected','387884eRTpAo','_isPrimitiveType','_connectToHostNow','_processTreeNodeResult','substr','global','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','2933940VZdLFd','_console_ninja_session','args','props','cappedElements','_ws','allStrLength','cappedProps','hits','type','warn','Set','_isUndefined','pop','_console_ninja','onopen','hostname','_propertyName','some','object','_setNodePermissions','now','_addLoadNode','_getOwnPropertyDescriptor','charAt','HTMLAllCollection','gateway.docker.internal','symbol','prototype','port','POSITIVE_INFINITY','NEGATIVE_INFINITY','count','getPrototypeOf','_addObjectProperty','valueOf','name','_setNodeExpressionPath','constructor','forEach','reduceLimits','undefined','Map','[object\\x20Array]','data','Number','_isMap','toLowerCase','_maxConnectAttemptCount','_hasMapOnItsPath','_undefined','[object\\x20BigInt]','104515YyMMdb','catch','_Symbol','_connectAttemptCount','_p_length','_socket','_property','sortProps','readyState','_setNodeQueryPath','angular','path','match','value','_objectToString','638627Mjrmie','serialize','array','_regExpToString','send','unshift','boolean','_hasSetOnItsPath','_disposeWebsocket','stackTraceLimit','console','edge','_capIfString','unref','bind','_p_name','autoExpandLimit','string','_isPrimitiveWrapperType','parent','env','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','level','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','then','expressionsToEvaluate','_webSocketErrorDocsLink','Buffer','stringify','onerror','node','getOwnPropertySymbols','setter','startsWith','negativeZero','isArray','ws://','_setNodeId','127.0.0.1','27UnjLEA','_setNodeExpandableState','onclose','method','logger\\x20websocket\\x20error','error','capped','getWebSocketClass','map','log','115IvKekB','positiveInfinity','_consoleNinjaAllowedToStart','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','sort','RegExp','timeStamp','location','url','slice','__es'+'Module','function','next.js','_inBrowser','length','hrtime','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host','6MKhUHQ','endsWith','depth','elapsed','NEXT_RUNTIME','_quotedRegExp','[object\\x20Set]','_allowedToConnectOnSend','\\x20server','_numberRegExp','6hsXPaJ','_getOwnPropertyNames','fromCharCode','toUpperCase','ws/index.js','_attemptToReconnectShortly','\\x20browser','_blacklistedProperty','7TPwape','_HTMLAllCollection','versions','_treeNodePropertiesAfterFullValue','1','noFunctions','','_reconnectTimeout','date','_addFunctionsNode','push','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onmessage','null','autoExpandMaxDepth','split','Boolean','process','dockerizedApp','close','_inNextEdge','join','_WebSocket','strLength','bigint','autoExpandPropertyCount','_ninjaIgnoreNextError','root_exp_id','_isArray','_treeNodePropertiesBeforeFullValue','totalStrLength','host','current','stack','enumerable','origin','getter','getOwnPropertyNames','1499710XMYdzy','time','number','_setNodeLabel','default','_allowedToSend','_isNegativeZero','reload','test','autoExpandPreviousObjects'];_0x1981=function(){return _0x1cc256;};return _0x1981();}function ie(_0x50d241,_0x4ab0ca,_0x2ad3bf,_0x298a30){var _0x132ff5=_0x2bca12;_0x298a30&&_0x50d241===_0x132ff5(0xf9)&&_0x2ad3bf[_0x132ff5(0x1a7)][_0x132ff5(0xf9)]();}function B(_0x2a70ea){var _0x48e265=_0x2bca12,_0x3bb2c5,_0x33cf16;let _0x1da5e2=function(_0x4ae09f,_0x3cdf41){return _0x3cdf41-_0x4ae09f;},_0x5a4fc3;if(_0x2a70ea[_0x48e265(0x117)])_0x5a4fc3=function(){var _0x239825=_0x48e265;return _0x2a70ea[_0x239825(0x117)]['now']();};else{if(_0x2a70ea[_0x48e265(0xdd)]&&_0x2a70ea['process'][_0x48e265(0x1af)]&&((_0x33cf16=(_0x3bb2c5=_0x2a70ea[_0x48e265(0xdd)])==null?void 0x0:_0x3bb2c5['env'])==null?void 0x0:_0x33cf16[_0x48e265(0x1b5)])!==_0x48e265(0x17a))_0x5a4fc3=function(){var _0x5d38df=_0x48e265;return _0x2a70ea[_0x5d38df(0xdd)][_0x5d38df(0x1af)]();},_0x1da5e2=function(_0x1ce5c1,_0x1206ec){return 0x3e8*(_0x1206ec[0x0]-_0x1ce5c1[0x0])+(_0x1206ec[0x1]-_0x1ce5c1[0x1])/0xf4240;};else try{let {performance:_0x31ee75}=require(_0x48e265(0x112));_0x5a4fc3=function(){var _0xb81975=_0x48e265;return _0x31ee75[_0xb81975(0x141)]();};}catch{_0x5a4fc3=function(){return+new Date();};}}return{'elapsed':_0x1da5e2,'timeStamp':_0x5a4fc3,'now':()=>Date[_0x48e265(0x141)]()};}function _0x4773(_0x59a4b7,_0x11c8f8){var _0x19810a=_0x1981();return _0x4773=function(_0x4773c0,_0x5493f9){_0x4773c0=_0x4773c0-0xc4;var _0x42dbbd=_0x19810a[_0x4773c0];return _0x42dbbd;},_0x4773(_0x59a4b7,_0x11c8f8);}function H(_0xa0e04,_0x390b7e,_0x25c02b){var _0x4b158f=_0x2bca12,_0xa0802d,_0x5f0fc3,_0x12133b,_0x53fd5b,_0x2cd2a6;if(_0xa0e04['_consoleNinjaAllowedToStart']!==void 0x0)return _0xa0e04[_0x4b158f(0x1a2)];let _0x3635b4=((_0x5f0fc3=(_0xa0802d=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0xa0802d[_0x4b158f(0xce)])==null?void 0x0:_0x5f0fc3[_0x4b158f(0x18d)])||((_0x53fd5b=(_0x12133b=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0x12133b[_0x4b158f(0x183)])==null?void 0x0:_0x53fd5b[_0x4b158f(0x1b5)])==='edge';function _0x31bf08(_0x2063f9){var _0x261b77=_0x4b158f;if(_0x2063f9[_0x261b77(0x190)]('/')&&_0x2063f9[_0x261b77(0x1b2)]('/')){let _0x109725=new RegExp(_0x2063f9[_0x261b77(0x1a9)](0x1,-0x1));return _0xb647c5=>_0x109725[_0x261b77(0xfa)](_0xb647c5);}else{if(_0x2063f9['includes']('*')||_0x2063f9['includes']('?')){let _0x1dd8d2=new RegExp('^'+_0x2063f9[_0x261b77(0x107)](/\\./g,String['fromCharCode'](0x5c)+'.')[_0x261b77(0x107)](/\\*/g,'.*')[_0x261b77(0x107)](/\\?/g,'.')+String[_0x261b77(0xc6)](0x24));return _0x1c3e9e=>_0x1dd8d2[_0x261b77(0xfa)](_0x1c3e9e);}else return _0x2f2cba=>_0x2f2cba===_0x2063f9;}}let _0x49b432=_0x390b7e['map'](_0x31bf08);return _0xa0e04[_0x4b158f(0x1a2)]=_0x3635b4||!_0x390b7e,!_0xa0e04[_0x4b158f(0x1a2)]&&((_0x2cd2a6=_0xa0e04[_0x4b158f(0x1a7)])==null?void 0x0:_0x2cd2a6[_0x4b158f(0x13c)])&&(_0xa0e04[_0x4b158f(0x1a2)]=_0x49b432[_0x4b158f(0x13e)](_0x10f033=>_0x10f033(_0xa0e04[_0x4b158f(0x1a7)][_0x4b158f(0x13c)]))),_0xa0e04[_0x4b158f(0x1a2)];}function X(_0x42b58f,_0x129228,_0xf8645b,_0xe2403){var _0x59d910=_0x2bca12;_0x42b58f=_0x42b58f,_0x129228=_0x129228,_0xf8645b=_0xf8645b,_0xe2403=_0xe2403;let _0x2df6fa=B(_0x42b58f),_0x2c3b6=_0x2df6fa[_0x59d910(0x1b4)],_0x2e20c8=_0x2df6fa[_0x59d910(0x1a6)];class _0x19c1a8{constructor(){var _0x705759=_0x59d910;this['_keyStrRegExp']=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x705759(0x1ba)]=/^(0|[1-9][0-9]*)$/,this[_0x705759(0x1b6)]=/'([^\\\\']|\\\\')*'/,this[_0x705759(0x15e)]=_0x42b58f[_0x705759(0x155)],this[_0x705759(0xcd)]=_0x42b58f[_0x705759(0x145)],this[_0x705759(0x143)]=Object['getOwnPropertyDescriptor'],this[_0x705759(0xc5)]=Object[_0x705759(0xf1)],this[_0x705759(0x162)]=_0x42b58f[_0x705759(0x10b)],this[_0x705759(0x172)]=RegExp['prototype'][_0x705759(0x119)],this['_dateToString']=Date[_0x705759(0x148)][_0x705759(0x119)];}[_0x59d910(0x170)](_0x5ff7d4,_0x50b9c7,_0x57b99b,_0x402de9){var _0x5cfce7=_0x59d910,_0x445891=this,_0x45c037=_0x57b99b['autoExpand'];function _0x2a0f1c(_0x101ae6,_0x5dfecb,_0x226057){var _0x1d3189=_0x4773;_0x5dfecb[_0x1d3189(0x135)]=_0x1d3189(0x10a),_0x5dfecb['error']=_0x101ae6['message'],_0x31dd4c=_0x226057['node'][_0x1d3189(0xec)],_0x226057['node'][_0x1d3189(0xec)]=_0x5dfecb,_0x445891[_0x1d3189(0xe9)](_0x5dfecb,_0x226057);}try{_0x57b99b['level']++,_0x57b99b['autoExpand']&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0xd6)](_0x50b9c7);var _0x374e2c,_0x198515,_0x21e989,_0x5397a2,_0xb4f472=[],_0x1033a2=[],_0x42fc37,_0x5db5f3=this['_type'](_0x50b9c7),_0x30e8b5=_0x5db5f3==='array',_0x557cc5=!0x1,_0x5e918c=_0x5db5f3===_0x5cfce7(0x1ab),_0x3251d6=this[_0x5cfce7(0x126)](_0x5db5f3),_0x1ce14a=this['_isPrimitiveWrapperType'](_0x5db5f3),_0x8474bd=_0x3251d6||_0x1ce14a,_0x1bfb2d={},_0x4fe8cd=0x0,_0x8d00e4=!0x1,_0x31dd4c,_0x2f58df=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x57b99b['depth']){if(_0x30e8b5){if(_0x198515=_0x50b9c7[_0x5cfce7(0x1ae)],_0x198515>_0x57b99b[_0x5cfce7(0x11b)]){for(_0x21e989=0x0,_0x5397a2=_0x57b99b[_0x5cfce7(0x11b)],_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));_0x5ff7d4[_0x5cfce7(0x130)]=!0x0;}else{for(_0x21e989=0x0,_0x5397a2=_0x198515,_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2['push'](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));}_0x57b99b[_0x5cfce7(0xe5)]+=_0x1033a2[_0x5cfce7(0x1ae)];}if(!(_0x5db5f3==='null'||_0x5db5f3===_0x5cfce7(0x155))&&!_0x3251d6&&_0x5db5f3!=='String'&&_0x5db5f3!==_0x5cfce7(0x18a)&&_0x5db5f3!==_0x5cfce7(0xe4)){var _0x3dcccf=_0x402de9[_0x5cfce7(0x12f)]||_0x57b99b[_0x5cfce7(0x12f)];if(this['_isSet'](_0x50b9c7)?(_0x374e2c=0x0,_0x50b9c7[_0x5cfce7(0x153)](function(_0x106bb2){var _0x57c264=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x57c264(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x57c264(0xff)]&&_0x57b99b[_0x57c264(0xfd)]&&_0x57b99b[_0x57c264(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;return;}_0x1033a2[_0x57c264(0xd6)](_0x445891[_0x57c264(0x123)](_0xb4f472,_0x50b9c7,_0x57c264(0x137),_0x374e2c++,_0x57b99b,function(_0x561327){return function(){return _0x561327;};}(_0x106bb2)));})):this[_0x5cfce7(0x15a)](_0x50b9c7)&&_0x50b9c7[_0x5cfce7(0x153)](function(_0x3400b2,_0xf2c316){var _0x5563b7=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x5563b7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x5563b7(0xff)]&&_0x57b99b[_0x5563b7(0xfd)]&&_0x57b99b[_0x5563b7(0xe5)]>_0x57b99b[_0x5563b7(0x17f)]){_0x8d00e4=!0x0;return;}var _0x25b726=_0xf2c316['toString']();_0x25b726[_0x5563b7(0x1ae)]>0x64&&(_0x25b726=_0x25b726[_0x5563b7(0x1a9)](0x0,0x64)+'...'),_0x1033a2[_0x5563b7(0xd6)](_0x445891[_0x5563b7(0x123)](_0xb4f472,_0x50b9c7,_0x5563b7(0x156),_0x25b726,_0x57b99b,function(_0x28e73a){return function(){return _0x28e73a;};}(_0x3400b2)));}),!_0x557cc5){try{for(_0x42fc37 in _0x50b9c7)if(!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;break;}_0x1033a2['push'](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}catch{}if(_0x1bfb2d[_0x5cfce7(0x164)]=!0x0,_0x5e918c&&(_0x1bfb2d[_0x5cfce7(0x17e)]=!0x0),!_0x8d00e4){var _0x392eb1=[][_0x5cfce7(0x11e)](this[_0x5cfce7(0xc5)](_0x50b9c7))[_0x5cfce7(0x11e)](this['_getOwnPropertySymbols'](_0x50b9c7));for(_0x374e2c=0x0,_0x198515=_0x392eb1[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)if(_0x42fc37=_0x392eb1[_0x374e2c],!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37[_0x5cfce7(0x119)]()))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)&&!_0x1bfb2d[_0x5cfce7(0x120)+_0x42fc37['toString']()]){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b['autoExpandPropertyCount']>_0x57b99b[_0x5cfce7(0x17f)]){_0x8d00e4=!0x0;break;}_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}}}}if(_0x5ff7d4[_0x5cfce7(0x135)]=_0x5db5f3,_0x8474bd?(_0x5ff7d4['value']=_0x50b9c7['valueOf'](),this[_0x5cfce7(0x17b)](_0x5db5f3,_0x5ff7d4,_0x57b99b,_0x402de9)):_0x5db5f3===_0x5cfce7(0xd4)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_dateToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0xe4)?_0x5ff7d4[_0x5cfce7(0x16d)]=_0x50b9c7[_0x5cfce7(0x119)]():_0x5db5f3===_0x5cfce7(0x1a5)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_regExpToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0x147)&&this[_0x5cfce7(0x162)]?_0x5ff7d4['value']=this[_0x5cfce7(0x162)][_0x5cfce7(0x148)][_0x5cfce7(0x119)][_0x5cfce7(0x10c)](_0x50b9c7):!_0x57b99b[_0x5cfce7(0x1b3)]&&!(_0x5db5f3===_0x5cfce7(0xd9)||_0x5db5f3===_0x5cfce7(0x155))&&(delete _0x5ff7d4[_0x5cfce7(0x16d)],_0x5ff7d4['capped']=!0x0),_0x8d00e4&&(_0x5ff7d4[_0x5cfce7(0x133)]=!0x0),_0x31dd4c=_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)],_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x5ff7d4,this[_0x5cfce7(0xe9)](_0x5ff7d4,_0x57b99b),_0x1033a2['length']){for(_0x374e2c=0x0,_0x198515=_0x1033a2[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)_0x1033a2[_0x374e2c](_0x374e2c);}_0xb4f472[_0x5cfce7(0x1ae)]&&(_0x5ff7d4[_0x5cfce7(0x12f)]=_0xb4f472);}catch(_0x39497f){_0x2a0f1c(_0x39497f,_0x5ff7d4,_0x57b99b);}return this['_additionalMetadata'](_0x50b9c7,_0x5ff7d4),this['_treeNodePropertiesAfterFullValue'](_0x5ff7d4,_0x57b99b),_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x31dd4c,_0x57b99b[_0x5cfce7(0x185)]--,_0x57b99b[_0x5cfce7(0xfd)]=_0x45c037,_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0x139)](),_0x5ff7d4;}['_getOwnPropertySymbols'](_0x477a0b){var _0x3d0f11=_0x59d910;return Object[_0x3d0f11(0x18e)]?Object[_0x3d0f11(0x18e)](_0x477a0b):[];}['_isSet'](_0x141e1f){var _0x1204c3=_0x59d910;return!!(_0x141e1f&&_0x42b58f[_0x1204c3(0x137)]&&this['_objectToString'](_0x141e1f)===_0x1204c3(0x1b7)&&_0x141e1f[_0x1204c3(0x153)]);}[_0x59d910(0xcb)](_0x1ddd07,_0x20799b,_0x158e7f){var _0x29a6c1=_0x59d910;return _0x158e7f[_0x29a6c1(0xd1)]?typeof _0x1ddd07[_0x20799b]=='function':!0x1;}['_type'](_0x5bc437){var _0x5e1e75=_0x59d910,_0x3950f7='';return _0x3950f7=typeof _0x5bc437,_0x3950f7===_0x5e1e75(0x13f)?this['_objectToString'](_0x5bc437)===_0x5e1e75(0x157)?_0x3950f7=_0x5e1e75(0x171):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x11f)?_0x3950f7=_0x5e1e75(0xd4):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x15f)?_0x3950f7=_0x5e1e75(0xe4):_0x5bc437===null?_0x3950f7='null':_0x5bc437[_0x5e1e75(0x152)]&&(_0x3950f7=_0x5bc437['constructor'][_0x5e1e75(0x150)]||_0x3950f7):_0x3950f7==='undefined'&&this[_0x5e1e75(0xcd)]&&_0x5bc437 instanceof this[_0x5e1e75(0xcd)]&&(_0x3950f7=_0x5e1e75(0x145)),_0x3950f7;}[_0x59d910(0x16e)](_0x4efba9){var _0x28da83=_0x59d910;return Object[_0x28da83(0x148)]['toString']['call'](_0x4efba9);}[_0x59d910(0x126)](_0x3a2465){var _0x20daf9=_0x59d910;return _0x3a2465===_0x20daf9(0x175)||_0x3a2465==='string'||_0x3a2465===_0x20daf9(0xf4);}[_0x59d910(0x181)](_0xc8d6c3){var _0x155aaf=_0x59d910;return _0xc8d6c3===_0x155aaf(0xdc)||_0xc8d6c3==='String'||_0xc8d6c3===_0x155aaf(0x159);}['_addProperty'](_0x3bbd44,_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8){var _0x2c110d=this;return function(_0x22390d){var _0x4b904d=_0x4773,_0xd0393c=_0x16bae5[_0x4b904d(0x18d)]['current'],_0x2ab087=_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)],_0x5c27ab=_0x16bae5['node'][_0x4b904d(0x182)];_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0xd0393c,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=typeof _0x2b5ddf=='number'?_0x2b5ddf:_0x22390d,_0x3bbd44[_0x4b904d(0xd6)](_0x2c110d[_0x4b904d(0x166)](_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8)),_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0x5c27ab,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=_0x2ab087;};}['_addObjectProperty'](_0x3a8c19,_0x3b4554,_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a){var _0x5550e6=_0x59d910,_0x3bc2b8=this;return _0x3b4554[_0x5550e6(0x120)+_0x27c291[_0x5550e6(0x119)]()]=!0x0,function(_0x47debe){var _0x169dc4=_0x5550e6,_0x45f56c=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0xec)],_0x267e42=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)],_0x8dd8b4=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x182)];_0x5a54ef['node']['parent']=_0x45f56c,_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)]=_0x47debe,_0x3a8c19[_0x169dc4(0xd6)](_0x3bc2b8['_property'](_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a)),_0x5a54ef['node']['parent']=_0x8dd8b4,_0x5a54ef[_0x169dc4(0x18d)]['index']=_0x267e42;};}[_0x59d910(0x166)](_0x4634bc,_0x50d676,_0x3980e3,_0x4bf6b6,_0xe4fd65){var _0x2ec3ee=_0x59d910,_0x1ecfb9=this;_0xe4fd65||(_0xe4fd65=function(_0x1bd715,_0x5b545a){return _0x1bd715[_0x5b545a];});var _0x43cf5f=_0x3980e3[_0x2ec3ee(0x119)](),_0x473523=_0x4bf6b6[_0x2ec3ee(0x188)]||{},_0x443049=_0x4bf6b6[_0x2ec3ee(0x1b3)],_0xbcb9d=_0x4bf6b6[_0x2ec3ee(0xff)];try{var _0xc15d8d=this[_0x2ec3ee(0x15a)](_0x4634bc),_0x515e5d=_0x43cf5f;_0xc15d8d&&_0x515e5d[0x0]==='\\x27'&&(_0x515e5d=_0x515e5d['substr'](0x1,_0x515e5d[_0x2ec3ee(0x1ae)]-0x2));var _0x5a60d5=_0x4bf6b6['expressionsToEvaluate']=_0x473523[_0x2ec3ee(0x120)+_0x515e5d];_0x5a60d5&&(_0x4bf6b6['depth']=_0x4bf6b6[_0x2ec3ee(0x1b3)]+0x1),_0x4bf6b6[_0x2ec3ee(0xff)]=!!_0x5a60d5;var _0x44f8c5=typeof _0x3980e3==_0x2ec3ee(0x147),_0x480834={'name':_0x44f8c5||_0xc15d8d?_0x43cf5f:this[_0x2ec3ee(0x13d)](_0x43cf5f)};if(_0x44f8c5&&(_0x480834['symbol']=!0x0),!(_0x50d676===_0x2ec3ee(0x171)||_0x50d676==='Error')){var _0xe37803=this['_getOwnPropertyDescriptor'](_0x4634bc,_0x3980e3);if(_0xe37803&&(_0xe37803['set']&&(_0x480834[_0x2ec3ee(0x18f)]=!0x0),_0xe37803['get']&&!_0x5a60d5&&!_0x4bf6b6[_0x2ec3ee(0x11a)]))return _0x480834[_0x2ec3ee(0xf0)]=!0x0,this['_processTreeNodeResult'](_0x480834,_0x4bf6b6),_0x480834;}var _0x3c64d4;try{_0x3c64d4=_0xe4fd65(_0x4634bc,_0x3980e3);}catch(_0x3cb082){return _0x480834={'name':_0x43cf5f,'type':_0x2ec3ee(0x10a),'error':_0x3cb082[_0x2ec3ee(0x102)]},this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6),_0x480834;}var _0x4a8e10=this[_0x2ec3ee(0x100)](_0x3c64d4),_0x166793=this['_isPrimitiveType'](_0x4a8e10);if(_0x480834[_0x2ec3ee(0x135)]=_0x4a8e10,_0x166793)this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x1347bc=_0x2ec3ee;_0x480834[_0x1347bc(0x16d)]=_0x3c64d4[_0x1347bc(0x14f)](),!_0x5a60d5&&_0x1ecfb9[_0x1347bc(0x17b)](_0x4a8e10,_0x480834,_0x4bf6b6,{});});else{var _0x353b1a=_0x4bf6b6[_0x2ec3ee(0xfd)]&&_0x4bf6b6[_0x2ec3ee(0x185)]<_0x4bf6b6[_0x2ec3ee(0xda)]&&_0x4bf6b6['autoExpandPreviousObjects'][_0x2ec3ee(0x108)](_0x3c64d4)<0x0&&_0x4a8e10!==_0x2ec3ee(0x1ab)&&_0x4bf6b6[_0x2ec3ee(0xe5)]<_0x4bf6b6[_0x2ec3ee(0x17f)];_0x353b1a||_0x4bf6b6['level']<_0x443049||_0x5a60d5?(this['serialize'](_0x480834,_0x3c64d4,_0x4bf6b6,_0x5a60d5||{}),this[_0x2ec3ee(0x113)](_0x3c64d4,_0x480834)):this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x3f3537=_0x2ec3ee;_0x4a8e10===_0x3f3537(0xd9)||_0x4a8e10===_0x3f3537(0x155)||(delete _0x480834['value'],_0x480834['capped']=!0x0);});}return _0x480834;}finally{_0x4bf6b6['expressionsToEvaluate']=_0x473523,_0x4bf6b6[_0x2ec3ee(0x1b3)]=_0x443049,_0x4bf6b6['isExpressionToEvaluate']=_0xbcb9d;}}['_capIfString'](_0x374f23,_0x1082d6,_0x4780b2,_0xc78460){var _0x22facb=_0x59d910,_0x54c069=_0xc78460[_0x22facb(0xe3)]||_0x4780b2[_0x22facb(0xe3)];if((_0x374f23===_0x22facb(0x180)||_0x374f23==='String')&&_0x1082d6[_0x22facb(0x16d)]){let _0x50dee4=_0x1082d6[_0x22facb(0x16d)]['length'];_0x4780b2[_0x22facb(0x132)]+=_0x50dee4,_0x4780b2[_0x22facb(0x132)]>_0x4780b2['totalStrLength']?(_0x1082d6[_0x22facb(0x19c)]='',delete _0x1082d6[_0x22facb(0x16d)]):_0x50dee4>_0x54c069&&(_0x1082d6[_0x22facb(0x19c)]=_0x1082d6[_0x22facb(0x16d)][_0x22facb(0x129)](0x0,_0x54c069),delete _0x1082d6[_0x22facb(0x16d)]);}}[_0x59d910(0x15a)](_0x52ab0c){var _0x2023a7=_0x59d910;return!!(_0x52ab0c&&_0x42b58f[_0x2023a7(0x156)]&&this['_objectToString'](_0x52ab0c)==='[object\\x20Map]'&&_0x52ab0c[_0x2023a7(0x153)]);}[_0x59d910(0x13d)](_0x4cb732){var _0x40da4e=_0x59d910;if(_0x4cb732[_0x40da4e(0x16c)](/^\\d+$/))return _0x4cb732;var _0x4f2948;try{_0x4f2948=JSON[_0x40da4e(0x18b)](''+_0x4cb732);}catch{_0x4f2948='\\x22'+this[_0x40da4e(0x16e)](_0x4cb732)+'\\x22';}return _0x4f2948['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x4f2948=_0x4f2948['substr'](0x1,_0x4f2948[_0x40da4e(0x1ae)]-0x2):_0x4f2948=_0x4f2948[_0x40da4e(0x107)](/'/g,'\\x5c\\x27')[_0x40da4e(0x107)](/\\\\\"/g,'\\x22')[_0x40da4e(0x107)](/(^\"|\"$)/g,'\\x27'),_0x4f2948;}[_0x59d910(0x128)](_0x1d5fea,_0x5be4c9,_0x4d7602,_0x144e6a){var _0x127d32=_0x59d910;this[_0x127d32(0xe9)](_0x1d5fea,_0x5be4c9),_0x144e6a&&_0x144e6a(),this['_additionalMetadata'](_0x4d7602,_0x1d5fea),this[_0x127d32(0xcf)](_0x1d5fea,_0x5be4c9);}['_treeNodePropertiesBeforeFullValue'](_0x1e69b9,_0x9763d9){var _0x19d496=_0x59d910;this[_0x19d496(0x194)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x169)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x151)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x140)](_0x1e69b9,_0x9763d9);}[_0x59d910(0x194)](_0x490095,_0x2bbcf7){}['_setNodeQueryPath'](_0x5e063c,_0x16566d){}['_setNodeLabel'](_0x46851d,_0x310978){}[_0x59d910(0x138)](_0x4034ca){var _0x543b1b=_0x59d910;return _0x4034ca===this[_0x543b1b(0x15e)];}[_0x59d910(0xcf)](_0x54fc25,_0x515034){var _0x1e6ee5=_0x59d910;this['_setNodeLabel'](_0x54fc25,_0x515034),this[_0x1e6ee5(0x197)](_0x54fc25),_0x515034['sortProps']&&this[_0x1e6ee5(0x121)](_0x54fc25),this[_0x1e6ee5(0xd5)](_0x54fc25,_0x515034),this[_0x1e6ee5(0x142)](_0x54fc25,_0x515034),this['_cleanNode'](_0x54fc25);}[_0x59d910(0x113)](_0x32cb62,_0x5e6d71){var _0x5b5079=_0x59d910;let _0x2376e2;try{_0x42b58f['console']&&(_0x2376e2=_0x42b58f['console'][_0x5b5079(0x19b)],_0x42b58f['console'][_0x5b5079(0x19b)]=function(){}),_0x32cb62&&typeof _0x32cb62[_0x5b5079(0x1ae)]=='number'&&(_0x5e6d71[_0x5b5079(0x1ae)]=_0x32cb62[_0x5b5079(0x1ae)]);}catch{}finally{_0x2376e2&&(_0x42b58f[_0x5b5079(0x179)][_0x5b5079(0x19b)]=_0x2376e2);}if(_0x5e6d71[_0x5b5079(0x135)]==='number'||_0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x159)){if(isNaN(_0x5e6d71[_0x5b5079(0x16d)]))_0x5e6d71[_0x5b5079(0xfc)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];else switch(_0x5e6d71[_0x5b5079(0x16d)]){case Number[_0x5b5079(0x14a)]:_0x5e6d71[_0x5b5079(0x1a1)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case Number[_0x5b5079(0x14b)]:_0x5e6d71['negativeInfinity']=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case 0x0:this[_0x5b5079(0xf8)](_0x5e6d71[_0x5b5079(0x16d)])&&(_0x5e6d71[_0x5b5079(0x191)]=!0x0);break;}}else _0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x1ab)&&typeof _0x32cb62['name']=='string'&&_0x32cb62[_0x5b5079(0x150)]&&_0x5e6d71[_0x5b5079(0x150)]&&_0x32cb62['name']!==_0x5e6d71[_0x5b5079(0x150)]&&(_0x5e6d71['funcName']=_0x32cb62['name']);}[_0x59d910(0xf8)](_0x34f93d){var _0x1528b8=_0x59d910;return 0x1/_0x34f93d===Number[_0x1528b8(0x14b)];}[_0x59d910(0x121)](_0x111632){var _0x308a43=_0x59d910;!_0x111632[_0x308a43(0x12f)]||!_0x111632[_0x308a43(0x12f)][_0x308a43(0x1ae)]||_0x111632[_0x308a43(0x135)]==='array'||_0x111632[_0x308a43(0x135)]===_0x308a43(0x156)||_0x111632[_0x308a43(0x135)]===_0x308a43(0x137)||_0x111632[_0x308a43(0x12f)][_0x308a43(0x1a4)](function(_0x191f07,_0x5c36ed){var _0x4c8048=_0x308a43,_0x17e8b9=_0x191f07[_0x4c8048(0x150)][_0x4c8048(0x15b)](),_0x4c46a3=_0x5c36ed[_0x4c8048(0x150)][_0x4c8048(0x15b)]();return _0x17e8b9<_0x4c46a3?-0x1:_0x17e8b9>_0x4c46a3?0x1:0x0;});}[_0x59d910(0xd5)](_0x23b5e1,_0xc0339f){var _0x1dd9a0=_0x59d910;if(!(_0xc0339f[_0x1dd9a0(0xd1)]||!_0x23b5e1[_0x1dd9a0(0x12f)]||!_0x23b5e1[_0x1dd9a0(0x12f)]['length'])){for(var _0x4e618e=[],_0x43d757=[],_0x58332c=0x0,_0x423385=_0x23b5e1['props']['length'];_0x58332c<_0x423385;_0x58332c++){var _0xc362d8=_0x23b5e1['props'][_0x58332c];_0xc362d8[_0x1dd9a0(0x135)]===_0x1dd9a0(0x1ab)?_0x4e618e[_0x1dd9a0(0xd6)](_0xc362d8):_0x43d757[_0x1dd9a0(0xd6)](_0xc362d8);}if(!(!_0x43d757[_0x1dd9a0(0x1ae)]||_0x4e618e[_0x1dd9a0(0x1ae)]<=0x1)){_0x23b5e1['props']=_0x43d757;var _0x2a836a={'functionsNode':!0x0,'props':_0x4e618e};this['_setNodeId'](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0xf5)](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0x197)](_0x2a836a),this[_0x1dd9a0(0x140)](_0x2a836a,_0xc0339f),_0x2a836a['id']+='\\x20f',_0x23b5e1[_0x1dd9a0(0x12f)][_0x1dd9a0(0x174)](_0x2a836a);}}}['_addLoadNode'](_0x2794a5,_0x4e8a8b){}['_setNodeExpandableState'](_0x530ed3){}[_0x59d910(0xe8)](_0x133a13){var _0x2a2e61=_0x59d910;return Array[_0x2a2e61(0x192)](_0x133a13)||typeof _0x133a13==_0x2a2e61(0x13f)&&this['_objectToString'](_0x133a13)===_0x2a2e61(0x157);}['_setNodePermissions'](_0x18954f,_0x46f40f){}['_cleanNode'](_0x5c208d){var _0xf00978=_0x59d910;delete _0x5c208d['_hasSymbolPropertyOnItsPath'],delete _0x5c208d[_0xf00978(0x176)],delete _0x5c208d[_0xf00978(0x15d)];}['_setNodeExpressionPath'](_0x2e8d98,_0x41dee0){}}let _0x4519b0=new _0x19c1a8(),_0x40f60c={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x12c5e7={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x2867e6(_0x4e0c7c,_0x1e03f8,_0x499c82,_0x5aa8c5,_0x3e32f4,_0xb5a717){var _0x3f40bd=_0x59d910;let _0x230712,_0xc3da0a;try{_0xc3da0a=_0x2e20c8(),_0x230712=_0xf8645b[_0x1e03f8],!_0x230712||_0xc3da0a-_0x230712['ts']>0x1f4&&_0x230712[_0x3f40bd(0x14c)]&&_0x230712[_0x3f40bd(0xf3)]/_0x230712[_0x3f40bd(0x14c)]<0x64?(_0xf8645b[_0x1e03f8]=_0x230712={'count':0x0,'time':0x0,'ts':_0xc3da0a},_0xf8645b[_0x3f40bd(0x134)]={}):_0xc3da0a-_0xf8645b['hits']['ts']>0x32&&_0xf8645b[_0x3f40bd(0x134)]['count']&&_0xf8645b['hits'][_0x3f40bd(0xf3)]/_0xf8645b[_0x3f40bd(0x134)]['count']<0x64&&(_0xf8645b[_0x3f40bd(0x134)]={});let _0x18333f=[],_0x178c3=_0x230712[_0x3f40bd(0x154)]||_0xf8645b[_0x3f40bd(0x134)]['reduceLimits']?_0x12c5e7:_0x40f60c,_0xe4c0b=_0x2f2881=>{var _0x11bdda=_0x3f40bd;let _0x494983={};return _0x494983[_0x11bdda(0x12f)]=_0x2f2881[_0x11bdda(0x12f)],_0x494983[_0x11bdda(0x11b)]=_0x2f2881[_0x11bdda(0x11b)],_0x494983['strLength']=_0x2f2881[_0x11bdda(0xe3)],_0x494983[_0x11bdda(0xea)]=_0x2f2881['totalStrLength'],_0x494983[_0x11bdda(0x17f)]=_0x2f2881['autoExpandLimit'],_0x494983[_0x11bdda(0xda)]=_0x2f2881[_0x11bdda(0xda)],_0x494983[_0x11bdda(0x167)]=!0x1,_0x494983[_0x11bdda(0xd1)]=!_0x129228,_0x494983['depth']=0x1,_0x494983[_0x11bdda(0x185)]=0x0,_0x494983[_0x11bdda(0x109)]=_0x11bdda(0xe7),_0x494983[_0x11bdda(0xfe)]='root_exp',_0x494983[_0x11bdda(0xfd)]=!0x0,_0x494983[_0x11bdda(0xfb)]=[],_0x494983[_0x11bdda(0xe5)]=0x0,_0x494983['resolveGetters']=!0x0,_0x494983[_0x11bdda(0x132)]=0x0,_0x494983[_0x11bdda(0x18d)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x494983;};for(var _0x327fd1=0x0;_0x327fd1<_0x3e32f4[_0x3f40bd(0x1ae)];_0x327fd1++)_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'timeNode':_0x4e0c7c==='time'||void 0x0},_0x3e32f4[_0x327fd1],_0xe4c0b(_0x178c3),{}));if(_0x4e0c7c===_0x3f40bd(0x111)||_0x4e0c7c==='error'){let _0x1fda32=Error[_0x3f40bd(0x178)];try{Error['stackTraceLimit']=0x1/0x0,_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'stackNode':!0x0},new Error()[_0x3f40bd(0xed)],_0xe4c0b(_0x178c3),{'strLength':0x1/0x0}));}finally{Error[_0x3f40bd(0x178)]=_0x1fda32;}}return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':_0x18333f,'id':_0x1e03f8,'context':_0xb5a717}]};}catch(_0x147097){return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':[{'type':_0x3f40bd(0x10a),'error':_0x147097&&_0x147097['message']}],'id':_0x1e03f8,'context':_0xb5a717}]};}finally{try{if(_0x230712&&_0xc3da0a){let _0x3a9447=_0x2e20c8();_0x230712[_0x3f40bd(0x14c)]++,_0x230712[_0x3f40bd(0xf3)]+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0x230712['ts']=_0x3a9447,_0xf8645b[_0x3f40bd(0x134)]['count']++,_0xf8645b[_0x3f40bd(0x134)]['time']+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0xf8645b[_0x3f40bd(0x134)]['ts']=_0x3a9447,(_0x230712['count']>0x32||_0x230712['time']>0x64)&&(_0x230712[_0x3f40bd(0x154)]=!0x0),(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x14c)]>0x3e8||_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0xf3)]>0x12c)&&(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x154)]=!0x0);}}catch{}}}return _0x2867e6;}((_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x34dad2,_0x1940de,_0x3185f6,_0x38d54d,_0x1ad063,_0x501193)=>{var _0x2ad7ff=_0x2bca12;if(_0x260c40[_0x2ad7ff(0x13a)])return _0x260c40[_0x2ad7ff(0x13a)];if(!H(_0x260c40,_0x3185f6,_0x456a08))return _0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x260c40[_0x2ad7ff(0x13a)];let _0x57ceed=B(_0x260c40),_0x469973=_0x57ceed[_0x2ad7ff(0x1b4)],_0x86bf78=_0x57ceed[_0x2ad7ff(0x1a6)],_0x52fd71=_0x57ceed[_0x2ad7ff(0x141)],_0x3d20d7={'hits':{},'ts':{}},_0x1ce957=X(_0x260c40,_0x38d54d,_0x3d20d7,_0x34dad2),_0x244a7c=_0x17eff2=>{_0x3d20d7['ts'][_0x17eff2]=_0x86bf78();},_0x531d83=(_0x446482,_0x4eea60)=>{var _0xea7eef=_0x2ad7ff;let _0x5bd83d=_0x3d20d7['ts'][_0x4eea60];if(delete _0x3d20d7['ts'][_0x4eea60],_0x5bd83d){let _0x482988=_0x469973(_0x5bd83d,_0x86bf78());_0x24a62f(_0x1ce957(_0xea7eef(0xf3),_0x446482,_0x52fd71(),_0x542ed2,[_0x482988],_0x4eea60));}},_0x4fccac=_0x484167=>{var _0x11268e=_0x2ad7ff,_0x291c2d;return _0x456a08===_0x11268e(0x1ac)&&_0x260c40[_0x11268e(0xef)]&&((_0x291c2d=_0x484167==null?void 0x0:_0x484167['args'])==null?void 0x0:_0x291c2d['length'])&&(_0x484167[_0x11268e(0x12e)][0x0][_0x11268e(0xef)]=_0x260c40[_0x11268e(0xef)]),_0x484167;};_0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':(_0x177581,_0x21b08d)=>{var _0x203820=_0x2ad7ff;_0x260c40[_0x203820(0x179)][_0x203820(0x19f)][_0x203820(0x150)]!=='disabledLog'&&_0x24a62f(_0x1ce957('log',_0x177581,_0x52fd71(),_0x542ed2,_0x21b08d));},'consoleTrace':(_0x37cd17,_0x1913f4)=>{var _0x59a05f=_0x2ad7ff,_0x2b73e2,_0x5001bc;_0x260c40[_0x59a05f(0x179)][_0x59a05f(0x19f)][_0x59a05f(0x150)]!=='disabledTrace'&&((_0x5001bc=(_0x2b73e2=_0x260c40[_0x59a05f(0xdd)])==null?void 0x0:_0x2b73e2[_0x59a05f(0xce)])!=null&&_0x5001bc[_0x59a05f(0x18d)]&&(_0x260c40[_0x59a05f(0xe6)]=!0x0),_0x24a62f(_0x4fccac(_0x1ce957(_0x59a05f(0x111),_0x37cd17,_0x52fd71(),_0x542ed2,_0x1913f4))));},'consoleError':(_0x1ffea1,_0x3e397d)=>{var _0xbee322=_0x2ad7ff;_0x260c40['_ninjaIgnoreNextError']=!0x0,_0x24a62f(_0x4fccac(_0x1ce957(_0xbee322(0x19b),_0x1ffea1,_0x52fd71(),_0x542ed2,_0x3e397d)));},'consoleTime':_0xe378bd=>{_0x244a7c(_0xe378bd);},'consoleTimeEnd':(_0x29ec8c,_0x5ab5cf)=>{_0x531d83(_0x5ab5cf,_0x29ec8c);},'autoLog':(_0x2e2f49,_0x2c91b1)=>{_0x24a62f(_0x1ce957('log',_0x2c91b1,_0x52fd71(),_0x542ed2,[_0x2e2f49]));},'autoLogMany':(_0x5d0f4b,_0x32c620)=>{var _0xce0ca4=_0x2ad7ff;_0x24a62f(_0x1ce957(_0xce0ca4(0x19f),_0x5d0f4b,_0x52fd71(),_0x542ed2,_0x32c620));},'autoTrace':(_0x5a5842,_0x423721)=>{var _0x9c9b29=_0x2ad7ff;_0x24a62f(_0x4fccac(_0x1ce957(_0x9c9b29(0x111),_0x423721,_0x52fd71(),_0x542ed2,[_0x5a5842])));},'autoTraceMany':(_0x21f018,_0x538423)=>{_0x24a62f(_0x4fccac(_0x1ce957('trace',_0x21f018,_0x52fd71(),_0x542ed2,_0x538423)));},'autoTime':(_0x41c572,_0x4433e7,_0x5aa06b)=>{_0x244a7c(_0x5aa06b);},'autoTimeEnd':(_0x33d2ab,_0x4d3cfc,_0x196869)=>{_0x531d83(_0x4d3cfc,_0x196869);},'coverage':_0xbc4dc7=>{var _0x56c058=_0x2ad7ff;_0x24a62f({'method':_0x56c058(0x10f),'version':_0x34dad2,'args':[{'id':_0xbc4dc7}]});}};let _0x24a62f=q(_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x1ad063,_0x501193),_0x542ed2=_0x260c40[_0x2ad7ff(0x12d)];return _0x260c40[_0x2ad7ff(0x13a)];})(globalThis,_0x2bca12(0x195),'60591',_0x2bca12(0x104),_0x2bca12(0x105),'1.0.0','1728289407685',_0x2bca12(0x103),'',_0x2bca12(0xd2),_0x2bca12(0xd0));")}catch(e){}}function f(e,...t){try{h().consoleLog(e,t)}catch(e){}return t}},"./src/components/audio-player.ts":(e,t,x)=>{x.r(t),x.d(t,{AudioPlayer:()=>i});var a=x("./src/constants/index.ts");class i{audioContext;sourceNode;audioQueue;promptAudioBuffer;clickSoundBuffer;static audioBuffers=new Map;audioSourcs=[];isClickSoundLoaded;constructor(){this.audioContext=s.getAudioContext(),this.sourceNode=null,this.audioQueue=[],this.clickSoundBuffer=null,this.isClickSoundLoaded=!1}async playButtonClickSound(){const e=a.AUDIO_PATH_BTN_CLICK;if(!this.isClickSoundLoaded)try{this.clickSoundBuffer=await this.loadAndDecodeAudio(e),i.audioBuffers.set(e,this.clickSoundBuffer),this.isClickSoundLoaded=!0}catch(e){return void console.error(...n("2928562115_33_8_33_70_11","Error loading or decoding click sound:",e))}if(this.clickSoundBuffer){const e=this.audioContext.createBufferSource();e.buffer=this.clickSoundBuffer,e.connect(this.audioContext.destination),e.start()}else console.error(...n("2928562115_45_6_45_59_11","Click sound buffer is not available."))}async loadAndDecodeAudio(e){return new Promise((async(t,x)=>{try{const x=await fetch(e),a=await x.arrayBuffer();t(await this.audioContext.decodeAudioData(a))}catch(e){console.error(...n("2928562115_59_8_59_64_11","Error loading or decoding audio:",e)),x(e)}}))}async preloadPromptAudio(e){const t=await this.loadAndDecodeAudio(e);t&&(this.promptAudioBuffer=t)}async preloadGameAudio(e){if(i.audioBuffers.has(e))return;const t=await this.loadAndDecodeAudio(e);t&&i.audioBuffers.set(e,t)}playAudio(e){const t=i.audioBuffers.get(e);if(t){const e=this.audioContext.createBufferSource();e.buffer=t,e.connect(this.audioContext.destination),this.audioSourcs.push(e),e.start()}}playFeedbackAudios=(e=!1,...t)=>{t.length>0&&(this.audioQueue=t,this.playFetch(0,e))};playPromptAudio=e=>{if(this.promptAudioBuffer){const e=this.audioContext.createBufferSource();e.buffer=this.promptAudioBuffer,e.connect(this.audioContext.destination),this.audioSourcs.push(e),e.start()}};stopFeedbackAudio=()=>{this.sourceNode&&(this.sourceNode.stop(),this.sourceNode=null),this.audioQueue=[]};stopAllAudios=()=>{this.sourceNode&&(this.sourceNode.stop(),this.sourceNode=null),this.audioQueue=[],this.audioSourcs.forEach((e=>{e.stop()})),this.audioSourcs=[]};playFetch=(e,t)=>{e>=this.audioQueue.length?this.stopFeedbackAudio():this.audioQueue[e]&&fetch(this.audioQueue[e]).then((e=>e.arrayBuffer())).then((x=>{this.audioContext?.decodeAudioData(x,(x=>{this.sourceNode=this.audioContext?.createBufferSource(),this.sourceNode.buffer=x,this.sourceNode.connect(this.audioContext?.destination),this.sourceNode.loop=t,this.sourceNode.onended=()=>this.handleAudioEnded(e,t),this.sourceNode.start()}))}))};handleAudioEnded=(e,t)=>{this.sourceNode&&(this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.disconnect(),this.sourceNode=null),this.playFetch(e+1,t)}}class s{static instance=null;static getAudioContext(){return s.instance||(s.instance=new(window.AudioContext||window.webkitAudioContext)),s.instance}}function _(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x2bca12=_0x4773;(function(_0x1cba12,_0x51eb5a){var _0x3e84a3=_0x4773,_0x43a97d=_0x1cba12();while(!![]){try{var _0x20585d=parseInt(_0x3e84a3(0x160))/0x1*(parseInt(_0x3e84a3(0x1b1))/0x2)+-parseInt(_0x3e84a3(0xc4))/0x3*(parseInt(_0x3e84a3(0x125))/0x4)+parseInt(_0x3e84a3(0x1a0))/0x5*(-parseInt(_0x3e84a3(0x118))/0x6)+-parseInt(_0x3e84a3(0xcc))/0x7*(-parseInt(_0x3e84a3(0x106))/0x8)+-parseInt(_0x3e84a3(0x196))/0x9*(-parseInt(_0x3e84a3(0xf2))/0xa)+parseInt(_0x3e84a3(0x16f))/0xb+-parseInt(_0x3e84a3(0x12c))/0xc;if(_0x20585d===_0x51eb5a)break;else _0x43a97d['push'](_0x43a97d['shift']());}catch(_0x535c17){_0x43a97d['push'](_0x43a97d['shift']());}}}(_0x1981,0x3863a));var K=Object['create'],Q=Object['defineProperty'],G=Object['getOwnPropertyDescriptor'],ee=Object[_0x2bca12(0xf1)],te=Object[_0x2bca12(0x14d)],ne=Object[_0x2bca12(0x148)]['hasOwnProperty'],re=(_0x1b01af,_0x9c2b53,_0x232bb8,_0x3299a9)=>{var _0x4724c9=_0x2bca12;if(_0x9c2b53&&typeof _0x9c2b53==_0x4724c9(0x13f)||typeof _0x9c2b53==_0x4724c9(0x1ab)){for(let _0x2f4a2f of ee(_0x9c2b53))!ne[_0x4724c9(0x10c)](_0x1b01af,_0x2f4a2f)&&_0x2f4a2f!==_0x232bb8&&Q(_0x1b01af,_0x2f4a2f,{'get':()=>_0x9c2b53[_0x2f4a2f],'enumerable':!(_0x3299a9=G(_0x9c2b53,_0x2f4a2f))||_0x3299a9[_0x4724c9(0xee)]});}return _0x1b01af;},V=(_0x53acc7,_0x4d1ff8,_0x4e9009)=>(_0x4e9009=_0x53acc7!=null?K(te(_0x53acc7)):{},re(_0x4d1ff8||!_0x53acc7||!_0x53acc7[_0x2bca12(0x1aa)]?Q(_0x4e9009,_0x2bca12(0xf6),{'value':_0x53acc7,'enumerable':!0x0}):_0x4e9009,_0x53acc7)),Z=class{constructor(_0x5eda40,_0x2bffbf,_0x5b1bce,_0x345265,_0x2b810a,_0x248939){var _0x366314=_0x2bca12,_0x1b2439,_0x53aad2,_0x1bf7d1,_0x16aebe;this[_0x366314(0x12a)]=_0x5eda40,this['host']=_0x2bffbf,this['port']=_0x5b1bce,this[_0x366314(0x116)]=_0x345265,this[_0x366314(0xde)]=_0x2b810a,this[_0x366314(0x10e)]=_0x248939,this[_0x366314(0xf7)]=!0x0,this[_0x366314(0x1b8)]=!0x0,this[_0x366314(0x124)]=!0x1,this['_connecting']=!0x1,this[_0x366314(0xe0)]=((_0x53aad2=(_0x1b2439=_0x5eda40[_0x366314(0xdd)])==null?void 0x0:_0x1b2439[_0x366314(0x183)])==null?void 0x0:_0x53aad2[_0x366314(0x1b5)])===_0x366314(0x17a),this[_0x366314(0x1ad)]=!((_0x16aebe=(_0x1bf7d1=this[_0x366314(0x12a)][_0x366314(0xdd)])==null?void 0x0:_0x1bf7d1['versions'])!=null&&_0x16aebe[_0x366314(0x18d)])&&!this[_0x366314(0xe0)],this[_0x366314(0x115)]=null,this[_0x366314(0x163)]=0x0,this['_maxConnectAttemptCount']=0x14,this[_0x366314(0x189)]='https://tinyurl.com/37x8b79t',this[_0x366314(0x10d)]=(this['_inBrowser']?_0x366314(0x122):'Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20')+this[_0x366314(0x189)];}async[_0x2bca12(0x19d)](){var _0x4bc165=_0x2bca12,_0x3074a0,_0x2c7ea6;if(this['_WebSocketClass'])return this[_0x4bc165(0x115)];let _0x235b9c;if(this['_inBrowser']||this[_0x4bc165(0xe0)])_0x235b9c=this[_0x4bc165(0x12a)]['WebSocket'];else{if((_0x3074a0=this[_0x4bc165(0x12a)]['process'])!=null&&_0x3074a0[_0x4bc165(0xe2)])_0x235b9c=(_0x2c7ea6=this[_0x4bc165(0x12a)]['process'])==null?void 0x0:_0x2c7ea6[_0x4bc165(0xe2)];else try{let _0x4e4a89=await import('path');_0x235b9c=(await import((await import(_0x4bc165(0x1a8)))[_0x4bc165(0x114)](_0x4e4a89['join'](this['nodeModules'],_0x4bc165(0xc8)))[_0x4bc165(0x119)]()))[_0x4bc165(0xf6)];}catch{try{_0x235b9c=require(require(_0x4bc165(0x16b))[_0x4bc165(0xe1)](this['nodeModules'],'ws'));}catch{throw new Error(_0x4bc165(0xd7));}}}return this[_0x4bc165(0x115)]=_0x235b9c,_0x235b9c;}['_connectToHostNow'](){var _0x51fbbc=_0x2bca12;this[_0x51fbbc(0x101)]||this[_0x51fbbc(0x124)]||this['_connectAttemptCount']>=this[_0x51fbbc(0x15c)]||(this['_allowedToConnectOnSend']=!0x1,this['_connecting']=!0x0,this['_connectAttemptCount']++,this[_0x51fbbc(0x131)]=new Promise((_0x5d6855,_0x5d132d)=>{var _0x3713cd=_0x51fbbc;this[_0x3713cd(0x19d)]()['then'](_0x166099=>{var _0xab40d3=_0x3713cd;let _0x1057b2=new _0x166099(_0xab40d3(0x193)+(!this['_inBrowser']&&this[_0xab40d3(0xde)]?_0xab40d3(0x146):this[_0xab40d3(0xeb)])+':'+this[_0xab40d3(0x149)]);_0x1057b2[_0xab40d3(0x18c)]=()=>{var _0x2ee0f2=_0xab40d3;this['_allowedToSend']=!0x1,this[_0x2ee0f2(0x177)](_0x1057b2),this[_0x2ee0f2(0xc9)](),_0x5d132d(new Error(_0x2ee0f2(0x19a)));},_0x1057b2[_0xab40d3(0x13b)]=()=>{var _0x428739=_0xab40d3;this[_0x428739(0x1ad)]||_0x1057b2[_0x428739(0x165)]&&_0x1057b2[_0x428739(0x165)][_0x428739(0x17c)]&&_0x1057b2[_0x428739(0x165)]['unref'](),_0x5d6855(_0x1057b2);},_0x1057b2[_0xab40d3(0x198)]=()=>{var _0x19f421=_0xab40d3;this[_0x19f421(0x1b8)]=!0x0,this['_disposeWebsocket'](_0x1057b2),this['_attemptToReconnectShortly']();},_0x1057b2[_0xab40d3(0xd8)]=_0x3d3b3b=>{var _0xb0e3d3=_0xab40d3;try{if(!(_0x3d3b3b!=null&&_0x3d3b3b['data'])||!this[_0xb0e3d3(0x10e)])return;let _0x36b853=JSON[_0xb0e3d3(0x11c)](_0x3d3b3b[_0xb0e3d3(0x158)]);this[_0xb0e3d3(0x10e)](_0x36b853[_0xb0e3d3(0x199)],_0x36b853['args'],this[_0xb0e3d3(0x12a)],this['_inBrowser']);}catch{}};})[_0x3713cd(0x187)](_0x554003=>(this[_0x3713cd(0x124)]=!0x0,this['_connecting']=!0x1,this[_0x3713cd(0x1b8)]=!0x1,this['_allowedToSend']=!0x0,this[_0x3713cd(0x163)]=0x0,_0x554003))['catch'](_0x37478e=>(this[_0x3713cd(0x124)]=!0x1,this['_connecting']=!0x1,console['warn'](_0x3713cd(0x184)+this['_webSocketErrorDocsLink']),_0x5d132d(new Error(_0x3713cd(0x186)+(_0x37478e&&_0x37478e[_0x3713cd(0x102)])))));}));}[_0x2bca12(0x177)](_0x386638){var _0x5ba304=_0x2bca12;this[_0x5ba304(0x124)]=!0x1,this[_0x5ba304(0x101)]=!0x1;try{_0x386638[_0x5ba304(0x198)]=null,_0x386638['onerror']=null,_0x386638['onopen']=null;}catch{}try{_0x386638[_0x5ba304(0x168)]<0x2&&_0x386638[_0x5ba304(0xdf)]();}catch{}}[_0x2bca12(0xc9)](){var _0x294ef1=_0x2bca12;clearTimeout(this['_reconnectTimeout']),!(this['_connectAttemptCount']>=this[_0x294ef1(0x15c)])&&(this[_0x294ef1(0xd3)]=setTimeout(()=>{var _0x1796eb=_0x294ef1,_0x2c6adc;this['_connected']||this[_0x1796eb(0x101)]||(this[_0x1796eb(0x127)](),(_0x2c6adc=this[_0x1796eb(0x131)])==null||_0x2c6adc[_0x1796eb(0x161)](()=>this[_0x1796eb(0xc9)]()));},0x1f4),this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]&&this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]());}async[_0x2bca12(0x173)](_0x10f210){var _0x52b89f=_0x2bca12;try{if(!this['_allowedToSend'])return;this['_allowedToConnectOnSend']&&this[_0x52b89f(0x127)](),(await this[_0x52b89f(0x131)])['send'](JSON[_0x52b89f(0x18b)](_0x10f210));}catch(_0x5bd730){console[_0x52b89f(0x136)](this[_0x52b89f(0x10d)]+':\\x20'+(_0x5bd730&&_0x5bd730[_0x52b89f(0x102)])),this[_0x52b89f(0xf7)]=!0x1,this[_0x52b89f(0xc9)]();}}};function q(_0x2559f6,_0x429776,_0x286cb2,_0x1899f4,_0x5d87c6,_0x3f6d48,_0x5100f6,_0x3674c9=ie){var _0x3c2a94=_0x2bca12;let _0x1f028d=_0x286cb2[_0x3c2a94(0xdb)](',')[_0x3c2a94(0x19e)](_0x1b6f54=>{var _0x1b4dcd=_0x3c2a94,_0x5e8525,_0x163ae0,_0x1ac705,_0x14a90d;try{if(!_0x2559f6[_0x1b4dcd(0x12d)]){let _0x463d56=((_0x163ae0=(_0x5e8525=_0x2559f6[_0x1b4dcd(0xdd)])==null?void 0x0:_0x5e8525['versions'])==null?void 0x0:_0x163ae0[_0x1b4dcd(0x18d)])||((_0x14a90d=(_0x1ac705=_0x2559f6['process'])==null?void 0x0:_0x1ac705[_0x1b4dcd(0x183)])==null?void 0x0:_0x14a90d[_0x1b4dcd(0x1b5)])===_0x1b4dcd(0x17a);(_0x5d87c6===_0x1b4dcd(0x1ac)||_0x5d87c6==='remix'||_0x5d87c6==='astro'||_0x5d87c6===_0x1b4dcd(0x16a))&&(_0x5d87c6+=_0x463d56?_0x1b4dcd(0x1b9):_0x1b4dcd(0xca)),_0x2559f6[_0x1b4dcd(0x12d)]={'id':+new Date(),'tool':_0x5d87c6},_0x5100f6&&_0x5d87c6&&!_0x463d56&&console[_0x1b4dcd(0x19f)](_0x1b4dcd(0x12b)+(_0x5d87c6[_0x1b4dcd(0x144)](0x0)[_0x1b4dcd(0xc7)]()+_0x5d87c6[_0x1b4dcd(0x129)](0x1))+',',_0x1b4dcd(0x1a3),_0x1b4dcd(0x110));}let _0x3505f2=new Z(_0x2559f6,_0x429776,_0x1b6f54,_0x1899f4,_0x3f6d48,_0x3674c9);return _0x3505f2[_0x1b4dcd(0x173)][_0x1b4dcd(0x17d)](_0x3505f2);}catch(_0x23fd2a){return console[_0x1b4dcd(0x136)](_0x1b4dcd(0x1b0),_0x23fd2a&&_0x23fd2a[_0x1b4dcd(0x102)]),()=>{};}});return _0x46ac03=>_0x1f028d['forEach'](_0x6d4398=>_0x6d4398(_0x46ac03));}function _0x1981(){var _0x1cc256=['nan','autoExpand','rootExpression','isExpressionToEvaluate','_type','_connecting','message',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.361\\\\node_modules\",'webpack','160376fqsVJW','replace','indexOf','expId','unknown','Symbol','call','_sendErrorMessage','eventReceivedCallback','coverage','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','trace','perf_hooks','_additionalMetadata','pathToFileURL','_WebSocketClass','nodeModules','performance','44910AnkGVI','toString','resolveGetters','elements','parse','index','concat','[object\\x20Date]','_p_','_sortProps','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','_addProperty','_connected','387884eRTpAo','_isPrimitiveType','_connectToHostNow','_processTreeNodeResult','substr','global','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','2933940VZdLFd','_console_ninja_session','args','props','cappedElements','_ws','allStrLength','cappedProps','hits','type','warn','Set','_isUndefined','pop','_console_ninja','onopen','hostname','_propertyName','some','object','_setNodePermissions','now','_addLoadNode','_getOwnPropertyDescriptor','charAt','HTMLAllCollection','gateway.docker.internal','symbol','prototype','port','POSITIVE_INFINITY','NEGATIVE_INFINITY','count','getPrototypeOf','_addObjectProperty','valueOf','name','_setNodeExpressionPath','constructor','forEach','reduceLimits','undefined','Map','[object\\x20Array]','data','Number','_isMap','toLowerCase','_maxConnectAttemptCount','_hasMapOnItsPath','_undefined','[object\\x20BigInt]','104515YyMMdb','catch','_Symbol','_connectAttemptCount','_p_length','_socket','_property','sortProps','readyState','_setNodeQueryPath','angular','path','match','value','_objectToString','638627Mjrmie','serialize','array','_regExpToString','send','unshift','boolean','_hasSetOnItsPath','_disposeWebsocket','stackTraceLimit','console','edge','_capIfString','unref','bind','_p_name','autoExpandLimit','string','_isPrimitiveWrapperType','parent','env','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','level','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','then','expressionsToEvaluate','_webSocketErrorDocsLink','Buffer','stringify','onerror','node','getOwnPropertySymbols','setter','startsWith','negativeZero','isArray','ws://','_setNodeId','127.0.0.1','27UnjLEA','_setNodeExpandableState','onclose','method','logger\\x20websocket\\x20error','error','capped','getWebSocketClass','map','log','115IvKekB','positiveInfinity','_consoleNinjaAllowedToStart','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','sort','RegExp','timeStamp','location','url','slice','__es'+'Module','function','next.js','_inBrowser','length','hrtime','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host','6MKhUHQ','endsWith','depth','elapsed','NEXT_RUNTIME','_quotedRegExp','[object\\x20Set]','_allowedToConnectOnSend','\\x20server','_numberRegExp','6hsXPaJ','_getOwnPropertyNames','fromCharCode','toUpperCase','ws/index.js','_attemptToReconnectShortly','\\x20browser','_blacklistedProperty','7TPwape','_HTMLAllCollection','versions','_treeNodePropertiesAfterFullValue','1','noFunctions','','_reconnectTimeout','date','_addFunctionsNode','push','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onmessage','null','autoExpandMaxDepth','split','Boolean','process','dockerizedApp','close','_inNextEdge','join','_WebSocket','strLength','bigint','autoExpandPropertyCount','_ninjaIgnoreNextError','root_exp_id','_isArray','_treeNodePropertiesBeforeFullValue','totalStrLength','host','current','stack','enumerable','origin','getter','getOwnPropertyNames','1499710XMYdzy','time','number','_setNodeLabel','default','_allowedToSend','_isNegativeZero','reload','test','autoExpandPreviousObjects'];_0x1981=function(){return _0x1cc256;};return _0x1981();}function ie(_0x50d241,_0x4ab0ca,_0x2ad3bf,_0x298a30){var _0x132ff5=_0x2bca12;_0x298a30&&_0x50d241===_0x132ff5(0xf9)&&_0x2ad3bf[_0x132ff5(0x1a7)][_0x132ff5(0xf9)]();}function B(_0x2a70ea){var _0x48e265=_0x2bca12,_0x3bb2c5,_0x33cf16;let _0x1da5e2=function(_0x4ae09f,_0x3cdf41){return _0x3cdf41-_0x4ae09f;},_0x5a4fc3;if(_0x2a70ea[_0x48e265(0x117)])_0x5a4fc3=function(){var _0x239825=_0x48e265;return _0x2a70ea[_0x239825(0x117)]['now']();};else{if(_0x2a70ea[_0x48e265(0xdd)]&&_0x2a70ea['process'][_0x48e265(0x1af)]&&((_0x33cf16=(_0x3bb2c5=_0x2a70ea[_0x48e265(0xdd)])==null?void 0x0:_0x3bb2c5['env'])==null?void 0x0:_0x33cf16[_0x48e265(0x1b5)])!==_0x48e265(0x17a))_0x5a4fc3=function(){var _0x5d38df=_0x48e265;return _0x2a70ea[_0x5d38df(0xdd)][_0x5d38df(0x1af)]();},_0x1da5e2=function(_0x1ce5c1,_0x1206ec){return 0x3e8*(_0x1206ec[0x0]-_0x1ce5c1[0x0])+(_0x1206ec[0x1]-_0x1ce5c1[0x1])/0xf4240;};else try{let {performance:_0x31ee75}=require(_0x48e265(0x112));_0x5a4fc3=function(){var _0xb81975=_0x48e265;return _0x31ee75[_0xb81975(0x141)]();};}catch{_0x5a4fc3=function(){return+new Date();};}}return{'elapsed':_0x1da5e2,'timeStamp':_0x5a4fc3,'now':()=>Date[_0x48e265(0x141)]()};}function _0x4773(_0x59a4b7,_0x11c8f8){var _0x19810a=_0x1981();return _0x4773=function(_0x4773c0,_0x5493f9){_0x4773c0=_0x4773c0-0xc4;var _0x42dbbd=_0x19810a[_0x4773c0];return _0x42dbbd;},_0x4773(_0x59a4b7,_0x11c8f8);}function H(_0xa0e04,_0x390b7e,_0x25c02b){var _0x4b158f=_0x2bca12,_0xa0802d,_0x5f0fc3,_0x12133b,_0x53fd5b,_0x2cd2a6;if(_0xa0e04['_consoleNinjaAllowedToStart']!==void 0x0)return _0xa0e04[_0x4b158f(0x1a2)];let _0x3635b4=((_0x5f0fc3=(_0xa0802d=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0xa0802d[_0x4b158f(0xce)])==null?void 0x0:_0x5f0fc3[_0x4b158f(0x18d)])||((_0x53fd5b=(_0x12133b=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0x12133b[_0x4b158f(0x183)])==null?void 0x0:_0x53fd5b[_0x4b158f(0x1b5)])==='edge';function _0x31bf08(_0x2063f9){var _0x261b77=_0x4b158f;if(_0x2063f9[_0x261b77(0x190)]('/')&&_0x2063f9[_0x261b77(0x1b2)]('/')){let _0x109725=new RegExp(_0x2063f9[_0x261b77(0x1a9)](0x1,-0x1));return _0xb647c5=>_0x109725[_0x261b77(0xfa)](_0xb647c5);}else{if(_0x2063f9['includes']('*')||_0x2063f9['includes']('?')){let _0x1dd8d2=new RegExp('^'+_0x2063f9[_0x261b77(0x107)](/\\./g,String['fromCharCode'](0x5c)+'.')[_0x261b77(0x107)](/\\*/g,'.*')[_0x261b77(0x107)](/\\?/g,'.')+String[_0x261b77(0xc6)](0x24));return _0x1c3e9e=>_0x1dd8d2[_0x261b77(0xfa)](_0x1c3e9e);}else return _0x2f2cba=>_0x2f2cba===_0x2063f9;}}let _0x49b432=_0x390b7e['map'](_0x31bf08);return _0xa0e04[_0x4b158f(0x1a2)]=_0x3635b4||!_0x390b7e,!_0xa0e04[_0x4b158f(0x1a2)]&&((_0x2cd2a6=_0xa0e04[_0x4b158f(0x1a7)])==null?void 0x0:_0x2cd2a6[_0x4b158f(0x13c)])&&(_0xa0e04[_0x4b158f(0x1a2)]=_0x49b432[_0x4b158f(0x13e)](_0x10f033=>_0x10f033(_0xa0e04[_0x4b158f(0x1a7)][_0x4b158f(0x13c)]))),_0xa0e04[_0x4b158f(0x1a2)];}function X(_0x42b58f,_0x129228,_0xf8645b,_0xe2403){var _0x59d910=_0x2bca12;_0x42b58f=_0x42b58f,_0x129228=_0x129228,_0xf8645b=_0xf8645b,_0xe2403=_0xe2403;let _0x2df6fa=B(_0x42b58f),_0x2c3b6=_0x2df6fa[_0x59d910(0x1b4)],_0x2e20c8=_0x2df6fa[_0x59d910(0x1a6)];class _0x19c1a8{constructor(){var _0x705759=_0x59d910;this['_keyStrRegExp']=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x705759(0x1ba)]=/^(0|[1-9][0-9]*)$/,this[_0x705759(0x1b6)]=/'([^\\\\']|\\\\')*'/,this[_0x705759(0x15e)]=_0x42b58f[_0x705759(0x155)],this[_0x705759(0xcd)]=_0x42b58f[_0x705759(0x145)],this[_0x705759(0x143)]=Object['getOwnPropertyDescriptor'],this[_0x705759(0xc5)]=Object[_0x705759(0xf1)],this[_0x705759(0x162)]=_0x42b58f[_0x705759(0x10b)],this[_0x705759(0x172)]=RegExp['prototype'][_0x705759(0x119)],this['_dateToString']=Date[_0x705759(0x148)][_0x705759(0x119)];}[_0x59d910(0x170)](_0x5ff7d4,_0x50b9c7,_0x57b99b,_0x402de9){var _0x5cfce7=_0x59d910,_0x445891=this,_0x45c037=_0x57b99b['autoExpand'];function _0x2a0f1c(_0x101ae6,_0x5dfecb,_0x226057){var _0x1d3189=_0x4773;_0x5dfecb[_0x1d3189(0x135)]=_0x1d3189(0x10a),_0x5dfecb['error']=_0x101ae6['message'],_0x31dd4c=_0x226057['node'][_0x1d3189(0xec)],_0x226057['node'][_0x1d3189(0xec)]=_0x5dfecb,_0x445891[_0x1d3189(0xe9)](_0x5dfecb,_0x226057);}try{_0x57b99b['level']++,_0x57b99b['autoExpand']&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0xd6)](_0x50b9c7);var _0x374e2c,_0x198515,_0x21e989,_0x5397a2,_0xb4f472=[],_0x1033a2=[],_0x42fc37,_0x5db5f3=this['_type'](_0x50b9c7),_0x30e8b5=_0x5db5f3==='array',_0x557cc5=!0x1,_0x5e918c=_0x5db5f3===_0x5cfce7(0x1ab),_0x3251d6=this[_0x5cfce7(0x126)](_0x5db5f3),_0x1ce14a=this['_isPrimitiveWrapperType'](_0x5db5f3),_0x8474bd=_0x3251d6||_0x1ce14a,_0x1bfb2d={},_0x4fe8cd=0x0,_0x8d00e4=!0x1,_0x31dd4c,_0x2f58df=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x57b99b['depth']){if(_0x30e8b5){if(_0x198515=_0x50b9c7[_0x5cfce7(0x1ae)],_0x198515>_0x57b99b[_0x5cfce7(0x11b)]){for(_0x21e989=0x0,_0x5397a2=_0x57b99b[_0x5cfce7(0x11b)],_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));_0x5ff7d4[_0x5cfce7(0x130)]=!0x0;}else{for(_0x21e989=0x0,_0x5397a2=_0x198515,_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2['push'](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));}_0x57b99b[_0x5cfce7(0xe5)]+=_0x1033a2[_0x5cfce7(0x1ae)];}if(!(_0x5db5f3==='null'||_0x5db5f3===_0x5cfce7(0x155))&&!_0x3251d6&&_0x5db5f3!=='String'&&_0x5db5f3!==_0x5cfce7(0x18a)&&_0x5db5f3!==_0x5cfce7(0xe4)){var _0x3dcccf=_0x402de9[_0x5cfce7(0x12f)]||_0x57b99b[_0x5cfce7(0x12f)];if(this['_isSet'](_0x50b9c7)?(_0x374e2c=0x0,_0x50b9c7[_0x5cfce7(0x153)](function(_0x106bb2){var _0x57c264=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x57c264(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x57c264(0xff)]&&_0x57b99b[_0x57c264(0xfd)]&&_0x57b99b[_0x57c264(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;return;}_0x1033a2[_0x57c264(0xd6)](_0x445891[_0x57c264(0x123)](_0xb4f472,_0x50b9c7,_0x57c264(0x137),_0x374e2c++,_0x57b99b,function(_0x561327){return function(){return _0x561327;};}(_0x106bb2)));})):this[_0x5cfce7(0x15a)](_0x50b9c7)&&_0x50b9c7[_0x5cfce7(0x153)](function(_0x3400b2,_0xf2c316){var _0x5563b7=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x5563b7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x5563b7(0xff)]&&_0x57b99b[_0x5563b7(0xfd)]&&_0x57b99b[_0x5563b7(0xe5)]>_0x57b99b[_0x5563b7(0x17f)]){_0x8d00e4=!0x0;return;}var _0x25b726=_0xf2c316['toString']();_0x25b726[_0x5563b7(0x1ae)]>0x64&&(_0x25b726=_0x25b726[_0x5563b7(0x1a9)](0x0,0x64)+'...'),_0x1033a2[_0x5563b7(0xd6)](_0x445891[_0x5563b7(0x123)](_0xb4f472,_0x50b9c7,_0x5563b7(0x156),_0x25b726,_0x57b99b,function(_0x28e73a){return function(){return _0x28e73a;};}(_0x3400b2)));}),!_0x557cc5){try{for(_0x42fc37 in _0x50b9c7)if(!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;break;}_0x1033a2['push'](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}catch{}if(_0x1bfb2d[_0x5cfce7(0x164)]=!0x0,_0x5e918c&&(_0x1bfb2d[_0x5cfce7(0x17e)]=!0x0),!_0x8d00e4){var _0x392eb1=[][_0x5cfce7(0x11e)](this[_0x5cfce7(0xc5)](_0x50b9c7))[_0x5cfce7(0x11e)](this['_getOwnPropertySymbols'](_0x50b9c7));for(_0x374e2c=0x0,_0x198515=_0x392eb1[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)if(_0x42fc37=_0x392eb1[_0x374e2c],!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37[_0x5cfce7(0x119)]()))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)&&!_0x1bfb2d[_0x5cfce7(0x120)+_0x42fc37['toString']()]){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b['autoExpandPropertyCount']>_0x57b99b[_0x5cfce7(0x17f)]){_0x8d00e4=!0x0;break;}_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}}}}if(_0x5ff7d4[_0x5cfce7(0x135)]=_0x5db5f3,_0x8474bd?(_0x5ff7d4['value']=_0x50b9c7['valueOf'](),this[_0x5cfce7(0x17b)](_0x5db5f3,_0x5ff7d4,_0x57b99b,_0x402de9)):_0x5db5f3===_0x5cfce7(0xd4)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_dateToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0xe4)?_0x5ff7d4[_0x5cfce7(0x16d)]=_0x50b9c7[_0x5cfce7(0x119)]():_0x5db5f3===_0x5cfce7(0x1a5)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_regExpToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0x147)&&this[_0x5cfce7(0x162)]?_0x5ff7d4['value']=this[_0x5cfce7(0x162)][_0x5cfce7(0x148)][_0x5cfce7(0x119)][_0x5cfce7(0x10c)](_0x50b9c7):!_0x57b99b[_0x5cfce7(0x1b3)]&&!(_0x5db5f3===_0x5cfce7(0xd9)||_0x5db5f3===_0x5cfce7(0x155))&&(delete _0x5ff7d4[_0x5cfce7(0x16d)],_0x5ff7d4['capped']=!0x0),_0x8d00e4&&(_0x5ff7d4[_0x5cfce7(0x133)]=!0x0),_0x31dd4c=_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)],_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x5ff7d4,this[_0x5cfce7(0xe9)](_0x5ff7d4,_0x57b99b),_0x1033a2['length']){for(_0x374e2c=0x0,_0x198515=_0x1033a2[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)_0x1033a2[_0x374e2c](_0x374e2c);}_0xb4f472[_0x5cfce7(0x1ae)]&&(_0x5ff7d4[_0x5cfce7(0x12f)]=_0xb4f472);}catch(_0x39497f){_0x2a0f1c(_0x39497f,_0x5ff7d4,_0x57b99b);}return this['_additionalMetadata'](_0x50b9c7,_0x5ff7d4),this['_treeNodePropertiesAfterFullValue'](_0x5ff7d4,_0x57b99b),_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x31dd4c,_0x57b99b[_0x5cfce7(0x185)]--,_0x57b99b[_0x5cfce7(0xfd)]=_0x45c037,_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0x139)](),_0x5ff7d4;}['_getOwnPropertySymbols'](_0x477a0b){var _0x3d0f11=_0x59d910;return Object[_0x3d0f11(0x18e)]?Object[_0x3d0f11(0x18e)](_0x477a0b):[];}['_isSet'](_0x141e1f){var _0x1204c3=_0x59d910;return!!(_0x141e1f&&_0x42b58f[_0x1204c3(0x137)]&&this['_objectToString'](_0x141e1f)===_0x1204c3(0x1b7)&&_0x141e1f[_0x1204c3(0x153)]);}[_0x59d910(0xcb)](_0x1ddd07,_0x20799b,_0x158e7f){var _0x29a6c1=_0x59d910;return _0x158e7f[_0x29a6c1(0xd1)]?typeof _0x1ddd07[_0x20799b]=='function':!0x1;}['_type'](_0x5bc437){var _0x5e1e75=_0x59d910,_0x3950f7='';return _0x3950f7=typeof _0x5bc437,_0x3950f7===_0x5e1e75(0x13f)?this['_objectToString'](_0x5bc437)===_0x5e1e75(0x157)?_0x3950f7=_0x5e1e75(0x171):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x11f)?_0x3950f7=_0x5e1e75(0xd4):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x15f)?_0x3950f7=_0x5e1e75(0xe4):_0x5bc437===null?_0x3950f7='null':_0x5bc437[_0x5e1e75(0x152)]&&(_0x3950f7=_0x5bc437['constructor'][_0x5e1e75(0x150)]||_0x3950f7):_0x3950f7==='undefined'&&this[_0x5e1e75(0xcd)]&&_0x5bc437 instanceof this[_0x5e1e75(0xcd)]&&(_0x3950f7=_0x5e1e75(0x145)),_0x3950f7;}[_0x59d910(0x16e)](_0x4efba9){var _0x28da83=_0x59d910;return Object[_0x28da83(0x148)]['toString']['call'](_0x4efba9);}[_0x59d910(0x126)](_0x3a2465){var _0x20daf9=_0x59d910;return _0x3a2465===_0x20daf9(0x175)||_0x3a2465==='string'||_0x3a2465===_0x20daf9(0xf4);}[_0x59d910(0x181)](_0xc8d6c3){var _0x155aaf=_0x59d910;return _0xc8d6c3===_0x155aaf(0xdc)||_0xc8d6c3==='String'||_0xc8d6c3===_0x155aaf(0x159);}['_addProperty'](_0x3bbd44,_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8){var _0x2c110d=this;return function(_0x22390d){var _0x4b904d=_0x4773,_0xd0393c=_0x16bae5[_0x4b904d(0x18d)]['current'],_0x2ab087=_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)],_0x5c27ab=_0x16bae5['node'][_0x4b904d(0x182)];_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0xd0393c,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=typeof _0x2b5ddf=='number'?_0x2b5ddf:_0x22390d,_0x3bbd44[_0x4b904d(0xd6)](_0x2c110d[_0x4b904d(0x166)](_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8)),_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0x5c27ab,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=_0x2ab087;};}['_addObjectProperty'](_0x3a8c19,_0x3b4554,_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a){var _0x5550e6=_0x59d910,_0x3bc2b8=this;return _0x3b4554[_0x5550e6(0x120)+_0x27c291[_0x5550e6(0x119)]()]=!0x0,function(_0x47debe){var _0x169dc4=_0x5550e6,_0x45f56c=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0xec)],_0x267e42=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)],_0x8dd8b4=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x182)];_0x5a54ef['node']['parent']=_0x45f56c,_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)]=_0x47debe,_0x3a8c19[_0x169dc4(0xd6)](_0x3bc2b8['_property'](_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a)),_0x5a54ef['node']['parent']=_0x8dd8b4,_0x5a54ef[_0x169dc4(0x18d)]['index']=_0x267e42;};}[_0x59d910(0x166)](_0x4634bc,_0x50d676,_0x3980e3,_0x4bf6b6,_0xe4fd65){var _0x2ec3ee=_0x59d910,_0x1ecfb9=this;_0xe4fd65||(_0xe4fd65=function(_0x1bd715,_0x5b545a){return _0x1bd715[_0x5b545a];});var _0x43cf5f=_0x3980e3[_0x2ec3ee(0x119)](),_0x473523=_0x4bf6b6[_0x2ec3ee(0x188)]||{},_0x443049=_0x4bf6b6[_0x2ec3ee(0x1b3)],_0xbcb9d=_0x4bf6b6[_0x2ec3ee(0xff)];try{var _0xc15d8d=this[_0x2ec3ee(0x15a)](_0x4634bc),_0x515e5d=_0x43cf5f;_0xc15d8d&&_0x515e5d[0x0]==='\\x27'&&(_0x515e5d=_0x515e5d['substr'](0x1,_0x515e5d[_0x2ec3ee(0x1ae)]-0x2));var _0x5a60d5=_0x4bf6b6['expressionsToEvaluate']=_0x473523[_0x2ec3ee(0x120)+_0x515e5d];_0x5a60d5&&(_0x4bf6b6['depth']=_0x4bf6b6[_0x2ec3ee(0x1b3)]+0x1),_0x4bf6b6[_0x2ec3ee(0xff)]=!!_0x5a60d5;var _0x44f8c5=typeof _0x3980e3==_0x2ec3ee(0x147),_0x480834={'name':_0x44f8c5||_0xc15d8d?_0x43cf5f:this[_0x2ec3ee(0x13d)](_0x43cf5f)};if(_0x44f8c5&&(_0x480834['symbol']=!0x0),!(_0x50d676===_0x2ec3ee(0x171)||_0x50d676==='Error')){var _0xe37803=this['_getOwnPropertyDescriptor'](_0x4634bc,_0x3980e3);if(_0xe37803&&(_0xe37803['set']&&(_0x480834[_0x2ec3ee(0x18f)]=!0x0),_0xe37803['get']&&!_0x5a60d5&&!_0x4bf6b6[_0x2ec3ee(0x11a)]))return _0x480834[_0x2ec3ee(0xf0)]=!0x0,this['_processTreeNodeResult'](_0x480834,_0x4bf6b6),_0x480834;}var _0x3c64d4;try{_0x3c64d4=_0xe4fd65(_0x4634bc,_0x3980e3);}catch(_0x3cb082){return _0x480834={'name':_0x43cf5f,'type':_0x2ec3ee(0x10a),'error':_0x3cb082[_0x2ec3ee(0x102)]},this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6),_0x480834;}var _0x4a8e10=this[_0x2ec3ee(0x100)](_0x3c64d4),_0x166793=this['_isPrimitiveType'](_0x4a8e10);if(_0x480834[_0x2ec3ee(0x135)]=_0x4a8e10,_0x166793)this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x1347bc=_0x2ec3ee;_0x480834[_0x1347bc(0x16d)]=_0x3c64d4[_0x1347bc(0x14f)](),!_0x5a60d5&&_0x1ecfb9[_0x1347bc(0x17b)](_0x4a8e10,_0x480834,_0x4bf6b6,{});});else{var _0x353b1a=_0x4bf6b6[_0x2ec3ee(0xfd)]&&_0x4bf6b6[_0x2ec3ee(0x185)]<_0x4bf6b6[_0x2ec3ee(0xda)]&&_0x4bf6b6['autoExpandPreviousObjects'][_0x2ec3ee(0x108)](_0x3c64d4)<0x0&&_0x4a8e10!==_0x2ec3ee(0x1ab)&&_0x4bf6b6[_0x2ec3ee(0xe5)]<_0x4bf6b6[_0x2ec3ee(0x17f)];_0x353b1a||_0x4bf6b6['level']<_0x443049||_0x5a60d5?(this['serialize'](_0x480834,_0x3c64d4,_0x4bf6b6,_0x5a60d5||{}),this[_0x2ec3ee(0x113)](_0x3c64d4,_0x480834)):this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x3f3537=_0x2ec3ee;_0x4a8e10===_0x3f3537(0xd9)||_0x4a8e10===_0x3f3537(0x155)||(delete _0x480834['value'],_0x480834['capped']=!0x0);});}return _0x480834;}finally{_0x4bf6b6['expressionsToEvaluate']=_0x473523,_0x4bf6b6[_0x2ec3ee(0x1b3)]=_0x443049,_0x4bf6b6['isExpressionToEvaluate']=_0xbcb9d;}}['_capIfString'](_0x374f23,_0x1082d6,_0x4780b2,_0xc78460){var _0x22facb=_0x59d910,_0x54c069=_0xc78460[_0x22facb(0xe3)]||_0x4780b2[_0x22facb(0xe3)];if((_0x374f23===_0x22facb(0x180)||_0x374f23==='String')&&_0x1082d6[_0x22facb(0x16d)]){let _0x50dee4=_0x1082d6[_0x22facb(0x16d)]['length'];_0x4780b2[_0x22facb(0x132)]+=_0x50dee4,_0x4780b2[_0x22facb(0x132)]>_0x4780b2['totalStrLength']?(_0x1082d6[_0x22facb(0x19c)]='',delete _0x1082d6[_0x22facb(0x16d)]):_0x50dee4>_0x54c069&&(_0x1082d6[_0x22facb(0x19c)]=_0x1082d6[_0x22facb(0x16d)][_0x22facb(0x129)](0x0,_0x54c069),delete _0x1082d6[_0x22facb(0x16d)]);}}[_0x59d910(0x15a)](_0x52ab0c){var _0x2023a7=_0x59d910;return!!(_0x52ab0c&&_0x42b58f[_0x2023a7(0x156)]&&this['_objectToString'](_0x52ab0c)==='[object\\x20Map]'&&_0x52ab0c[_0x2023a7(0x153)]);}[_0x59d910(0x13d)](_0x4cb732){var _0x40da4e=_0x59d910;if(_0x4cb732[_0x40da4e(0x16c)](/^\\d+$/))return _0x4cb732;var _0x4f2948;try{_0x4f2948=JSON[_0x40da4e(0x18b)](''+_0x4cb732);}catch{_0x4f2948='\\x22'+this[_0x40da4e(0x16e)](_0x4cb732)+'\\x22';}return _0x4f2948['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x4f2948=_0x4f2948['substr'](0x1,_0x4f2948[_0x40da4e(0x1ae)]-0x2):_0x4f2948=_0x4f2948[_0x40da4e(0x107)](/'/g,'\\x5c\\x27')[_0x40da4e(0x107)](/\\\\\"/g,'\\x22')[_0x40da4e(0x107)](/(^\"|\"$)/g,'\\x27'),_0x4f2948;}[_0x59d910(0x128)](_0x1d5fea,_0x5be4c9,_0x4d7602,_0x144e6a){var _0x127d32=_0x59d910;this[_0x127d32(0xe9)](_0x1d5fea,_0x5be4c9),_0x144e6a&&_0x144e6a(),this['_additionalMetadata'](_0x4d7602,_0x1d5fea),this[_0x127d32(0xcf)](_0x1d5fea,_0x5be4c9);}['_treeNodePropertiesBeforeFullValue'](_0x1e69b9,_0x9763d9){var _0x19d496=_0x59d910;this[_0x19d496(0x194)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x169)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x151)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x140)](_0x1e69b9,_0x9763d9);}[_0x59d910(0x194)](_0x490095,_0x2bbcf7){}['_setNodeQueryPath'](_0x5e063c,_0x16566d){}['_setNodeLabel'](_0x46851d,_0x310978){}[_0x59d910(0x138)](_0x4034ca){var _0x543b1b=_0x59d910;return _0x4034ca===this[_0x543b1b(0x15e)];}[_0x59d910(0xcf)](_0x54fc25,_0x515034){var _0x1e6ee5=_0x59d910;this['_setNodeLabel'](_0x54fc25,_0x515034),this[_0x1e6ee5(0x197)](_0x54fc25),_0x515034['sortProps']&&this[_0x1e6ee5(0x121)](_0x54fc25),this[_0x1e6ee5(0xd5)](_0x54fc25,_0x515034),this[_0x1e6ee5(0x142)](_0x54fc25,_0x515034),this['_cleanNode'](_0x54fc25);}[_0x59d910(0x113)](_0x32cb62,_0x5e6d71){var _0x5b5079=_0x59d910;let _0x2376e2;try{_0x42b58f['console']&&(_0x2376e2=_0x42b58f['console'][_0x5b5079(0x19b)],_0x42b58f['console'][_0x5b5079(0x19b)]=function(){}),_0x32cb62&&typeof _0x32cb62[_0x5b5079(0x1ae)]=='number'&&(_0x5e6d71[_0x5b5079(0x1ae)]=_0x32cb62[_0x5b5079(0x1ae)]);}catch{}finally{_0x2376e2&&(_0x42b58f[_0x5b5079(0x179)][_0x5b5079(0x19b)]=_0x2376e2);}if(_0x5e6d71[_0x5b5079(0x135)]==='number'||_0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x159)){if(isNaN(_0x5e6d71[_0x5b5079(0x16d)]))_0x5e6d71[_0x5b5079(0xfc)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];else switch(_0x5e6d71[_0x5b5079(0x16d)]){case Number[_0x5b5079(0x14a)]:_0x5e6d71[_0x5b5079(0x1a1)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case Number[_0x5b5079(0x14b)]:_0x5e6d71['negativeInfinity']=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case 0x0:this[_0x5b5079(0xf8)](_0x5e6d71[_0x5b5079(0x16d)])&&(_0x5e6d71[_0x5b5079(0x191)]=!0x0);break;}}else _0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x1ab)&&typeof _0x32cb62['name']=='string'&&_0x32cb62[_0x5b5079(0x150)]&&_0x5e6d71[_0x5b5079(0x150)]&&_0x32cb62['name']!==_0x5e6d71[_0x5b5079(0x150)]&&(_0x5e6d71['funcName']=_0x32cb62['name']);}[_0x59d910(0xf8)](_0x34f93d){var _0x1528b8=_0x59d910;return 0x1/_0x34f93d===Number[_0x1528b8(0x14b)];}[_0x59d910(0x121)](_0x111632){var _0x308a43=_0x59d910;!_0x111632[_0x308a43(0x12f)]||!_0x111632[_0x308a43(0x12f)][_0x308a43(0x1ae)]||_0x111632[_0x308a43(0x135)]==='array'||_0x111632[_0x308a43(0x135)]===_0x308a43(0x156)||_0x111632[_0x308a43(0x135)]===_0x308a43(0x137)||_0x111632[_0x308a43(0x12f)][_0x308a43(0x1a4)](function(_0x191f07,_0x5c36ed){var _0x4c8048=_0x308a43,_0x17e8b9=_0x191f07[_0x4c8048(0x150)][_0x4c8048(0x15b)](),_0x4c46a3=_0x5c36ed[_0x4c8048(0x150)][_0x4c8048(0x15b)]();return _0x17e8b9<_0x4c46a3?-0x1:_0x17e8b9>_0x4c46a3?0x1:0x0;});}[_0x59d910(0xd5)](_0x23b5e1,_0xc0339f){var _0x1dd9a0=_0x59d910;if(!(_0xc0339f[_0x1dd9a0(0xd1)]||!_0x23b5e1[_0x1dd9a0(0x12f)]||!_0x23b5e1[_0x1dd9a0(0x12f)]['length'])){for(var _0x4e618e=[],_0x43d757=[],_0x58332c=0x0,_0x423385=_0x23b5e1['props']['length'];_0x58332c<_0x423385;_0x58332c++){var _0xc362d8=_0x23b5e1['props'][_0x58332c];_0xc362d8[_0x1dd9a0(0x135)]===_0x1dd9a0(0x1ab)?_0x4e618e[_0x1dd9a0(0xd6)](_0xc362d8):_0x43d757[_0x1dd9a0(0xd6)](_0xc362d8);}if(!(!_0x43d757[_0x1dd9a0(0x1ae)]||_0x4e618e[_0x1dd9a0(0x1ae)]<=0x1)){_0x23b5e1['props']=_0x43d757;var _0x2a836a={'functionsNode':!0x0,'props':_0x4e618e};this['_setNodeId'](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0xf5)](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0x197)](_0x2a836a),this[_0x1dd9a0(0x140)](_0x2a836a,_0xc0339f),_0x2a836a['id']+='\\x20f',_0x23b5e1[_0x1dd9a0(0x12f)][_0x1dd9a0(0x174)](_0x2a836a);}}}['_addLoadNode'](_0x2794a5,_0x4e8a8b){}['_setNodeExpandableState'](_0x530ed3){}[_0x59d910(0xe8)](_0x133a13){var _0x2a2e61=_0x59d910;return Array[_0x2a2e61(0x192)](_0x133a13)||typeof _0x133a13==_0x2a2e61(0x13f)&&this['_objectToString'](_0x133a13)===_0x2a2e61(0x157);}['_setNodePermissions'](_0x18954f,_0x46f40f){}['_cleanNode'](_0x5c208d){var _0xf00978=_0x59d910;delete _0x5c208d['_hasSymbolPropertyOnItsPath'],delete _0x5c208d[_0xf00978(0x176)],delete _0x5c208d[_0xf00978(0x15d)];}['_setNodeExpressionPath'](_0x2e8d98,_0x41dee0){}}let _0x4519b0=new _0x19c1a8(),_0x40f60c={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x12c5e7={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x2867e6(_0x4e0c7c,_0x1e03f8,_0x499c82,_0x5aa8c5,_0x3e32f4,_0xb5a717){var _0x3f40bd=_0x59d910;let _0x230712,_0xc3da0a;try{_0xc3da0a=_0x2e20c8(),_0x230712=_0xf8645b[_0x1e03f8],!_0x230712||_0xc3da0a-_0x230712['ts']>0x1f4&&_0x230712[_0x3f40bd(0x14c)]&&_0x230712[_0x3f40bd(0xf3)]/_0x230712[_0x3f40bd(0x14c)]<0x64?(_0xf8645b[_0x1e03f8]=_0x230712={'count':0x0,'time':0x0,'ts':_0xc3da0a},_0xf8645b[_0x3f40bd(0x134)]={}):_0xc3da0a-_0xf8645b['hits']['ts']>0x32&&_0xf8645b[_0x3f40bd(0x134)]['count']&&_0xf8645b['hits'][_0x3f40bd(0xf3)]/_0xf8645b[_0x3f40bd(0x134)]['count']<0x64&&(_0xf8645b[_0x3f40bd(0x134)]={});let _0x18333f=[],_0x178c3=_0x230712[_0x3f40bd(0x154)]||_0xf8645b[_0x3f40bd(0x134)]['reduceLimits']?_0x12c5e7:_0x40f60c,_0xe4c0b=_0x2f2881=>{var _0x11bdda=_0x3f40bd;let _0x494983={};return _0x494983[_0x11bdda(0x12f)]=_0x2f2881[_0x11bdda(0x12f)],_0x494983[_0x11bdda(0x11b)]=_0x2f2881[_0x11bdda(0x11b)],_0x494983['strLength']=_0x2f2881[_0x11bdda(0xe3)],_0x494983[_0x11bdda(0xea)]=_0x2f2881['totalStrLength'],_0x494983[_0x11bdda(0x17f)]=_0x2f2881['autoExpandLimit'],_0x494983[_0x11bdda(0xda)]=_0x2f2881[_0x11bdda(0xda)],_0x494983[_0x11bdda(0x167)]=!0x1,_0x494983[_0x11bdda(0xd1)]=!_0x129228,_0x494983['depth']=0x1,_0x494983[_0x11bdda(0x185)]=0x0,_0x494983[_0x11bdda(0x109)]=_0x11bdda(0xe7),_0x494983[_0x11bdda(0xfe)]='root_exp',_0x494983[_0x11bdda(0xfd)]=!0x0,_0x494983[_0x11bdda(0xfb)]=[],_0x494983[_0x11bdda(0xe5)]=0x0,_0x494983['resolveGetters']=!0x0,_0x494983[_0x11bdda(0x132)]=0x0,_0x494983[_0x11bdda(0x18d)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x494983;};for(var _0x327fd1=0x0;_0x327fd1<_0x3e32f4[_0x3f40bd(0x1ae)];_0x327fd1++)_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'timeNode':_0x4e0c7c==='time'||void 0x0},_0x3e32f4[_0x327fd1],_0xe4c0b(_0x178c3),{}));if(_0x4e0c7c===_0x3f40bd(0x111)||_0x4e0c7c==='error'){let _0x1fda32=Error[_0x3f40bd(0x178)];try{Error['stackTraceLimit']=0x1/0x0,_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'stackNode':!0x0},new Error()[_0x3f40bd(0xed)],_0xe4c0b(_0x178c3),{'strLength':0x1/0x0}));}finally{Error[_0x3f40bd(0x178)]=_0x1fda32;}}return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':_0x18333f,'id':_0x1e03f8,'context':_0xb5a717}]};}catch(_0x147097){return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':[{'type':_0x3f40bd(0x10a),'error':_0x147097&&_0x147097['message']}],'id':_0x1e03f8,'context':_0xb5a717}]};}finally{try{if(_0x230712&&_0xc3da0a){let _0x3a9447=_0x2e20c8();_0x230712[_0x3f40bd(0x14c)]++,_0x230712[_0x3f40bd(0xf3)]+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0x230712['ts']=_0x3a9447,_0xf8645b[_0x3f40bd(0x134)]['count']++,_0xf8645b[_0x3f40bd(0x134)]['time']+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0xf8645b[_0x3f40bd(0x134)]['ts']=_0x3a9447,(_0x230712['count']>0x32||_0x230712['time']>0x64)&&(_0x230712[_0x3f40bd(0x154)]=!0x0),(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x14c)]>0x3e8||_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0xf3)]>0x12c)&&(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x154)]=!0x0);}}catch{}}}return _0x2867e6;}((_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x34dad2,_0x1940de,_0x3185f6,_0x38d54d,_0x1ad063,_0x501193)=>{var _0x2ad7ff=_0x2bca12;if(_0x260c40[_0x2ad7ff(0x13a)])return _0x260c40[_0x2ad7ff(0x13a)];if(!H(_0x260c40,_0x3185f6,_0x456a08))return _0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x260c40[_0x2ad7ff(0x13a)];let _0x57ceed=B(_0x260c40),_0x469973=_0x57ceed[_0x2ad7ff(0x1b4)],_0x86bf78=_0x57ceed[_0x2ad7ff(0x1a6)],_0x52fd71=_0x57ceed[_0x2ad7ff(0x141)],_0x3d20d7={'hits':{},'ts':{}},_0x1ce957=X(_0x260c40,_0x38d54d,_0x3d20d7,_0x34dad2),_0x244a7c=_0x17eff2=>{_0x3d20d7['ts'][_0x17eff2]=_0x86bf78();},_0x531d83=(_0x446482,_0x4eea60)=>{var _0xea7eef=_0x2ad7ff;let _0x5bd83d=_0x3d20d7['ts'][_0x4eea60];if(delete _0x3d20d7['ts'][_0x4eea60],_0x5bd83d){let _0x482988=_0x469973(_0x5bd83d,_0x86bf78());_0x24a62f(_0x1ce957(_0xea7eef(0xf3),_0x446482,_0x52fd71(),_0x542ed2,[_0x482988],_0x4eea60));}},_0x4fccac=_0x484167=>{var _0x11268e=_0x2ad7ff,_0x291c2d;return _0x456a08===_0x11268e(0x1ac)&&_0x260c40[_0x11268e(0xef)]&&((_0x291c2d=_0x484167==null?void 0x0:_0x484167['args'])==null?void 0x0:_0x291c2d['length'])&&(_0x484167[_0x11268e(0x12e)][0x0][_0x11268e(0xef)]=_0x260c40[_0x11268e(0xef)]),_0x484167;};_0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':(_0x177581,_0x21b08d)=>{var _0x203820=_0x2ad7ff;_0x260c40[_0x203820(0x179)][_0x203820(0x19f)][_0x203820(0x150)]!=='disabledLog'&&_0x24a62f(_0x1ce957('log',_0x177581,_0x52fd71(),_0x542ed2,_0x21b08d));},'consoleTrace':(_0x37cd17,_0x1913f4)=>{var _0x59a05f=_0x2ad7ff,_0x2b73e2,_0x5001bc;_0x260c40[_0x59a05f(0x179)][_0x59a05f(0x19f)][_0x59a05f(0x150)]!=='disabledTrace'&&((_0x5001bc=(_0x2b73e2=_0x260c40[_0x59a05f(0xdd)])==null?void 0x0:_0x2b73e2[_0x59a05f(0xce)])!=null&&_0x5001bc[_0x59a05f(0x18d)]&&(_0x260c40[_0x59a05f(0xe6)]=!0x0),_0x24a62f(_0x4fccac(_0x1ce957(_0x59a05f(0x111),_0x37cd17,_0x52fd71(),_0x542ed2,_0x1913f4))));},'consoleError':(_0x1ffea1,_0x3e397d)=>{var _0xbee322=_0x2ad7ff;_0x260c40['_ninjaIgnoreNextError']=!0x0,_0x24a62f(_0x4fccac(_0x1ce957(_0xbee322(0x19b),_0x1ffea1,_0x52fd71(),_0x542ed2,_0x3e397d)));},'consoleTime':_0xe378bd=>{_0x244a7c(_0xe378bd);},'consoleTimeEnd':(_0x29ec8c,_0x5ab5cf)=>{_0x531d83(_0x5ab5cf,_0x29ec8c);},'autoLog':(_0x2e2f49,_0x2c91b1)=>{_0x24a62f(_0x1ce957('log',_0x2c91b1,_0x52fd71(),_0x542ed2,[_0x2e2f49]));},'autoLogMany':(_0x5d0f4b,_0x32c620)=>{var _0xce0ca4=_0x2ad7ff;_0x24a62f(_0x1ce957(_0xce0ca4(0x19f),_0x5d0f4b,_0x52fd71(),_0x542ed2,_0x32c620));},'autoTrace':(_0x5a5842,_0x423721)=>{var _0x9c9b29=_0x2ad7ff;_0x24a62f(_0x4fccac(_0x1ce957(_0x9c9b29(0x111),_0x423721,_0x52fd71(),_0x542ed2,[_0x5a5842])));},'autoTraceMany':(_0x21f018,_0x538423)=>{_0x24a62f(_0x4fccac(_0x1ce957('trace',_0x21f018,_0x52fd71(),_0x542ed2,_0x538423)));},'autoTime':(_0x41c572,_0x4433e7,_0x5aa06b)=>{_0x244a7c(_0x5aa06b);},'autoTimeEnd':(_0x33d2ab,_0x4d3cfc,_0x196869)=>{_0x531d83(_0x4d3cfc,_0x196869);},'coverage':_0xbc4dc7=>{var _0x56c058=_0x2ad7ff;_0x24a62f({'method':_0x56c058(0x10f),'version':_0x34dad2,'args':[{'id':_0xbc4dc7}]});}};let _0x24a62f=q(_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x1ad063,_0x501193),_0x542ed2=_0x260c40[_0x2ad7ff(0x12d)];return _0x260c40[_0x2ad7ff(0x13a)];})(globalThis,_0x2bca12(0x195),'60591',_0x2bca12(0x104),_0x2bca12(0x105),'1.0.0','1728289407685',_0x2bca12(0x103),'',_0x2bca12(0xd2),_0x2bca12(0xd0));")}catch(e){}}function n(e,...t){try{_().consoleError(e,t)}catch(e){}return t}},"./src/components/background.ts":(e,t,x)=>{x.r(t),x.d(t,{Background:()=>_});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts"),s={bgImg:i.DEFAULT_BACKGROUND_1,hillImg:i.ASSETS_PATH_HILL,pillerImg:i.ASSETS_PATH_TOTEM,fenchImg:i.ASSETS_PATH_FENCE,autumnBgImg:i.AUTUMN_BACKGROUND_1,autumnHillImg:i.AUTUMN_HILL_1,autumnPillerImg:i.AUTUMN_PILLAR_1,autumnSignImg:i.AUTUMN_SIGN_1,autumnFenceImg:i.AUTUMN_FENCE_1,winterBgImg:i.WINTER_BACKGROUND_1,winterHillImg:i.WINTER_HILL_1,winterSignImg:i.WINTER_SIGN_1,winterFenceImg:i.WINTER_FENCE_1,winterPillerImg:i.WINTER_PILLAR_1};class _{width;height;context;imagesLoaded=!1;loadedImages;levelNumber;availableBackgroundTypes=["Summer","Autumn","Winter"];backgroundType;constructor(e,t,x,i){this.width=t,this.height=x,this.context=e,this.levelNumber=i,this.backgroundType=Math.floor(this.levelNumber/10)%this.availableBackgroundTypes.length,this.levelNumber>=30&&(this.backgroundType=this.backgroundType%3),(0,a.loadImages)(s,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}draw(){if(this.imagesLoaded)switch(this.availableBackgroundTypes[this.backgroundType]){case"Winter":this.context.drawImage(this.loadedImages.winterBgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.winterPillerImg,.38*this.width,this.height/6,this.width/1.2,this.height/2),this.context.drawImage(this.loadedImages.winterFenceImg,.4*-this.width,this.height/4,this.width,this.height/2),this.context.drawImage(this.loadedImages.winterHillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2);break;case"Autumn":this.context.drawImage(this.loadedImages.autumnBgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.autumnPillerImg,.38*this.width,this.height/6,this.width/1.2,this.height/2),this.context.drawImage(this.loadedImages.autumnFenceImg,.4*-this.width,this.height/4,this.width,this.height/2),this.context.drawImage(this.loadedImages.autumnHillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2);break;default:this.context.drawImage(this.loadedImages.bgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.pillerImg,.6*this.width,this.height/6,this.width,this.height/2),this.context.drawImage(this.loadedImages.fenchImg,.4*-this.width,this.height/3,this.width,this.height/3),this.context.drawImage(this.loadedImages.hillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2)}}}},"./src/components/buttons/cancel-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;cancel_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t){this.posX=.1*t.width+.15*t.width/2,this.posY=.2*t.height,this.context=e,this.canvas=t,(0,a.loadImages)({cancel_button_image:i.CANCEL_BTN_IMG},(e=>{this.cancel_button_image=e.cancel_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.15,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.cancel_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.15?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.14,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/close-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;close_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({close_button_image:i.MAP_BTN_IMG},(e=>{this.close_button_image=e.close_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x,y:s}}draw(){this.imagesLoaded&&(this.context.drawImage(this.close_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/index.ts":(e,t,x)=>{x.r(t),x.d(t,{CancelButton:()=>i.default,CloseButton:()=>a.default,LevelBloonButton:()=>d.default,NextButton:()=>s.default,NoButton:()=>_.default,PauseButton:()=>n.default,PlayButton:()=>r.default,RetryButton:()=>o.default,YesButton:()=>c.default});var a=x("./src/components/buttons/close-button.ts"),i=x("./src/components/buttons/cancel-button.ts"),s=x("./src/components/buttons/next-button.ts"),_=x("./src/components/buttons/no-button.ts"),n=x("./src/components/buttons/pause-button.ts"),o=x("./src/components/buttons/retry-button.ts"),c=x("./src/components/buttons/yes-button.ts"),r=x("./src/components/buttons/play-button.ts"),d=x("./src/components/buttons/level-button.ts")},"./src/components/buttons/level-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{context;levelData;posX;posY;originalPosX;originalPosY;size;radiusOffSet;bloonSize;btnSize;lockSize;textFontSize;constructor(e,t,x){this.context=t,this.levelData=x,this.posX=this.levelData.x,this.posY=this.levelData.y,this.originalPosX=this.posX,this.originalPosY=this.posY,this.size=e.height/5,this.radiusOffSet=e.height/20,this.bloonSize=this.isLevelSpecial(this.size),this.btnSize=this.bloonSize,this.lockSize=e.height/13,this.textFontSize=this.size/6}isSpecialLevel(e){return i.SPECIAL_LEVELS.includes(e)}isLevelSpecial(e){return this.levelData?.isSpecial?.9*e:e}draw(e,t,x,i){this.context.drawImage(this.levelData?.balloonImg,this.posX,this.posY,this.btnSize,this.btnSize),this.context.fillStyle="white",this.context.font=this.textFontSize+`px ${a.font}, monospace`,this.context.textAlign="center",this.context.fillText(`${this.levelData.index+e}`,this.levelData.x+this.size/3.5,this.levelData.y+this.size/3),this.context.font=this.textFontSize-this.size/30+`px ${a.font}, monospace`,this.btnSize<this.bloonSize?this.btnSize=this.btnSize+.5:(this.btnSize=this.bloonSize,this.posX=this.levelData.x,this.posY=this.levelData.y),this.drawIcons(e,t,x,i)}applyPulseEffect(){const e=.7,t=Date.now()%1500/1500,x=t<=e,a=x?t/e:(t-e)/(x?e:.30000000000000004),i=x?15*a:15+45*a,s=x?.5*(1-a):0;if(s<=0)return;const{x:_,y:n,radius:o}=this.levelData?.isSpecial?{x:3,y:2.5,radius:2.2}:{x:3.4,y:3.8,radius:3.2},c=this.posX+this.btnSize/_,r=this.posY+this.btnSize/n,d=this.btnSize/o+i;this.context.save(),this.context.beginPath(),this.context.arc(c,r,d,0,2*Math.PI),this.context.fillStyle=`rgba(255, 255, 255, ${s})`,this.context.fill(),this.context.restore()}drawIcons(e,t,x,i){const s=this.levelData.index;if(a.Debugger.DebugMode||s+e-1>t+1&&this.drawLock(),x.length&&s+e<=i)for(let t=0;t<x.length;t++)if(s-1+e===parseInt(x[t].levelNumber)){this.checkStars(x[t].starCount);break}}drawLock(){this.context.drawImage(this.levelData?.lockImg,this.levelData.x,this.levelData.y,this.lockSize,this.lockSize)}checkStars(e){const t=this.levelData.x,x=this.levelData.y,a=this.size;e>=1&&this.drawStar(t,x-.01*a),e>1&&this.drawStar(t+a/2.5,x-.01*a),3===e&&this.drawStar(t+a/5,x-.1*a)}drawStar(e,t){this.context.drawImage(this.levelData?.starImg,e,t,this.size/5,this.size/5)}onClick(e,t,x,i,s){Math.sqrt((e-this.levelData.x-this.radiusOffSet)*(e-this.levelData.x-this.radiusOffSet)+(t-this.levelData.y-this.radiusOffSet)*(t-this.levelData.y-this.radiusOffSet))<45&&(a.Debugger.DebugMode||this.levelData.index+x<=i)&&(this.btnSize=this.bloonSize-4,this.posX=this.originalPosX+.5,this.posY=this.originalPosY+1,s(this.levelData.index))}}},"./src/components/buttons/next-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;width;height;imagesLoaded=!1;next_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s,_){this.posX=s,this.posY=_,this.context=e,this.width=t,this.height=x,(0,a.loadImages)({next_button_image:i.NEXT_BTN_IMG},(e=>{this.next_button_image=e.next_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.next_button_image,this.posX,this.posY,this.width*this.btnSizeAnimation,this.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.width*this.btnOriginalSize,this.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/no-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;no_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x+5,this.posY=s+10,this.context=e,this.canvas=t,(0,a.loadImages)({no_button_image:i.CANCEL_BTN_IMG},(e=>{this.no_button_image=e.no_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.18,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.no_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.18?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.17,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/pause-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;pause_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t){this.posX=t.width-.09*t.height,this.posY=0,this.context=e,this.canvas=t,(0,a.loadImages)({pause_button_image:i.PAUSE_BTN_IMG},(e=>{this.pause_button_image=e.pause_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.09,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.pause_button_image,this.posX,this.posY,this.canvas.height*this.btnSizeAnimation,this.canvas.height*this.btnSizeAnimation),this.btnSizeAnimation<.09?this.btnSizeAnimation=this.btnSizeAnimation+25e-5:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.height*this.btnOriginalSize,this.canvas.height*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.085,this.posX=this.posX+.9,this.posY=this.posY+.9),x}}},"./src/components/buttons/play-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>n});var a=x("./src/constants/index.ts"),i=x("./src/Firebase/firebase-integration.ts"),s=x("./src/common/index.ts"),_=x("./src/data/index.ts");class n{posX;posY;context;canvas;images;loadedImages;imagesLoaded=!1;majVersion;minVersion;firebaseIntegration;constructor(e,t,x,_){this.posX=x,this.posY=_,this.context=e,this.canvas=t,this.firebaseIntegration=new i.FirebaseIntegration,this.init(),this.images={pause_button_image:a.PLAY_BTN_IMG},(0,s.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}async init(){const e=await(0,_.getData)();this.majVersion=e.majversion,this.minVersion=e.minversion}draw(){this.imagesLoaded&&this.context.drawImage(this.loadedImages.pause_button_image,this.posX,this.posY,this.canvas.width/3,this.canvas.width/3)}onClick(e,t){const x=Math.sqrt((e-this.posX-this.canvas.width/6)*(e-this.posX-this.canvas.width/6)+(t-this.posY-this.canvas.width/6)*(t-this.posY-this.canvas.width/6));if(this.logTappedStartFirebaseEvent(),x<this.canvas.width/8)return!0}logTappedStartFirebaseEvent(){Date.now();const e={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():""};this.firebaseIntegration.sendTappedStartEvent(e)}}},"./src/components/buttons/retry-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;retry_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({retry_button_image:i.RETRY_BTN_IMG},(e=>{this.retry_button_image=e.retry_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x,y:s}}draw(){this.imagesLoaded&&(this.context.drawImage(this.retry_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/yes-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;yes_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x-5,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({yes_button_image:i.YES_BTN_IMG},(e=>{this.yes_button_image=e.yes_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.205,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.yes_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.205?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.19,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/feedback-text/index.ts":(e,t,x)=>{x.r(t),x.d(t,{FeedbackTextEffects:()=>i});var a=x("./src/common/index.ts");class i{feedbackTextElement;hideTimeoutId;constructor(){this.feedbackTextElement=document.getElementById("feedback-text"),this.hideTimeoutId=null,this.initialize()}initialize(){this.isFeedbackElementAvailable()}isFeedbackElementAvailable(){return!!this.feedbackTextElement}wrapText(e){this.isFeedbackElementAvailable()&&(this.feedbackTextElement.textContent=e,(0,a.hideElement)(!1,this.feedbackTextElement),this.setHideTimeout())}setHideTimeout(){this.hideTimeoutId&&clearTimeout(this.hideTimeoutId),this.hideTimeoutId=window.setTimeout((()=>{(0,a.hideElement)(!0,this.feedbackTextElement),this.hideTimeoutId=null}),4e3)}}},"./src/components/index.ts":(e,t,x)=>{x.r(t),x.d(t,{AudioPlayer:()=>l.AudioPlayer,Background:()=>r.Background,FeedbackTextEffects:()=>d.FeedbackTextEffects,LevelIndicators:()=>i.LevelIndicators,Monster:()=>o.Monster,PauseButton:()=>a.default,PromptText:()=>s.PromptText,StoneHandler:()=>_.default,TimerTicking:()=>c.TimerTicking,TrailEffect:()=>h.default,Tutorial:()=>n.Tutorial});var a=x("./src/components/buttons/pause-button.ts"),i=x("./src/components/level-indicator.ts"),s=x("./src/components/prompt-text.ts"),_=x("./src/components/stone-handler.ts"),n=x("./src/components/tutorial.ts"),o=x("./src/components/monster.ts"),c=x("./src/components/timer-ticking.ts"),r=x("./src/components/background.ts"),d=x("./src/components/feedback-text/index.ts"),l=x("./src/components/audio-player.ts"),h=x("./src/components/trail-particles.ts")},"./src/components/level-indicator.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelIndicators:()=>_});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts"),s=x("./src/events/index.ts");class _ extends s.EventManager{context;canvas;activeIndicators;images;loadedImages;imagesLoaded=!1;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.context=e,this.canvas=t,this.activeIndicators=x,this.images={level_indicator:i.LEVEL_INDICATOR,bar_empty:i.BAR_EMPTY,bar_full:i.BAR_FULL},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}setIndicators(e){this.activeIndicators=e}addDropStoneEvent(){document.addEventListener("dropstone",(e=>{this.setIndicators(2)}))}draw(){if(this.imagesLoaded){this.context.drawImage(this.loadedImages.level_indicator,.15*this.canvas.width,0,.35*this.canvas.width,.09*this.canvas.height);for(var e=0;e<5;e++)this.context.drawImage(this.loadedImages.bar_empty,.35*this.canvas.width/7*(e+1)+.15*this.canvas.width,.09*this.canvas.height/2-.09*this.canvas.height/6,.35*this.canvas.width/10,.09*this.canvas.height/3);for(e=0;e<this.activeIndicators;e++)this.context.drawImage(this.loadedImages.bar_full,.35*this.canvas.width/7*(e+1)+.15*this.canvas.width,.09*this.canvas.height/2-.09*this.canvas.height/6,.35*this.canvas.width/10,.09*this.canvas.height/3)}}dispose(){this.unregisterEventListener()}handleStoneDrop(e){}handleLoadPuzzle(e){this.setIndicators(e.detail.counter)}}},"./src/components/monster.ts":(e,t,x)=>{x.r(t),x.d(t,{Monster:()=>s});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts");class s extends i.EventManager{zindex;width;height;image;frameX;frameY;maxFrame;x;y;fps;countFrame;frameInterval;frameTimer;canvasStack;canavsElement;context;game;images;loadedImages;imagesLoaded=!1;monsterPhase;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.game=e,this.monsterPhase=t,this.width=this.game.width,this.height=this.game.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.image=document.getElementById("monster"),this.frameX=0,this.frameY=0,this.maxFrame=6,this.x=this.game.width/2-.243*this.game.width,this.y=this.game.width/3,this.fps=10,this.countFrame=0,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.images={eatImg:"./assets/images/eat1"+this.monsterPhase+".png",idleImg:"./assets/images/idle1"+this.monsterPhase+".png",spitImg:"./assets/images/spit1"+this.monsterPhase+".png",dragImg:"./assets/images/drag1"+this.monsterPhase+".png"},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.changeToIdleAnimation(),this.imagesLoaded=!0,x&&x()}))}update(e){this.frameTimer>=this.frameInterval?(this.frameTimer=0,this.frameX<this.maxFrame?this.frameX++:this.frameX=0):this.frameTimer+=e,this.draw()}draw(){this.imagesLoaded&&this.context.drawImage(this.image,770*this.frameX,1386*this.frameY,768,1386,.5*this.x,.1*this.y,this.width/2*1.5,this.height/1.5*1.5)}changeImage(e){this.image.src=e}changeToDragAnimation(){this.maxFrame=6,this.image=this.loadedImages.dragImg}changeToEatAnimation(){this.maxFrame=12,this.image=this.loadedImages.eatImg}changeToIdleAnimation(){this.maxFrame=6,this.image=this.loadedImages.idleImg}changeToSpitAnimation(){this.maxFrame=12,this.image=this.loadedImages.spitImg}handleStoneDrop(e){e.detail.isCorrect?this.changeToEatAnimation():this.changeToSpitAnimation()}handleLoadPuzzle(e){this.changeToIdleAnimation()}dispose(){this.unregisterEventListener()}onClick(e,t){if(Math.sqrt((e-this.x-this.width/4)*(e-this.x-this.width/4)+(t-this.y-this.height/2.2)*(t-this.y-this.height/2.2))<=100)return!0}}},"./src/components/popups/pause-popup.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>o});var a=x("./src/components/buttons/index.ts"),i=x("./src/common/index.ts"),s=x("./src/components/index.ts"),_=x("./src/components/popups/sure-popup.ts"),n=x("./src/constants/index.ts");class o{canvas;context;cancelButton;retryButton;closeButton;imagesLoaded=!1;pop_up_image;callback;switchToLevelSelection;reloadScene;gameplayData;audioPlayer;retrySurePopup;CloseSurePopup;isRetryButtonClicked=!1;isCloseButtonClicked=!1;constructor(e,t,x,o,c){this.canvas=e,this.callback=t,this.gameplayData=c,this.switchToLevelSelection=x,this.reloadScene=o;const r=document.getElementById("canvas");this.context=r.getContext("2d"),this.audioPlayer=new s.AudioPlayer,this.cancelButton=new a.CancelButton(this.context,this.canvas),this.retryButton=new a.RetryButton(this.context,this.canvas,.55*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.19*this.canvas.width/2),this.closeButton=new a.CloseButton(this.context,this.canvas,.25*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.19*this.canvas.width/2),(0,i.loadImages)({pop_up_image:n.POPUP_BG_IMG},(e=>{this.pop_up_image=e.pop_up_image,this.imagesLoaded=!0})),this.retrySurePopup=new _.default(this.canvas,this.yesRetryCallback,this.noRetryCallback),this.CloseSurePopup=new _.default(this.canvas,this.switchToLevelSelection,this.noCloseCallback)}yesRetryCallback=()=>{this.playClickSound(),this.reloadScene(this.gameplayData,"GamePlay")};noRetryCallback=()=>{this.isRetryButtonClicked&&(this.isRetryButtonClicked=!1,this.callback())};noCloseCallback=()=>{this.isCloseButtonClicked&&(this.isCloseButtonClicked=!1,this.callback())};addListner=()=>{document.getElementById("canvas").addEventListener(i.CLICK,this.handleMouseClick,!1)};handleMouseClick=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,s=e.clientY-x.top;this.cancelButton.onClick(a,s)&&(this.playClickSound(),this.callback()),this.retryButton.onClick(a,s)&&("english"==i.lang?(this.playClickSound(),this.dispose(),this.isRetryButtonClicked=!0,this.retrySurePopup.addListner(),this.playAreYouSureSound()):(this.playClickSound(),this.dispose(),this.reloadScene(this.gameplayData,"GamePlay"))),this.closeButton.onClick(a,s)&&("english"==i.lang?(this.playClickSound(),this.dispose(),this.isCloseButtonClicked=!0,this.CloseSurePopup.addListner(),this.playAreYouSureSound()):(this.playClickSound(),this.dispose(),this.switchToLevelSelection("GamePlay")))};draw(){this.imagesLoaded&&(this.context.fillStyle="rgba(0,0,0,0.5)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.drawImage(this.pop_up_image,.1*this.canvas.width,.2*this.canvas.height,.8*this.canvas.width,.8*this.canvas.width),this.cancelButton.draw(),this.retryButton.draw(),this.closeButton.draw(),1==this.isRetryButtonClicked&&"english"==i.lang&&this.retrySurePopup.draw(),1==this.isCloseButtonClicked&&"english"==i.lang&&this.CloseSurePopup.draw())}playClickSound=()=>{this.audioPlayer.playButtonClickSound()};playAreYouSureSound=()=>{this.audioPlayer.playAudio(n.AUDIO_ARE_YOU_SURE)};dispose=()=>{document.getElementById("canvas").removeEventListener(i.CLICK,this.handleMouseClick,!1)}}},"./src/components/popups/sure-popup.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>n});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/constants/index.ts");class n{canvas;context;yesButton;noButton;imagesLoaded=!1;pop_up_image;yesCallback;noCallback;audioPlayer;constructor(e,t,x){this.canvas=e,this.yesCallback=t,this.noCallback=x,this.context=this.canvas.getContext("2d"),this.audioPlayer=new i.AudioPlayer,this.yesButton=new s.YesButton(this.context,this.canvas,.55*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.15*this.canvas.width/2),this.noButton=new s.NoButton(this.context,this.canvas,.25*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.15*this.canvas.width/2),(0,a.loadImages)({pop_up_image:_.POPUP_BG_IMG},(e=>{this.pop_up_image=e.pop_up_image,this.imagesLoaded=!0}))}addListner=()=>{this.canvas.addEventListener(a.CLICK,this.handleMouseClick,!1)};handleMouseClick=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;this.yesButton.onClick(a,i)&&(this.playClickSound(),this.dispose(),this.yesCallback()),this.noButton.onClick(a,i)&&(this.playClickSound(),this.dispose(),this.noCallback())};draw(){if(this.imagesLoaded){this.context.fillStyle="rgba(0,0,0,0.5)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.drawImage(this.pop_up_image,.1*this.canvas.width,.2*this.canvas.height,.8*this.canvas.width,.8*this.canvas.width);this.canvas.height;this.context.fillStyle="white",this.context.font="24px Arial",this.context.fillText("Are you sure?",this.canvas.width/2,this.canvas.height/2.8),this.yesButton.draw(),this.noButton.draw()}}playClickSound=()=>{this.audioPlayer.playButtonClickSound()};dispose=()=>{this.canvas.removeEventListener(a.CLICK,this.handleMouseClick,!1)}}},"./src/components/prompt-text.ts":(e,t,x)=>{x.r(t),x.d(t,{PromptText:()=>n});var a=x("./src/events/index.ts"),i=x("./src/common/index.ts"),s=x("./src/components/index.ts"),_=x("./src/constants/index.ts");class n extends a.EventManager{width;height;levelData;currentPromptText;currentPuzzleData;canavsElement;context;prompt_image;targetStones;rightToLeft;imagesLoaded=!1;audioPlayer;isStoneDropped=!1;droppedStones=0;time=0;promptImageWidth=0;isAppForeground=!0;scale=1;isScalingUp=!0;scaleFactor=5e-4;promptImageHeight=0;promptPlayButton;constructor(e,t,x,a,_){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.width=e,this.height=t,this.levelData=a,this.rightToLeft=_,this.currentPromptText=x.prompt.promptText,this.currentPuzzleData=x,this.targetStones=this.currentPuzzleData.targetStones,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.audioPlayer=new s.AudioPlayer,this.audioPlayer.preloadPromptAudio(this.getPromptAudioUrl()),this.prompt_image=new Image,this.promptPlayButton=new Image,this.loadImages(),this.time=0,this.promptImageWidth=.65*this.width,this.promptImageHeight=.3*this.height,document.addEventListener(i.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}handleMouseDown=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;this.onClick(a,i)&&this.playSound()};getPromptAudioUrl=()=>i.Utils.getConvertedDevProdURL(this.currentPuzzleData.prompt.promptAudio);playSound=()=>{this.isAppForeground&&this.audioPlayer.playPromptAudio(i.Utils.getConvertedDevProdURL(this.currentPuzzleData.prompt.promptAudio))};onClick(e,t){return Math.sqrt(e-this.width/3)<12&&Math.sqrt(t-this.height/5.5)<10}setCurrrentPuzzleData(e){this.currentPuzzleData=e,this.currentPromptText=e.prompt.promptText,this.targetStones=this.currentPuzzleData.targetStones}drawRTLLang(){var e=this.width/2;const t=.26*this.height;this.context.textAlign="center";var x=this.calculateFont();const a=this.promptImageWidth,s=this.promptImageHeight;if(this.context.font=`${x}px ${i.font}, monospace`,"LetterInWord"==this.levelData.levelMeta.levelType)if("Visible"==this.levelData.levelMeta.protoType){var _=this.currentPromptText.replace(new RegExp(this.currentPuzzleData.targetStones[0],"g"),"");this.context.fillStyle="red",this.context.fillText(this.targetStones[0],e+this.context.measureText(_).width/2,t),this.context.fillStyle="black",this.context.fillText(_,e-this.context.measureText(this.targetStones[0]).width/2,t)}else this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4);else if("Word"==this.levelData.levelMeta.levelType)if("Visible"==this.levelData.levelMeta.protoType){e-=.5*this.context.measureText(this.currentPromptText).width;for(let x=this.targetStones.length-1;x>=0;x--)this.droppedStones>x||null==this.droppedStones?(this.context.fillStyle="black",this.context.fillText(this.targetStones[x],e,t)):(this.context.fillStyle="red",this.context.fillText(this.targetStones[x],e,t)),e=e+this.context.measureText(this.targetStones[x]).width+5}else this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4);else if("audioPlayerWord"==this.levelData.levelMeta.levelType){const e=1.25*(this.width-a),t=.33*(this.height-s);this.context.drawImage(this.promptPlayButton,e,t,a/4,s/4)}else"Visible"==this.levelData.levelMeta.protoType?(this.context.fillStyle="black",this.context.fillText(this.currentPromptText,e,t)):this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4)}drawOthers(){const e=this.currentPromptText.split(""),t=(this.width,.28*this.height),x=this.promptImageWidth,a=this.promptImageHeight;var s=this.calculateFont();this.context.font=`${s}px ${i.font}, monospace`;let _=this.width/2-this.context.measureText(this.currentPromptText).width/2,n=0;var o=this.currentPuzzleData.targetStones[0].split("");for(let i=0;i<e.length;i++){switch(this.levelData.levelMeta.levelType){case"LetterInWord":if("Visible"==this.levelData.levelMeta.protoType){o.includes(e[i])?(o=o.slice(1,o.length),this.context.fillStyle="red",this.context.fillText(e[i],_,t)):(this.context.fillStyle="black",this.context.fillText(e[i],_,t));break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);case"Word":if("Visible"==this.levelData.levelMeta.protoType){this.droppedStones>i||null==this.droppedStones?(this.context.fillStyle="black",this.context.fillText(e[i],_,t)):(this.context.fillStyle="red",this.context.fillText(e[i],_,t));break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);case"SoundWord":this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);break;default:if("Visible"==this.levelData.levelMeta.protoType){this.context.fillStyle="black",this.context.fillText(this.currentPromptText,this.width/2.1,t);break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4)}n=(this.context.measureText(e[i]).width+this.context.measureText(e[i+1]).width)/2,_+=n}}draw(e){if(this.updateScaling(),this.time=e<17?this.time+Math.floor(e):this.time+16,Math.floor(this.time)>=1910&&Math.floor(this.time)<=1926&&this.playSound(),!this.isStoneDropped){const e=this.promptImageWidth*this.scale,t=this.promptImageHeight*this.scale,x=(this.width-e)/2,a=(this.height-t)/5;this.context.drawImage(this.prompt_image,x,a,e,t),this.context.fillStyle="black",this.rightToLeft?this.drawRTLLang():this.drawOthers()}}handleStoneDrop(e){this.isStoneDropped=!0}handleLoadPuzzle(e){this.droppedStones=0,this.currentPuzzleData=this.levelData.puzzles[e.detail.counter],this.currentPromptText=this.currentPuzzleData.prompt.promptText,this.targetStones=this.currentPuzzleData.targetStones,this.audioPlayer.preloadPromptAudio(this.getPromptAudioUrl()),this.isStoneDropped=!1,this.time=0}dispose(){document.removeEventListener(i.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.unregisterEventListener()}droppedStoneIndex(e){this.droppedStones=e}calculateFont(){return this.promptImageWidth/this.currentPromptText.length>35?35:.65*this.width/this.currentPromptText.length}updateScaling(){this.isScalingUp?(this.scale+=this.scaleFactor,this.scale>=1.05&&(this.isScalingUp=!1)):(this.scale-=this.scaleFactor,this.scale<=1&&(this.scale=1,this.isScalingUp=!0))}handleVisibilityChange=()=>{"hidden"==document.visibilityState&&(this.audioPlayer.stopAllAudios(),this.isAppForeground=!1),"visible"==document.visibilityState&&(this.isAppForeground=!0)};async loadImages(){const e=this.loadImage(this.prompt_image,_.PROMPT_TEXT_BG),t=this.loadImage(this.promptPlayButton,_.PROMPT_PLAY_BUTTON);await Promise.all([e,t]),this.imagesLoaded=!0}loadImage(e,t){return new Promise(((x,a)=>{e.onload=()=>{x()},e.src=t,e.onerror=e=>{a(e)}}))}}},"./src/components/stone-handler.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>o});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts"),s=x("./src/components/index.ts"),_=x("./src/data/index.ts"),n=x("./src/constants/index.ts");class o extends i.EventManager{context;canvas;currentPuzzleData;targetStones;stonePos;pickedStone;foilStones=new Array;answer="";puzzleNumber;levelData;correctAnswer;puzzleStartTime;showTutorial=null==_.GameScore.getDatafromStorage().length;correctStoneAudio;tutorial;correctTargetStone;stonebg;audioPlayer;feedbackAudios;timerTickingInstance;isGamePaused=!1;constructor(e,t,x,i,_,o){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.context=e,this.canvas=t,this.puzzleNumber=x,this.levelData=i,this.setTargetStone(this.puzzleNumber),this.initializeStonePos(),this.correctStoneAudio=new Audio(n.AUDIO_PATH_CORRECT_STONE),this.correctStoneAudio.loop=!1,this.feedbackAudios=this.convertFeedBackAudiosToList(_),this.puzzleStartTime=new Date,this.tutorial=new s.Tutorial(e,t.width,t.height,x),this.stonebg=new Image,this.stonebg.src=n.ASSETS_PATH_STONE_PINK_BG,this.audioPlayer=new s.AudioPlayer,this.stonebg.onload=e=>{this.createStones(this.stonebg)},this.audioPlayer=new s.AudioPlayer,this.timerTickingInstance=o,document.addEventListener(a.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}createStones(e){const t=this.getFoilStones();for(let x=0;x<t.length;x++)t[x]==this.correctTargetStone&&this.tutorial.updateTargetStonePositions(this.stonePos[x]),this.foilStones.push(new a.StoneConfig(this.context,this.canvas.width,this.canvas.height,t[x],this.stonePos[x][0],this.stonePos[x][1],e,this.timerTickingInstance,x==t.length-1?this.tutorial:null))}draw(e){for(let t=0;t<this.foilStones.length;t++)this.foilStones[t].draw(e);this.foilStones[this.foilStones.length-1].frame>=100&&!this.isGamePaused&&this.timerTickingInstance.update(e)}drawWordPuzzleLetters(e,t,x){for(let a=0;a<this.foilStones.length;a++)t(a)&&this.foilStones[a].draw(e,Object.keys(x).length>1&&void 0!==x[a]);this.foilStones[this.foilStones.length-1].frame>=100&&!this.isGamePaused&&this.timerTickingInstance.update(e)}initializeStonePos(){let e=32;this.stonePos=[[this.canvas.width/5-e,this.canvas.height/1.9-e],[this.canvas.width/2-e,this.canvas.height/1.15-e],[this.canvas.width/3.5+this.canvas.width/2-e,this.canvas.height/1.2-e],[this.canvas.width/4-e,this.canvas.height/1.28-e],[this.canvas.width/7-e,this.canvas.height/1.5-e],[this.canvas.width/2.3+this.canvas.width/2.1-e,this.canvas.height/1.9-e],[this.canvas.width/2.3+this.canvas.width/2.1-e,this.canvas.height/1.42-e],[this.canvas.width/6-e,this.canvas.height/1.1-e]],this.stonePos=this.stonePos.sort((()=>Math.random()-.5))}setTargetStone(e){this.currentPuzzleData=this.levelData.puzzles[e],this.targetStones=[...this.currentPuzzleData.targetStones],this.correctTargetStone=this.targetStones.join("")}handleStoneDrop(e){this.foilStones=[]}handleLoadPuzzle(e){this.foilStones=[],this.tutorial.setPuzzleNumber(e.detail.counter),this.puzzleNumber=e.detail.counter,this.setTargetStone(this.puzzleNumber),this.initializeStonePos(),this.createStones(this.stonebg)}dispose(){document.removeEventListener(a.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.unregisterEventListener()}isStoneLetterDropCorrect(e,t,x=!1){const a=x?e==this.correctTargetStone.substring(0,e.length):e==this.correctTargetStone;return this.processLetterDropFeedbackAudio(t,a,x,e),a}processLetterDropFeedbackAudio(e,t,x,a){if(t){(x?a===this.getCorrectTargetStone():t)?this.playCorrectAnswerFeedbackSound(e):this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,(0,n.AUDIO_PATH_CHEERING_FUNC)(2))}else this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,n.AUDIO_PATH_MONSTER_SPIT,Math.round(Math.random())>0?n.AUDIO_PATH_MONSTER_DISSAPOINTED:null)}getCorrectTargetStone(){return this.correctTargetStone}getFoilStones(){this.currentPuzzleData.targetStones.forEach((e=>{const t=this.currentPuzzleData.foilStones.indexOf(e);-1!==t&&this.currentPuzzleData.foilStones.splice(t,1)}));const e=this.currentPuzzleData.targetStones.length+this.currentPuzzleData.foilStones.length;if(e>8){const t=e-8;this.currentPuzzleData.foilStones.splice(0,t)}return this.currentPuzzleData.targetStones.forEach((e=>{this.currentPuzzleData.foilStones.push(e)})),this.currentPuzzleData.foilStones.sort((()=>Math.random()-.5))}handleVisibilityChange=()=>{this.audioPlayer.stopAllAudios(),this.correctStoneAudio.pause()};convertFeedBackAudiosToList(e){return[e.fantastic,e.great,e.amazing]}setGamePause(e){this.isGamePaused=e}playCorrectAnswerFeedbackSound(e){const t=a.Utils.getRandomNumber(1,3).toString();this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,(0,n.AUDIO_PATH_CHEERING_FUNC)(t),n.AUDIO_PATH_POINTS_ADD,a.Utils.getConvertedDevProdURL(this.feedbackAudios[e])),this.correctStoneAudio.play()}resetStonePosition(e,t,x){const a=t,i=x;if(a&&i&&a.text&&"number"==typeof i.origx&&"number"==typeof i.origy){const t=50,x=e/2;a.x=a.text.length<=3&&i.origx<t&&i.origx<x?i.origx+25:i.origx,a.y=i.origy}return a}computeCursorDistance(e,t,x){return Math.sqrt((e-x.x)**2+(t-x.y)**2)}handlePickStoneUp(e,t){let x=null,a=0;for(let i of this.foilStones){if(this.computeCursorDistance(e,t,i)<=40){x=i,x.foilStoneIndex=a;break}a++}return x}handleHoveringToAnotherStone(e,t,x){let a=null,i=0;for(let s of this.foilStones){if(this.computeCursorDistance(e,t,s)<=40&&x(s.text,i)){a=s,a.foilStoneIndex=i;break}i++}return a}handleMovingStoneLetter(e,t,x){const a=e,i=this.canvas.getBoundingClientRect();return a.x=t-i.left,a.y=x-i.top,a}}},"./src/components/timer-ticking.ts":(e,t,x)=>{x.r(t),x.d(t,{TimerTicking:()=>n});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts"),s=x("./src/components/index.ts"),_=x("./src/constants/index.ts");class n extends i.EventManager{width;height;timerWidth;timerHeight;widthToClear;timer;isTimerStarted;isTimerEnded;isTimerRunningOut;canavsElement;context;timer_full;pauseButtonClicked;images;loadedImages;callback;imagesLoaded=!1;startMyTimer=!0;isMyTimerOver=!1;isStoneDropped=!1;audioPlayer;playLevelEndAudioOnce=!0;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.width=e,this.height=t,this.widthToClear=this.width/3.4,this.timerHeight=112,this.timerWidth=888,this.callback=x,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.timer=0,this.isTimerStarted=!1,this.isTimerEnded=!1,this.isTimerRunningOut=!1,this.audioPlayer=new s.AudioPlayer,this.playLevelEndAudioOnce=!0,this.images={timer_empty:_.TIMER_EMPTY,rotating_clock:_.ROTATING_CLOCK,timer_full:_.TIMER_FULL},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}startTimer(){this.readyTimer(),this.startMyTimer=!0,this.isMyTimerOver=!1}readyTimer(){this.timer=0}update(e){this.startMyTimer&&!this.isStoneDropped&&(this.timer+=.008*e),40!=Math.floor(.87*this.width-.87*this.width*this.timer*.01)||this.isMyTimerOver||(this.playLevelEndAudioOnce&&this.audioPlayer.playAudio(_.AUDIO_TIMEOUT),this.playLevelEndAudioOnce=!1),.87*this.width-.87*this.width*this.timer*.01<0&&!this.isMyTimerOver&&(this.isMyTimerOver=!0,this.callback(!0))}draw(){this.imagesLoaded&&(this.context.drawImage(this.loadedImages.timer_empty,0,.1*this.height,this.width,.05*this.height),this.context.drawImage(this.loadedImages.rotating_clock,0,.09*this.height,.14*this.width,.065*this.height),this.context.drawImage(this.loadedImages.timer_full,0,0,this.timerWidth-this.timerWidth*this.timer*.01,this.timerHeight,.14*this.width,.099*this.height,.87*this.width-.87*this.width*this.timer*.01,.05*this.height))}handleStoneDrop(e){this.isStoneDropped=!0}handleLoadPuzzle(e){this.playLevelEndAudioOnce=!0,this.isStoneDropped=!1,this.startTimer()}dispose(){this.unregisterEventListener()}}},"./src/components/trail-particles.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>a});class a{ctx;particles;mouse;isDiamond;constructor(e){this.ctx=e.getContext("2d"),this.particles=[],this.mouse={x:void 0,y:void 0},this.isDiamond=!1}init(){this.draw()}draw(){this.drawTrail();let e=[];for(let t=0;t<this.particles.length;t++)this.particles[t].time<=this.particles[t].ttl&&e.push(this.particles[t]);this.particles=e}drawTrail(){for(let e=0;e<this.particles.length;e++)this.particles[e].update(),this.isDiamond=!this.isDiamond,this.particles[e].draw(this.isDiamond)}addTrailParticlesOnMove(e,t){this.mouse.x=e,this.mouse.y=t,this.particles.push(new i(this.ctx,this.mouse))}resetParticles(){this.mouse.x=void 0,this.mouse.y=void 0}}class i{ctx;start;end;size;style;time;ttl;x;y;rgb;hyp;starX;starY;starAngle;constructor(e,t){const x=this.determineValueByScreenWidth(30,15),a=this.determineValueByScreenWidth(30,15),i=this.determineValueByScreenWidth(3,.5),s=this.determineValueByScreenWidth(2,.5);this.ctx=e,this.rgb=["rgb(255,255,255)","rgb(249,217,170)","rgb(244,182,81)","rgb(244,159,34)"],this.start={x:t.x+this.getRandomInt(-x,x),y:t.y+this.getRandomInt(-a,a),size:this.determineValueByScreenWidth(3,2)},this.end={x:this.start.x+this.getRandomInt(-i,i),y:this.start.y+this.getRandomInt(-s,s)},this.x=this.start.x,this.y=this.start.y,this.size=this.start.size,this.style=this.rgb[this.getRandomInt(0,this.rgb.length-1)],this.time=0,this.ttl=75,this.hyp=0,this.starX=0,this.starY=0,this.starAngle=0}determineValueByScreenWidth(e,t){return window.screen.width>768?e:t}update(){if(this.time<=this.ttl){const e=1-(this.ttl-this.time)/this.ttl;this.size=this.start.size*(1-this.easeOutQuart(e)),this.x=this.x+.01*(this.end.x-this.x),this.y=this.y+.01*(this.end.y-this.y)}this.time++}draw(e){e?this.starParticle():this.circleParticle()}circleParticle(){this.ctx.fillStyle=this.style,this.ctx.beginPath(),this.ctx.arc(this.x,this.y,this.size,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill()}starParticle(){this.ctx.fillStyle=this.style,this.ctx.beginPath(),this.ctx.moveTo(this.x,this.y-this.size),this.ctx.lineTo(this.x+this.size,this.y),this.ctx.lineTo(this.x,this.y+this.size),this.ctx.lineTo(this.x-this.size,this.y),this.ctx.closePath(),this.ctx.fill()}getRandomInt(e,t){return Math.round(Math.random()*(t-e))+e}easeOutQuart(e){return 1-Math.pow(1-e,4)}}},"./src/components/tutorial.ts":(e,t,x)=>{x.r(t),x.d(t,{Tutorial:()=>_});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts"),s=x("./src/data/index.ts");class _{width;height;context;tutorialImg;imagesLoaded=!1;targetStonePositions;startx;starty;endx;endy;endTutorial=!1;puzzleNumber;playMnstrClkTtrlAnim=!0;totalTime=0;monsterStoneDifference=0;x;y;dx;dy;absdx;absdy;startRipple=!1;drawRipple;constructor(e,t,x,s){this.width=t,this.height=x,this.context=e,this.startx=0,this.starty=0,this.endx=this.width/2,this.endy=this.height/2,this.puzzleNumber=s>=0?s:null,this.tutorialImg=new Image,this.tutorialImg.src=i.TUTORIAL_HAND,this.drawRipple=(0,a.createRippleEffect)(this.context),this.tutorialImg.onload=()=>{this.imagesLoaded=!0}}updateTargetStonePositions(e){this.startx=e[0]-22,this.starty=e[1]-50,this.monsterStoneDifference=Math.sqrt((this.startx-this.endx)*(this.startx-this.endx)+(this.starty-this.endy)*(this.starty-this.endy)),this.animateImage()}isMobile(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}setTutorialEnd(e){this.endTutorial=e}animateImage(){this.x=this.startx,this.y=this.starty,this.dx=(this.endx-this.startx)/5e3,this.dy=(this.endy-this.starty)/5e3,this.absdx=this.isMobile()?3*Math.abs(this.dx):Math.abs(this.dx),this.absdy=this.isMobile()?3*Math.abs(this.dy):Math.abs(this.dy),this.setTutorialEnd(!1)}draw(e,t,x){if(this.imagesLoaded&&!this.endTutorial&&this.shouldPlayTutorial()){this.x=this.dx>=0?this.x+this.absdx*e:this.x-this.absdx*e,this.y=this.dy>=0?this.y+this.absdy*e:this.y-this.absdy*e;const a=this.x-this.endx+this.absdx,i=this.y-this.endy+this.absdy;let s=100*Math.sqrt(a*a+i*i)/this.monsterStoneDifference;if(s<15)s>1?this.createHandScaleAnimation(e,this.endx,this.endy+30,!0):(this.x=this.startx,this.y=this.starty);else if(s>80)this.createHandScaleAnimation(e,this.startx+15,this.starty+10,!1);else{let e=this.context.globalAlpha;this.context.globalAlpha=.4,this.context.drawImage(t,this.x,this.y+20,x,x),this.context.globalAlpha=e,this.context.drawImage(this.tutorialImg,this.x+15,this.y+10)}}}createHandScaleAnimation(e,t,x,a){this.totalTime+=Math.floor(e);const i=this.sinusoidalInterpolation(this.totalTime,1,1.5,500),s=this.tutorialImg.width*i,_=this.tutorialImg.height*i;this.context.drawImage(this.tutorialImg,t,x,s,_),!a&&this.drawRipple(t+.02*this.width,x+this.tutorialImg.height/2,!1)}sinusoidalInterpolation(e,t,x,a){const i=(x-t)/2,s=Math.PI/a;return t+i*Math.sin(s*e)}clickOnMonsterTutorial(e){if(this.shouldPlayMonsterClickTutorialAnimation()){const t=2e3,x=this.height/1.9+this.tutorialImg.height/.8,a=this.height/1.9+this.tutorialImg.height/.8-this.tutorialImg.height;let i;const s=this.endx;this.totalTime<t/2?(i=a+this.totalTime/(t/2)*(x-a),this.drawRipple(s,this.height/1.9+this.tutorialImg.height/1.5,!0)):(i=x-(this.totalTime-t/2)/(t/2)*(x-a),this.drawRipple(s,this.height/1.9+this.tutorialImg.height/1.2+this.tutorialImg.height)),this.context.drawImage(this.tutorialImg,s,i,this.tutorialImg.width,this.tutorialImg.height),i<=a&&(this.totalTime=0),this.totalTime+=e}}shouldPlayTutorial(){return s.GameScore.getAllGameLevelInfo().length<=0&&0==this.puzzleNumber}shouldPlayMonsterClickTutorialAnimation(){return s.GameScore.getAllGameLevelInfo().length<=0&&this.playMnstrClkTtrlAnim}setPuzzleNumber(e){this.puzzleNumber=e}setPlayMonsterClickAnimation(e){this.playMnstrClkTtrlAnim=e}}},"./src/compositions/background.ts":(e,t,x)=>{x.r(t),x.d(t,{BACKGROUND_ASSET_LIST:()=>s,autumBgDrawing:()=>c,createBackground:()=>_,defaultBgDrawing:()=>o,levelSelectBgDrawing:()=>d,loadDynamicBgAssets:()=>n,winterBgDrawing:()=>r});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");const s={summer:{BG_GROUP_IMGS:i.DEFAULT_BG_GROUP_IMGS,draw:o},autumn:{BG_GROUP_IMGS:i.AUTUMN_BG_GROUP_IMGS,draw:c},winter:{BG_GROUP_IMGS:i.WINTER_BG_GROUP_IMGS,draw:r}};async function _(e,t,x,i,s){return{...{...s(e,t,x,{...await(0,a.syncLoadingImages)(i)})}}}const n=(e,t)=>{const x=Object.keys(t);let a=Math.floor(e/10)%x.length;return e>=30&&(a%=3),{...t[x[a]]}};function o(e,t,x,a){return{draw:()=>{e.drawImage(a?.DEFAULT_BACKGROUND_1,0,0,t,x),e.drawImage(a?.ASSETS_PATH_TOTEM,.6*t,x/6,t,x/2),e.drawImage(a?.ASSETS_PATH_FENCE,.4*-t,x/3,t,x/3),e.drawImage(a?.ASSETS_PATH_HILL,.25*-t,x/2,1.5*t,x/2)}}}function c(e,t,x,a){return{draw:()=>{e.drawImage(a.AUTUMN_BACKGROUND_1,0,0,t,x),e.drawImage(a.AUTUMN_PILLAR_1,.38*t,x/6,t/1.2,x/2),e.drawImage(a.AUTUMN_FENCE_1,.4*-t,x/4,t,x/2),e.drawImage(a.AUTUMN_HILL_1,.25*-t,x/2,1.5*t,x/2)}}}function r(e,t,x,a){return{draw:()=>{e.drawImage(a.WINTER_BACKGROUND_1,0,0,t,x),e.drawImage(a.WINTER_PILLAR_1,.38*t,x/6,t/1.2,x/2),e.drawImage(a.WINTER_FENCE_1,.4*-t,x/4,t,x/2),e.drawImage(a.WINTER_HILL_1,.25*-t,x/2,1.5*t,x/2)}}}function d(e,t,x,a){return{draw:()=>{e.drawImage(a?.LEVEL_SELECTION_BACKGROUND,0,0,t,x)}}}},"./src/compositions/index.ts":(e,t,x)=>{x.r(t),x.d(t,{BACKGROUND_ASSET_LIST:()=>a.BACKGROUND_ASSET_LIST,autumBgDrawing:()=>a.autumBgDrawing,createBackground:()=>a.createBackground,createLevelObject:()=>i.createLevelObject,defaultBgDrawing:()=>a.defaultBgDrawing,getdefaultCloudBtnsPos:()=>i.getdefaultCloudBtnsPos,levelSelectBgDrawing:()=>a.levelSelectBgDrawing,loadDynamicBgAssets:()=>a.loadDynamicBgAssets,loadLevelImages:()=>i.loadLevelImages,winterBgDrawing:()=>a.winterBgDrawing});var a=x("./src/compositions/background.ts"),i=x("./src/compositions/level-config.ts")},"./src/compositions/level-config.ts":(e,t,x)=>{x.r(t),x.d(t,{createLevelObject:()=>o,getdefaultCloudBtnsPos:()=>_,loadLevelImages:()=>n});var a=x("./src/constants/index.ts"),i=x("./src/common/index.ts");const s=e=>a.SPECIAL_LEVELS.includes(e),_=e=>[[[e.width/10,e.height/10],[e.width/2.5,e.height/10],[e.width/3+e.width/2.8,e.height/10],[e.width/10,e.height/3],[e.width/2.5,e.height/3],[e.width/3+e.width/2.8,e.height/3],[e.width/10,e.height/1.8],[e.width/2.5,e.height/1.8],[e.width/3+e.width/2.8,e.height/1.8],[e.width/2.5,e.height/1.3]]],n=()=>(0,i.syncLoadingImages)({balloonImg:a.MAP_ICON_IMG,specialBloonImg:a.MAP_ICON_SPECIAL_IMG,lockImg:a.MAP_LOCK_IMG,starImg:a.STAR_IMG});async function o(e,t,x,a){const i=s(x);return{...{x:e,y:t,index:x,isSpecial:i,...a,balloonImg:i?a?.specialBloonImg:a?.balloonImg}}}},"./src/constants/index.ts":(e,t,x)=>{x.r(t),x.d(t,{ASSETS_PATH_BG_01:()=>G,ASSETS_PATH_FENCE:()=>W,ASSETS_PATH_HILL:()=>V,ASSETS_PATH_MONSTER_IDLE:()=>X,ASSETS_PATH_STONE_PINK_BG:()=>U,ASSETS_PATH_TOTEM:()=>H,AUDIO_ARE_YOU_SURE:()=>O,AUDIO_INTRO:()=>z,AUDIO_LEVEL_LOSE:()=>j,AUDIO_LEVEL_WIN:()=>R,AUDIO_PATH_BTN_CLICK:()=>D,AUDIO_PATH_CHEERING_FUNC:()=>N,AUDIO_PATH_CORRECT_STONE:()=>k,AUDIO_PATH_EATS:()=>P,AUDIO_PATH_MONSTER_DISSAPOINTED:()=>A,AUDIO_PATH_MONSTER_SPIT:()=>L,AUDIO_PATH_ON_DRAG:()=>B,AUDIO_PATH_POINTS_ADD:()=>C,AUDIO_TIMEOUT:()=>M,AUDIO_URL_PRELOAD:()=>F,AUTUMN_BACKGROUND_1:()=>$,AUTUMN_BG_GROUP_IMGS:()=>Me,AUTUMN_FENCE_1:()=>J,AUTUMN_HILL_1:()=>K,AUTUMN_PILLAR_1:()=>q,AUTUMN_SIGN_1:()=>Z,BACK_BTN_IMG:()=>Ae,BAR_EMPTY:()=>oe,BAR_FULL:()=>ce,ButtonClick:()=>b,CANCEL_BTN_IMG:()=>ke,CLOUD_6:()=>ge,CLOUD_7:()=>me,CLOUD_8:()=>ve,DEFAULT_BACKGROUND_1:()=>Y,DEFAULT_BG_GROUP_IMGS:()=>Oe,DevelopmentServer:()=>w,EndScene1:()=>E,FONT_BASE_PATH:()=>T,FeedbackAudio:()=>l,FirebaseUserClicked:()=>a,FirebaseUserInstall:()=>i,GAMEPLAY_BG_GROUP_IMGS:()=>Be,GameScene1:()=>I,IntroMusic:()=>h,IsCached:()=>r,LEVEL_INDICATOR:()=>ne,LEVEL_SELECTION_BACKGROUND:()=>ie,LevelEndAudio:()=>m,LevelSelection1:()=>y,MAP_BTN_IMG:()=>ye,MAP_ICON_IMG:()=>Ie,MAP_ICON_SPECIAL_IMG:()=>Ee,MAP_LOCK_IMG:()=>Te,MonsterAudio:()=>d,NEXT_BTN_IMG:()=>Le,NativePlayButton:()=>n,PAUSE_BTN_IMG:()=>Se,PIN_STAR_1:()=>be,PIN_STAR_2:()=>ue,PIN_STAR_3:()=>pe,PLAY_BTN_IMG:()=>we,POPUP_BG_IMG:()=>De,PROMPT_PLAY_BUTTON:()=>_e,PROMPT_TEXT_BG:()=>se,PWAInstallStatus:()=>s,PhraseAudio:()=>g,PreviousPlayedLevel:()=>o,PromptAudio:()=>f,RETRY_BTN_IMG:()=>Ce,ROTATING_CLOCK:()=>de,SCENE_NAME_GAME_PLAY:()=>Fe,SCENE_NAME_LEVEL_END:()=>Ue,SCENE_NAME_LEVEL_SELECT:()=>Re,SCENE_NAME_START:()=>je,SPECIAL_LEVELS:()=>He,STAR_IMG:()=>Pe,StartScene1:()=>S,StoneMusic:()=>p,StoreMonsterPhaseNumber:()=>c,TIMER_EMPTY:()=>re,TIMER_FULL:()=>le,TUTORIAL_HAND:()=>he,TimeOver:()=>u,UrlSubstring:()=>v,UserCancelled:()=>_,WINTER_BACKGROUND_1:()=>Q,WINTER_BG_GROUP_IMGS:()=>ze,WINTER_FENCE_1:()=>xe,WINTER_HILL_1:()=>ee,WINTER_PILLAR_1:()=>ae,WINTER_SIGN_1:()=>te,WIN_BG:()=>fe,YES_BTN_IMG:()=>Ne});const a="user_clicked",i="user_installed",s="pwa_installed_status",_="user_cancel_installation",n="native_playbutton_clicked",o="storePreviousPlayedLevel",c="storeMonsterPhaseNumber",r="is_cached",d="monster_audio",l="feedback_audio",h="intro_music",f="prompt_audio",b="button_click",u="time_over",p="stone_music",g="phrase_audio",m="level_end_audio",v="/feedthemonster",w="https://feedthemonsterdev.curiouscontent.org",S="StartScene1",y="LevelSelection1",I="GameScene1",E="EndScene1",T="./assets/fonts/",P="./assets/audios/Eat.mp3",L="./assets/audios/MonsterSpit.mp3",A="./assets/audios/Disapointed-05.mp3",C="assets/audios/PointsAdd.wav",k="assets/audios/CorrectStoneFinal.mp3",N=e=>`./assets/audios/Cheering-0${e}.mp3`,D="./assets/audios/ButtonClick.mp3",B="./assets/audios/onDrag.mp3",O="./assets/audios/are-you-sure.mp3",M="./assets/audios/timeout.mp3",z="./assets/audios/intro.mp3",j="./assets/audios/LevelLoseFanfare.mp3",R="./assets/audios/LevelWinFanfare.mp3",F=["./assets/audios/intro.mp3","./assets/audios/Cheering-02.mp3","./assets/audios/Cheering-03.mp3","./assets/audios/Cheering-01.mp3","./assets/audios/onDrag.mp3","./assets/audios/timeout.mp3","./assets/audios/LevelWinFanfare.mp3","./assets/audios/LevelLoseFanfare.mp3","./assets/audios/ButtonClick.mp3","./assets/audios/Monster Spits wrong stones-01.mp3","./assets/audios/Disapointed-05.mp3","./assets/audios/MonsterSpit.mp3","./assets/audios/Eat.mp3","./assets/audios/PointsAdd.wav","./assets/audios/are-you-sure.mp3"],U="./assets/images/stone_pink.webp",H="./assets/images/Totem_v02_v01.webp",G="./assets/images/bg_v01.webp",V="./assets/images/hill_v01.webp",W="./assets/images/fence_v01.webp",X="./assets/images/idle4.png",Y="./assets/images/bg_v01.webp",$="./assets/images/Autumn_bg_v01.webp",K="./assets/images/Autumn_hill_v01.webp",q="./assets/images/Autumn_sign_v01.webp",Z="./assets/images/Autumn_sign_v01.webp",J="./assets/images/Autumn_fence_v01.webp",Q="./assets/images/Winter_bg_01.webp",ee="./assets/images/Winter_hill_v01.webp",te="./assets/images/Winter_sign_v01.webp",xe="./assets/images/Winter_fence_v01.webp",ae="./assets/images/Winter_sign_v01.webp",ie="./assets/images/map.webp",se="./assets/images/promptTextBg.webp",_e="./assets/images/promptPlayButton.webp",ne="./assets/images/levels_v01.webp",oe="./assets/images/bar_empty_v01.webp",ce="./assets/images/bar_full_v01.webp",re="./assets/images/timer_empty.webp",de="./assets/images/timer.webp",le="./assets/images/timer_full.png",he="./assets/images/tutorial_hand.webp",fe="./assets/images/WIN_screen_bg.webp",be="./assets/images/pinStar1.webp",ue="./assets/images/pinStar2.webp",pe="./assets/images/pinStar3.webp",ge="./assets/images/cloud_01.png",me="./assets/images/cloud_02.png",ve="./assets/images/cloud_03.png",we="./assets/images/Play_button.webp",Se="./assets/images/pause_v01.webp",ye="./assets/images/map_btn.webp",Ie="./assets/images/mapIcon.webp",Ee="./assets/images/map_icon_monster_level_v01.webp",Te="./assets/images/mapLock.webp",Pe="./assets/images/star.webp",Le="./assets/images/next_btn.webp",Ae="./assets/images/back_btn.webp",Ce="./assets/images/retry_btn.webp",ke="./assets/images/close_btn.webp",Ne="./assets/images/confirm_btn.webp",De="./assets/images/popup_bg_v01.webp",Be={ASSETS_PATH_TOTEM:H,DEFAULT_BACKGROUND_1:Y,ASSETS_PATH_HILL:V,ASSETS_PATH_FENCE:W,ASSETS_PATH_MONSTER_IDLE:X},Oe={DEFAULT_BACKGROUND_1:Y,ASSETS_PATH_HILL:V,ASSETS_PATH_TOTEM:H,ASSETS_PATH_FENCE:W},Me={AUTUMN_BACKGROUND_1:$,AUTUMN_HILL_1:K,AUTUMN_PILLAR_1:q,AUTUMN_SIGN_1:Z,AUTUMN_FENCE_1:J},ze={WINTER_BACKGROUND_1:Q,WINTER_HILL_1:ee,WINTER_SIGN_1:te,WINTER_FENCE_1:xe,WINTER_PILLAR_1:ae},je="StartScene",Re="LevelSelection",Fe="GamePlay",Ue="LevelEnd",He=[5,13,20,30,42]},"./src/data/api-data.ts":(e,t,x)=>{x.r(t),x.d(t,{URL:()=>i,getData:()=>_,getFtmData:()=>s});var a=x("./src/common/index.ts");const i="./lang/"+a.lang+"/ftm_"+a.lang+".json";function s(){return fetch(i,{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>e.json().then((e=>e))))}async function _(){return await s()}},"./src/data/custom-fonts.ts":(e,t,x)=>{x.r(t),x.d(t,{customFonts:()=>a});const a={default:"Atma-SemiBold",english:"Atma-SemiBold",swahili:"Atma-SemiBold",wolof:"Atma-SemiBold",tajik:"Atma-SemiBold",marathi:"Atma-SemiBold",amharic:"Atma-SemiBold",punjabi:"Atma-SemiBold",tamil:"Atma-SemiBold",sepedi:"Atma-SemiBold",gujarati:"Atma-SemiBold",telugu:"Atma-SemiBold",tsonga:"Atma-SemiBold",malay:"Atma-SemiBold",ndebele:"Atma-SemiBold",venda:"Atma-SemiBold",siswati:"Atma-SemiBold",tswana:"Atma-SemiBold",thai:"Atma-SemiBold",fula:"Atma-SemiBold",farsi:"Atma-SemiBold",burmese:"Atma-SemiBold",bengali:"Atma-SemiBold",Azerbaijani:"Atma-SemiBold",Sesotho:"Atma-SemiBold",Georgian:"Atma-SemiBold",BrazilianPortuguese:"Atma-SemiBold",Somali:"Atma-SemiBold",Hausa:"Atma-SemiBold",Igbo:"Atma-SemiBold",HatianCreole:"Atma-SemiBold",Oromo:"Atma-SemiBold",Luganda:"Atma-SemiBold",Yoruba:"Atma-SemiBold",Khmer:"Atma-SemiBold",Javanese:"Atma-SemiBold",Urdu:"Atma-SemiBold",Kinyarwanda:"Atma-SemiBold",Shona:"Atma-SemiBold",Kurdish:"Atma-SemiBold",French:"Atma-SemiBold",isiXhosa:"Atma-SemiBold",Afrikaans:"Atma-SemiBold",Nepali:"Atma-SemiBold",Ukrainian:"Atma-SemiBold",Hindi:"Atma-SemiBold",Tagalog:"Atma-SemiBold",Vietnamese:"Atma-SemiBold",Pashto:"Atma-SemiBold",Twi:"Atma-SemiBold",Arabic:"Atma-SemiBold"}},"./src/data/data-modal.ts":(e,t,x)=>{x.r(t),x.d(t,{DataModal:()=>a,FeedbackAudios:()=>_,FeedbackTexts:()=>s,FoilStone:()=>c,LevelMeta:()=>l,Levels:()=>n,OtherAudios:()=>i,Prompt:()=>d,Puzzles:()=>o,TargetStone:()=>r});class a{title;otherAudios;levels;FeedbackTexts;FeedbackAudios;rightToLeft;majVersion;minVersion;version;constructor(e,t,x,a,n,o,c,r,d){this.title=e,this.otherAudios=new i(t),this.levels=this.getLevels(x),this.FeedbackTexts=new s(a),this.FeedbackAudios=new _(o),this.rightToLeft=n,this.majVersion=c,this.minVersion=r,this.version=d}getLevels(e){let t=[];for(let x=0;x<e.length;x++)t.push(new n(e[x]));return t}}class i{selctYourPlayer;watchMeGrow;areYouSure;constructor(e){this.selctYourPlayer=e["Select your player"],this.watchMeGrow=e["Watch me grow"],this.areYouSure=e["Are you sure"]}}class s{fantastic;great;amazing;constructor(e){e.length>=1&&(this.fantastic=e[0]),e.length>=2&&(this.great=e[1]),e.length>=3&&(this.amazing=e[2])}}class _{fantastic;great;amazing;constructor(e){e.length>=1&&(this.fantastic=e[0]),e.length>=2&&(this.great=e[1]),e.length>=3&&(this.amazing=e[2])}}class n{puzzles;levelMeta;levelNumber;constructor(e){this.puzzles=this.getPuzzleData(e),this.levelMeta=new l(e.LevelMeta),this.levelNumber=e.LevelNumber}getPuzzleData(e){let t=[];return e.Puzzles.map(((e,x)=>{t.push(new o(e))})),t}}class o{segmentNumber;prompt;foilStones;targetStones;constructor(e){this.segmentNumber=e.SegmentNumber,this.prompt=new d(e.prompt),this.foilStones=this.getFoilStones(e),this.targetStones=this.getTargetStones(e)}getFoilStones(e){let t=[];return e.foilstones.map(((e,x)=>{t.push(e.StoneText)})),t}getTargetStones(e){let t=[];return e.targetstones.map(((e,x)=>{t.push(e.StoneText)})),t}}class c{stoneText;constructor(e){this.stoneText=e}}class r{stoneText;constructor(){this.stoneText}}class d{promptText;promptAudio;constructor(e){this.promptText=e.PromptText,this.promptAudio=e.PromptAudio}}class l{promptFadeOut;letterGroup;levelNumber;protoType;levelType;constructor(e){this.promptFadeOut=e.PromptFadeout,this.letterGroup=e.LetterGroup,this.levelNumber=e.LevelNumber,this.protoType=e.PromptType,this.levelType=e.LevelType}}},"./src/data/game-score.ts":(e,t,x)=>{x.r(t),x.d(t,{GameScore:()=>i});var a=x("./src/common/index.ts");class i{static currentlanguage=a.lang;static setGameLevelScore(e,t){let x=this.calculateStarCount(t),a={levelName:e.levelMeta.levelType,levelNumber:e.levelMeta.levelNumber,score:t,starCount:x};this.setTotalStarCount(x);let i=this.getAllGameLevelInfo(),s=-1;for(let e=0;e<i.length;e++)if(i[e].levelNumber===a.levelNumber){s=e;break}-1!==s&&a.score>i[s].score?i[s]=a:i.push(a),localStorage.setItem(this.currentlanguage+"gamePlayedInfo",JSON.stringify(i))}static getAllGameLevelInfo(){const e=localStorage.getItem(this.currentlanguage+"gamePlayedInfo");return null==e?[]:JSON.parse(e)}static setTotalStarCount(e){let t=this.getTotalStarCount()+e;localStorage.setItem(this.currentlanguage+"totalStarCount",t)}static getTotalStarCount(){const e=localStorage.getItem(this.currentlanguage+"totalStarCount");return null==e?0:parseInt(e)}static calculateStarCount(e){return 200==e?1:300==e||400==e?2:500==e?3:0}static getDatafromStorage(){return a.Debugger.DebugMode?JSON.parse(localStorage.getItem(a.lang+"ProfileDebug")||"{}"):JSON.parse(localStorage.getItem(a.lang+"Profile")||"{}")}}},"./src/data/i18-font-mapping.ts":(e,t,x)=>{x.r(t),x.d(t,{languageFontMapping:()=>a});const a={english:"Consolas",swahili:"Consolas",wolof:"Consolas",tajik:"Consolas",marathi:"Consolas",amharic:"Consolas",punjabi:"Consolas",tamil:"Consolas",sepedi:"Consolas",gujarati:"Consolas",telugu:"Consolas",tsonga:"Consolas",malay:"Consolas",ndebele:"Consolas",venda:"NotoSans-Regular",siswati:"Consolas",tswana:"Consolas",thai:"Consolas",fula:"Consolas",farsi:"Consolas",burmese:"Consolas",bengali:"Consolas",Azerbaijani:"NotoSans-Regular",Sesotho:"Consolas",Georgian:"Consolas",BrazilianPortuguese:"Consolas",Somali:"Consolas",Hausa:"NotoSans-Regular",Igbo:"Consolas",HatianCreole:"Consolas",Oromo:"Consolas",Luganda:"Consolas",Yoruba:"Consolas",Khmer:"Consolas",Javanese:"Consolas",Urdu:"Consolas",Kinyarwanda:"Consolas",Shona:"Consolas",Kurdish:"Consolas",French:"Consolas",isiXhosa:"Consolas",Afrikaans:"Consolas",Nepali:"Consolas",Ukrainian:"Consolas",Hindi:"Consolas",Tagalog:"Consolas",Vietnamese:"NotoSans-Regular",Pashto:"Consolas",Twi:"NotoSans-Regular",Arabic:"Adobe-Arabic-Bold"}},"./src/data/index.ts":(e,t,x)=>{x.r(t),x.d(t,{DataModal:()=>i.DataModal,FeedbackAudios:()=>i.FeedbackAudios,FeedbackTexts:()=>i.FeedbackTexts,FoilStone:()=>i.FoilStone,GameScore:()=>s.GameScore,LevelMeta:()=>i.LevelMeta,Levels:()=>i.Levels,OtherAudios:()=>i.OtherAudios,Prompt:()=>i.Prompt,Puzzles:()=>i.Puzzles,TargetStone:()=>i.TargetStone,URL:()=>a.URL,customFonts:()=>n.customFonts,getData:()=>a.getData,getFtmData:()=>a.getFtmData,languageFontMapping:()=>_.languageFontMapping});var a=x("./src/data/api-data.ts"),i=x("./src/data/data-modal.ts"),s=x("./src/data/game-score.ts"),_=x("./src/data/i18-font-mapping.ts"),n=x("./src/data/custom-fonts.ts")},"./src/events/index.ts":(e,t,x)=>{x.r(t),x.d(t,{EventManager:()=>i});var a=x("./src/common/index.ts");class i{handler;stoneDropCallbackHandler;loadPuzzleCallbackHandler;constructor(e){this.handler=e,this.stoneDropCallbackHandler=e.stoneDropCallbackHandler,this.loadPuzzleCallbackHandler=e.loadPuzzleCallbackHandler,document.addEventListener(a.STONEDROP,this.handleStoneDroppedEvent,!1),document.addEventListener(a.LOADPUZZLE,this.handleLoadPuzzleEvent,!1)}handleStoneDroppedEvent=e=>{this.stoneDropCallbackHandler(e)};handleLoadPuzzleEvent=e=>{this.loadPuzzleCallbackHandler(e)};unregisterEventListener=()=>{document.removeEventListener(a.STONEDROP,this.handleStoneDroppedEvent,!1),document.removeEventListener(a.LOADPUZZLE,this.handleLoadPuzzleEvent,!1)}}},"./src/gamepuzzles/index.ts":(e,t,x)=>{x.r(t),x.d(t,{WordPuzzleLogic:()=>a.default});var a=x("./src/gamepuzzles/wordPuzzleLogic.ts")},"./src/gamepuzzles/wordPuzzleLogic.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>a});class a{levelData;puzzleNumber;groupedLetters;droppedLetters;groupedObj;droppedHistory;hideListObj;constructor(e,t){this.levelData=e,this.puzzleNumber=t,this.groupedLetters="",this.droppedLetters="",this.groupedObj={},this.droppedHistory={},this.hideListObj={}}getTargetWord(){return this.levelData.puzzles[this.puzzleNumber]?.prompt?.promptText}getValues(){return{groupedLetters:this.groupedLetters,droppedLetters:this.droppedLetters,groupedObj:{...this.groupedObj},droppedHistory:{...this.droppedHistory},hideListObj:{...this.hideListObj}}}checkIsWordPuzzle(){return"Word"===this.levelData?.levelMeta?.levelType}updatePuzzleLevel(e){this.clearAllValues(),this.puzzleNumber=e}clearPickedUp(){this.groupedLetters="",this.groupedObj={},this.hideListObj={...this.droppedHistory}}clearAllValues(){this.groupedLetters="",this.droppedLetters="",this.groupedObj={},this.droppedHistory={},this.hideListObj={},this.puzzleNumber=0}validateShouldHideLetter(e){return!this.hideListObj[e]}handleCheckHoveredStone(e,t){const x=this.groupedLetters,a=this.getTargetWord();if(!this.droppedLetters.length&&a[0]!==x[0])return!1;const i=!x.includes(e),s=!this.groupedObj[t];return a.includes(`${this.droppedLetters}${x}${e}`)&&(i||s)}validateFedLetters(){const e=this.getTargetWord();return this.droppedLetters===e.substring(0,this.droppedLetters.length)}validateWordPuzzle(){const e=this.getTargetWord();return this.droppedLetters===e}setGroupToDropped(){this.droppedLetters=`${this.droppedLetters}${this.groupedLetters}`,this.droppedHistory={...this.droppedHistory,...this.groupedObj}}setPickUpLetter(e,t){this.hideListObj={...this.hideListObj,...this.groupedObj},this.groupedLetters=`${this.groupedLetters}${e}`,this.groupedObj[t]=e}}},"./src/sceneHandler/index.ts":(e,t,x)=>{x.r(t),x.d(t,{SceneHandler:()=>n});var a=x("./src/scenes/index.ts"),i=x("./src/data/index.ts"),s=x("./src/common/index.ts"),_=x("./src/constants/index.ts");class n{canvas;data;width;height;startScene;levelSelectionScene;gameplayScene;levelEndScene;canavsElement;context;static SceneName;loadingScreen;loading=!1;lastTime=0;toggleBtn;titleTextElement;constructor(e,t){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.toggleBtn=document.getElementById("toggle-btn"),this.titleTextElement=document.getElementById("title"),window.addEventListener("beforeinstallprompt",this.handleInstallPrompt),this.context=this.canavsElement.getContext("2d"),this.startScene=new a.StartScene(e,t,this.switchSceneToLevelSelection),n.SceneName=_.StartScene1,this.loadingScreen=new a.LoadingScene(this.width,this.height,this.removeLoading),this.startAnimationLoop()}startAnimationLoop(){const e=t=>{this.animation(t),requestAnimationFrame(e)};requestAnimationFrame(e)}devToggle(){this.toggleBtn.addEventListener("click",(()=>{this.toggleBtn.classList.toggle("on"),this.toggleBtn.classList.contains("on")?(s.Debugger.DebugMode=!0,this.toggleBtn.innerText="Dev"):(s.Debugger.DebugMode=!1,this.toggleBtn.innerText="Dev")}))}checkMonsterPhaseUpdation(){let e=i.GameScore.getTotalStarCount(),t=Math.floor(e/12)+1||1;return t<=4?t:4}animation=e=>{let t=e-this.lastTime;this.lastTime=e,this.context.clearRect(0,0,this.width,this.height),this.loading&&this.loadingScreen.draw(t),n.SceneName===_.StartScene1?this.startScene.animation(t):n.SceneName===_.LevelSelection1?this.levelSelectionScene.drawLevelSelection():n.SceneName===_.GameScene1?this.gameplayScene.draw(t):n.SceneName===_.EndScene1&&this.levelEndScene.draw(t)};switchSceneToGameplay=(e,t)=>{this.showLoading(),this.dispose(t);let x=this.data.majVersion&&this.data.minVersion?this.data.majVersion.toString()+"."+this.data.minVersion.toString():"";setTimeout((()=>{this.gameplayScene=new a.GameplayScene(this.canvas,e.currentLevelData,this.checkMonsterPhaseUpdation(),this.data.FeedbackTexts,this.data.rightToLeft,this.switchSceneToEndLevel,e.selectedLevelNumber,(()=>{this.switchSceneToLevelSelection(_.SCENE_NAME_GAME_PLAY)}),this.switchSceneToGameplay,x,this.data.FeedbackAudios),n.SceneName=_.GameScene1}),800)};switchSceneToEndLevel=(e,t,x,i)=>{this.loadingScreen.initCloud(),setTimeout((()=>{this.dispose(_.SCENE_NAME_GAME_PLAY),this.levelEndScene=new a.LevelEndScene(this.canvas,this.height,this.width,this.context,e,x,this.switchSceneToGameplay,this.switchSceneToLevelSelection,this.data,t),n.SceneName=_.EndScene1}),i?0:4e3)};switchSceneToLevelSelection=e=>{this.showLoading(),this.dispose(e),setTimeout((()=>{this.levelSelectionScene=new a.LevelSelectionScreen(this.canvas,this.data,this.switchSceneToGameplay),n.SceneName=_.LevelSelection1,this.titleTextElement.style.display="none"}),800)};dispose=e=>{e==_.SCENE_NAME_LEVEL_SELECT?this.levelSelectionScene.dispose():e===_.SCENE_NAME_GAME_PLAY?this.gameplayScene.dispose():e===_.SCENE_NAME_START?this.startScene.dispose():e==_.SCENE_NAME_LEVEL_END&&this.levelEndScene.dispose()};showLoading=()=>{this.loadingScreen.initCloud(),this.loading=!0,document.getElementById("loading").style.zIndex="3"};removeLoading=()=>{document.getElementById("loading").style.zIndex="-1",this.loading=!1};handleInstallPrompt=e=>{e.preventDefault(),localStorage.setItem(_.PWAInstallStatus,"false")}}},"./src/scenes/gameplay-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{GameplayScene:()=>d});var a=x("./src/components/index.ts"),i=x("./src/components/popups/pause-popup.ts"),s=x("./src/common/index.ts"),_=x("./src/data/index.ts"),n=x("./src/Firebase/firebase-integration.ts"),o=x("./src/constants/index.ts"),c=x("./src/compositions/index.ts"),r=x("./src/gamepuzzles/index.ts");class d{width;height;monster;jsonVersionNumber;canvas;levelData;timerTicking;promptText;pauseButton;tutorial;puzzleData;id;context;levelIndicators;stonesCount=1;monsterPhaseNumber;pickedStone;puzzleStartTime;showTutorial;feedBackTexts;isPuzzleCompleted;rightToLeft;imagesLoaded=!1;switchSceneToEnd;levelNumber;loadedImages;stoneHandler;counter=0;images;handler;pickedStoneObject;pausePopup;isPauseButtonClicked=!1;background;feedBackTextCanavsElement;feedbackTextEffects;isGameStarted=!1;time=0;score=0;switchToLevelSelection;reloadScene;audioPlayer;firebaseIntegration;startTime;puzzleTime;isDisposing;resetAnimationID;trailParticles;clickTrailToggle;hasFed;wordPuzzleLogic;constructor(e,t,x,_,c,d,l,h,f,b,u){this.width=e.width,this.height=e.height,this.rightToLeft=c,this.canvas=e,this.context=this.canvas.getContext("2d",{willReadFrequently:!0}),this.trailParticles=new a.TrailEffect(e),this.monsterPhaseNumber=x||1,this.levelData=t,this.switchSceneToEnd=d,this.levelNumber=l,this.switchToLevelSelection=h,this.reloadScene=f,this.jsonVersionNumber=b,this.startGameTime(),this.startPuzzleTime(),this.isDisposing=!1,this.pauseButton=new a.PauseButton(this.context,this.canvas),this.timerTicking=new a.TimerTicking(this.width,this.height,this.loadPuzzle),this.stoneHandler=new a.StoneHandler(this.context,this.canvas,this.counter,this.levelData,u,this.timerTicking),this.tutorial=new a.Tutorial(this.context,e.width,e.height),this.promptText=new a.PromptText(this.width,this.height,this.levelData.puzzles[this.counter],this.levelData,this.rightToLeft),this.levelIndicators=new a.LevelIndicators(this.context,this.canvas,0),this.levelIndicators.setIndicators(this.counter),this.monster=new a.Monster(this.canvas,this.monsterPhaseNumber),this.pausePopup=new i.default(this.canvas,this.resumeGame,this.switchToLevelSelection,this.reloadScene,{currentLevelData:t,selectedLevelNumber:l}),this.firebaseIntegration=new n.FirebaseIntegration,this.feedbackTextEffects=new a.FeedbackTextEffects,this.audioPlayer=new a.AudioPlayer,this.handler=document.getElementById("canvas"),this.puzzleData=t.puzzles,this.feedBackTexts=_,this.images={profileMonster:o.ASSETS_PATH_MONSTER_IDLE},(0,s.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}));var p=this.levelData.levelMeta.levelNumber;s.Debugger.DebugMode?localStorage.setItem(o.PreviousPlayedLevel+s.lang+"Debug",p):localStorage.setItem(o.PreviousPlayedLevel+s.lang,p),this.addEventListeners(),this.resetAnimationID=0,this.setupBg(),this.trailParticles?.init(),this.clickTrailToggle=!1,this.hasFed=!1,this.wordPuzzleLogic=new r.WordPuzzleLogic(t,this.counter)}setupBg=async()=>{const{BG_GROUP_IMGS:e,draw:t}=(0,c.loadDynamicBgAssets)(this.levelData.levelNumber,c.BACKGROUND_ASSET_LIST);this.background=await(0,c.createBackground)(this.context,this.width,this.height,e,t)};resumeGame=()=>{this.addEventListeners(),this.isPauseButtonClicked=!1,this.stoneHandler.setGamePause(!1),this.pausePopup.dispose()};getRandomFeedBackText(e){const t=Object.keys(this.feedBackTexts)[e];return this.feedBackTexts[t]}getRandomInt(e,t){const x=Object.values(this.feedBackTexts).filter((e=>null!=e)).length-1;return Math.floor(Math.random()*(x-e+1))+e}handleMouseUp=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(Math.sqrt((x-this.monster.x-this.canvas.width/4)**2+(a-this.monster.y-this.canvas.height/2.2)**2)<=100&&this.pickedStone){const{text:e}=this.pickedStone;switch(this.levelData.levelMeta.levelType){case"LetterOnly":case"LetterInWord":this.letterPuzzle(e);break;case"Word":case"SoundWord":this.wordPuzzle(this.pickedStone)}}else if(this.pickedStone&&this.pickedStoneObject&&this.pickedStone.text&&"number"==typeof this.pickedStoneObject.origx&&"number"==typeof this.pickedStoneObject.origy){const e=50,t=this.width/2;this.pickedStone.x=this.pickedStone.text.length<=3&&this.pickedStoneObject.origx<e&&this.pickedStoneObject.origx<t?this.pickedStoneObject.origx+25:this.pickedStoneObject.origx,this.pickedStone.y=this.pickedStoneObject.origy}this.pickedStone=null,this.wordPuzzleLogic.clearPickedUp(),this.clickTrailToggle=!1};handleMouseDown=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(this.wordPuzzleLogic.checkIsWordPuzzle())this.setPickedUp(x,a);else for(let e of this.stoneHandler.foilStones){if(Math.sqrt((x-e.x)**2+(a-e.y)**2)<=40){this.pickedStoneObject=e,this.pickedStone=e,this.audioPlayer.playAudio(o.AUDIO_PATH_ON_DRAG);break}}this.clickTrailToggle=!0};setPickedUp(e,t){const x=this.stoneHandler.handlePickStoneUp(e,t);x&&(this.pickedStoneObject=x,this.pickedStone=x,this.audioPlayer.playAudio(o.AUDIO_PATH_ON_DRAG),"Word"===this.levelData?.levelMeta?.levelType&&this.wordPuzzleLogic.setPickUpLetter(x?.text,x?.foilStoneIndex))}handleMouseMove=e=>{let t=e.clientX,x=e.clientY;if(this.pickedStone){if(this.wordPuzzleLogic.checkIsWordPuzzle()){const a=this.stoneHandler.handleMovingStoneLetter(this.pickedStone,e.clientX,e.clientY);if(this.pickedStone=a,t=a.x,x=a.y,this.wordPuzzleLogic.checkIsWordPuzzle()){const e=this.stoneHandler.handleHoveringToAnotherStone(t,x,((e,t)=>this.wordPuzzleLogic.handleCheckHoveredStone(e,t)));e&&(this.wordPuzzleLogic.setPickUpLetter(e?.text,e?.foilStoneIndex),this.pickedStone=this.stoneHandler.resetStonePosition(this.width,this.pickedStone,this.pickedStoneObject),this.pickedStoneObject=e,this.pickedStone=e)}}else{let a=this.canvas.getBoundingClientRect();const i=e.clientX-a.left,s=e.clientY-a.top;this.monster.changeToDragAnimation(),this.pickedStone.x=i,this.pickedStone.y=s,t=i,x=s}this.monster.changeToDragAnimation()}this.clickTrailToggle&&this.trailParticles?.addTrailParticlesOnMove(t,x)};handleMouseClick=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;this.monster.onClick(x,a)&&(this.isGameStarted=!0,this.time=0,this.tutorial.setPlayMonsterClickAnimation(!1)),this.pauseButton.onClick(x,a)&&(this.audioPlayer.playButtonClickSound(),this.pauseGamePlay()),this.promptText.onClick(x,a)&&this.promptText.playSound()};handleTouchStart=e=>{const t=e.touches[0];this.handleMouseDown({clientX:t.clientX,clientY:t.clientY}),this.trailParticles?.resetParticles()};handleTouchMove=e=>{const t=e.touches[0];this.handleMouseMove({clientX:t.clientX,clientY:t.clientY}),this.trailParticles?.addTrailParticlesOnMove(t.clientX,t.clientY)};handleTouchEnd=e=>{const t=e.changedTouches[0];this.handleMouseUp({clientX:t.clientX,clientY:t.clientY}),this.hasFed||this.monster.changeToIdleAnimation(),this.trailParticles?.resetParticles()};draw(e){this.isGameStarted||this.isPauseButtonClicked||(this.time=this.time+e,this.time>=5e3&&(this.isGameStarted=!0,this.time=0,this.tutorial.setPlayMonsterClickAnimation(!1))),this.imagesLoaded&&this.background?.draw(),this.pauseButton.draw(),this.levelIndicators.draw(),this.promptText.draw(e),this.monster.update(e),this.timerTicking.draw(),this.trailParticles?.draw(),this.isPauseButtonClicked&&this.isGameStarted&&(this.handleStoneLetterDrawing(e),this.pausePopup.draw()),this.isPauseButtonClicked||this.isGameStarted||0==this.counter&&this.tutorial.clickOnMonsterTutorial(e),this.isPauseButtonClicked&&!this.isGameStarted&&this.pausePopup.draw(),!this.isPauseButtonClicked&&this.isGameStarted&&this.handleStoneLetterDrawing(e)}handleStoneLetterDrawing(e){if(this.wordPuzzleLogic.checkIsWordPuzzle()){const{groupedObj:t}=this.wordPuzzleLogic.getValues();this.stoneHandler.drawWordPuzzleLetters(e,(e=>this.wordPuzzleLogic.validateShouldHideLetter(e)),t)}else this.stoneHandler.draw(e)}addEventListeners(){this.handler.addEventListener(s.MOUSEUP,this.handleMouseUp,!1),this.handler.addEventListener(s.MOUSEMOVE,this.handleMouseMove,!1),this.handler.addEventListener(s.MOUSEDOWN,this.handleMouseDown,!1),this.handler.addEventListener(s.TOUCHSTART,this.handleTouchStart,!1),this.handler.addEventListener(s.TOUCHMOVE,this.handleTouchMove,!1),this.handler.addEventListener(s.TOUCHEND,this.handleTouchEnd,!1),this.handler.addEventListener(s.CLICK,this.handleMouseClick,!1),document.addEventListener(s.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}removeEventListeners(){this.handler.removeEventListener(s.CLICK,this.handleMouseClick,!1),this.handler.removeEventListener("mouseup",this.handleMouseUp,!1),this.handler.removeEventListener("mousemove",this.handleMouseMove,!1),this.handler.removeEventListener("mousedown",this.handleMouseDown,!1),this.handler.removeEventListener("touchstart",this.handleTouchStart,!1),this.handler.removeEventListener("touchmove",this.handleTouchMove,!1),this.handler.removeEventListener("touchend",this.handleTouchEnd,!1)}loadPuzzle=e=>{this.removeEventListeners(),this.stonesCount=1;const t=Boolean(e);if(t&&this.logPuzzleEndFirebaseEvent(!1),this.counter+=1,this.isGameStarted=!1,this.counter===this.levelData.puzzles.length)this.levelIndicators.setIndicators(this.counter),this.logLevelEndFirebaseEvent(),_.GameScore.setGameLevelScore(this.levelData,this.score),this.switchSceneToEnd(_.GameScore.calculateStarCount(this.score),this.monsterPhaseNumber,this.levelNumber,t);else{const e=new CustomEvent(s.LOADPUZZLE,{detail:{counter:this.counter}});setTimeout((()=>{this.isDisposing||this.initNewPuzzle(e)}),t?0:4500)}};dispose=()=>{this.isDisposing=!0,this.audioPlayer.stopAllAudios(),this.monster.dispose(),this.timerTicking.dispose(),this.levelIndicators.dispose(),this.stoneHandler.dispose(),this.promptText.dispose(),document.removeEventListener(s.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.removeEventListeners()};checkStoneDropped(e,t,x=!1){return this.hasFed=!0,this.stoneHandler.isStoneLetterDropCorrect(e,t,x)}letterPuzzle(e){const t=this.getRandomInt(0,1),x=this.checkStoneDropped(e,t);x&&this.handleCorrectStoneDrop(t),this.handleStoneDropEnd(x)}wordPuzzle(e){this.audioPlayer.stopFeedbackAudio(),e.x=-999,e.y=-999;const t=this.getRandomInt(0,1);this.hasFed=!0,this.wordPuzzleLogic.setGroupToDropped();const{droppedLetters:x}=this.wordPuzzleLogic.getValues(),a=this.wordPuzzleLogic.validateFedLetters();if(this.stoneHandler.processLetterDropFeedbackAudio(t,a,!0,x),a){if(this.wordPuzzleLogic.validateWordPuzzle())return this.handleCorrectStoneDrop(t),this.handleStoneDropEnd(a,"Word"),void(this.stonesCount=1);this.timerTicking.startTimer(),this.monster.changeToEatAnimation(),this.promptText.droppedStoneIndex("arabic"==s.lang?this.stonesCount:x.length),this.stonesCount++,this.resetToIdleAnimation((()=>{this.monster.changeToIdleAnimation(),this.hasFed=!1}),2e3)}else this.handleStoneDropEnd(a,"Word"),this.stonesCount=1}resetToIdleAnimation(e,t){void 0!==this.resetAnimationID&&clearTimeout(this.resetAnimationID),this.resetAnimationID=setTimeout(e,t)}handleStoneDropEnd(e,t=null){this.logPuzzleEndFirebaseEvent(e,t),this.dispatchStoneDropEvent(e),this.loadPuzzle()}handleCorrectStoneDrop=e=>{this.score+=100,this.feedbackTextEffects.wrapText(this.getRandomFeedBackText(e))};dispatchStoneDropEvent(e){const t=new CustomEvent(s.STONEDROP,{detail:{isCorrect:e}});document.dispatchEvent(t)}initNewPuzzle(e){this.removeEventListeners(),this.isGameStarted=!1,this.time=0,this.wordPuzzleLogic.updatePuzzleLevel(e?.detail?.counter),this.pickedStone=null,document.dispatchEvent(e),this.addEventListeners(),this.audioPlayer.stopAllAudios(),this.startPuzzleTime(),this.hasFed=!1}logPuzzleEndFirebaseEvent(e,t){let x=Date.now();const{droppedLetters:a}=this.wordPuzzleLogic.getValues(),i={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.jsonVersionNumber,success_or_failure:e?"success":"failure",level_number:this.levelData.levelMeta.levelNumber,puzzle_number:this.counter,item_selected:"Word"==t?null==a||null==a?"TIMEOUT":a:null==this.pickedStone||null==this.pickedStone?"TIMEOUT":this.pickedStone?.text,target:this.stoneHandler.getCorrectTargetStone(),foils:this.stoneHandler.getFoilStones(),response_time:(x-this.puzzleTime)/1e3};this.firebaseIntegration.sendPuzzleCompletedEvent(i)}logLevelEndFirebaseEvent(){let e=Date.now();const t={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.jsonVersionNumber,success_or_failure:_.GameScore.calculateStarCount(this.score)>=3?"success":"failure",number_of_successful_puzzles:this.score/100,level_number:this.levelData.levelMeta.levelNumber,duration:(e-this.startTime)/1e3};this.firebaseIntegration.sendLevelCompletedEvent(t)}startGameTime(){this.startTime=Date.now()}startPuzzleTime(){this.puzzleTime=Date.now()}pauseGamePlay=()=>{this.removeEventListeners(),this.isPauseButtonClicked=!0,this.stoneHandler.setGamePause(!0),this.pausePopup.addListner(),this.audioPlayer.stopAllAudios()};handleVisibilityChange=()=>{this.audioPlayer.stopAllAudios(),this.pauseGamePlay()}}},"./src/scenes/index.ts":(e,t,x)=>{x.r(t),x.d(t,{GameplayScene:()=>a.GameplayScene,LevelEndScene:()=>s.LevelEndScene,LevelSelectionScreen:()=>i.LevelSelectionScreen,LoadingScene:()=>_.LoadingScene,StartScene:()=>n.StartScene,TestGameplayScene:()=>o.TestGameplayScene});var a=x("./src/scenes/gameplay-scene.ts"),i=x("./src/scenes/level-selection-scene.ts"),s=x("./src/scenes/levelend-scene.ts"),_=x("./src/scenes/loading-scene.ts"),n=x("./src/scenes/start-scene.ts"),o=x("./src/scenes/test-gameplay-scene.ts")},"./src/scenes/level-selection-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelSelectionScreen:()=>r});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/data/index.ts"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/compositions/index.ts"),o=x("./src/constants/index.ts"),c=x("./src/components/buttons/index.ts");class r{canvas;data;width;height;canvasElement;context;levels;gameLevelData;callBack;audioPlayer;images;loadedImages;imagesLoaded=!1;xDown;yDown;previousPlayedLevelNumber;levelSelectionPageIndex=0;levelNumber;levelsSectionCount;unlockLevelIndex;majVersion;minVersion;firebaseIntegration;background;rightBtnSize;rightBtnX;rightBtnY;leftBtnSize;leftBtnX;leftBtnY;levelButtons;constructor(e,t,x){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height;let n=this;this.callBack=x,this.levelsSectionCount=n.data.levels.length/10>Math.floor(n.data.levels.length/10)?Math.floor(n.data.levels.length/10)+1:Math.floor(n.data.levels.length/10),this.levels=[],this.firebaseIntegration=new _.FirebaseIntegration,this.init(),this.canvasElement=document.getElementById("canvas"),this.context=this.canvasElement.getContext("2d"),this.createLevelButtons(),this.gameLevelData=s.GameScore.getAllGameLevelInfo(),this.audioPlayer=new i.AudioPlayer,this.unlockLevelIndex=-1,this.previousPlayedLevelNumber=0|parseInt(a.Debugger.DebugMode?localStorage.getItem(o.PreviousPlayedLevel+a.lang+"Debug"):localStorage.getItem(o.PreviousPlayedLevel+a.lang)),null!=this.previousPlayedLevelNumber&&(this.levelSelectionPageIndex=10*Math.floor(this.previousPlayedLevelNumber/10)),this.setupBg(),this.images={nextbtn:o.NEXT_BTN_IMG,backbtn:o.BACK_BTN_IMG},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0,"visible"===document.visibilityState&&this.audioPlayer.playAudio(o.AUDIO_INTRO)})),this.addListeners(),this.rightBtnSize=10,this.rightBtnX=.73,this.rightBtnY=1.3,this.leftBtnSize=10,this.leftBtnX=10,this.leftBtnY=1.3}async init(){const e=await(0,s.getData)();this.majVersion=e.majversion,this.minVersion=e.minversion}setupBg=async()=>{this.background=await(0,n.createBackground)(this.context,this.width,this.height,{LEVEL_SELECTION_BACKGROUND:o.LEVEL_SELECTION_BACKGROUND},n.levelSelectBgDrawing)};async createLevelButtons(){const e=await(0,n.loadLevelImages)(),t=(0,n.getdefaultCloudBtnsPos)(this.canvas)[0].map(((t,x)=>(0,n.createLevelObject)(t[0],t[1],x+1,e)));this.levels=await Promise.all(t),this.levelButtons=this.levels.map((e=>new c.LevelBloonButton(this.canvas,this.context,{...e})))}addListeners(){document.getElementById("canvas").addEventListener("mousedown",this.handleMouseDown,!1),document.addEventListener("visibilitychange",this.pausePlayAudios,!1),document.getElementById("canvas").addEventListener("touchstart",this.handleTouchStart,!1),document.getElementById("canvas").addEventListener("touchmove",this.handleTouchMove,!1)}pausePlayAudios=()=>{"visible"===document.visibilityState?this.audioPlayer.playAudio(o.AUDIO_INTRO):this.audioPlayer.stopAllAudios()};getTouches(e){return e.touches||e.originalEvent.touches}handleTouchStart=e=>{const t=this.getTouches(e)[0];this.xDown=t.clientX,this.yDown=t.clientY};handleTouchMove=e=>{if(!this.xDown||!this.yDown)return;let t=e.touches[0].clientX,x=e.touches[0].clientY,a=this.xDown-t,i=this.yDown-x;Math.abs(a)>Math.abs(i)&&(a>0?this.levelSelectionPageIndex!=10*this.levelsSectionCount-10&&(this.levelSelectionPageIndex=this.levelSelectionPageIndex+10,this.downButton(this.levelSelectionPageIndex)):(0!=this.levelSelectionPageIndex&&(this.levelSelectionPageIndex=this.levelSelectionPageIndex-10),this.downButton(this.levelSelectionPageIndex))),this.xDown=null,this.yDown=null};handleMouseDown=e=>{e.preventDefault();let t=document.getElementById("canvas").getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top,i=(e,t=1.3)=>x>=e&&x<e+this.canvas.height/10&&a>this.canvas.height/t&&a<this.canvas.height/t+this.canvas.height/10,s=i(.7*this.canvas.width),_=i(this.canvas.width/10);if(_||s){this.audioPlayer.playButtonClickSound();const e=this.levelSelectionPageIndex;s&&e!=10*this.levelsSectionCount-10?(this.levelSelectionPageIndex=e+10,this.rightBtnSize=10.5,this.rightBtnY=1.299):_&&0!=e&&(this.levelSelectionPageIndex=e-10,this.leftBtnSize=10.3,this.leftBtnY=1.299),this.downButton(this.levelSelectionPageIndex)}for(let e of this.levelButtons)e.onClick(x,a,this.levelSelectionPageIndex-1,this.unlockLevelIndex+1,(e=>{this.audioPlayer.playButtonClickSound(),this.levelNumber=e+this.levelSelectionPageIndex-1,this.startGame(this.levelNumber)}))};drawLevel(e,t){const x=e.levelData.index+this.levelSelectionPageIndex,i=x-1;this.unlockLevelIndex+1===i&&e.applyPulseEffect(),x<=this.data.levels.length&&(this.checkUnlockedLevel(t),e.draw(this.levelSelectionPageIndex,this.unlockLevelIndex,t,this.data.levels.length),a.Debugger.DebugMode&&this.context.fillText(this.data.levels[x-1].levelMeta.levelType,e.levelData.x+e.btnSize/3.5,e.levelData.y+e.btnSize/1.3))}draw(){for(let e of this.levelButtons)this.drawLevel(e,this.gameLevelData)}downButton(e){e!=10*this.levelsSectionCount-10?(this.context.drawImage(this.loadedImages.nextbtn,this.canvas.width*this.rightBtnX,this.canvas.height/this.rightBtnY,this.canvas.height/this.rightBtnSize,this.canvas.height/this.rightBtnSize),this.rightBtnSize>10&&(this.rightBtnSize=this.rightBtnSize-.025),this.rightBtnY=this.rightBtnSize>10?1.299:1.3):(this.rightBtnSize=10,this.rightBtnX=.7,this.rightBtnY=1.3),0!=e?(this.context.drawImage(this.loadedImages.backbtn,this.canvas.width/this.leftBtnX,this.canvas.height/this.leftBtnY,this.canvas.height/this.leftBtnSize,this.canvas.height/this.leftBtnSize),this.leftBtnSize>10&&(this.leftBtnSize=this.leftBtnSize-.025),this.leftBtnY=this.leftBtnSize>10?1.299:1.3):(this.leftBtnSize=10,this.leftBtnX=10,this.leftBtnY=1.3)}checkUnlockedLevel(e){if(null!=e.length)for(let t of e)this.unlockLevelIndex<parseInt(t.levelNumber)&&t.starCount>=2&&(this.unlockLevelIndex=parseInt(t.levelNumber))}startGame(e){this.dispose(),this.audioPlayer.stopAllAudios();const t={currentLevelData:{...this.data.levels[e],levelNumber:e},selectedLevelNumber:e};this.logSelectedLevelEvent(),this.callBack(t,"LevelSelection")}logSelectedLevelEvent(){const e={cr_user_id:a.pseudoId,ftm_language:a.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",level_selected:this.levelNumber};this.firebaseIntegration.sendSelectedLevelEvent(e)}drawLevelSelection(){this.imagesLoaded&&(this.background?.draw(),this.draw(),this.downButton(this.levelSelectionPageIndex))}dispose(){this.audioPlayer.stopAllAudios(),document.getElementById("canvas").removeEventListener("mousedown",this.handleMouseDown,!1),document.removeEventListener("visibilitychange",this.pausePlayAudios,!1),document.getElementById("canvas").removeEventListener("touchstart",this.handleTouchStart,!1),document.getElementById("canvas").removeEventListener("touchmove",this.handleTouchMove,!1)}}},"./src/scenes/levelend-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelEndScene:()=>o});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/compositions/index.ts"),n=x("./src/constants/index.ts");class o{canvas;height;width;images;loadedImages;imagesLoaded;id;context;monster;closeButton;retryButton;nextButton;starCount;currentLevel;switchToGameplayCB;switchToLevelSelectionCB;data;background;audioPlayer;timeouts;starDrawnCount;isLastLevel;constructor(e,t,x,_,o,c,r,d,l,h){this.canvas=e,this.height=t,this.width=x,this.context=_,this.monster=new i.Monster(this.canvas,h,this.switchToReactionAnimation),this.switchToGameplayCB=r,this.switchToLevelSelectionCB=d,this.data=l,this.starDrawnCount=0,this.closeButton=new s.CloseButton(_,e,.2*this.width-.19*this.width/2,this.height/1.25),this.retryButton=new s.RetryButton(this.context,this.canvas,.5*this.width-.19*this.width/2,this.height/1.25),this.nextButton=new s.NextButton(this.context,this.width,this.height,.8*this.width-.19*this.width/2,this.height/1.25),this.audioPlayer=new i.AudioPlayer,this.starCount=o,this.currentLevel=c,this.images={backgroundImg:n.WIN_BG,star1Img:n.PIN_STAR_1,star2Img:n.PIN_STAR_2,star3Img:n.PIN_STAR_3,winBackgroundImg:n.DEFAULT_BACKGROUND_1},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0,this.starAnimation()})),this.addEventListener(),this.audioPlayer=new i.AudioPlayer,this.setupBg(),this.isLastLevel=this.currentLevel!==this.data.levels[this.data.levels.length-1].levelMeta.levelNumber&&this.starCount>=2}setupBg=async()=>{const{BG_GROUP_IMGS:e,draw:t}=(0,_.loadDynamicBgAssets)(this.currentLevel,_.BACKGROUND_ASSET_LIST);this.background=await(0,_.createBackground)(this.context,this.width,this.height,e,t)};switchToReactionAnimation=()=>{this.starCount<=1?((0,a.isDocumentVisible)()&&this.audioPlayer.playAudio(n.AUDIO_LEVEL_LOSE),this.monster.changeToSpitAnimation()):((0,a.isDocumentVisible)()&&(this.audioPlayer.playAudio(n.AUDIO_LEVEL_WIN),this.audioPlayer.playAudio(n.AUDIO_INTRO)),this.monster.changeToEatAnimation())};draw(e){this.background?.draw(),this.imagesLoaded&&(this.context.drawImage(this.loadedImages.backgroundImg,0,0,this.width,this.height+.12*this.height),this.drawStars(),this.monster.update(e),this.closeButton.draw(),this.retryButton.draw(),this.isLastLevel&&this.nextButton.draw())}starAnimation(){this.timeouts=[{delay:500,count:1},{delay:1e3,count:2},{delay:1500,count:3}].map((e=>setTimeout((()=>{this.starDrawnCount=e.count}),e.delay)))}drawStars(){this.starCount>=1&&this.starDrawnCount>=1&&(this.context.drawImage(this.loadedImages.star1Img,.2*this.width-.19*this.width/2,.2*this.height,.19*this.width,.19*this.width),this.starCount<=3&&this.starCount>1&&this.starDrawnCount<=3&&this.starDrawnCount>1&&(this.context.drawImage(this.loadedImages.star2Img,.5*this.width-.19*this.width/2,.15*this.height,.19*this.width,.19*this.width),this.starCount>=3&&this.starDrawnCount>=3&&this.context.drawImage(this.loadedImages.star3Img,.82*this.width-.19*this.width/2,.2*this.height,.19*this.width,.19*this.width)))}addEventListener(){document.getElementById("canvas").addEventListener(a.CLICK,this.handleMouseClick,!1),document.addEventListener("visibilitychange",this.pauseAudios,!1)}handleMouseClick=e=>{var t=document.getElementById("canvas").getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(this.closeButton.onClick(x,a)&&(this.audioPlayer.playButtonClickSound(),this.switchToLevelSelectionCB("LevelEnd")),this.retryButton.onClick(x,a)){this.audioPlayer.playButtonClickSound();let e={currentLevelData:{...this.data.levels[this.currentLevel],levelNumber:this.currentLevel},selectedLevelNumber:this.currentLevel};this.switchToGameplayCB(e,"LevelEnd")}if(this.isLastLevel&&this.nextButton.onClick(x,a)){this.audioPlayer.playButtonClickSound();let e=Number(this.currentLevel)+1,t={currentLevelData:{...this.data.levels[e],levelNumber:e},selectedLevelNumber:e};this.switchToGameplayCB(t,"LevelEnd")}};pauseAudios=()=>{(0,a.isDocumentVisible)()?this.starCount>=2&&this.audioPlayer.playAudio(n.AUDIO_INTRO):this.audioPlayer.stopAllAudios()};dispose=()=>{this.monster.dispose(),this.audioPlayer.stopAllAudios(),this.timeouts.forEach((e=>clearTimeout(e))),document.getElementById("canvas").removeEventListener(a.CLICK,this.handleMouseClick,!1),document.removeEventListener("visibilitychange",this.pauseAudios,!1)}}},"./src/scenes/loading-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LoadingScene:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{canvas;height;width;context;images;loadedImages;imagesLoaded;cloudXPosition=-500;stopCloudMoving=!1;cloudMovingTimeOut=0;removeLoading;constructor(e,t,x){this.canvas=document.getElementById("loading"),this.canvas.height=t,this.canvas.width=e,this.height=t,this.width=e,this.removeLoading=x,this.context=this.canvas.getContext("2d"),this.images={cloud6:i.CLOUD_6,cloud7:i.CLOUD_7,cloud8:i.CLOUD_8},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}draw(e){this.context.clearRect(0,0,this.width,this.height),this.cloudXPosition+=.75*e,this.cloudMovingTimeOut+=e,this.cloudMovingTimeOut>2983&&this.removeLoading(),this.cloudXPosition>=.5*this.width&&!this.stopCloudMoving&&(this.cloudMovingTimeOut+=e,this.cloudMovingTimeOut>2e3&&(this.stopCloudMoving=!0,this.cloudXPosition=0)),this.imagesLoaded&&(this.stopCloudMoving?(this.context.drawImage(this.loadedImages.cloud6,0+this.cloudXPosition,.6*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,.4*this.width+this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,0+this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*-this.width+this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*this.width+this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.05*this.width+this.cloudXPosition,.2*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.6*-this.width+this.cloudXPosition,.3*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,.5*this.width+this.cloudXPosition,.4*this.height,this.width,.4*this.height),this.context.drawImage(this.loadedImages.cloud7,.4*-this.width+this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*this.width+this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,.2*-this.width+this.cloudXPosition,.2*this.height,this.width,.5*this.height)):(this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=0?0:this.cloudXPosition,.6*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=0?0:this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*-this.width?.4*-this.width:this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.05*this.width?.05*this.width:this.cloudXPosition,.2*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.6*-this.width?.6*-this.width:this.cloudXPosition,.3*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=.5*this.width?.5*this.width:this.cloudXPosition,.4*this.height,this.width,.4*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=.4*-this.width?.4*-this.width:this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=.2*-this.width?.2*-this.width:this.cloudXPosition,.2*this.height,this.width,.5*this.height)))}initCloud=()=>{this.cloudXPosition=-500,this.stopCloudMoving=!1,this.cloudMovingTimeOut=0}}},"./src/scenes/start-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{StartScene:()=>c});var a=x("./src/components/index.ts"),i=x("./src/components/buttons/index.ts"),s=x("./src/common/index.ts"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/compositions/index.ts"),o=x("./src/constants/index.ts");class c{canvas;data;width;height;monster;pickedStone;pwa_status;firebase_analytics;id;canavsElement;context;buttonContext;playButton;images;loadedImages;imagesLoaded=!1;handler;static SceneName;switchSceneToLevelSelection;background;audioPlayer;toggleBtn;pwa_install_status;titleTextElement;constructor(e,t,x){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.toggleBtn=document.getElementById("toggle-btn"),this.monster=new a.Monster(this.canvas,4),this.switchSceneToLevelSelection=x,this.audioPlayer=new a.AudioPlayer,this.pwa_status=localStorage.getItem(o.PWAInstallStatus),this.handler=document.getElementById("canvas"),this.devToggle(),this.createPlayButton(),window.addEventListener("beforeinstallprompt",this.handlerInstallPrompt),this.setupBg(),this.titleTextElement=document.getElementById("title"),this.generateGameTitle()}setupBg=async()=>{this.background=await(0,n.createBackground)(this.context,this.width,this.height,o.DEFAULT_BG_GROUP_IMGS,n.defaultBgDrawing)};devToggle=()=>{this.toggleBtn.addEventListener("click",(()=>(0,s.toggleDebugMode)(this.toggleBtn)))};generateGameTitle=()=>{this.titleTextElement.textContent=this.data.title};animation=e=>{this.context.clearRect(0,0,this.width,this.height),this.background?.draw(),this.monster.update(e),this.playButton.draw()};createPlayButton(){this.playButton=new i.PlayButton(this.context,this.canvas,.35*this.canvas.width,this.canvas.height/7),document.addEventListener("selectstart",(function(e){e.preventDefault()})),this.handler.addEventListener("click",this.handleMouseClick,!1)}handleMouseClick=e=>{let t=this;const x=document.getElementById("canvas");e.preventDefault();var a=x.getBoundingClientRect();const i=e.clientX-a.left,n=e.clientY-a.top,{excludeX:c,excludeY:r}=s.Utils.getExcludedCoordinates(x,15);i<c&&n<r||(_.FirebaseIntegration.getInstance().sendUserClickedOnPlayEvent(),fbq("trackCustom",o.FirebaseUserClicked,{event:"click"}),this.toggleBtn.style.display="none",this.audioPlayer.playButtonClickSound(),t.switchSceneToLevelSelection("StartScene"))};dispose(){this.monster.dispose(),this.audioPlayer.stopAllAudios(),this.handler.removeEventListener("click",this.handleMouseClick,!1),window.removeEventListener("beforeinstallprompt",this.handlerInstallPrompt,!1)}handlerInstallPrompt=e=>{e.preventDefault(),this.pwa_install_status=e,localStorage.setItem(o.PWAInstallStatus,"false")}}},"./src/scenes/test-gameplay-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{TestGameplayScene:()=>o});var a=x("./src/constants/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/common/index.ts");const n=document.getElementById("toggle-btn");window.addEventListener("beforeinstallprompt",(e=>{e.preventDefault(),localStorage.setItem(a.PWAInstallStatus,"false")}));class o{canvas;data;width;height;monster;levelIndicator;promptText;timerTicking;stoneHandler;pickedStone;pwa_status;firebase_analytics;id;canavsElement;context;buttonContext;outcome;playButton;levelSelectionScene;images;loadedImages;imagesLoaded=!1;handler;static SceneName;switchSceneToLevelSelection;counter=0;tutorial;constructor(e,t,x,s){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.monster=new i.Monster(this.canvas,0),console.log(...r("2510688200_69_4_69_51_4",Date.now," ::: ",performance.now)),this.switchSceneToLevelSelection=s,this.stoneHandler=new i.StoneHandler(this.context,this.canvas,2,this.data.levels[92],this.data.feedbackAudios,this.timerTicking),this.promptText=new i.PromptText(this.width,this.height,this.data.levels[92].puzzles[2],this.data.levels[92],!1),this.timerTicking=new i.TimerTicking(this.width,this.height,this.timeOverCallback),this.levelIndicator=new i.LevelIndicators(this.context,this.canvas,0),this.levelIndicator.setIndicators(3),this.tutorial.updateTargetStonePositions([100,100]),this.pwa_status=localStorage.getItem(a.PWAInstallStatus),this.handler=document.getElementById("canvas"),this.devToggle(),this.createPlayButton(),this.firebase_analytics=x,this.animation(0),this.images={pillerImg:a.ASSETS_PATH_TOTEM,bgImg:a.DEFAULT_BACKGROUND_1,hillImg:a.ASSETS_PATH_HILL,fenchImg:a.ASSETS_PATH_FENCE,profileMonster:a.ASSETS_PATH_MONSTER_IDLE},(0,_.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}timeOverCallback=()=>{this.timerTicking.readyTimer(),this.timerTicking.startTimer(),this.timerTicking.isMyTimerOver=!1,5==this.counter&&(this.counter=0),this.levelIndicator.setIndicators(this.counter++)};devToggle=()=>{n.addEventListener("click",(()=>(0,_.toggleDebugMode)(n)))};handleMouseUp=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;Math.sqrt((a-t.monster.x-t.canvas.width/4)*(a-t.monster.x-t.canvas.width/4)+(i-t.monster.y-t.canvas.height/2.7)*(i-t.monster.y-t.canvas.height/2.7))<=60||t.monster.changeToIdleAnimation(),t.pickedStone=null};handleMouseDown=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;for(let e of t.stoneHandler.foilStones)Math.sqrt((a-e.x)*(a-e.x)+(i-e.y)*(i-e.y))<=40&&(this.pickedStone=e)};handleMouseMove=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;t.pickedStone&&(t.monster.changeToDragAnimation(),t.pickedStone.x=a,t.pickedStone.y=i)};animation=e=>{this.imagesLoaded&&(this.context.drawImage(this.loadedImages.bgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.pillerImg,.6*this.width,this.height/6,this.width,this.height/2),this.context.drawImage(this.loadedImages.fenchImg,.4*-this.width,this.height/3,this.width,this.height/3),this.context.drawImage(this.loadedImages.hillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2),this.context.font="bold 40px Arial",this.context.fillStyle="white",this.context.textAlign="center",this.context.fillText("Testing Gameplay",.5*this.width,this.height/10),this.monster.update(e),this.promptText.draw(e),this.stoneHandler.draw(e),this.levelIndicator.draw(),this.timerTicking.update(e))};draw(){}createPlayButton=()=>{this.playButton=new s.PlayButton(this.context,this.canvas,.35*this.canvas.width,this.canvas.height/7),this.handler.addEventListener("mouseup",this.handleMouseUp,!1),this.handler.addEventListener("mousemove",this.handleMouseMove,!1),this.handler.addEventListener("mousedown",this.handleMouseDown,!1),this.handler.addEventListener("touchstart",(function(e){var t=e.touches[0],x=new MouseEvent("mousedown",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1),this.handler.addEventListener("touchmove",(function(e){var t=e.touches[0],x=new MouseEvent("mousemove",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1),this.handler.addEventListener("touchend",(function(e){var t=e.changedTouches[0],x=new MouseEvent("mouseup",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1)};handleMouseClick=e=>{let t=this;const x=document.getElementById("canvas");e.preventDefault();var i=x.getBoundingClientRect();const s=e.clientX-i.left,_=e.clientY-i.top;t.playButton.onClick(s,_)&&(t.firebase_analytics&&t.firebase_analytics.logEvent(a.FirebaseUserClicked,"click"),fbq("trackCustom",a.FirebaseUserClicked,{event:"click"}),n.style.display="none",t.switchSceneToLevelSelection())};dispose(){this.handler.removeEventListener("click",this.handleMouseClick,!1)}}function c(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x2bca12=_0x4773;(function(_0x1cba12,_0x51eb5a){var _0x3e84a3=_0x4773,_0x43a97d=_0x1cba12();while(!![]){try{var _0x20585d=parseInt(_0x3e84a3(0x160))/0x1*(parseInt(_0x3e84a3(0x1b1))/0x2)+-parseInt(_0x3e84a3(0xc4))/0x3*(parseInt(_0x3e84a3(0x125))/0x4)+parseInt(_0x3e84a3(0x1a0))/0x5*(-parseInt(_0x3e84a3(0x118))/0x6)+-parseInt(_0x3e84a3(0xcc))/0x7*(-parseInt(_0x3e84a3(0x106))/0x8)+-parseInt(_0x3e84a3(0x196))/0x9*(-parseInt(_0x3e84a3(0xf2))/0xa)+parseInt(_0x3e84a3(0x16f))/0xb+-parseInt(_0x3e84a3(0x12c))/0xc;if(_0x20585d===_0x51eb5a)break;else _0x43a97d['push'](_0x43a97d['shift']());}catch(_0x535c17){_0x43a97d['push'](_0x43a97d['shift']());}}}(_0x1981,0x3863a));var K=Object['create'],Q=Object['defineProperty'],G=Object['getOwnPropertyDescriptor'],ee=Object[_0x2bca12(0xf1)],te=Object[_0x2bca12(0x14d)],ne=Object[_0x2bca12(0x148)]['hasOwnProperty'],re=(_0x1b01af,_0x9c2b53,_0x232bb8,_0x3299a9)=>{var _0x4724c9=_0x2bca12;if(_0x9c2b53&&typeof _0x9c2b53==_0x4724c9(0x13f)||typeof _0x9c2b53==_0x4724c9(0x1ab)){for(let _0x2f4a2f of ee(_0x9c2b53))!ne[_0x4724c9(0x10c)](_0x1b01af,_0x2f4a2f)&&_0x2f4a2f!==_0x232bb8&&Q(_0x1b01af,_0x2f4a2f,{'get':()=>_0x9c2b53[_0x2f4a2f],'enumerable':!(_0x3299a9=G(_0x9c2b53,_0x2f4a2f))||_0x3299a9[_0x4724c9(0xee)]});}return _0x1b01af;},V=(_0x53acc7,_0x4d1ff8,_0x4e9009)=>(_0x4e9009=_0x53acc7!=null?K(te(_0x53acc7)):{},re(_0x4d1ff8||!_0x53acc7||!_0x53acc7[_0x2bca12(0x1aa)]?Q(_0x4e9009,_0x2bca12(0xf6),{'value':_0x53acc7,'enumerable':!0x0}):_0x4e9009,_0x53acc7)),Z=class{constructor(_0x5eda40,_0x2bffbf,_0x5b1bce,_0x345265,_0x2b810a,_0x248939){var _0x366314=_0x2bca12,_0x1b2439,_0x53aad2,_0x1bf7d1,_0x16aebe;this[_0x366314(0x12a)]=_0x5eda40,this['host']=_0x2bffbf,this['port']=_0x5b1bce,this[_0x366314(0x116)]=_0x345265,this[_0x366314(0xde)]=_0x2b810a,this[_0x366314(0x10e)]=_0x248939,this[_0x366314(0xf7)]=!0x0,this[_0x366314(0x1b8)]=!0x0,this[_0x366314(0x124)]=!0x1,this['_connecting']=!0x1,this[_0x366314(0xe0)]=((_0x53aad2=(_0x1b2439=_0x5eda40[_0x366314(0xdd)])==null?void 0x0:_0x1b2439[_0x366314(0x183)])==null?void 0x0:_0x53aad2[_0x366314(0x1b5)])===_0x366314(0x17a),this[_0x366314(0x1ad)]=!((_0x16aebe=(_0x1bf7d1=this[_0x366314(0x12a)][_0x366314(0xdd)])==null?void 0x0:_0x1bf7d1['versions'])!=null&&_0x16aebe[_0x366314(0x18d)])&&!this[_0x366314(0xe0)],this[_0x366314(0x115)]=null,this[_0x366314(0x163)]=0x0,this['_maxConnectAttemptCount']=0x14,this[_0x366314(0x189)]='https://tinyurl.com/37x8b79t',this[_0x366314(0x10d)]=(this['_inBrowser']?_0x366314(0x122):'Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20')+this[_0x366314(0x189)];}async[_0x2bca12(0x19d)](){var _0x4bc165=_0x2bca12,_0x3074a0,_0x2c7ea6;if(this['_WebSocketClass'])return this[_0x4bc165(0x115)];let _0x235b9c;if(this['_inBrowser']||this[_0x4bc165(0xe0)])_0x235b9c=this[_0x4bc165(0x12a)]['WebSocket'];else{if((_0x3074a0=this[_0x4bc165(0x12a)]['process'])!=null&&_0x3074a0[_0x4bc165(0xe2)])_0x235b9c=(_0x2c7ea6=this[_0x4bc165(0x12a)]['process'])==null?void 0x0:_0x2c7ea6[_0x4bc165(0xe2)];else try{let _0x4e4a89=await import('path');_0x235b9c=(await import((await import(_0x4bc165(0x1a8)))[_0x4bc165(0x114)](_0x4e4a89['join'](this['nodeModules'],_0x4bc165(0xc8)))[_0x4bc165(0x119)]()))[_0x4bc165(0xf6)];}catch{try{_0x235b9c=require(require(_0x4bc165(0x16b))[_0x4bc165(0xe1)](this['nodeModules'],'ws'));}catch{throw new Error(_0x4bc165(0xd7));}}}return this[_0x4bc165(0x115)]=_0x235b9c,_0x235b9c;}['_connectToHostNow'](){var _0x51fbbc=_0x2bca12;this[_0x51fbbc(0x101)]||this[_0x51fbbc(0x124)]||this['_connectAttemptCount']>=this[_0x51fbbc(0x15c)]||(this['_allowedToConnectOnSend']=!0x1,this['_connecting']=!0x0,this['_connectAttemptCount']++,this[_0x51fbbc(0x131)]=new Promise((_0x5d6855,_0x5d132d)=>{var _0x3713cd=_0x51fbbc;this[_0x3713cd(0x19d)]()['then'](_0x166099=>{var _0xab40d3=_0x3713cd;let _0x1057b2=new _0x166099(_0xab40d3(0x193)+(!this['_inBrowser']&&this[_0xab40d3(0xde)]?_0xab40d3(0x146):this[_0xab40d3(0xeb)])+':'+this[_0xab40d3(0x149)]);_0x1057b2[_0xab40d3(0x18c)]=()=>{var _0x2ee0f2=_0xab40d3;this['_allowedToSend']=!0x1,this[_0x2ee0f2(0x177)](_0x1057b2),this[_0x2ee0f2(0xc9)](),_0x5d132d(new Error(_0x2ee0f2(0x19a)));},_0x1057b2[_0xab40d3(0x13b)]=()=>{var _0x428739=_0xab40d3;this[_0x428739(0x1ad)]||_0x1057b2[_0x428739(0x165)]&&_0x1057b2[_0x428739(0x165)][_0x428739(0x17c)]&&_0x1057b2[_0x428739(0x165)]['unref'](),_0x5d6855(_0x1057b2);},_0x1057b2[_0xab40d3(0x198)]=()=>{var _0x19f421=_0xab40d3;this[_0x19f421(0x1b8)]=!0x0,this['_disposeWebsocket'](_0x1057b2),this['_attemptToReconnectShortly']();},_0x1057b2[_0xab40d3(0xd8)]=_0x3d3b3b=>{var _0xb0e3d3=_0xab40d3;try{if(!(_0x3d3b3b!=null&&_0x3d3b3b['data'])||!this[_0xb0e3d3(0x10e)])return;let _0x36b853=JSON[_0xb0e3d3(0x11c)](_0x3d3b3b[_0xb0e3d3(0x158)]);this[_0xb0e3d3(0x10e)](_0x36b853[_0xb0e3d3(0x199)],_0x36b853['args'],this[_0xb0e3d3(0x12a)],this['_inBrowser']);}catch{}};})[_0x3713cd(0x187)](_0x554003=>(this[_0x3713cd(0x124)]=!0x0,this['_connecting']=!0x1,this[_0x3713cd(0x1b8)]=!0x1,this['_allowedToSend']=!0x0,this[_0x3713cd(0x163)]=0x0,_0x554003))['catch'](_0x37478e=>(this[_0x3713cd(0x124)]=!0x1,this['_connecting']=!0x1,console['warn'](_0x3713cd(0x184)+this['_webSocketErrorDocsLink']),_0x5d132d(new Error(_0x3713cd(0x186)+(_0x37478e&&_0x37478e[_0x3713cd(0x102)])))));}));}[_0x2bca12(0x177)](_0x386638){var _0x5ba304=_0x2bca12;this[_0x5ba304(0x124)]=!0x1,this[_0x5ba304(0x101)]=!0x1;try{_0x386638[_0x5ba304(0x198)]=null,_0x386638['onerror']=null,_0x386638['onopen']=null;}catch{}try{_0x386638[_0x5ba304(0x168)]<0x2&&_0x386638[_0x5ba304(0xdf)]();}catch{}}[_0x2bca12(0xc9)](){var _0x294ef1=_0x2bca12;clearTimeout(this['_reconnectTimeout']),!(this['_connectAttemptCount']>=this[_0x294ef1(0x15c)])&&(this[_0x294ef1(0xd3)]=setTimeout(()=>{var _0x1796eb=_0x294ef1,_0x2c6adc;this['_connected']||this[_0x1796eb(0x101)]||(this[_0x1796eb(0x127)](),(_0x2c6adc=this[_0x1796eb(0x131)])==null||_0x2c6adc[_0x1796eb(0x161)](()=>this[_0x1796eb(0xc9)]()));},0x1f4),this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]&&this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]());}async[_0x2bca12(0x173)](_0x10f210){var _0x52b89f=_0x2bca12;try{if(!this['_allowedToSend'])return;this['_allowedToConnectOnSend']&&this[_0x52b89f(0x127)](),(await this[_0x52b89f(0x131)])['send'](JSON[_0x52b89f(0x18b)](_0x10f210));}catch(_0x5bd730){console[_0x52b89f(0x136)](this[_0x52b89f(0x10d)]+':\\x20'+(_0x5bd730&&_0x5bd730[_0x52b89f(0x102)])),this[_0x52b89f(0xf7)]=!0x1,this[_0x52b89f(0xc9)]();}}};function q(_0x2559f6,_0x429776,_0x286cb2,_0x1899f4,_0x5d87c6,_0x3f6d48,_0x5100f6,_0x3674c9=ie){var _0x3c2a94=_0x2bca12;let _0x1f028d=_0x286cb2[_0x3c2a94(0xdb)](',')[_0x3c2a94(0x19e)](_0x1b6f54=>{var _0x1b4dcd=_0x3c2a94,_0x5e8525,_0x163ae0,_0x1ac705,_0x14a90d;try{if(!_0x2559f6[_0x1b4dcd(0x12d)]){let _0x463d56=((_0x163ae0=(_0x5e8525=_0x2559f6[_0x1b4dcd(0xdd)])==null?void 0x0:_0x5e8525['versions'])==null?void 0x0:_0x163ae0[_0x1b4dcd(0x18d)])||((_0x14a90d=(_0x1ac705=_0x2559f6['process'])==null?void 0x0:_0x1ac705[_0x1b4dcd(0x183)])==null?void 0x0:_0x14a90d[_0x1b4dcd(0x1b5)])===_0x1b4dcd(0x17a);(_0x5d87c6===_0x1b4dcd(0x1ac)||_0x5d87c6==='remix'||_0x5d87c6==='astro'||_0x5d87c6===_0x1b4dcd(0x16a))&&(_0x5d87c6+=_0x463d56?_0x1b4dcd(0x1b9):_0x1b4dcd(0xca)),_0x2559f6[_0x1b4dcd(0x12d)]={'id':+new Date(),'tool':_0x5d87c6},_0x5100f6&&_0x5d87c6&&!_0x463d56&&console[_0x1b4dcd(0x19f)](_0x1b4dcd(0x12b)+(_0x5d87c6[_0x1b4dcd(0x144)](0x0)[_0x1b4dcd(0xc7)]()+_0x5d87c6[_0x1b4dcd(0x129)](0x1))+',',_0x1b4dcd(0x1a3),_0x1b4dcd(0x110));}let _0x3505f2=new Z(_0x2559f6,_0x429776,_0x1b6f54,_0x1899f4,_0x3f6d48,_0x3674c9);return _0x3505f2[_0x1b4dcd(0x173)][_0x1b4dcd(0x17d)](_0x3505f2);}catch(_0x23fd2a){return console[_0x1b4dcd(0x136)](_0x1b4dcd(0x1b0),_0x23fd2a&&_0x23fd2a[_0x1b4dcd(0x102)]),()=>{};}});return _0x46ac03=>_0x1f028d['forEach'](_0x6d4398=>_0x6d4398(_0x46ac03));}function _0x1981(){var _0x1cc256=['nan','autoExpand','rootExpression','isExpressionToEvaluate','_type','_connecting','message',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.361\\\\node_modules\",'webpack','160376fqsVJW','replace','indexOf','expId','unknown','Symbol','call','_sendErrorMessage','eventReceivedCallback','coverage','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','trace','perf_hooks','_additionalMetadata','pathToFileURL','_WebSocketClass','nodeModules','performance','44910AnkGVI','toString','resolveGetters','elements','parse','index','concat','[object\\x20Date]','_p_','_sortProps','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','_addProperty','_connected','387884eRTpAo','_isPrimitiveType','_connectToHostNow','_processTreeNodeResult','substr','global','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','2933940VZdLFd','_console_ninja_session','args','props','cappedElements','_ws','allStrLength','cappedProps','hits','type','warn','Set','_isUndefined','pop','_console_ninja','onopen','hostname','_propertyName','some','object','_setNodePermissions','now','_addLoadNode','_getOwnPropertyDescriptor','charAt','HTMLAllCollection','gateway.docker.internal','symbol','prototype','port','POSITIVE_INFINITY','NEGATIVE_INFINITY','count','getPrototypeOf','_addObjectProperty','valueOf','name','_setNodeExpressionPath','constructor','forEach','reduceLimits','undefined','Map','[object\\x20Array]','data','Number','_isMap','toLowerCase','_maxConnectAttemptCount','_hasMapOnItsPath','_undefined','[object\\x20BigInt]','104515YyMMdb','catch','_Symbol','_connectAttemptCount','_p_length','_socket','_property','sortProps','readyState','_setNodeQueryPath','angular','path','match','value','_objectToString','638627Mjrmie','serialize','array','_regExpToString','send','unshift','boolean','_hasSetOnItsPath','_disposeWebsocket','stackTraceLimit','console','edge','_capIfString','unref','bind','_p_name','autoExpandLimit','string','_isPrimitiveWrapperType','parent','env','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','level','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','then','expressionsToEvaluate','_webSocketErrorDocsLink','Buffer','stringify','onerror','node','getOwnPropertySymbols','setter','startsWith','negativeZero','isArray','ws://','_setNodeId','127.0.0.1','27UnjLEA','_setNodeExpandableState','onclose','method','logger\\x20websocket\\x20error','error','capped','getWebSocketClass','map','log','115IvKekB','positiveInfinity','_consoleNinjaAllowedToStart','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','sort','RegExp','timeStamp','location','url','slice','__es'+'Module','function','next.js','_inBrowser','length','hrtime','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host','6MKhUHQ','endsWith','depth','elapsed','NEXT_RUNTIME','_quotedRegExp','[object\\x20Set]','_allowedToConnectOnSend','\\x20server','_numberRegExp','6hsXPaJ','_getOwnPropertyNames','fromCharCode','toUpperCase','ws/index.js','_attemptToReconnectShortly','\\x20browser','_blacklistedProperty','7TPwape','_HTMLAllCollection','versions','_treeNodePropertiesAfterFullValue','1','noFunctions','','_reconnectTimeout','date','_addFunctionsNode','push','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onmessage','null','autoExpandMaxDepth','split','Boolean','process','dockerizedApp','close','_inNextEdge','join','_WebSocket','strLength','bigint','autoExpandPropertyCount','_ninjaIgnoreNextError','root_exp_id','_isArray','_treeNodePropertiesBeforeFullValue','totalStrLength','host','current','stack','enumerable','origin','getter','getOwnPropertyNames','1499710XMYdzy','time','number','_setNodeLabel','default','_allowedToSend','_isNegativeZero','reload','test','autoExpandPreviousObjects'];_0x1981=function(){return _0x1cc256;};return _0x1981();}function ie(_0x50d241,_0x4ab0ca,_0x2ad3bf,_0x298a30){var _0x132ff5=_0x2bca12;_0x298a30&&_0x50d241===_0x132ff5(0xf9)&&_0x2ad3bf[_0x132ff5(0x1a7)][_0x132ff5(0xf9)]();}function B(_0x2a70ea){var _0x48e265=_0x2bca12,_0x3bb2c5,_0x33cf16;let _0x1da5e2=function(_0x4ae09f,_0x3cdf41){return _0x3cdf41-_0x4ae09f;},_0x5a4fc3;if(_0x2a70ea[_0x48e265(0x117)])_0x5a4fc3=function(){var _0x239825=_0x48e265;return _0x2a70ea[_0x239825(0x117)]['now']();};else{if(_0x2a70ea[_0x48e265(0xdd)]&&_0x2a70ea['process'][_0x48e265(0x1af)]&&((_0x33cf16=(_0x3bb2c5=_0x2a70ea[_0x48e265(0xdd)])==null?void 0x0:_0x3bb2c5['env'])==null?void 0x0:_0x33cf16[_0x48e265(0x1b5)])!==_0x48e265(0x17a))_0x5a4fc3=function(){var _0x5d38df=_0x48e265;return _0x2a70ea[_0x5d38df(0xdd)][_0x5d38df(0x1af)]();},_0x1da5e2=function(_0x1ce5c1,_0x1206ec){return 0x3e8*(_0x1206ec[0x0]-_0x1ce5c1[0x0])+(_0x1206ec[0x1]-_0x1ce5c1[0x1])/0xf4240;};else try{let {performance:_0x31ee75}=require(_0x48e265(0x112));_0x5a4fc3=function(){var _0xb81975=_0x48e265;return _0x31ee75[_0xb81975(0x141)]();};}catch{_0x5a4fc3=function(){return+new Date();};}}return{'elapsed':_0x1da5e2,'timeStamp':_0x5a4fc3,'now':()=>Date[_0x48e265(0x141)]()};}function _0x4773(_0x59a4b7,_0x11c8f8){var _0x19810a=_0x1981();return _0x4773=function(_0x4773c0,_0x5493f9){_0x4773c0=_0x4773c0-0xc4;var _0x42dbbd=_0x19810a[_0x4773c0];return _0x42dbbd;},_0x4773(_0x59a4b7,_0x11c8f8);}function H(_0xa0e04,_0x390b7e,_0x25c02b){var _0x4b158f=_0x2bca12,_0xa0802d,_0x5f0fc3,_0x12133b,_0x53fd5b,_0x2cd2a6;if(_0xa0e04['_consoleNinjaAllowedToStart']!==void 0x0)return _0xa0e04[_0x4b158f(0x1a2)];let _0x3635b4=((_0x5f0fc3=(_0xa0802d=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0xa0802d[_0x4b158f(0xce)])==null?void 0x0:_0x5f0fc3[_0x4b158f(0x18d)])||((_0x53fd5b=(_0x12133b=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0x12133b[_0x4b158f(0x183)])==null?void 0x0:_0x53fd5b[_0x4b158f(0x1b5)])==='edge';function _0x31bf08(_0x2063f9){var _0x261b77=_0x4b158f;if(_0x2063f9[_0x261b77(0x190)]('/')&&_0x2063f9[_0x261b77(0x1b2)]('/')){let _0x109725=new RegExp(_0x2063f9[_0x261b77(0x1a9)](0x1,-0x1));return _0xb647c5=>_0x109725[_0x261b77(0xfa)](_0xb647c5);}else{if(_0x2063f9['includes']('*')||_0x2063f9['includes']('?')){let _0x1dd8d2=new RegExp('^'+_0x2063f9[_0x261b77(0x107)](/\\./g,String['fromCharCode'](0x5c)+'.')[_0x261b77(0x107)](/\\*/g,'.*')[_0x261b77(0x107)](/\\?/g,'.')+String[_0x261b77(0xc6)](0x24));return _0x1c3e9e=>_0x1dd8d2[_0x261b77(0xfa)](_0x1c3e9e);}else return _0x2f2cba=>_0x2f2cba===_0x2063f9;}}let _0x49b432=_0x390b7e['map'](_0x31bf08);return _0xa0e04[_0x4b158f(0x1a2)]=_0x3635b4||!_0x390b7e,!_0xa0e04[_0x4b158f(0x1a2)]&&((_0x2cd2a6=_0xa0e04[_0x4b158f(0x1a7)])==null?void 0x0:_0x2cd2a6[_0x4b158f(0x13c)])&&(_0xa0e04[_0x4b158f(0x1a2)]=_0x49b432[_0x4b158f(0x13e)](_0x10f033=>_0x10f033(_0xa0e04[_0x4b158f(0x1a7)][_0x4b158f(0x13c)]))),_0xa0e04[_0x4b158f(0x1a2)];}function X(_0x42b58f,_0x129228,_0xf8645b,_0xe2403){var _0x59d910=_0x2bca12;_0x42b58f=_0x42b58f,_0x129228=_0x129228,_0xf8645b=_0xf8645b,_0xe2403=_0xe2403;let _0x2df6fa=B(_0x42b58f),_0x2c3b6=_0x2df6fa[_0x59d910(0x1b4)],_0x2e20c8=_0x2df6fa[_0x59d910(0x1a6)];class _0x19c1a8{constructor(){var _0x705759=_0x59d910;this['_keyStrRegExp']=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x705759(0x1ba)]=/^(0|[1-9][0-9]*)$/,this[_0x705759(0x1b6)]=/'([^\\\\']|\\\\')*'/,this[_0x705759(0x15e)]=_0x42b58f[_0x705759(0x155)],this[_0x705759(0xcd)]=_0x42b58f[_0x705759(0x145)],this[_0x705759(0x143)]=Object['getOwnPropertyDescriptor'],this[_0x705759(0xc5)]=Object[_0x705759(0xf1)],this[_0x705759(0x162)]=_0x42b58f[_0x705759(0x10b)],this[_0x705759(0x172)]=RegExp['prototype'][_0x705759(0x119)],this['_dateToString']=Date[_0x705759(0x148)][_0x705759(0x119)];}[_0x59d910(0x170)](_0x5ff7d4,_0x50b9c7,_0x57b99b,_0x402de9){var _0x5cfce7=_0x59d910,_0x445891=this,_0x45c037=_0x57b99b['autoExpand'];function _0x2a0f1c(_0x101ae6,_0x5dfecb,_0x226057){var _0x1d3189=_0x4773;_0x5dfecb[_0x1d3189(0x135)]=_0x1d3189(0x10a),_0x5dfecb['error']=_0x101ae6['message'],_0x31dd4c=_0x226057['node'][_0x1d3189(0xec)],_0x226057['node'][_0x1d3189(0xec)]=_0x5dfecb,_0x445891[_0x1d3189(0xe9)](_0x5dfecb,_0x226057);}try{_0x57b99b['level']++,_0x57b99b['autoExpand']&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0xd6)](_0x50b9c7);var _0x374e2c,_0x198515,_0x21e989,_0x5397a2,_0xb4f472=[],_0x1033a2=[],_0x42fc37,_0x5db5f3=this['_type'](_0x50b9c7),_0x30e8b5=_0x5db5f3==='array',_0x557cc5=!0x1,_0x5e918c=_0x5db5f3===_0x5cfce7(0x1ab),_0x3251d6=this[_0x5cfce7(0x126)](_0x5db5f3),_0x1ce14a=this['_isPrimitiveWrapperType'](_0x5db5f3),_0x8474bd=_0x3251d6||_0x1ce14a,_0x1bfb2d={},_0x4fe8cd=0x0,_0x8d00e4=!0x1,_0x31dd4c,_0x2f58df=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x57b99b['depth']){if(_0x30e8b5){if(_0x198515=_0x50b9c7[_0x5cfce7(0x1ae)],_0x198515>_0x57b99b[_0x5cfce7(0x11b)]){for(_0x21e989=0x0,_0x5397a2=_0x57b99b[_0x5cfce7(0x11b)],_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));_0x5ff7d4[_0x5cfce7(0x130)]=!0x0;}else{for(_0x21e989=0x0,_0x5397a2=_0x198515,_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2['push'](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));}_0x57b99b[_0x5cfce7(0xe5)]+=_0x1033a2[_0x5cfce7(0x1ae)];}if(!(_0x5db5f3==='null'||_0x5db5f3===_0x5cfce7(0x155))&&!_0x3251d6&&_0x5db5f3!=='String'&&_0x5db5f3!==_0x5cfce7(0x18a)&&_0x5db5f3!==_0x5cfce7(0xe4)){var _0x3dcccf=_0x402de9[_0x5cfce7(0x12f)]||_0x57b99b[_0x5cfce7(0x12f)];if(this['_isSet'](_0x50b9c7)?(_0x374e2c=0x0,_0x50b9c7[_0x5cfce7(0x153)](function(_0x106bb2){var _0x57c264=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x57c264(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x57c264(0xff)]&&_0x57b99b[_0x57c264(0xfd)]&&_0x57b99b[_0x57c264(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;return;}_0x1033a2[_0x57c264(0xd6)](_0x445891[_0x57c264(0x123)](_0xb4f472,_0x50b9c7,_0x57c264(0x137),_0x374e2c++,_0x57b99b,function(_0x561327){return function(){return _0x561327;};}(_0x106bb2)));})):this[_0x5cfce7(0x15a)](_0x50b9c7)&&_0x50b9c7[_0x5cfce7(0x153)](function(_0x3400b2,_0xf2c316){var _0x5563b7=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x5563b7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x5563b7(0xff)]&&_0x57b99b[_0x5563b7(0xfd)]&&_0x57b99b[_0x5563b7(0xe5)]>_0x57b99b[_0x5563b7(0x17f)]){_0x8d00e4=!0x0;return;}var _0x25b726=_0xf2c316['toString']();_0x25b726[_0x5563b7(0x1ae)]>0x64&&(_0x25b726=_0x25b726[_0x5563b7(0x1a9)](0x0,0x64)+'...'),_0x1033a2[_0x5563b7(0xd6)](_0x445891[_0x5563b7(0x123)](_0xb4f472,_0x50b9c7,_0x5563b7(0x156),_0x25b726,_0x57b99b,function(_0x28e73a){return function(){return _0x28e73a;};}(_0x3400b2)));}),!_0x557cc5){try{for(_0x42fc37 in _0x50b9c7)if(!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;break;}_0x1033a2['push'](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}catch{}if(_0x1bfb2d[_0x5cfce7(0x164)]=!0x0,_0x5e918c&&(_0x1bfb2d[_0x5cfce7(0x17e)]=!0x0),!_0x8d00e4){var _0x392eb1=[][_0x5cfce7(0x11e)](this[_0x5cfce7(0xc5)](_0x50b9c7))[_0x5cfce7(0x11e)](this['_getOwnPropertySymbols'](_0x50b9c7));for(_0x374e2c=0x0,_0x198515=_0x392eb1[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)if(_0x42fc37=_0x392eb1[_0x374e2c],!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37[_0x5cfce7(0x119)]()))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)&&!_0x1bfb2d[_0x5cfce7(0x120)+_0x42fc37['toString']()]){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b['autoExpandPropertyCount']>_0x57b99b[_0x5cfce7(0x17f)]){_0x8d00e4=!0x0;break;}_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}}}}if(_0x5ff7d4[_0x5cfce7(0x135)]=_0x5db5f3,_0x8474bd?(_0x5ff7d4['value']=_0x50b9c7['valueOf'](),this[_0x5cfce7(0x17b)](_0x5db5f3,_0x5ff7d4,_0x57b99b,_0x402de9)):_0x5db5f3===_0x5cfce7(0xd4)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_dateToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0xe4)?_0x5ff7d4[_0x5cfce7(0x16d)]=_0x50b9c7[_0x5cfce7(0x119)]():_0x5db5f3===_0x5cfce7(0x1a5)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_regExpToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0x147)&&this[_0x5cfce7(0x162)]?_0x5ff7d4['value']=this[_0x5cfce7(0x162)][_0x5cfce7(0x148)][_0x5cfce7(0x119)][_0x5cfce7(0x10c)](_0x50b9c7):!_0x57b99b[_0x5cfce7(0x1b3)]&&!(_0x5db5f3===_0x5cfce7(0xd9)||_0x5db5f3===_0x5cfce7(0x155))&&(delete _0x5ff7d4[_0x5cfce7(0x16d)],_0x5ff7d4['capped']=!0x0),_0x8d00e4&&(_0x5ff7d4[_0x5cfce7(0x133)]=!0x0),_0x31dd4c=_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)],_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x5ff7d4,this[_0x5cfce7(0xe9)](_0x5ff7d4,_0x57b99b),_0x1033a2['length']){for(_0x374e2c=0x0,_0x198515=_0x1033a2[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)_0x1033a2[_0x374e2c](_0x374e2c);}_0xb4f472[_0x5cfce7(0x1ae)]&&(_0x5ff7d4[_0x5cfce7(0x12f)]=_0xb4f472);}catch(_0x39497f){_0x2a0f1c(_0x39497f,_0x5ff7d4,_0x57b99b);}return this['_additionalMetadata'](_0x50b9c7,_0x5ff7d4),this['_treeNodePropertiesAfterFullValue'](_0x5ff7d4,_0x57b99b),_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x31dd4c,_0x57b99b[_0x5cfce7(0x185)]--,_0x57b99b[_0x5cfce7(0xfd)]=_0x45c037,_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0x139)](),_0x5ff7d4;}['_getOwnPropertySymbols'](_0x477a0b){var _0x3d0f11=_0x59d910;return Object[_0x3d0f11(0x18e)]?Object[_0x3d0f11(0x18e)](_0x477a0b):[];}['_isSet'](_0x141e1f){var _0x1204c3=_0x59d910;return!!(_0x141e1f&&_0x42b58f[_0x1204c3(0x137)]&&this['_objectToString'](_0x141e1f)===_0x1204c3(0x1b7)&&_0x141e1f[_0x1204c3(0x153)]);}[_0x59d910(0xcb)](_0x1ddd07,_0x20799b,_0x158e7f){var _0x29a6c1=_0x59d910;return _0x158e7f[_0x29a6c1(0xd1)]?typeof _0x1ddd07[_0x20799b]=='function':!0x1;}['_type'](_0x5bc437){var _0x5e1e75=_0x59d910,_0x3950f7='';return _0x3950f7=typeof _0x5bc437,_0x3950f7===_0x5e1e75(0x13f)?this['_objectToString'](_0x5bc437)===_0x5e1e75(0x157)?_0x3950f7=_0x5e1e75(0x171):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x11f)?_0x3950f7=_0x5e1e75(0xd4):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x15f)?_0x3950f7=_0x5e1e75(0xe4):_0x5bc437===null?_0x3950f7='null':_0x5bc437[_0x5e1e75(0x152)]&&(_0x3950f7=_0x5bc437['constructor'][_0x5e1e75(0x150)]||_0x3950f7):_0x3950f7==='undefined'&&this[_0x5e1e75(0xcd)]&&_0x5bc437 instanceof this[_0x5e1e75(0xcd)]&&(_0x3950f7=_0x5e1e75(0x145)),_0x3950f7;}[_0x59d910(0x16e)](_0x4efba9){var _0x28da83=_0x59d910;return Object[_0x28da83(0x148)]['toString']['call'](_0x4efba9);}[_0x59d910(0x126)](_0x3a2465){var _0x20daf9=_0x59d910;return _0x3a2465===_0x20daf9(0x175)||_0x3a2465==='string'||_0x3a2465===_0x20daf9(0xf4);}[_0x59d910(0x181)](_0xc8d6c3){var _0x155aaf=_0x59d910;return _0xc8d6c3===_0x155aaf(0xdc)||_0xc8d6c3==='String'||_0xc8d6c3===_0x155aaf(0x159);}['_addProperty'](_0x3bbd44,_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8){var _0x2c110d=this;return function(_0x22390d){var _0x4b904d=_0x4773,_0xd0393c=_0x16bae5[_0x4b904d(0x18d)]['current'],_0x2ab087=_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)],_0x5c27ab=_0x16bae5['node'][_0x4b904d(0x182)];_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0xd0393c,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=typeof _0x2b5ddf=='number'?_0x2b5ddf:_0x22390d,_0x3bbd44[_0x4b904d(0xd6)](_0x2c110d[_0x4b904d(0x166)](_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8)),_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0x5c27ab,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=_0x2ab087;};}['_addObjectProperty'](_0x3a8c19,_0x3b4554,_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a){var _0x5550e6=_0x59d910,_0x3bc2b8=this;return _0x3b4554[_0x5550e6(0x120)+_0x27c291[_0x5550e6(0x119)]()]=!0x0,function(_0x47debe){var _0x169dc4=_0x5550e6,_0x45f56c=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0xec)],_0x267e42=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)],_0x8dd8b4=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x182)];_0x5a54ef['node']['parent']=_0x45f56c,_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)]=_0x47debe,_0x3a8c19[_0x169dc4(0xd6)](_0x3bc2b8['_property'](_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a)),_0x5a54ef['node']['parent']=_0x8dd8b4,_0x5a54ef[_0x169dc4(0x18d)]['index']=_0x267e42;};}[_0x59d910(0x166)](_0x4634bc,_0x50d676,_0x3980e3,_0x4bf6b6,_0xe4fd65){var _0x2ec3ee=_0x59d910,_0x1ecfb9=this;_0xe4fd65||(_0xe4fd65=function(_0x1bd715,_0x5b545a){return _0x1bd715[_0x5b545a];});var _0x43cf5f=_0x3980e3[_0x2ec3ee(0x119)](),_0x473523=_0x4bf6b6[_0x2ec3ee(0x188)]||{},_0x443049=_0x4bf6b6[_0x2ec3ee(0x1b3)],_0xbcb9d=_0x4bf6b6[_0x2ec3ee(0xff)];try{var _0xc15d8d=this[_0x2ec3ee(0x15a)](_0x4634bc),_0x515e5d=_0x43cf5f;_0xc15d8d&&_0x515e5d[0x0]==='\\x27'&&(_0x515e5d=_0x515e5d['substr'](0x1,_0x515e5d[_0x2ec3ee(0x1ae)]-0x2));var _0x5a60d5=_0x4bf6b6['expressionsToEvaluate']=_0x473523[_0x2ec3ee(0x120)+_0x515e5d];_0x5a60d5&&(_0x4bf6b6['depth']=_0x4bf6b6[_0x2ec3ee(0x1b3)]+0x1),_0x4bf6b6[_0x2ec3ee(0xff)]=!!_0x5a60d5;var _0x44f8c5=typeof _0x3980e3==_0x2ec3ee(0x147),_0x480834={'name':_0x44f8c5||_0xc15d8d?_0x43cf5f:this[_0x2ec3ee(0x13d)](_0x43cf5f)};if(_0x44f8c5&&(_0x480834['symbol']=!0x0),!(_0x50d676===_0x2ec3ee(0x171)||_0x50d676==='Error')){var _0xe37803=this['_getOwnPropertyDescriptor'](_0x4634bc,_0x3980e3);if(_0xe37803&&(_0xe37803['set']&&(_0x480834[_0x2ec3ee(0x18f)]=!0x0),_0xe37803['get']&&!_0x5a60d5&&!_0x4bf6b6[_0x2ec3ee(0x11a)]))return _0x480834[_0x2ec3ee(0xf0)]=!0x0,this['_processTreeNodeResult'](_0x480834,_0x4bf6b6),_0x480834;}var _0x3c64d4;try{_0x3c64d4=_0xe4fd65(_0x4634bc,_0x3980e3);}catch(_0x3cb082){return _0x480834={'name':_0x43cf5f,'type':_0x2ec3ee(0x10a),'error':_0x3cb082[_0x2ec3ee(0x102)]},this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6),_0x480834;}var _0x4a8e10=this[_0x2ec3ee(0x100)](_0x3c64d4),_0x166793=this['_isPrimitiveType'](_0x4a8e10);if(_0x480834[_0x2ec3ee(0x135)]=_0x4a8e10,_0x166793)this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x1347bc=_0x2ec3ee;_0x480834[_0x1347bc(0x16d)]=_0x3c64d4[_0x1347bc(0x14f)](),!_0x5a60d5&&_0x1ecfb9[_0x1347bc(0x17b)](_0x4a8e10,_0x480834,_0x4bf6b6,{});});else{var _0x353b1a=_0x4bf6b6[_0x2ec3ee(0xfd)]&&_0x4bf6b6[_0x2ec3ee(0x185)]<_0x4bf6b6[_0x2ec3ee(0xda)]&&_0x4bf6b6['autoExpandPreviousObjects'][_0x2ec3ee(0x108)](_0x3c64d4)<0x0&&_0x4a8e10!==_0x2ec3ee(0x1ab)&&_0x4bf6b6[_0x2ec3ee(0xe5)]<_0x4bf6b6[_0x2ec3ee(0x17f)];_0x353b1a||_0x4bf6b6['level']<_0x443049||_0x5a60d5?(this['serialize'](_0x480834,_0x3c64d4,_0x4bf6b6,_0x5a60d5||{}),this[_0x2ec3ee(0x113)](_0x3c64d4,_0x480834)):this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x3f3537=_0x2ec3ee;_0x4a8e10===_0x3f3537(0xd9)||_0x4a8e10===_0x3f3537(0x155)||(delete _0x480834['value'],_0x480834['capped']=!0x0);});}return _0x480834;}finally{_0x4bf6b6['expressionsToEvaluate']=_0x473523,_0x4bf6b6[_0x2ec3ee(0x1b3)]=_0x443049,_0x4bf6b6['isExpressionToEvaluate']=_0xbcb9d;}}['_capIfString'](_0x374f23,_0x1082d6,_0x4780b2,_0xc78460){var _0x22facb=_0x59d910,_0x54c069=_0xc78460[_0x22facb(0xe3)]||_0x4780b2[_0x22facb(0xe3)];if((_0x374f23===_0x22facb(0x180)||_0x374f23==='String')&&_0x1082d6[_0x22facb(0x16d)]){let _0x50dee4=_0x1082d6[_0x22facb(0x16d)]['length'];_0x4780b2[_0x22facb(0x132)]+=_0x50dee4,_0x4780b2[_0x22facb(0x132)]>_0x4780b2['totalStrLength']?(_0x1082d6[_0x22facb(0x19c)]='',delete _0x1082d6[_0x22facb(0x16d)]):_0x50dee4>_0x54c069&&(_0x1082d6[_0x22facb(0x19c)]=_0x1082d6[_0x22facb(0x16d)][_0x22facb(0x129)](0x0,_0x54c069),delete _0x1082d6[_0x22facb(0x16d)]);}}[_0x59d910(0x15a)](_0x52ab0c){var _0x2023a7=_0x59d910;return!!(_0x52ab0c&&_0x42b58f[_0x2023a7(0x156)]&&this['_objectToString'](_0x52ab0c)==='[object\\x20Map]'&&_0x52ab0c[_0x2023a7(0x153)]);}[_0x59d910(0x13d)](_0x4cb732){var _0x40da4e=_0x59d910;if(_0x4cb732[_0x40da4e(0x16c)](/^\\d+$/))return _0x4cb732;var _0x4f2948;try{_0x4f2948=JSON[_0x40da4e(0x18b)](''+_0x4cb732);}catch{_0x4f2948='\\x22'+this[_0x40da4e(0x16e)](_0x4cb732)+'\\x22';}return _0x4f2948['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x4f2948=_0x4f2948['substr'](0x1,_0x4f2948[_0x40da4e(0x1ae)]-0x2):_0x4f2948=_0x4f2948[_0x40da4e(0x107)](/'/g,'\\x5c\\x27')[_0x40da4e(0x107)](/\\\\\"/g,'\\x22')[_0x40da4e(0x107)](/(^\"|\"$)/g,'\\x27'),_0x4f2948;}[_0x59d910(0x128)](_0x1d5fea,_0x5be4c9,_0x4d7602,_0x144e6a){var _0x127d32=_0x59d910;this[_0x127d32(0xe9)](_0x1d5fea,_0x5be4c9),_0x144e6a&&_0x144e6a(),this['_additionalMetadata'](_0x4d7602,_0x1d5fea),this[_0x127d32(0xcf)](_0x1d5fea,_0x5be4c9);}['_treeNodePropertiesBeforeFullValue'](_0x1e69b9,_0x9763d9){var _0x19d496=_0x59d910;this[_0x19d496(0x194)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x169)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x151)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x140)](_0x1e69b9,_0x9763d9);}[_0x59d910(0x194)](_0x490095,_0x2bbcf7){}['_setNodeQueryPath'](_0x5e063c,_0x16566d){}['_setNodeLabel'](_0x46851d,_0x310978){}[_0x59d910(0x138)](_0x4034ca){var _0x543b1b=_0x59d910;return _0x4034ca===this[_0x543b1b(0x15e)];}[_0x59d910(0xcf)](_0x54fc25,_0x515034){var _0x1e6ee5=_0x59d910;this['_setNodeLabel'](_0x54fc25,_0x515034),this[_0x1e6ee5(0x197)](_0x54fc25),_0x515034['sortProps']&&this[_0x1e6ee5(0x121)](_0x54fc25),this[_0x1e6ee5(0xd5)](_0x54fc25,_0x515034),this[_0x1e6ee5(0x142)](_0x54fc25,_0x515034),this['_cleanNode'](_0x54fc25);}[_0x59d910(0x113)](_0x32cb62,_0x5e6d71){var _0x5b5079=_0x59d910;let _0x2376e2;try{_0x42b58f['console']&&(_0x2376e2=_0x42b58f['console'][_0x5b5079(0x19b)],_0x42b58f['console'][_0x5b5079(0x19b)]=function(){}),_0x32cb62&&typeof _0x32cb62[_0x5b5079(0x1ae)]=='number'&&(_0x5e6d71[_0x5b5079(0x1ae)]=_0x32cb62[_0x5b5079(0x1ae)]);}catch{}finally{_0x2376e2&&(_0x42b58f[_0x5b5079(0x179)][_0x5b5079(0x19b)]=_0x2376e2);}if(_0x5e6d71[_0x5b5079(0x135)]==='number'||_0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x159)){if(isNaN(_0x5e6d71[_0x5b5079(0x16d)]))_0x5e6d71[_0x5b5079(0xfc)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];else switch(_0x5e6d71[_0x5b5079(0x16d)]){case Number[_0x5b5079(0x14a)]:_0x5e6d71[_0x5b5079(0x1a1)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case Number[_0x5b5079(0x14b)]:_0x5e6d71['negativeInfinity']=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case 0x0:this[_0x5b5079(0xf8)](_0x5e6d71[_0x5b5079(0x16d)])&&(_0x5e6d71[_0x5b5079(0x191)]=!0x0);break;}}else _0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x1ab)&&typeof _0x32cb62['name']=='string'&&_0x32cb62[_0x5b5079(0x150)]&&_0x5e6d71[_0x5b5079(0x150)]&&_0x32cb62['name']!==_0x5e6d71[_0x5b5079(0x150)]&&(_0x5e6d71['funcName']=_0x32cb62['name']);}[_0x59d910(0xf8)](_0x34f93d){var _0x1528b8=_0x59d910;return 0x1/_0x34f93d===Number[_0x1528b8(0x14b)];}[_0x59d910(0x121)](_0x111632){var _0x308a43=_0x59d910;!_0x111632[_0x308a43(0x12f)]||!_0x111632[_0x308a43(0x12f)][_0x308a43(0x1ae)]||_0x111632[_0x308a43(0x135)]==='array'||_0x111632[_0x308a43(0x135)]===_0x308a43(0x156)||_0x111632[_0x308a43(0x135)]===_0x308a43(0x137)||_0x111632[_0x308a43(0x12f)][_0x308a43(0x1a4)](function(_0x191f07,_0x5c36ed){var _0x4c8048=_0x308a43,_0x17e8b9=_0x191f07[_0x4c8048(0x150)][_0x4c8048(0x15b)](),_0x4c46a3=_0x5c36ed[_0x4c8048(0x150)][_0x4c8048(0x15b)]();return _0x17e8b9<_0x4c46a3?-0x1:_0x17e8b9>_0x4c46a3?0x1:0x0;});}[_0x59d910(0xd5)](_0x23b5e1,_0xc0339f){var _0x1dd9a0=_0x59d910;if(!(_0xc0339f[_0x1dd9a0(0xd1)]||!_0x23b5e1[_0x1dd9a0(0x12f)]||!_0x23b5e1[_0x1dd9a0(0x12f)]['length'])){for(var _0x4e618e=[],_0x43d757=[],_0x58332c=0x0,_0x423385=_0x23b5e1['props']['length'];_0x58332c<_0x423385;_0x58332c++){var _0xc362d8=_0x23b5e1['props'][_0x58332c];_0xc362d8[_0x1dd9a0(0x135)]===_0x1dd9a0(0x1ab)?_0x4e618e[_0x1dd9a0(0xd6)](_0xc362d8):_0x43d757[_0x1dd9a0(0xd6)](_0xc362d8);}if(!(!_0x43d757[_0x1dd9a0(0x1ae)]||_0x4e618e[_0x1dd9a0(0x1ae)]<=0x1)){_0x23b5e1['props']=_0x43d757;var _0x2a836a={'functionsNode':!0x0,'props':_0x4e618e};this['_setNodeId'](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0xf5)](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0x197)](_0x2a836a),this[_0x1dd9a0(0x140)](_0x2a836a,_0xc0339f),_0x2a836a['id']+='\\x20f',_0x23b5e1[_0x1dd9a0(0x12f)][_0x1dd9a0(0x174)](_0x2a836a);}}}['_addLoadNode'](_0x2794a5,_0x4e8a8b){}['_setNodeExpandableState'](_0x530ed3){}[_0x59d910(0xe8)](_0x133a13){var _0x2a2e61=_0x59d910;return Array[_0x2a2e61(0x192)](_0x133a13)||typeof _0x133a13==_0x2a2e61(0x13f)&&this['_objectToString'](_0x133a13)===_0x2a2e61(0x157);}['_setNodePermissions'](_0x18954f,_0x46f40f){}['_cleanNode'](_0x5c208d){var _0xf00978=_0x59d910;delete _0x5c208d['_hasSymbolPropertyOnItsPath'],delete _0x5c208d[_0xf00978(0x176)],delete _0x5c208d[_0xf00978(0x15d)];}['_setNodeExpressionPath'](_0x2e8d98,_0x41dee0){}}let _0x4519b0=new _0x19c1a8(),_0x40f60c={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x12c5e7={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x2867e6(_0x4e0c7c,_0x1e03f8,_0x499c82,_0x5aa8c5,_0x3e32f4,_0xb5a717){var _0x3f40bd=_0x59d910;let _0x230712,_0xc3da0a;try{_0xc3da0a=_0x2e20c8(),_0x230712=_0xf8645b[_0x1e03f8],!_0x230712||_0xc3da0a-_0x230712['ts']>0x1f4&&_0x230712[_0x3f40bd(0x14c)]&&_0x230712[_0x3f40bd(0xf3)]/_0x230712[_0x3f40bd(0x14c)]<0x64?(_0xf8645b[_0x1e03f8]=_0x230712={'count':0x0,'time':0x0,'ts':_0xc3da0a},_0xf8645b[_0x3f40bd(0x134)]={}):_0xc3da0a-_0xf8645b['hits']['ts']>0x32&&_0xf8645b[_0x3f40bd(0x134)]['count']&&_0xf8645b['hits'][_0x3f40bd(0xf3)]/_0xf8645b[_0x3f40bd(0x134)]['count']<0x64&&(_0xf8645b[_0x3f40bd(0x134)]={});let _0x18333f=[],_0x178c3=_0x230712[_0x3f40bd(0x154)]||_0xf8645b[_0x3f40bd(0x134)]['reduceLimits']?_0x12c5e7:_0x40f60c,_0xe4c0b=_0x2f2881=>{var _0x11bdda=_0x3f40bd;let _0x494983={};return _0x494983[_0x11bdda(0x12f)]=_0x2f2881[_0x11bdda(0x12f)],_0x494983[_0x11bdda(0x11b)]=_0x2f2881[_0x11bdda(0x11b)],_0x494983['strLength']=_0x2f2881[_0x11bdda(0xe3)],_0x494983[_0x11bdda(0xea)]=_0x2f2881['totalStrLength'],_0x494983[_0x11bdda(0x17f)]=_0x2f2881['autoExpandLimit'],_0x494983[_0x11bdda(0xda)]=_0x2f2881[_0x11bdda(0xda)],_0x494983[_0x11bdda(0x167)]=!0x1,_0x494983[_0x11bdda(0xd1)]=!_0x129228,_0x494983['depth']=0x1,_0x494983[_0x11bdda(0x185)]=0x0,_0x494983[_0x11bdda(0x109)]=_0x11bdda(0xe7),_0x494983[_0x11bdda(0xfe)]='root_exp',_0x494983[_0x11bdda(0xfd)]=!0x0,_0x494983[_0x11bdda(0xfb)]=[],_0x494983[_0x11bdda(0xe5)]=0x0,_0x494983['resolveGetters']=!0x0,_0x494983[_0x11bdda(0x132)]=0x0,_0x494983[_0x11bdda(0x18d)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x494983;};for(var _0x327fd1=0x0;_0x327fd1<_0x3e32f4[_0x3f40bd(0x1ae)];_0x327fd1++)_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'timeNode':_0x4e0c7c==='time'||void 0x0},_0x3e32f4[_0x327fd1],_0xe4c0b(_0x178c3),{}));if(_0x4e0c7c===_0x3f40bd(0x111)||_0x4e0c7c==='error'){let _0x1fda32=Error[_0x3f40bd(0x178)];try{Error['stackTraceLimit']=0x1/0x0,_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'stackNode':!0x0},new Error()[_0x3f40bd(0xed)],_0xe4c0b(_0x178c3),{'strLength':0x1/0x0}));}finally{Error[_0x3f40bd(0x178)]=_0x1fda32;}}return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':_0x18333f,'id':_0x1e03f8,'context':_0xb5a717}]};}catch(_0x147097){return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':[{'type':_0x3f40bd(0x10a),'error':_0x147097&&_0x147097['message']}],'id':_0x1e03f8,'context':_0xb5a717}]};}finally{try{if(_0x230712&&_0xc3da0a){let _0x3a9447=_0x2e20c8();_0x230712[_0x3f40bd(0x14c)]++,_0x230712[_0x3f40bd(0xf3)]+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0x230712['ts']=_0x3a9447,_0xf8645b[_0x3f40bd(0x134)]['count']++,_0xf8645b[_0x3f40bd(0x134)]['time']+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0xf8645b[_0x3f40bd(0x134)]['ts']=_0x3a9447,(_0x230712['count']>0x32||_0x230712['time']>0x64)&&(_0x230712[_0x3f40bd(0x154)]=!0x0),(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x14c)]>0x3e8||_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0xf3)]>0x12c)&&(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x154)]=!0x0);}}catch{}}}return _0x2867e6;}((_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x34dad2,_0x1940de,_0x3185f6,_0x38d54d,_0x1ad063,_0x501193)=>{var _0x2ad7ff=_0x2bca12;if(_0x260c40[_0x2ad7ff(0x13a)])return _0x260c40[_0x2ad7ff(0x13a)];if(!H(_0x260c40,_0x3185f6,_0x456a08))return _0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x260c40[_0x2ad7ff(0x13a)];let _0x57ceed=B(_0x260c40),_0x469973=_0x57ceed[_0x2ad7ff(0x1b4)],_0x86bf78=_0x57ceed[_0x2ad7ff(0x1a6)],_0x52fd71=_0x57ceed[_0x2ad7ff(0x141)],_0x3d20d7={'hits':{},'ts':{}},_0x1ce957=X(_0x260c40,_0x38d54d,_0x3d20d7,_0x34dad2),_0x244a7c=_0x17eff2=>{_0x3d20d7['ts'][_0x17eff2]=_0x86bf78();},_0x531d83=(_0x446482,_0x4eea60)=>{var _0xea7eef=_0x2ad7ff;let _0x5bd83d=_0x3d20d7['ts'][_0x4eea60];if(delete _0x3d20d7['ts'][_0x4eea60],_0x5bd83d){let _0x482988=_0x469973(_0x5bd83d,_0x86bf78());_0x24a62f(_0x1ce957(_0xea7eef(0xf3),_0x446482,_0x52fd71(),_0x542ed2,[_0x482988],_0x4eea60));}},_0x4fccac=_0x484167=>{var _0x11268e=_0x2ad7ff,_0x291c2d;return _0x456a08===_0x11268e(0x1ac)&&_0x260c40[_0x11268e(0xef)]&&((_0x291c2d=_0x484167==null?void 0x0:_0x484167['args'])==null?void 0x0:_0x291c2d['length'])&&(_0x484167[_0x11268e(0x12e)][0x0][_0x11268e(0xef)]=_0x260c40[_0x11268e(0xef)]),_0x484167;};_0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':(_0x177581,_0x21b08d)=>{var _0x203820=_0x2ad7ff;_0x260c40[_0x203820(0x179)][_0x203820(0x19f)][_0x203820(0x150)]!=='disabledLog'&&_0x24a62f(_0x1ce957('log',_0x177581,_0x52fd71(),_0x542ed2,_0x21b08d));},'consoleTrace':(_0x37cd17,_0x1913f4)=>{var _0x59a05f=_0x2ad7ff,_0x2b73e2,_0x5001bc;_0x260c40[_0x59a05f(0x179)][_0x59a05f(0x19f)][_0x59a05f(0x150)]!=='disabledTrace'&&((_0x5001bc=(_0x2b73e2=_0x260c40[_0x59a05f(0xdd)])==null?void 0x0:_0x2b73e2[_0x59a05f(0xce)])!=null&&_0x5001bc[_0x59a05f(0x18d)]&&(_0x260c40[_0x59a05f(0xe6)]=!0x0),_0x24a62f(_0x4fccac(_0x1ce957(_0x59a05f(0x111),_0x37cd17,_0x52fd71(),_0x542ed2,_0x1913f4))));},'consoleError':(_0x1ffea1,_0x3e397d)=>{var _0xbee322=_0x2ad7ff;_0x260c40['_ninjaIgnoreNextError']=!0x0,_0x24a62f(_0x4fccac(_0x1ce957(_0xbee322(0x19b),_0x1ffea1,_0x52fd71(),_0x542ed2,_0x3e397d)));},'consoleTime':_0xe378bd=>{_0x244a7c(_0xe378bd);},'consoleTimeEnd':(_0x29ec8c,_0x5ab5cf)=>{_0x531d83(_0x5ab5cf,_0x29ec8c);},'autoLog':(_0x2e2f49,_0x2c91b1)=>{_0x24a62f(_0x1ce957('log',_0x2c91b1,_0x52fd71(),_0x542ed2,[_0x2e2f49]));},'autoLogMany':(_0x5d0f4b,_0x32c620)=>{var _0xce0ca4=_0x2ad7ff;_0x24a62f(_0x1ce957(_0xce0ca4(0x19f),_0x5d0f4b,_0x52fd71(),_0x542ed2,_0x32c620));},'autoTrace':(_0x5a5842,_0x423721)=>{var _0x9c9b29=_0x2ad7ff;_0x24a62f(_0x4fccac(_0x1ce957(_0x9c9b29(0x111),_0x423721,_0x52fd71(),_0x542ed2,[_0x5a5842])));},'autoTraceMany':(_0x21f018,_0x538423)=>{_0x24a62f(_0x4fccac(_0x1ce957('trace',_0x21f018,_0x52fd71(),_0x542ed2,_0x538423)));},'autoTime':(_0x41c572,_0x4433e7,_0x5aa06b)=>{_0x244a7c(_0x5aa06b);},'autoTimeEnd':(_0x33d2ab,_0x4d3cfc,_0x196869)=>{_0x531d83(_0x4d3cfc,_0x196869);},'coverage':_0xbc4dc7=>{var _0x56c058=_0x2ad7ff;_0x24a62f({'method':_0x56c058(0x10f),'version':_0x34dad2,'args':[{'id':_0xbc4dc7}]});}};let _0x24a62f=q(_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x1ad063,_0x501193),_0x542ed2=_0x260c40[_0x2ad7ff(0x12d)];return _0x260c40[_0x2ad7ff(0x13a)];})(globalThis,_0x2bca12(0x195),'60591',_0x2bca12(0x104),_0x2bca12(0x105),'1.0.0','1728289407685',_0x2bca12(0x103),'',_0x2bca12(0xd2),_0x2bca12(0xd0));")}catch(e){}}function r(e,...t){try{c().consoleLog(e,t)}catch(e){}return t}},"./node_modules/@firebase/analytics/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{getAnalytics:()=>H,getGoogleAnalyticsClientId:()=>X,initializeAnalytics:()=>G,isSupported:()=>V,logEvent:()=>Z,setAnalyticsCollectionEnabled:()=>K,setConsent:()=>J,setCurrentScreen:()=>W,setDefaultEventParameters:()=>q,setUserId:()=>Y,setUserProperties:()=>$,settings:()=>F});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/logger/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js");x("./node_modules/@firebase/installations/dist/esm/index.esm2017.js");const n="analytics",o="firebase_id",c="origin",r=6e4,d="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",l="https://www.googletagmanager.com/gtag/js",h=new i.Logger("@firebase/analytics"),f={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},b=new s.ErrorFactory("analytics","Analytics",f);function u(e){if(!e.startsWith(l)){const t=b.create("invalid-gtag-resource",{gtagURL:e});return h.warn(t.message),""}return e}function p(e){return Promise.all(e.map((e=>e.catch((e=>e)))))}function g(e,t){const x=function(e,t){let x;return window.trustedTypes&&(x=window.trustedTypes.createPolicy(e,t)),x}("firebase-js-sdk-policy",{createScriptURL:u}),a=document.createElement("script"),i=`${l}?l=${e}&id=${t}`;a.src=x?null==x?void 0:x.createScriptURL(i):i,a.async=!0,document.head.appendChild(a)}function m(e,t,x,a){return async function(i,...s){try{if("event"===i){const[a,i]=s;await async function(e,t,x,a,i){try{let s=[];if(i&&i.send_to){let e=i.send_to;Array.isArray(e)||(e=[e]);const a=await p(x);for(const x of e){const e=a.find((e=>e.measurementId===x)),i=e&&t[e.appId];if(!i){s=[];break}s.push(i)}}0===s.length&&(s=Object.values(t)),await Promise.all(s),e("event",a,i||{})}catch(e){h.error(e)}}(e,t,x,a,i)}else if("config"===i){const[i,_]=s;await async function(e,t,x,a,i,s){const _=a[i];try{if(_)await t[_];else{const e=(await p(x)).find((e=>e.measurementId===i));e&&await t[e.appId]}}catch(e){h.error(e)}e("config",i,s)}(e,t,x,a,i,_)}else if("consent"===i){const[t]=s;e("consent","update",t)}else if("get"===i){const[t,x,a]=s;e("get",t,x,a)}else if("set"===i){const[t]=s;e("set",t)}else e(i,...s)}catch(e){h.error(e)}}}const v=30;const w=new class{constructor(e={},t=1e3){this.throttleMetadata=e,this.intervalMillis=t}getThrottleMetadata(e){return this.throttleMetadata[e]}setThrottleMetadata(e,t){this.throttleMetadata[e]=t}deleteThrottleMetadata(e){delete this.throttleMetadata[e]}};function S(e){return new Headers({Accept:"application/json","x-goog-api-key":e})}async function y(e,t=w,x){const{appId:a,apiKey:i,measurementId:s}=e.options;if(!a)throw b.create("no-app-id");if(!i){if(s)return{measurementId:s,appId:a};throw b.create("no-api-key")}const _=t.getThrottleMetadata(a)||{backoffCount:0,throttleEndTimeMillis:Date.now()},n=new E;return setTimeout((async()=>{n.abort()}),void 0!==x?x:r),I({appId:a,apiKey:i,measurementId:s},_,n,t)}async function I(e,{throttleEndTimeMillis:t,backoffCount:x},a,i=w){var _;const{appId:n,measurementId:o}=e;try{await function(e,t){return new Promise(((x,a)=>{const i=Math.max(t-Date.now(),0),s=setTimeout(x,i);e.addEventListener((()=>{clearTimeout(s),a(b.create("fetch-throttle",{throttleEndTimeMillis:t}))}))}))}(a,t)}catch(e){if(o)return h.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${null==e?void 0:e.message}]`),{appId:n,measurementId:o};throw e}try{const t=await async function(e){var t;const{appId:x,apiKey:a}=e,i={method:"GET",headers:S(a)},s=d.replace("{app-id}",x),_=await fetch(s,i);if(200!==_.status&&304!==_.status){let e="";try{const x=await _.json();(null===(t=x.error)||void 0===t?void 0:t.message)&&(e=x.error.message)}catch(e){}throw b.create("config-fetch-failed",{httpStatus:_.status,responseMessage:e})}return _.json()}(e);return i.deleteThrottleMetadata(n),t}catch(t){const c=t;if(!function(e){if(!(e instanceof s.FirebaseError&&e.customData))return!1;const t=Number(e.customData.httpStatus);return 429===t||500===t||503===t||504===t}(c)){if(i.deleteThrottleMetadata(n),o)return h.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${null==c?void 0:c.message}]`),{appId:n,measurementId:o};throw t}const r=503===Number(null===(_=null==c?void 0:c.customData)||void 0===_?void 0:_.httpStatus)?(0,s.calculateBackoffMillis)(x,i.intervalMillis,v):(0,s.calculateBackoffMillis)(x,i.intervalMillis),d={throttleEndTimeMillis:Date.now()+r,backoffCount:x+1};return i.setThrottleMetadata(n,d),h.debug(`Calling attemptFetch again in ${r} millis`),I(e,d,a,i)}}class E{constructor(){this.listeners=[]}addEventListener(e){this.listeners.push(e)}abort(){this.listeners.forEach((e=>e()))}}let T,P;function L(e){P=e}function A(e){T=e}async function C(e,t,x,a,i,_,n){var r;const d=y(e);d.then((t=>{x[t.measurementId]=t.appId,e.options.measurementId&&t.measurementId!==e.options.measurementId&&h.warn(`The measurement ID in the local Firebase config (${e.options.measurementId}) does not match the measurement ID fetched from the server (${t.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((e=>h.error(e))),t.push(d);const f=async function(){if(!(0,s.isIndexedDBAvailable)())return h.warn(b.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,s.validateIndexedDBOpenable)()}catch(e){return h.warn(b.create("indexeddb-unavailable",{errorInfo:null==e?void 0:e.toString()}).message),!1}return!0}().then((e=>e?a.getId():void 0)),[u,p]=await Promise.all([d,f]);(function(e){const t=window.document.getElementsByTagName("script");for(const x of Object.values(t))if(x.src&&x.src.includes(l)&&x.src.includes(e))return x;return null})(_)||g(_,u.measurementId),P&&(i("consent","default",P),L(void 0)),i("js",new Date);const m=null!==(r=null==n?void 0:n.config)&&void 0!==r?r:{};return m[c]="firebase",m.update=!0,null!=p&&(m[o]=p),i("config",u.measurementId,m),T&&(i("set",T),A(void 0)),u.measurementId}class k{constructor(e){this.app=e}_delete(){return delete N[this.app.options.appId],Promise.resolve()}}let N={},D=[];const B={};let O,M,z="dataLayer",j="gtag",R=!1;function F(e){if(R)throw b.create("already-initialized");e.dataLayerName&&(z=e.dataLayerName),e.gtagName&&(j=e.gtagName)}function U(e,t,x){!function(){const e=[];if((0,s.isBrowserExtension)()&&e.push("This is a browser extension environment."),(0,s.areCookiesEnabled)()||e.push("Cookies are not available."),e.length>0){const t=e.map(((e,t)=>`(${t+1}) ${e}`)).join(" "),x=b.create("invalid-analytics-context",{errorInfo:t});h.warn(x.message)}}();const a=e.options.appId;if(!a)throw b.create("no-app-id");if(!e.options.apiKey){if(!e.options.measurementId)throw b.create("no-api-key");h.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=N[a])throw b.create("already-exists",{id:a});if(!R){!function(e){let t=[];Array.isArray(window[e])?t=window[e]:window[e]=t}(z);const{wrappedGtag:e,gtagCore:t}=function(e,t,x,a,i){let s=function(...e){window[a].push(arguments)};return window[i]&&"function"==typeof window[i]&&(s=window[i]),window[i]=m(s,e,t,x),{gtagCore:s,wrappedGtag:window[i]}}(N,D,B,z,j);M=e,O=t,R=!0}N[a]=C(e,D,B,t,O,z,x);return new k(e)}function H(e=(0,a.getApp)()){e=(0,s.getModularInstance)(e);const t=(0,a._getProvider)(e,n);return t.isInitialized()?t.getImmediate():G(e)}function G(e,t={}){const x=(0,a._getProvider)(e,n);if(x.isInitialized()){const e=x.getImmediate();if((0,s.deepEqual)(t,x.getOptions()))return e;throw b.create("already-initialized")}return x.initialize({options:t})}async function V(){if((0,s.isBrowserExtension)())return!1;if(!(0,s.areCookiesEnabled)())return!1;if(!(0,s.isIndexedDBAvailable)())return!1;try{return await(0,s.validateIndexedDBOpenable)()}catch(e){return!1}}function W(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global)return e("set",{screen_name:x}),Promise.resolve();e("config",await t,{update:!0,screen_name:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}async function X(e){return e=(0,s.getModularInstance)(e),async function(e,t){const x=await t;return new Promise(((t,a)=>{e("get",x,"client_id",(e=>{e||a(b.create("no-client-id")),t(e)}))}))}(M,N[e.app.options.appId])}function Y(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global)return e("set",{user_id:x}),Promise.resolve();e("config",await t,{update:!0,user_id:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}function $(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global){const t={};for(const e of Object.keys(x))t[`user_properties.${e}`]=x[e];return e("set",t),Promise.resolve()}e("config",await t,{update:!0,user_properties:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}function K(e,t){e=(0,s.getModularInstance)(e),async function(e,t){const x=await e;window[`ga-disable-${x}`]=!t}(N[e.app.options.appId],t).catch((e=>h.error(e)))}function q(e){M?M("set",e):A(e)}function Z(e,t,x,a){e=(0,s.getModularInstance)(e),async function(e,t,x,a,i){if(i&&i.global)e("event",x,a);else{const i=await t;e("event",x,Object.assign(Object.assign({},a),{send_to:i}))}}(M,N[e.app.options.appId],t,x,a).catch((e=>h.error(e)))}function J(e){M?M("consent","update",e):L(e)}const Q="@firebase/analytics",ee="0.10.0";(0,a._registerComponent)(new _.Component(n,((e,{options:t})=>U(e.getProvider("app").getImmediate(),e.getProvider("installations-internal").getImmediate(),t)),"PUBLIC")),(0,a._registerComponent)(new _.Component("analytics-internal",(function(e){try{const t=e.getProvider(n).getImmediate();return{logEvent:(e,x,a)=>Z(t,e,x,a)}}catch(e){throw b.create("interop-component-reg-failed",{reason:e})}}),"PRIVATE")),(0,a.registerVersion)(Q,ee),(0,a.registerVersion)(Q,ee,"esm2017")},"./node_modules/@firebase/app/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{FirebaseError:()=>s.FirebaseError,SDK_VERSION:()=>$,_DEFAULT_ENTRY_NAME:()=>O,_addComponent:()=>R,_addOrOverwriteComponent:()=>F,_apps:()=>z,_clearComponents:()=>V,_components:()=>j,_getProvider:()=>H,_registerComponent:()=>U,_removeServiceInstance:()=>G,deleteApp:()=>J,getApp:()=>q,getApps:()=>Z,initializeApp:()=>K,onLog:()=>ee,registerVersion:()=>Q,setLogLevel:()=>te});var a=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/logger/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/idb/build/index.js");class n{constructor(e){this.container=e}getPlatformInfoString(){return this.container.getProviders().map((e=>{if(function(e){const t=e.getComponent();return"VERSION"===(null==t?void 0:t.type)}(e)){const t=e.getImmediate();return`${t.library}/${t.version}`}return null})).filter((e=>e)).join(" ")}}const o="@firebase/app",c="0.9.15",r=new i.Logger("@firebase/app"),d="@firebase/app-compat",l="@firebase/analytics-compat",h="@firebase/analytics",f="@firebase/app-check-compat",b="@firebase/app-check",u="@firebase/auth",p="@firebase/auth-compat",g="@firebase/database",m="@firebase/database-compat",v="@firebase/functions",w="@firebase/functions-compat",S="@firebase/installations",y="@firebase/installations-compat",I="@firebase/messaging",E="@firebase/messaging-compat",T="@firebase/performance",P="@firebase/performance-compat",L="@firebase/remote-config",A="@firebase/remote-config-compat",C="@firebase/storage",k="@firebase/storage-compat",N="@firebase/firestore",D="@firebase/firestore-compat",B="firebase",O="[DEFAULT]",M={[o]:"fire-core",[d]:"fire-core-compat",[h]:"fire-analytics",[l]:"fire-analytics-compat",[b]:"fire-app-check",[f]:"fire-app-check-compat",[u]:"fire-auth",[p]:"fire-auth-compat",[g]:"fire-rtdb",[m]:"fire-rtdb-compat",[v]:"fire-fn",[w]:"fire-fn-compat",[S]:"fire-iid",[y]:"fire-iid-compat",[I]:"fire-fcm",[E]:"fire-fcm-compat",[T]:"fire-perf",[P]:"fire-perf-compat",[L]:"fire-rc",[A]:"fire-rc-compat",[C]:"fire-gcs",[k]:"fire-gcs-compat",[N]:"fire-fst",[D]:"fire-fst-compat","fire-js":"fire-js",[B]:"fire-js-all"},z=new Map,j=new Map;function R(e,t){try{e.container.addComponent(t)}catch(x){r.debug(`Component ${t.name} failed to register with FirebaseApp ${e.name}`,x)}}function F(e,t){e.container.addOrOverwriteComponent(t)}function U(e){const t=e.name;if(j.has(t))return r.debug(`There were multiple attempts to register component ${t}.`),!1;j.set(t,e);for(const t of z.values())R(t,e);return!0}function H(e,t){const x=e.container.getProvider("heartbeat").getImmediate({optional:!0});return x&&x.triggerHeartbeat(),e.container.getProvider(t)}function G(e,t,x=O){H(e,t).clearInstance(x)}function V(){j.clear()}const W={"no-app":"No Firebase App '{$appName}' has been created - call initializeApp() first","bad-app-name":"Illegal App name: '{$appName}","duplicate-app":"Firebase App named '{$appName}' already exists with different options or config","app-deleted":"Firebase App named '{$appName}' already deleted","no-options":"Need to provide options, when not being deployed to hosting via source.","invalid-app-argument":"firebase.{$appName}() takes either no argument or a Firebase App instance.","invalid-log-argument":"First argument to `onLog` must be null or a function.","idb-open":"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.","idb-get":"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.","idb-set":"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.","idb-delete":"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}."},X=new s.ErrorFactory("app","Firebase",W);class Y{constructor(e,t,x){this._isDeleted=!1,this._options=Object.assign({},e),this._config=Object.assign({},t),this._name=t.name,this._automaticDataCollectionEnabled=t.automaticDataCollectionEnabled,this._container=x,this.container.addComponent(new a.Component("app",(()=>this),"PUBLIC"))}get automaticDataCollectionEnabled(){return this.checkDestroyed(),this._automaticDataCollectionEnabled}set automaticDataCollectionEnabled(e){this.checkDestroyed(),this._automaticDataCollectionEnabled=e}get name(){return this.checkDestroyed(),this._name}get options(){return this.checkDestroyed(),this._options}get config(){return this.checkDestroyed(),this._config}get container(){return this._container}get isDeleted(){return this._isDeleted}set isDeleted(e){this._isDeleted=e}checkDestroyed(){if(this.isDeleted)throw X.create("app-deleted",{appName:this._name})}}const $="10.1.0";function K(e,t={}){let x=e;if("object"!=typeof t){t={name:t}}const i=Object.assign({name:O,automaticDataCollectionEnabled:!1},t),_=i.name;if("string"!=typeof _||!_)throw X.create("bad-app-name",{appName:String(_)});if(x||(x=(0,s.getDefaultAppConfig)()),!x)throw X.create("no-options");const n=z.get(_);if(n){if((0,s.deepEqual)(x,n.options)&&(0,s.deepEqual)(i,n.config))return n;throw X.create("duplicate-app",{appName:_})}const o=new a.ComponentContainer(_);for(const e of j.values())o.addComponent(e);const c=new Y(x,i,o);return z.set(_,c),c}function q(e=O){const t=z.get(e);if(!t&&e===O&&(0,s.getDefaultAppConfig)())return K();if(!t)throw X.create("no-app",{appName:e});return t}function Z(){return Array.from(z.values())}async function J(e){const t=e.name;z.has(t)&&(z.delete(t),await Promise.all(e.container.getProviders().map((e=>e.delete()))),e.isDeleted=!0)}function Q(e,t,x){var i;let s=null!==(i=M[e])&&void 0!==i?i:e;x&&(s+=`-${x}`);const _=s.match(/\s|\//),n=t.match(/\s|\//);if(_||n){const e=[`Unable to register library "${s}" with version "${t}":`];return _&&e.push(`library name "${s}" contains illegal characters (whitespace or "/")`),_&&n&&e.push("and"),n&&e.push(`version name "${t}" contains illegal characters (whitespace or "/")`),void r.warn(e.join(" "))}U(new a.Component(`${s}-version`,(()=>({library:s,version:t})),"VERSION"))}function ee(e,t){if(null!==e&&"function"!=typeof e)throw X.create("invalid-log-argument");(0,i.setUserLogHandler)(e,t)}function te(e){(0,i.setLogLevel)(e)}const xe="firebase-heartbeat-database",ae=1,ie="firebase-heartbeat-store";let se=null;function _e(){return se||(se=(0,_.openDB)(xe,ae,{upgrade:(e,t)=>{if(0===t)e.createObjectStore(ie)}}).catch((e=>{throw X.create("idb-open",{originalErrorMessage:e.message})}))),se}async function ne(e,t){try{const x=(await _e()).transaction(ie,"readwrite"),a=x.objectStore(ie);await a.put(t,oe(e)),await x.done}catch(e){if(e instanceof s.FirebaseError)r.warn(e.message);else{const t=X.create("idb-set",{originalErrorMessage:null==e?void 0:e.message});r.warn(t.message)}}}function oe(e){return`${e.name}!${e.options.appId}`}class ce{constructor(e){this.container=e,this._heartbeatsCache=null;const t=this.container.getProvider("app").getImmediate();this._storage=new de(t),this._heartbeatsCachePromise=this._storage.read().then((e=>(this._heartbeatsCache=e,e)))}async triggerHeartbeat(){const e=this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(),t=re();if(null===this._heartbeatsCache&&(this._heartbeatsCache=await this._heartbeatsCachePromise),this._heartbeatsCache.lastSentHeartbeatDate!==t&&!this._heartbeatsCache.heartbeats.some((e=>e.date===t)))return this._heartbeatsCache.heartbeats.push({date:t,agent:e}),this._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter((e=>{const t=new Date(e.date).valueOf();return Date.now()-t<=2592e6})),this._storage.overwrite(this._heartbeatsCache)}async getHeartbeatsHeader(){if(null===this._heartbeatsCache&&await this._heartbeatsCachePromise,null===this._heartbeatsCache||0===this._heartbeatsCache.heartbeats.length)return"";const e=re(),{heartbeatsToSend:t,unsentEntries:x}=function(e,t=1024){const x=[];let a=e.slice();for(const i of e){const e=x.find((e=>e.agent===i.agent));if(e){if(e.dates.push(i.date),le(x)>t){e.dates.pop();break}}else if(x.push({agent:i.agent,dates:[i.date]}),le(x)>t){x.pop();break}a=a.slice(1)}return{heartbeatsToSend:x,unsentEntries:a}}(this._heartbeatsCache.heartbeats),a=(0,s.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:t}));return this._heartbeatsCache.lastSentHeartbeatDate=e,x.length>0?(this._heartbeatsCache.heartbeats=x,await this._storage.overwrite(this._heartbeatsCache)):(this._heartbeatsCache.heartbeats=[],this._storage.overwrite(this._heartbeatsCache)),a}}function re(){return(new Date).toISOString().substring(0,10)}class de{constructor(e){this.app=e,this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}async runIndexedDBEnvironmentCheck(){return!!(0,s.isIndexedDBAvailable)()&&(0,s.validateIndexedDBOpenable)().then((()=>!0)).catch((()=>!1))}async read(){if(await this._canUseIndexedDBPromise){return await async function(e){try{const t=await _e();return await t.transaction(ie).objectStore(ie).get(oe(e))}catch(e){if(e instanceof s.FirebaseError)r.warn(e.message);else{const t=X.create("idb-get",{originalErrorMessage:null==e?void 0:e.message});r.warn(t.message)}}}(this.app)||{heartbeats:[]}}return{heartbeats:[]}}async overwrite(e){var t;if(await this._canUseIndexedDBPromise){const x=await this.read();return ne(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:x.lastSentHeartbeatDate,heartbeats:e.heartbeats})}}async add(e){var t;if(await this._canUseIndexedDBPromise){const x=await this.read();return ne(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:x.lastSentHeartbeatDate,heartbeats:[...x.heartbeats,...e.heartbeats]})}}}function le(e){return(0,s.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:e})).length}var he;he="",U(new a.Component("platform-logger",(e=>new n(e)),"PRIVATE")),U(new a.Component("heartbeat",(e=>new ce(e)),"PRIVATE")),Q(o,c,he),Q(o,c,"esm2017"),Q("fire-js","")},"./node_modules/@firebase/component/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{Component:()=>i,ComponentContainer:()=>n,Provider:()=>_});var a=x("./node_modules/@firebase/util/dist/index.esm2017.js");class i{constructor(e,t,x){this.name=e,this.instanceFactory=t,this.type=x,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(e){return this.instantiationMode=e,this}setMultipleInstances(e){return this.multipleInstances=e,this}setServiceProps(e){return this.serviceProps=e,this}setInstanceCreatedCallback(e){return this.onInstanceCreated=e,this}}const s="[DEFAULT]";class _{constructor(e,t){this.name=e,this.container=t,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}get(e){const t=this.normalizeInstanceIdentifier(e);if(!this.instancesDeferred.has(t)){const e=new a.Deferred;if(this.instancesDeferred.set(t,e),this.isInitialized(t)||this.shouldAutoInitialize())try{const x=this.getOrInitializeService({instanceIdentifier:t});x&&e.resolve(x)}catch(e){}}return this.instancesDeferred.get(t).promise}getImmediate(e){var t;const x=this.normalizeInstanceIdentifier(null==e?void 0:e.identifier),a=null!==(t=null==e?void 0:e.optional)&&void 0!==t&&t;if(!this.isInitialized(x)&&!this.shouldAutoInitialize()){if(a)return null;throw Error(`Service ${this.name} is not available`)}try{return this.getOrInitializeService({instanceIdentifier:x})}catch(e){if(a)return null;throw e}}getComponent(){return this.component}setComponent(e){if(e.name!==this.name)throw Error(`Mismatching Component ${e.name} for Provider ${this.name}.`);if(this.component)throw Error(`Component for ${this.name} has already been provided`);if(this.component=e,this.shouldAutoInitialize()){if(function(e){return"EAGER"===e.instantiationMode}(e))try{this.getOrInitializeService({instanceIdentifier:s})}catch(e){}for(const[e,t]of this.instancesDeferred.entries()){const x=this.normalizeInstanceIdentifier(e);try{const e=this.getOrInitializeService({instanceIdentifier:x});t.resolve(e)}catch(e){}}}}clearInstance(e=s){this.instancesDeferred.delete(e),this.instancesOptions.delete(e),this.instances.delete(e)}async delete(){const e=Array.from(this.instances.values());await Promise.all([...e.filter((e=>"INTERNAL"in e)).map((e=>e.INTERNAL.delete())),...e.filter((e=>"_delete"in e)).map((e=>e._delete()))])}isComponentSet(){return null!=this.component}isInitialized(e=s){return this.instances.has(e)}getOptions(e=s){return this.instancesOptions.get(e)||{}}initialize(e={}){const{options:t={}}=e,x=this.normalizeInstanceIdentifier(e.instanceIdentifier);if(this.isInitialized(x))throw Error(`${this.name}(${x}) has already been initialized`);if(!this.isComponentSet())throw Error(`Component ${this.name} has not been registered yet`);const a=this.getOrInitializeService({instanceIdentifier:x,options:t});for(const[e,t]of this.instancesDeferred.entries()){x===this.normalizeInstanceIdentifier(e)&&t.resolve(a)}return a}onInit(e,t){var x;const a=this.normalizeInstanceIdentifier(t),i=null!==(x=this.onInitCallbacks.get(a))&&void 0!==x?x:new Set;i.add(e),this.onInitCallbacks.set(a,i);const s=this.instances.get(a);return s&&e(s,a),()=>{i.delete(e)}}invokeOnInitCallbacks(e,t){const x=this.onInitCallbacks.get(t);if(x)for(const a of x)try{a(e,t)}catch(e){}}getOrInitializeService({instanceIdentifier:e,options:t={}}){let x=this.instances.get(e);if(!x&&this.component&&(x=this.component.instanceFactory(this.container,{instanceIdentifier:(a=e,a===s?void 0:a),options:t}),this.instances.set(e,x),this.instancesOptions.set(e,t),this.invokeOnInitCallbacks(x,e),this.component.onInstanceCreated))try{this.component.onInstanceCreated(this.container,e,x)}catch(e){}var a;return x||null}normalizeInstanceIdentifier(e=s){return this.component?this.component.multipleInstances?e:s:e}shouldAutoInitialize(){return!!this.component&&"EXPLICIT"!==this.component.instantiationMode}}class n{constructor(e){this.name=e,this.providers=new Map}addComponent(e){const t=this.getProvider(e.name);if(t.isComponentSet())throw new Error(`Component ${e.name} has already been registered with ${this.name}`);t.setComponent(e)}addOrOverwriteComponent(e){this.getProvider(e.name).isComponentSet()&&this.providers.delete(e.name),this.addComponent(e)}getProvider(e){if(this.providers.has(e))return this.providers.get(e);const t=new _(e,this);return this.providers.set(e,t),t}getProviders(){return Array.from(this.providers.values())}}},"./node_modules/@firebase/installations/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{deleteInstallations:()=>Q,getId:()=>q,getInstallations:()=>te,getToken:()=>Z,onIdChange:()=>ee});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/@firebase/installations/node_modules/idb/build/index.js");const n="@firebase/installations",o="0.6.4",c=1e4,r=`w:${o}`,d="FIS_v2",l="https://firebaseinstallations.googleapis.com/v1",h=36e5,f={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},b=new s.ErrorFactory("installations","Installations",f);function u(e){return e instanceof s.FirebaseError&&e.code.includes("request-failed")}function p({projectId:e}){return`${l}/projects/${e}/installations`}function g(e){return{token:e.token,requestStatus:2,expiresIn:(t=e.expiresIn,Number(t.replace("s","000"))),creationTime:Date.now()};var t}async function m(e,t){const x=(await t.json()).error;return b.create("request-failed",{requestName:e,serverCode:x.code,serverMessage:x.message,serverStatus:x.status})}function v({apiKey:e}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}function w(e,{refreshToken:t}){const x=v(e);return x.append("Authorization",function(e){return`${d} ${e}`}(t)),x}async function S(e){const t=await e();return t.status>=500&&t.status<600?e():t}function y(e){return new Promise((t=>{setTimeout(t,e)}))}const I=/^[cdef][\w-]{21}$/,E="";function T(){try{const e=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(e),e[0]=112+e[0]%16;const t=function(e){const t=(x=e,btoa(String.fromCharCode(...x)).replace(/\+/g,"-").replace(/\//g,"_"));var x;return t.substr(0,22)}(e);return I.test(t)?t:E}catch(e){return E}}function P(e){return`${e.appName}!${e.appId}`}const L=new Map;function A(e,t){const x=P(e);C(x,t),function(e,t){const x=N();x&&x.postMessage({key:e,fid:t});D()}(x,t)}function C(e,t){const x=L.get(e);if(x)for(const e of x)e(t)}let k=null;function N(){return!k&&"BroadcastChannel"in self&&(k=new BroadcastChannel("[Firebase] FID Change"),k.onmessage=e=>{C(e.data.key,e.data.fid)}),k}function D(){0===L.size&&k&&(k.close(),k=null)}const B="firebase-installations-database",O=1,M="firebase-installations-store";let z=null;function j(){return z||(z=(0,_.openDB)(B,O,{upgrade:(e,t)=>{if(0===t)e.createObjectStore(M)}})),z}async function R(e,t){const x=P(e),a=(await j()).transaction(M,"readwrite"),i=a.objectStore(M),s=await i.get(x);return await i.put(t,x),await a.done,s&&s.fid===t.fid||A(e,t.fid),t}async function F(e){const t=P(e),x=(await j()).transaction(M,"readwrite");await x.objectStore(M).delete(t),await x.done}async function U(e,t){const x=P(e),a=(await j()).transaction(M,"readwrite"),i=a.objectStore(M),s=await i.get(x),_=t(s);return void 0===_?await i.delete(x):await i.put(_,x),await a.done,!_||s&&s.fid===_.fid||A(e,_.fid),_}async function H(e){let t;const x=await U(e.appConfig,(x=>{const a=function(e){const t=e||{fid:T(),registrationStatus:0};return W(t)}(x),i=function(e,t){if(0===t.registrationStatus){if(!navigator.onLine){return{installationEntry:t,registrationPromise:Promise.reject(b.create("app-offline"))}}const x={fid:t.fid,registrationStatus:1,registrationTime:Date.now()},a=async function(e,t){try{const x=await async function({appConfig:e,heartbeatServiceProvider:t},{fid:x}){const a=p(e),i=v(e),s=t.getImmediate({optional:!0});if(s){const e=await s.getHeartbeatsHeader();e&&i.append("x-firebase-client",e)}const _={fid:x,authVersion:d,appId:e.appId,sdkVersion:r},n={method:"POST",headers:i,body:JSON.stringify(_)},o=await S((()=>fetch(a,n)));if(o.ok){const e=await o.json();return{fid:e.fid||x,registrationStatus:2,refreshToken:e.refreshToken,authToken:g(e.authToken)}}throw await m("Create Installation",o)}(e,t);return R(e.appConfig,x)}catch(x){throw u(x)&&409===x.customData.serverCode?await F(e.appConfig):await R(e.appConfig,{fid:t.fid,registrationStatus:0}),x}}(e,x);return{installationEntry:x,registrationPromise:a}}return 1===t.registrationStatus?{installationEntry:t,registrationPromise:G(e)}:{installationEntry:t}}(e,a);return t=i.registrationPromise,i.installationEntry}));return x.fid===E?{installationEntry:await t}:{installationEntry:x,registrationPromise:t}}async function G(e){let t=await V(e.appConfig);for(;1===t.registrationStatus;)await y(100),t=await V(e.appConfig);if(0===t.registrationStatus){const{installationEntry:t,registrationPromise:x}=await H(e);return x||t}return t}function V(e){return U(e,(e=>{if(!e)throw b.create("installation-not-found");return W(e)}))}function W(e){return 1===(t=e).registrationStatus&&t.registrationTime+c<Date.now()?{fid:e.fid,registrationStatus:0}:e;var t}async function X({appConfig:e,heartbeatServiceProvider:t},x){const a=function(e,{fid:t}){return`${p(e)}/${t}/authTokens:generate`}(e,x),i=w(e,x),s=t.getImmediate({optional:!0});if(s){const e=await s.getHeartbeatsHeader();e&&i.append("x-firebase-client",e)}const _={installation:{sdkVersion:r,appId:e.appId}},n={method:"POST",headers:i,body:JSON.stringify(_)},o=await S((()=>fetch(a,n)));if(o.ok){return g(await o.json())}throw await m("Generate Auth Token",o)}async function Y(e,t=!1){let x;const a=await U(e.appConfig,(a=>{if(!K(a))throw b.create("not-registered");const i=a.authToken;if(!t&&function(e){return 2===e.requestStatus&&!function(e){const t=Date.now();return t<e.creationTime||e.creationTime+e.expiresIn<t+h}(e)}(i))return a;if(1===i.requestStatus)return x=async function(e,t){let x=await $(e.appConfig);for(;1===x.authToken.requestStatus;)await y(100),x=await $(e.appConfig);const a=x.authToken;return 0===a.requestStatus?Y(e,t):a}(e,t),a;{if(!navigator.onLine)throw b.create("app-offline");const t=function(e){const t={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},e),{authToken:t})}(a);return x=async function(e,t){try{const x=await X(e,t),a=Object.assign(Object.assign({},t),{authToken:x});return await R(e.appConfig,a),x}catch(x){if(!u(x)||401!==x.customData.serverCode&&404!==x.customData.serverCode){const x=Object.assign(Object.assign({},t),{authToken:{requestStatus:0}});await R(e.appConfig,x)}else await F(e.appConfig);throw x}}(e,t),t}}));return x?await x:a.authToken}function $(e){return U(e,(e=>{if(!K(e))throw b.create("not-registered");const t=e.authToken;return 1===(x=t).requestStatus&&x.requestTime+c<Date.now()?Object.assign(Object.assign({},e),{authToken:{requestStatus:0}}):e;var x}))}function K(e){return void 0!==e&&2===e.registrationStatus}async function q(e){const t=e,{installationEntry:x,registrationPromise:a}=await H(t);return a?a.catch(console.error):Y(t).catch(console.error),x.fid}async function Z(e,t=!1){const x=e;await async function(e){const{registrationPromise:t}=await H(e);t&&await t}(x);return(await Y(x,t)).token}async function J(e,t){const x=function(e,{fid:t}){return`${p(e)}/${t}`}(e,t),a={method:"DELETE",headers:w(e,t)},i=await S((()=>fetch(x,a)));if(!i.ok)throw await m("Delete Installation",i)}async function Q(e){const{appConfig:t}=e,x=await U(t,(e=>{if(!e||0!==e.registrationStatus)return e}));if(x){if(1===x.registrationStatus)throw b.create("delete-pending-registration");if(2===x.registrationStatus){if(!navigator.onLine)throw b.create("app-offline");await J(t,x),await F(t)}}}function ee(e,t){const{appConfig:x}=e;return function(e,t){N();const x=P(e);let a=L.get(x);a||(a=new Set,L.set(x,a)),a.add(t)}(x,t),()=>{!function(e,t){const x=P(e),a=L.get(x);a&&(a.delete(t),0===a.size&&L.delete(x),D())}(x,t)}}function te(e=(0,a.getApp)()){return(0,a._getProvider)(e,"installations").getImmediate()}function xe(e){return b.create("missing-app-config-values",{valueName:e})}const ae="installations",ie=e=>{const t=e.getProvider("app").getImmediate(),x=function(e){if(!e||!e.options)throw xe("App Configuration");if(!e.name)throw xe("App Name");const t=["projectId","apiKey","appId"];for(const x of t)if(!e.options[x])throw xe(x);return{appName:e.name,projectId:e.options.projectId,apiKey:e.options.apiKey,appId:e.options.appId}}(t);return{app:t,appConfig:x,heartbeatServiceProvider:(0,a._getProvider)(t,"heartbeat"),_delete:()=>Promise.resolve()}},se=e=>{const t=e.getProvider("app").getImmediate(),x=(0,a._getProvider)(t,ae).getImmediate();return{getId:()=>q(x),getToken:e=>Z(x,e)}};(0,a._registerComponent)(new i.Component(ae,ie,"PUBLIC")),(0,a._registerComponent)(new i.Component("installations-internal",se,"PRIVATE")),(0,a.registerVersion)(n,o),(0,a.registerVersion)(n,o,"esm2017")},"./node_modules/@firebase/installations/node_modules/idb/build/index.js":(e,t,x)=>{x.r(t),x.d(t,{deleteDB:()=>s,openDB:()=>i,unwrap:()=>a.u,wrap:()=>a.w});var a=x("./node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js");function i(e,t,{blocked:x,upgrade:i,blocking:s,terminated:_}={}){const n=indexedDB.open(e,t),o=(0,a.w)(n);return i&&n.addEventListener("upgradeneeded",(e=>{i((0,a.w)(n.result),e.oldVersion,e.newVersion,(0,a.w)(n.transaction))})),x&&n.addEventListener("blocked",(()=>x())),o.then((e=>{_&&e.addEventListener("close",(()=>_())),s&&e.addEventListener("versionchange",(()=>s()))})).catch((()=>{})),o}function s(e,{blocked:t}={}){const x=indexedDB.deleteDatabase(e);return t&&x.addEventListener("blocked",(()=>t())),(0,a.w)(x).then((()=>{}))}const _=["get","getKey","getAll","getAllKeys","count"],n=["put","add","delete","clear"],o=new Map;function c(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(o.get(t))return o.get(t);const x=t.replace(/FromIndex$/,""),a=t!==x,i=n.includes(x);if(!(x in(a?IDBIndex:IDBObjectStore).prototype)||!i&&!_.includes(x))return;const s=async function(e,...t){const s=this.transaction(e,i?"readwrite":"readonly");let _=s.store;return a&&(_=_.index(t.shift())),(await Promise.all([_[x](...t),i&&s.done]))[0]};return o.set(t,s),s}(0,a.r)((e=>({...e,get:(t,x,a)=>c(t,x)||e.get(t,x,a),has:(t,x)=>!!c(t,x)||e.has(t,x)})))},"./node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js":(e,t,x)=>{x.r(t),x.d(t,{a:()=>r,i:()=>a,r:()=>l,u:()=>u,w:()=>b});const a=(e,t)=>t.some((t=>e instanceof t));let i,s;const _=new WeakMap,n=new WeakMap,o=new WeakMap,c=new WeakMap,r=new WeakMap;let d={get(e,t,x){if(e instanceof IDBTransaction){if("done"===t)return n.get(e);if("objectStoreNames"===t)return e.objectStoreNames||o.get(e);if("store"===t)return x.objectStoreNames[1]?void 0:x.objectStore(x.objectStoreNames[0])}return b(e[t])},set:(e,t,x)=>(e[t]=x,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function l(e){d=e(d)}function h(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(s||(s=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(u(this),t),b(_.get(this))}:function(...t){return b(e.apply(u(this),t))}:function(t,...x){const a=e.call(u(this),t,...x);return o.set(a,t.sort?t.sort():[t]),b(a)}}function f(e){return"function"==typeof e?h(e):(e instanceof IDBTransaction&&function(e){if(n.has(e))return;const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",s),e.removeEventListener("abort",s)},i=()=>{t(),a()},s=()=>{x(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",i),e.addEventListener("error",s),e.addEventListener("abort",s)}));n.set(e,t)}(e),a(e,i||(i=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,d):e)}function b(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("success",i),e.removeEventListener("error",s)},i=()=>{t(b(e.result)),a()},s=()=>{x(e.error),a()};e.addEventListener("success",i),e.addEventListener("error",s)}));return t.then((t=>{t instanceof IDBCursor&&_.set(t,e)})).catch((()=>{})),r.set(t,e),t}(e);if(c.has(e))return c.get(e);const t=f(e);return t!==e&&(c.set(e,t),r.set(t,e)),t}const u=e=>r.get(e)},"./node_modules/@firebase/logger/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{LogLevel:()=>i,Logger:()=>c,setLogLevel:()=>r,setUserLogHandler:()=>d});const a=[];var i;!function(e){e[e.DEBUG=0]="DEBUG",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.SILENT=5]="SILENT"}(i||(i={}));const s={debug:i.DEBUG,verbose:i.VERBOSE,info:i.INFO,warn:i.WARN,error:i.ERROR,silent:i.SILENT},_=i.INFO,n={[i.DEBUG]:"log",[i.VERBOSE]:"log",[i.INFO]:"info",[i.WARN]:"warn",[i.ERROR]:"error"},o=(e,t,...x)=>{if(t<e.logLevel)return;const a=(new Date).toISOString(),i=n[t];if(!i)throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`);console[i](`[${a}]  ${e.name}:`,...x)};class c{constructor(e){this.name=e,this._logLevel=_,this._logHandler=o,this._userLogHandler=null,a.push(this)}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in i))throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);this._logLevel=e}setLogLevel(e){this._logLevel="string"==typeof e?s[e]:e}get logHandler(){return this._logHandler}set logHandler(e){if("function"!=typeof e)throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=e}get userLogHandler(){return this._userLogHandler}set userLogHandler(e){this._userLogHandler=e}debug(...e){this._userLogHandler&&this._userLogHandler(this,i.DEBUG,...e),this._logHandler(this,i.DEBUG,...e)}log(...e){this._userLogHandler&&this._userLogHandler(this,i.VERBOSE,...e),this._logHandler(this,i.VERBOSE,...e)}info(...e){this._userLogHandler&&this._userLogHandler(this,i.INFO,...e),this._logHandler(this,i.INFO,...e)}warn(...e){this._userLogHandler&&this._userLogHandler(this,i.WARN,...e),this._logHandler(this,i.WARN,...e)}error(...e){this._userLogHandler&&this._userLogHandler(this,i.ERROR,...e),this._logHandler(this,i.ERROR,...e)}}function r(e){a.forEach((t=>{t.setLogLevel(e)}))}function d(e,t){for(const x of a){let a=null;t&&t.level&&(a=s[t.level]),x.userLogHandler=null===e?null:(t,x,...s)=>{const _=s.map((e=>{if(null==e)return null;if("string"==typeof e)return e;if("number"==typeof e||"boolean"==typeof e)return e.toString();if(e instanceof Error)return e.message;try{return JSON.stringify(e)}catch(e){return null}})).filter((e=>e)).join(" ");x>=(null!=a?a:t.logLevel)&&e({level:i[x].toLowerCase(),message:_,args:s,type:t.name})}}}},"./node_modules/firebase/analytics/dist/esm/index.esm.js":(e,t,x)=>{x.r(t),x.d(t,{getAnalytics:()=>a.getAnalytics,getGoogleAnalyticsClientId:()=>a.getGoogleAnalyticsClientId,initializeAnalytics:()=>a.initializeAnalytics,isSupported:()=>a.isSupported,logEvent:()=>a.logEvent,setAnalyticsCollectionEnabled:()=>a.setAnalyticsCollectionEnabled,setConsent:()=>a.setConsent,setCurrentScreen:()=>a.setCurrentScreen,setDefaultEventParameters:()=>a.setDefaultEventParameters,setUserId:()=>a.setUserId,setUserProperties:()=>a.setUserProperties,settings:()=>a.settings});var a=x("./node_modules/@firebase/analytics/dist/esm/index.esm2017.js")},"./node_modules/firebase/app/dist/esm/index.esm.js":(e,t,x)=>{x.r(t),x.d(t,{FirebaseError:()=>a.FirebaseError,SDK_VERSION:()=>a.SDK_VERSION,_DEFAULT_ENTRY_NAME:()=>a._DEFAULT_ENTRY_NAME,_addComponent:()=>a._addComponent,_addOrOverwriteComponent:()=>a._addOrOverwriteComponent,_apps:()=>a._apps,_clearComponents:()=>a._clearComponents,_components:()=>a._components,_getProvider:()=>a._getProvider,_registerComponent:()=>a._registerComponent,_removeServiceInstance:()=>a._removeServiceInstance,deleteApp:()=>a.deleteApp,getApp:()=>a.getApp,getApps:()=>a.getApps,initializeApp:()=>a.initializeApp,onLog:()=>a.onLog,registerVersion:()=>a.registerVersion,setLogLevel:()=>a.setLogLevel});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js");(0,a.registerVersion)("firebase","10.1.0","app")},"./node_modules/idb/build/index.js":(e,t,x)=>{x.r(t),x.d(t,{deleteDB:()=>s,openDB:()=>i,unwrap:()=>a.u,wrap:()=>a.w});var a=x("./node_modules/idb/build/wrap-idb-value.js");function i(e,t,{blocked:x,upgrade:i,blocking:s,terminated:_}={}){const n=indexedDB.open(e,t),o=(0,a.w)(n);return i&&n.addEventListener("upgradeneeded",(e=>{i((0,a.w)(n.result),e.oldVersion,e.newVersion,(0,a.w)(n.transaction),e)})),x&&n.addEventListener("blocked",(e=>x(e.oldVersion,e.newVersion,e))),o.then((e=>{_&&e.addEventListener("close",(()=>_())),s&&e.addEventListener("versionchange",(e=>s(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}function s(e,{blocked:t}={}){const x=indexedDB.deleteDatabase(e);return t&&x.addEventListener("blocked",(e=>t(e.oldVersion,e))),(0,a.w)(x).then((()=>{}))}const _=["get","getKey","getAll","getAllKeys","count"],n=["put","add","delete","clear"],o=new Map;function c(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(o.get(t))return o.get(t);const x=t.replace(/FromIndex$/,""),a=t!==x,i=n.includes(x);if(!(x in(a?IDBIndex:IDBObjectStore).prototype)||!i&&!_.includes(x))return;const s=async function(e,...t){const s=this.transaction(e,i?"readwrite":"readonly");let _=s.store;return a&&(_=_.index(t.shift())),(await Promise.all([_[x](...t),i&&s.done]))[0]};return o.set(t,s),s}(0,a.r)((e=>({...e,get:(t,x,a)=>c(t,x)||e.get(t,x,a),has:(t,x)=>!!c(t,x)||e.has(t,x)})))},"./node_modules/idb/build/wrap-idb-value.js":(e,t,x)=>{x.r(t),x.d(t,{a:()=>r,i:()=>a,r:()=>l,u:()=>u,w:()=>b});const a=(e,t)=>t.some((t=>e instanceof t));let i,s;const _=new WeakMap,n=new WeakMap,o=new WeakMap,c=new WeakMap,r=new WeakMap;let d={get(e,t,x){if(e instanceof IDBTransaction){if("done"===t)return n.get(e);if("objectStoreNames"===t)return e.objectStoreNames||o.get(e);if("store"===t)return x.objectStoreNames[1]?void 0:x.objectStore(x.objectStoreNames[0])}return b(e[t])},set:(e,t,x)=>(e[t]=x,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function l(e){d=e(d)}function h(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(s||(s=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(u(this),t),b(_.get(this))}:function(...t){return b(e.apply(u(this),t))}:function(t,...x){const a=e.call(u(this),t,...x);return o.set(a,t.sort?t.sort():[t]),b(a)}}function f(e){return"function"==typeof e?h(e):(e instanceof IDBTransaction&&function(e){if(n.has(e))return;const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",s),e.removeEventListener("abort",s)},i=()=>{t(),a()},s=()=>{x(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",i),e.addEventListener("error",s),e.addEventListener("abort",s)}));n.set(e,t)}(e),a(e,i||(i=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,d):e)}function b(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("success",i),e.removeEventListener("error",s)},i=()=>{t(b(e.result)),a()},s=()=>{x(e.error),a()};e.addEventListener("success",i),e.addEventListener("error",s)}));return t.then((t=>{t instanceof IDBCursor&&_.set(t,e)})).catch((()=>{})),r.set(t,e),t}(e);if(c.has(e))return c.get(e);const t=f(e);return t!==e&&(c.set(e,t),r.set(t,e)),t}const u=e=>r.get(e)},"./node_modules/workbox-window/build/workbox-window.prod.es5.mjs":(e,t,x)=>{x.r(t),x.d(t,{Workbox:()=>h,messageSW:()=>a});try{self["workbox:window:4.3.1"]&&_()}catch(a){}var a=function(e,t){return new Promise((function(x){var a=new MessageChannel;a.port1.onmessage=function(e){return x(e.data)},e.postMessage(t,[a.port2])}))};function i(e,t){for(var x=0;x<t.length;x++){var a=t[x];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}try{self["workbox:core:4.3.1"]&&_()}catch(a){}var n=function(){var e=this;this.promise=new Promise((function(t,x){e.resolve=t,e.reject=x}))},o=function(e,t){return new URL(e,location).href===new URL(t,location).href},c=function(e,t){Object.assign(this,t,{type:e})};function r(e){return function(){for(var t=[],x=0;x<arguments.length;x++)t[x]=arguments[x];try{return Promise.resolve(e.apply(this,t))}catch(e){return Promise.reject(e)}}}function d(e,t,x){return x?t?t(e):e:(e&&e.then||(e=Promise.resolve(e)),t?e.then(t):e)}function l(){}var h=function(e){var t,x;function _(t,x){var a;return void 0===x&&(x={}),(a=e.call(this)||this).t=t,a.i=x,a.o=0,a.u=new n,a.s=new n,a.h=new n,a.v=a.v.bind(s(s(a))),a.l=a.l.bind(s(s(a))),a.g=a.g.bind(s(s(a))),a.m=a.m.bind(s(s(a))),a}x=e,(t=_).prototype=Object.create(x.prototype),t.prototype.constructor=t,t.__proto__=x;var h,f,b=_.prototype;return b.register=r((function(e){var t,x,a=this,i=(void 0===e?{}:e).immediate,s=void 0!==i&&i;return t=function(){return a.p=Boolean(navigator.serviceWorker.controller),a.P=a.R(),d(a.k(),(function(e){a.B=e,a.P&&(a.O=a.P,a.s.resolve(a.P),a.h.resolve(a.P),a.j(a.P),a.P.addEventListener("statechange",a.l,{once:!0}));var t=a.B.waiting;return t&&o(t.scriptURL,a.t)&&(a.O=t,Promise.resolve().then((function(){a.dispatchEvent(new c("waiting",{sw:t,wasWaitingBeforeRegister:!0}))}))),a.O&&a.u.resolve(a.O),a.B.addEventListener("updatefound",a.g),navigator.serviceWorker.addEventListener("controllerchange",a.m,{once:!0}),"BroadcastChannel"in self&&(a.C=new BroadcastChannel("workbox"),a.C.addEventListener("message",a.v)),navigator.serviceWorker.addEventListener("message",a.v),a.B}))},(x=function(){if(!s&&"complete"!==document.readyState)return function(e,t){return e&&e.then?e.then(l):Promise.resolve()}(new Promise((function(e){return addEventListener("load",e)})))}())&&x.then?x.then(t):t()})),b.getSW=r((function(){return this.O||this.u.promise})),b.messageSW=r((function(e){return d(this.getSW(),(function(t){return a(t,e)}))})),b.R=function(){var e=navigator.serviceWorker.controller;if(e&&o(e.scriptURL,this.t))return e},b.k=r((function(){var e=this;return function(e,t){try{var x=e()}catch(e){return t(e)}return x&&x.then?x.then(void 0,t):x}((function(){return d(navigator.serviceWorker.register(e.t,e.i),(function(t){return e.L=performance.now(),t}))}),(function(e){throw e}))})),b.j=function(e){a(e,{type:"WINDOW_READY",meta:"workbox-window"})},b.g=function(){var e=this.B.installing;this.o>0||!o(e.scriptURL,this.t)||performance.now()>this.L+6e4?(this.W=e,this.B.removeEventListener("updatefound",this.g)):(this.O=e,this.u.resolve(e)),++this.o,e.addEventListener("statechange",this.l)},b.l=function(e){var t=this,x=e.target,a=x.state,i=x===this.W,s=i?"external":"",_={sw:x,originalEvent:e};!i&&this.p&&(_.isUpdate=!0),this.dispatchEvent(new c(s+a,_)),"installed"===a?this._=setTimeout((function(){"installed"===a&&t.B.waiting===x&&t.dispatchEvent(new c(s+"waiting",_))}),200):"activating"===a&&(clearTimeout(this._),i||this.s.resolve(x))},b.m=function(e){var t=this.O;t===navigator.serviceWorker.controller&&(this.dispatchEvent(new c("controlling",{sw:t,originalEvent:e})),this.h.resolve(t))},b.v=function(e){var t=e.data;this.dispatchEvent(new c("message",{data:t,originalEvent:e}))},h=_,(f=[{key:"active",get:function(){return this.s.promise}},{key:"controlling",get:function(){return this.h.promise}}])&&i(h.prototype,f),_}(function(){function e(){this.D={}}var t=e.prototype;return t.addEventListener=function(e,t){this.T(e).add(t)},t.removeEventListener=function(e,t){this.T(e).delete(t)},t.dispatchEvent=function(e){e.target=this,this.T(e.type).forEach((function(t){return t(e)}))},t.T=function(e){return this.D[e]=this.D[e]||new Set},e}())}},t={};function x(a){var i=t[a];if(void 0!==i)return i.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,x),s.exports}x.d=(e,t)=>{for(var a in t)x.o(t,a)&&!x.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},x.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),x.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),x.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};(()=>{x.r(a);var e=x("./src/data/index.ts"),t=x("./src/sceneHandler/index.ts"),i=x("./src/constants/index.ts"),s=x("./node_modules/workbox-window/build/workbox-window.prod.es5.mjs"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/common/index.ts"),o=x("./src/components/index.ts");new class{canvas;versionInfoElement;lang;is_cached;progressBar;progressBarContainer;channel;sceneHandler;loadingElement;majVersion;minVersion;dataModal;startSessionTime;titleTextElement;feedBackTextElement;currentProgress;firebaseIntegration;constructor(e){this.lang=e,this.currentProgress=10,this.canvas=document.getElementById("canvas"),this.channel=new BroadcastChannel("my-channel"),this.progressBar=document.getElementById("progress-bar"),this.titleTextElement=document.getElementById("title"),this.feedBackTextElement=document.getElementById("feedback-text"),this.progressBarContainer=document.getElementById("progress-bar-container"),this.versionInfoElement=document.getElementById("version-info-id"),this.loadingElement=document.getElementById("loading-screen"),this.is_cached=this.initializeCachedData(),this.firebaseIntegration=new _.FirebaseIntegration,this.startSessionTime=0,this.init(),this.channel.addEventListener("message",this.handleServiceWorkerMessage),window.addEventListener("beforeunload",this.handleBeforeUnload),document.addEventListener(n.VISIBILITY_CHANGE,this.handleVisibilityChange),window.addEventListener("resize",this.handleResize.bind(this))}async init(){const t=await n.Utils.getLanguageSpecificFont(this.lang);await this.loadAndCacheFont(t,`./assets/fonts/${t}.ttf`),await this.loadTitleFeedbackCustomFont(),await this.preloadGameAudios(),this.handleLoadingScreen(),this.setupCanvas();const x=await(0,e.getData)();this.majVersion=x.majversion,this.minVersion=x.minversion,this.dataModal=this.createDataModal(x),this.globalInitialization(x),this.logSessionStartFirebaseEvent(),window.addEventListener("resize",(async()=>{this.handleResize(this.dataModal)}));const a=localStorage.getItem(this.lang+"gamePlayedInfo"),s=a?JSON.parse(a).length-1:0,_=n.Debugger.DebugMode?i.PreviousPlayedLevel+this.lang+"Debug":i.PreviousPlayedLevel+this.lang;localStorage.setItem(_,s.toString()),this.is_cached.has(this.lang)&&this.handleCachedScenario(this.dataModal),this.registerWorkbox()}async loadTitleFeedbackCustomFont(){const t=e.customFonts[this.lang]||e.customFonts.default,x=`'${t}', sans-serif`;await this.loadAndCacheFont(t,`./assets/fonts/${t}.ttf`),[this.titleTextElement,this.feedBackTextElement].forEach((e=>{e&&(e.style.fontFamily=x)}))}logSessionStartFirebaseEvent(){let e=localStorage.getItem("lastSessionEndTime"),t=0;if(this.startSessionTime=(new Date).getTime(),e){let x=parseInt(e);isNaN(x)||(t=Math.abs((new Date).getTime()-x))}const x=parseFloat((t?t/864e5:0).toFixed(3)),a={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",days_since_last:x};this.firebaseIntegration.sendSessionStartEvent(a)}logSessionEndFirebaseEvent(){const e={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",duration:((new Date).getTime()-this.startSessionTime)/1e3};localStorage.setItem("lastSessionEndTime",(new Date).getTime().toString()),this.firebaseIntegration.sendSessionEndEvent(e)}initializeCachedData(){const e=localStorage.getItem(i.IsCached);return e?new Map(JSON.parse(e)):new Map}async loadAndCacheFont(e,t){try{const x=await caches.open("fontCache");if(!await x.match(t)){const e=await fetch(t),a=await e.blob();await x.put(t,new Response(a))}const a=new FontFace(e,`url(${t}) format('truetype')`);await a.load(),document.fonts.add(a)}catch(e){console.error(...d("1603038447_175_6_175_62_11",`Failed to load and cache font: ${e}`))}}handleLoadingScreen=()=>{this.is_cached.get(n.lang)?(this.loadingElement.style.zIndex="-1",this.loadingElement.style.display="none",this.progressBarContainer.style.display="none",this.progressBar.style.display="none"):(this.progressBarContainer.style.display="flex",this.progressBar.style.display="flex",this.progressBar.style.width="10%")};async registerWorkbox(){if("serviceWorker"in navigator)try{const t=new s.Workbox("./sw.js",{});await t.register(),await navigator.serviceWorker.ready,this.is_cached.has(this.lang)?fetch(e.URL+"?cache-bust="+(new Date).getTime(),{method:"GET",headers:{"Content-Type":"application/json","Cache-Control":"no-store"},cache:"no-store"}).then((async e=>{if(!e.ok)return void console.error(...d("1603038447_212_16_214_17_11","Failed to fetch the content file from the server!"));const t=await e.json(),x=t.majversion+"."+t.minversion,a=localStorage.getItem("version"+n.lang.toLowerCase());if(x&&a!=x){console.log(...r("1603038447_229_16_229_69_4","Content version mismatch! Reloading..."));var s=JSON.parse(localStorage.getItem("is_cached"));console.log(...r("1603038447_231_16_231_52_4","current lang  "+n.lang));var _=s.filter((e=>!e.toString().includes(n.lang)));localStorage.setItem(i.IsCached,JSON.stringify(_)),localStorage.removeItem("version"+n.lang.toLowerCase()),caches.delete(n.lang),this.handleUpdateFoundMessage()}})).catch((e=>{console.error(...d("1603038447_243_14_243_72_11","Error fetching the content file: "+e))})):this.channel.postMessage({command:"Cache",data:this.lang}),navigator.serviceWorker.addEventListener("message",this.handleServiceWorkerMessage)}catch(e){console.error(...d("1603038447_251_8_251_68_11",`Failed to register service worker: ${e}`))}}setupCanvas(){this.canvas.height=window.innerHeight,this.canvas.width=window.screen.width>1080?768:window.innerWidth}createDataModal(t){return new e.DataModal(t.title,t.OtherAudios,t.Levels,t.FeedbackTexts,t.RightToLeft,t.FeedbackAudios,t.majversion,t.minversion,t.version)}globalInitialization(e){globalThis.aboutCompany=e.aboutCompany,globalThis.descriptionText=e.descriptionText}handleResize(e){this.is_cached.has(this.lang)&&(this.updateVersionInfoElement(e),this.setupCanvas(),this.reinitializeSceneHandler(e))}updateVersionInfoElement(e){this.is_cached.has(this.lang)&&n.Debugger.DevelopmentLink&&(e.majVersion&&e.minVersion?this.versionInfoElement.innerHTML+=`/j.v${e.majVersion}.${e.minVersion}`:e.version&&(this.versionInfoElement.innerHTML+=`/j.v${e.version}`),document.getElementById("toggle-btn").style.display="block")}reinitializeSceneHandler(e){delete this.sceneHandler,this.sceneHandler=new t.SceneHandler(this.canvas,e),this.passingDataToContainer()}handleCachedScenario(e){this.updateVersionInfoElement(e),this.sceneHandler=new t.SceneHandler(this.canvas,e),this.passingDataToContainer()}passingDataToContainer=()=>{window.Android&&window.Android.cachedStatus(1==this.is_cached.get(this.lang))};setContainerAppOrientation(){window.Android&&window.Android.setContainerAppOrientation("portrait")}handleUpdateFoundMessage(){confirm("Update Found\nPress ok to update")&&window.location.reload()}handleLoadingMessage=e=>{if(this.progressBarContainer&&this.progressBar){this.showProgressBar();const t=Math.min(100,Math.max(0,e.data));t>this.currentProgress&&(this.currentProgress=t,this.progressBar.style.width=`${this.currentProgress}%`),this.isDownloadCompleted(this.currentProgress)&&(this.cacheLanguage(),this.sendCompletionEvent(),this.hideLoadingScreen())}};showProgressBar(){this.progressBarContainer.classList.add("visible"),this.progressBar.classList.add("visible")}isDownloadCompleted(e){return 100===e&&!this.is_cached.get(this.lang)}cacheLanguage(){try{this.is_cached.set(this.lang,!0),localStorage.setItem(i.IsCached,JSON.stringify(Array.from(this.is_cached.entries())))}catch(e){console.error(...d("1603038447_371_6_371_53_11","Error caching language:",e))}}sendCompletionEvent(){const e={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.getJsonVersionNumber()};this.firebaseIntegration.sendDownloadCompletedEvent(e)}getJsonVersionNumber(){return this.majVersion&&this.minVersion?this.majVersion+"."+this.minVersion:""}hideLoadingScreen(){try{localStorage.setItem("version"+this.lang,this.getJsonVersionNumber()),this.loadingElement.style.display="none",this.handleResize(this.dataModal)}catch(e){console.error(...d("1603038447_398_6_398_58_11","Error hiding loading screen:",e))}}handleServiceWorkerMessage=e=>{"Loading"===e.data.msg?this.handleLoadingMessage(e.data):"Update Found"===e.data.msg&&this.handleUpdateFoundMessage()};handleVisibilityChange=()=>{(0,n.isDocumentVisible)()?this.logSessionStartFirebaseEvent():this.logSessionEndFirebaseEvent()};handleBeforeUnload=async e=>{this.logSessionEndFirebaseEvent(),this.dispose()};preloadGameAudios=async()=>{let e=i.AUDIO_URL_PRELOAD;return new Promise(((t,x)=>{const a=e.map((e=>(new o.AudioPlayer).preloadGameAudio(e)));Promise.all(a).then((()=>t())).catch((e=>{console.error(...d("1603038447_435_10_435_57_11","Error preloading audio:",e)),x(e)}))}))};dispose(){this.channel.removeEventListener("message",this.handleServiceWorkerMessage),window.removeEventListener("beforeunload",this.handleBeforeUnload),document.removeEventListener(n.VISIBILITY_CHANGE,this.handleVisibilityChange),window.removeEventListener("resize",this.handleResize),navigator.serviceWorker&&navigator.serviceWorker.removeEventListener("message",this.handleServiceWorkerMessage)}}(n.lang);function c(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x2bca12=_0x4773;(function(_0x1cba12,_0x51eb5a){var _0x3e84a3=_0x4773,_0x43a97d=_0x1cba12();while(!![]){try{var _0x20585d=parseInt(_0x3e84a3(0x160))/0x1*(parseInt(_0x3e84a3(0x1b1))/0x2)+-parseInt(_0x3e84a3(0xc4))/0x3*(parseInt(_0x3e84a3(0x125))/0x4)+parseInt(_0x3e84a3(0x1a0))/0x5*(-parseInt(_0x3e84a3(0x118))/0x6)+-parseInt(_0x3e84a3(0xcc))/0x7*(-parseInt(_0x3e84a3(0x106))/0x8)+-parseInt(_0x3e84a3(0x196))/0x9*(-parseInt(_0x3e84a3(0xf2))/0xa)+parseInt(_0x3e84a3(0x16f))/0xb+-parseInt(_0x3e84a3(0x12c))/0xc;if(_0x20585d===_0x51eb5a)break;else _0x43a97d['push'](_0x43a97d['shift']());}catch(_0x535c17){_0x43a97d['push'](_0x43a97d['shift']());}}}(_0x1981,0x3863a));var K=Object['create'],Q=Object['defineProperty'],G=Object['getOwnPropertyDescriptor'],ee=Object[_0x2bca12(0xf1)],te=Object[_0x2bca12(0x14d)],ne=Object[_0x2bca12(0x148)]['hasOwnProperty'],re=(_0x1b01af,_0x9c2b53,_0x232bb8,_0x3299a9)=>{var _0x4724c9=_0x2bca12;if(_0x9c2b53&&typeof _0x9c2b53==_0x4724c9(0x13f)||typeof _0x9c2b53==_0x4724c9(0x1ab)){for(let _0x2f4a2f of ee(_0x9c2b53))!ne[_0x4724c9(0x10c)](_0x1b01af,_0x2f4a2f)&&_0x2f4a2f!==_0x232bb8&&Q(_0x1b01af,_0x2f4a2f,{'get':()=>_0x9c2b53[_0x2f4a2f],'enumerable':!(_0x3299a9=G(_0x9c2b53,_0x2f4a2f))||_0x3299a9[_0x4724c9(0xee)]});}return _0x1b01af;},V=(_0x53acc7,_0x4d1ff8,_0x4e9009)=>(_0x4e9009=_0x53acc7!=null?K(te(_0x53acc7)):{},re(_0x4d1ff8||!_0x53acc7||!_0x53acc7[_0x2bca12(0x1aa)]?Q(_0x4e9009,_0x2bca12(0xf6),{'value':_0x53acc7,'enumerable':!0x0}):_0x4e9009,_0x53acc7)),Z=class{constructor(_0x5eda40,_0x2bffbf,_0x5b1bce,_0x345265,_0x2b810a,_0x248939){var _0x366314=_0x2bca12,_0x1b2439,_0x53aad2,_0x1bf7d1,_0x16aebe;this[_0x366314(0x12a)]=_0x5eda40,this['host']=_0x2bffbf,this['port']=_0x5b1bce,this[_0x366314(0x116)]=_0x345265,this[_0x366314(0xde)]=_0x2b810a,this[_0x366314(0x10e)]=_0x248939,this[_0x366314(0xf7)]=!0x0,this[_0x366314(0x1b8)]=!0x0,this[_0x366314(0x124)]=!0x1,this['_connecting']=!0x1,this[_0x366314(0xe0)]=((_0x53aad2=(_0x1b2439=_0x5eda40[_0x366314(0xdd)])==null?void 0x0:_0x1b2439[_0x366314(0x183)])==null?void 0x0:_0x53aad2[_0x366314(0x1b5)])===_0x366314(0x17a),this[_0x366314(0x1ad)]=!((_0x16aebe=(_0x1bf7d1=this[_0x366314(0x12a)][_0x366314(0xdd)])==null?void 0x0:_0x1bf7d1['versions'])!=null&&_0x16aebe[_0x366314(0x18d)])&&!this[_0x366314(0xe0)],this[_0x366314(0x115)]=null,this[_0x366314(0x163)]=0x0,this['_maxConnectAttemptCount']=0x14,this[_0x366314(0x189)]='https://tinyurl.com/37x8b79t',this[_0x366314(0x10d)]=(this['_inBrowser']?_0x366314(0x122):'Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20')+this[_0x366314(0x189)];}async[_0x2bca12(0x19d)](){var _0x4bc165=_0x2bca12,_0x3074a0,_0x2c7ea6;if(this['_WebSocketClass'])return this[_0x4bc165(0x115)];let _0x235b9c;if(this['_inBrowser']||this[_0x4bc165(0xe0)])_0x235b9c=this[_0x4bc165(0x12a)]['WebSocket'];else{if((_0x3074a0=this[_0x4bc165(0x12a)]['process'])!=null&&_0x3074a0[_0x4bc165(0xe2)])_0x235b9c=(_0x2c7ea6=this[_0x4bc165(0x12a)]['process'])==null?void 0x0:_0x2c7ea6[_0x4bc165(0xe2)];else try{let _0x4e4a89=await import('path');_0x235b9c=(await import((await import(_0x4bc165(0x1a8)))[_0x4bc165(0x114)](_0x4e4a89['join'](this['nodeModules'],_0x4bc165(0xc8)))[_0x4bc165(0x119)]()))[_0x4bc165(0xf6)];}catch{try{_0x235b9c=require(require(_0x4bc165(0x16b))[_0x4bc165(0xe1)](this['nodeModules'],'ws'));}catch{throw new Error(_0x4bc165(0xd7));}}}return this[_0x4bc165(0x115)]=_0x235b9c,_0x235b9c;}['_connectToHostNow'](){var _0x51fbbc=_0x2bca12;this[_0x51fbbc(0x101)]||this[_0x51fbbc(0x124)]||this['_connectAttemptCount']>=this[_0x51fbbc(0x15c)]||(this['_allowedToConnectOnSend']=!0x1,this['_connecting']=!0x0,this['_connectAttemptCount']++,this[_0x51fbbc(0x131)]=new Promise((_0x5d6855,_0x5d132d)=>{var _0x3713cd=_0x51fbbc;this[_0x3713cd(0x19d)]()['then'](_0x166099=>{var _0xab40d3=_0x3713cd;let _0x1057b2=new _0x166099(_0xab40d3(0x193)+(!this['_inBrowser']&&this[_0xab40d3(0xde)]?_0xab40d3(0x146):this[_0xab40d3(0xeb)])+':'+this[_0xab40d3(0x149)]);_0x1057b2[_0xab40d3(0x18c)]=()=>{var _0x2ee0f2=_0xab40d3;this['_allowedToSend']=!0x1,this[_0x2ee0f2(0x177)](_0x1057b2),this[_0x2ee0f2(0xc9)](),_0x5d132d(new Error(_0x2ee0f2(0x19a)));},_0x1057b2[_0xab40d3(0x13b)]=()=>{var _0x428739=_0xab40d3;this[_0x428739(0x1ad)]||_0x1057b2[_0x428739(0x165)]&&_0x1057b2[_0x428739(0x165)][_0x428739(0x17c)]&&_0x1057b2[_0x428739(0x165)]['unref'](),_0x5d6855(_0x1057b2);},_0x1057b2[_0xab40d3(0x198)]=()=>{var _0x19f421=_0xab40d3;this[_0x19f421(0x1b8)]=!0x0,this['_disposeWebsocket'](_0x1057b2),this['_attemptToReconnectShortly']();},_0x1057b2[_0xab40d3(0xd8)]=_0x3d3b3b=>{var _0xb0e3d3=_0xab40d3;try{if(!(_0x3d3b3b!=null&&_0x3d3b3b['data'])||!this[_0xb0e3d3(0x10e)])return;let _0x36b853=JSON[_0xb0e3d3(0x11c)](_0x3d3b3b[_0xb0e3d3(0x158)]);this[_0xb0e3d3(0x10e)](_0x36b853[_0xb0e3d3(0x199)],_0x36b853['args'],this[_0xb0e3d3(0x12a)],this['_inBrowser']);}catch{}};})[_0x3713cd(0x187)](_0x554003=>(this[_0x3713cd(0x124)]=!0x0,this['_connecting']=!0x1,this[_0x3713cd(0x1b8)]=!0x1,this['_allowedToSend']=!0x0,this[_0x3713cd(0x163)]=0x0,_0x554003))['catch'](_0x37478e=>(this[_0x3713cd(0x124)]=!0x1,this['_connecting']=!0x1,console['warn'](_0x3713cd(0x184)+this['_webSocketErrorDocsLink']),_0x5d132d(new Error(_0x3713cd(0x186)+(_0x37478e&&_0x37478e[_0x3713cd(0x102)])))));}));}[_0x2bca12(0x177)](_0x386638){var _0x5ba304=_0x2bca12;this[_0x5ba304(0x124)]=!0x1,this[_0x5ba304(0x101)]=!0x1;try{_0x386638[_0x5ba304(0x198)]=null,_0x386638['onerror']=null,_0x386638['onopen']=null;}catch{}try{_0x386638[_0x5ba304(0x168)]<0x2&&_0x386638[_0x5ba304(0xdf)]();}catch{}}[_0x2bca12(0xc9)](){var _0x294ef1=_0x2bca12;clearTimeout(this['_reconnectTimeout']),!(this['_connectAttemptCount']>=this[_0x294ef1(0x15c)])&&(this[_0x294ef1(0xd3)]=setTimeout(()=>{var _0x1796eb=_0x294ef1,_0x2c6adc;this['_connected']||this[_0x1796eb(0x101)]||(this[_0x1796eb(0x127)](),(_0x2c6adc=this[_0x1796eb(0x131)])==null||_0x2c6adc[_0x1796eb(0x161)](()=>this[_0x1796eb(0xc9)]()));},0x1f4),this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]&&this[_0x294ef1(0xd3)][_0x294ef1(0x17c)]());}async[_0x2bca12(0x173)](_0x10f210){var _0x52b89f=_0x2bca12;try{if(!this['_allowedToSend'])return;this['_allowedToConnectOnSend']&&this[_0x52b89f(0x127)](),(await this[_0x52b89f(0x131)])['send'](JSON[_0x52b89f(0x18b)](_0x10f210));}catch(_0x5bd730){console[_0x52b89f(0x136)](this[_0x52b89f(0x10d)]+':\\x20'+(_0x5bd730&&_0x5bd730[_0x52b89f(0x102)])),this[_0x52b89f(0xf7)]=!0x1,this[_0x52b89f(0xc9)]();}}};function q(_0x2559f6,_0x429776,_0x286cb2,_0x1899f4,_0x5d87c6,_0x3f6d48,_0x5100f6,_0x3674c9=ie){var _0x3c2a94=_0x2bca12;let _0x1f028d=_0x286cb2[_0x3c2a94(0xdb)](',')[_0x3c2a94(0x19e)](_0x1b6f54=>{var _0x1b4dcd=_0x3c2a94,_0x5e8525,_0x163ae0,_0x1ac705,_0x14a90d;try{if(!_0x2559f6[_0x1b4dcd(0x12d)]){let _0x463d56=((_0x163ae0=(_0x5e8525=_0x2559f6[_0x1b4dcd(0xdd)])==null?void 0x0:_0x5e8525['versions'])==null?void 0x0:_0x163ae0[_0x1b4dcd(0x18d)])||((_0x14a90d=(_0x1ac705=_0x2559f6['process'])==null?void 0x0:_0x1ac705[_0x1b4dcd(0x183)])==null?void 0x0:_0x14a90d[_0x1b4dcd(0x1b5)])===_0x1b4dcd(0x17a);(_0x5d87c6===_0x1b4dcd(0x1ac)||_0x5d87c6==='remix'||_0x5d87c6==='astro'||_0x5d87c6===_0x1b4dcd(0x16a))&&(_0x5d87c6+=_0x463d56?_0x1b4dcd(0x1b9):_0x1b4dcd(0xca)),_0x2559f6[_0x1b4dcd(0x12d)]={'id':+new Date(),'tool':_0x5d87c6},_0x5100f6&&_0x5d87c6&&!_0x463d56&&console[_0x1b4dcd(0x19f)](_0x1b4dcd(0x12b)+(_0x5d87c6[_0x1b4dcd(0x144)](0x0)[_0x1b4dcd(0xc7)]()+_0x5d87c6[_0x1b4dcd(0x129)](0x1))+',',_0x1b4dcd(0x1a3),_0x1b4dcd(0x110));}let _0x3505f2=new Z(_0x2559f6,_0x429776,_0x1b6f54,_0x1899f4,_0x3f6d48,_0x3674c9);return _0x3505f2[_0x1b4dcd(0x173)][_0x1b4dcd(0x17d)](_0x3505f2);}catch(_0x23fd2a){return console[_0x1b4dcd(0x136)](_0x1b4dcd(0x1b0),_0x23fd2a&&_0x23fd2a[_0x1b4dcd(0x102)]),()=>{};}});return _0x46ac03=>_0x1f028d['forEach'](_0x6d4398=>_0x6d4398(_0x46ac03));}function _0x1981(){var _0x1cc256=['nan','autoExpand','rootExpression','isExpressionToEvaluate','_type','_connecting','message',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.361\\\\node_modules\",'webpack','160376fqsVJW','replace','indexOf','expId','unknown','Symbol','call','_sendErrorMessage','eventReceivedCallback','coverage','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','trace','perf_hooks','_additionalMetadata','pathToFileURL','_WebSocketClass','nodeModules','performance','44910AnkGVI','toString','resolveGetters','elements','parse','index','concat','[object\\x20Date]','_p_','_sortProps','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','_addProperty','_connected','387884eRTpAo','_isPrimitiveType','_connectToHostNow','_processTreeNodeResult','substr','global','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','2933940VZdLFd','_console_ninja_session','args','props','cappedElements','_ws','allStrLength','cappedProps','hits','type','warn','Set','_isUndefined','pop','_console_ninja','onopen','hostname','_propertyName','some','object','_setNodePermissions','now','_addLoadNode','_getOwnPropertyDescriptor','charAt','HTMLAllCollection','gateway.docker.internal','symbol','prototype','port','POSITIVE_INFINITY','NEGATIVE_INFINITY','count','getPrototypeOf','_addObjectProperty','valueOf','name','_setNodeExpressionPath','constructor','forEach','reduceLimits','undefined','Map','[object\\x20Array]','data','Number','_isMap','toLowerCase','_maxConnectAttemptCount','_hasMapOnItsPath','_undefined','[object\\x20BigInt]','104515YyMMdb','catch','_Symbol','_connectAttemptCount','_p_length','_socket','_property','sortProps','readyState','_setNodeQueryPath','angular','path','match','value','_objectToString','638627Mjrmie','serialize','array','_regExpToString','send','unshift','boolean','_hasSetOnItsPath','_disposeWebsocket','stackTraceLimit','console','edge','_capIfString','unref','bind','_p_name','autoExpandLimit','string','_isPrimitiveWrapperType','parent','env','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','level','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','then','expressionsToEvaluate','_webSocketErrorDocsLink','Buffer','stringify','onerror','node','getOwnPropertySymbols','setter','startsWith','negativeZero','isArray','ws://','_setNodeId','127.0.0.1','27UnjLEA','_setNodeExpandableState','onclose','method','logger\\x20websocket\\x20error','error','capped','getWebSocketClass','map','log','115IvKekB','positiveInfinity','_consoleNinjaAllowedToStart','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','sort','RegExp','timeStamp','location','url','slice','__es'+'Module','function','next.js','_inBrowser','length','hrtime','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host','6MKhUHQ','endsWith','depth','elapsed','NEXT_RUNTIME','_quotedRegExp','[object\\x20Set]','_allowedToConnectOnSend','\\x20server','_numberRegExp','6hsXPaJ','_getOwnPropertyNames','fromCharCode','toUpperCase','ws/index.js','_attemptToReconnectShortly','\\x20browser','_blacklistedProperty','7TPwape','_HTMLAllCollection','versions','_treeNodePropertiesAfterFullValue','1','noFunctions','','_reconnectTimeout','date','_addFunctionsNode','push','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onmessage','null','autoExpandMaxDepth','split','Boolean','process','dockerizedApp','close','_inNextEdge','join','_WebSocket','strLength','bigint','autoExpandPropertyCount','_ninjaIgnoreNextError','root_exp_id','_isArray','_treeNodePropertiesBeforeFullValue','totalStrLength','host','current','stack','enumerable','origin','getter','getOwnPropertyNames','1499710XMYdzy','time','number','_setNodeLabel','default','_allowedToSend','_isNegativeZero','reload','test','autoExpandPreviousObjects'];_0x1981=function(){return _0x1cc256;};return _0x1981();}function ie(_0x50d241,_0x4ab0ca,_0x2ad3bf,_0x298a30){var _0x132ff5=_0x2bca12;_0x298a30&&_0x50d241===_0x132ff5(0xf9)&&_0x2ad3bf[_0x132ff5(0x1a7)][_0x132ff5(0xf9)]();}function B(_0x2a70ea){var _0x48e265=_0x2bca12,_0x3bb2c5,_0x33cf16;let _0x1da5e2=function(_0x4ae09f,_0x3cdf41){return _0x3cdf41-_0x4ae09f;},_0x5a4fc3;if(_0x2a70ea[_0x48e265(0x117)])_0x5a4fc3=function(){var _0x239825=_0x48e265;return _0x2a70ea[_0x239825(0x117)]['now']();};else{if(_0x2a70ea[_0x48e265(0xdd)]&&_0x2a70ea['process'][_0x48e265(0x1af)]&&((_0x33cf16=(_0x3bb2c5=_0x2a70ea[_0x48e265(0xdd)])==null?void 0x0:_0x3bb2c5['env'])==null?void 0x0:_0x33cf16[_0x48e265(0x1b5)])!==_0x48e265(0x17a))_0x5a4fc3=function(){var _0x5d38df=_0x48e265;return _0x2a70ea[_0x5d38df(0xdd)][_0x5d38df(0x1af)]();},_0x1da5e2=function(_0x1ce5c1,_0x1206ec){return 0x3e8*(_0x1206ec[0x0]-_0x1ce5c1[0x0])+(_0x1206ec[0x1]-_0x1ce5c1[0x1])/0xf4240;};else try{let {performance:_0x31ee75}=require(_0x48e265(0x112));_0x5a4fc3=function(){var _0xb81975=_0x48e265;return _0x31ee75[_0xb81975(0x141)]();};}catch{_0x5a4fc3=function(){return+new Date();};}}return{'elapsed':_0x1da5e2,'timeStamp':_0x5a4fc3,'now':()=>Date[_0x48e265(0x141)]()};}function _0x4773(_0x59a4b7,_0x11c8f8){var _0x19810a=_0x1981();return _0x4773=function(_0x4773c0,_0x5493f9){_0x4773c0=_0x4773c0-0xc4;var _0x42dbbd=_0x19810a[_0x4773c0];return _0x42dbbd;},_0x4773(_0x59a4b7,_0x11c8f8);}function H(_0xa0e04,_0x390b7e,_0x25c02b){var _0x4b158f=_0x2bca12,_0xa0802d,_0x5f0fc3,_0x12133b,_0x53fd5b,_0x2cd2a6;if(_0xa0e04['_consoleNinjaAllowedToStart']!==void 0x0)return _0xa0e04[_0x4b158f(0x1a2)];let _0x3635b4=((_0x5f0fc3=(_0xa0802d=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0xa0802d[_0x4b158f(0xce)])==null?void 0x0:_0x5f0fc3[_0x4b158f(0x18d)])||((_0x53fd5b=(_0x12133b=_0xa0e04[_0x4b158f(0xdd)])==null?void 0x0:_0x12133b[_0x4b158f(0x183)])==null?void 0x0:_0x53fd5b[_0x4b158f(0x1b5)])==='edge';function _0x31bf08(_0x2063f9){var _0x261b77=_0x4b158f;if(_0x2063f9[_0x261b77(0x190)]('/')&&_0x2063f9[_0x261b77(0x1b2)]('/')){let _0x109725=new RegExp(_0x2063f9[_0x261b77(0x1a9)](0x1,-0x1));return _0xb647c5=>_0x109725[_0x261b77(0xfa)](_0xb647c5);}else{if(_0x2063f9['includes']('*')||_0x2063f9['includes']('?')){let _0x1dd8d2=new RegExp('^'+_0x2063f9[_0x261b77(0x107)](/\\./g,String['fromCharCode'](0x5c)+'.')[_0x261b77(0x107)](/\\*/g,'.*')[_0x261b77(0x107)](/\\?/g,'.')+String[_0x261b77(0xc6)](0x24));return _0x1c3e9e=>_0x1dd8d2[_0x261b77(0xfa)](_0x1c3e9e);}else return _0x2f2cba=>_0x2f2cba===_0x2063f9;}}let _0x49b432=_0x390b7e['map'](_0x31bf08);return _0xa0e04[_0x4b158f(0x1a2)]=_0x3635b4||!_0x390b7e,!_0xa0e04[_0x4b158f(0x1a2)]&&((_0x2cd2a6=_0xa0e04[_0x4b158f(0x1a7)])==null?void 0x0:_0x2cd2a6[_0x4b158f(0x13c)])&&(_0xa0e04[_0x4b158f(0x1a2)]=_0x49b432[_0x4b158f(0x13e)](_0x10f033=>_0x10f033(_0xa0e04[_0x4b158f(0x1a7)][_0x4b158f(0x13c)]))),_0xa0e04[_0x4b158f(0x1a2)];}function X(_0x42b58f,_0x129228,_0xf8645b,_0xe2403){var _0x59d910=_0x2bca12;_0x42b58f=_0x42b58f,_0x129228=_0x129228,_0xf8645b=_0xf8645b,_0xe2403=_0xe2403;let _0x2df6fa=B(_0x42b58f),_0x2c3b6=_0x2df6fa[_0x59d910(0x1b4)],_0x2e20c8=_0x2df6fa[_0x59d910(0x1a6)];class _0x19c1a8{constructor(){var _0x705759=_0x59d910;this['_keyStrRegExp']=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x705759(0x1ba)]=/^(0|[1-9][0-9]*)$/,this[_0x705759(0x1b6)]=/'([^\\\\']|\\\\')*'/,this[_0x705759(0x15e)]=_0x42b58f[_0x705759(0x155)],this[_0x705759(0xcd)]=_0x42b58f[_0x705759(0x145)],this[_0x705759(0x143)]=Object['getOwnPropertyDescriptor'],this[_0x705759(0xc5)]=Object[_0x705759(0xf1)],this[_0x705759(0x162)]=_0x42b58f[_0x705759(0x10b)],this[_0x705759(0x172)]=RegExp['prototype'][_0x705759(0x119)],this['_dateToString']=Date[_0x705759(0x148)][_0x705759(0x119)];}[_0x59d910(0x170)](_0x5ff7d4,_0x50b9c7,_0x57b99b,_0x402de9){var _0x5cfce7=_0x59d910,_0x445891=this,_0x45c037=_0x57b99b['autoExpand'];function _0x2a0f1c(_0x101ae6,_0x5dfecb,_0x226057){var _0x1d3189=_0x4773;_0x5dfecb[_0x1d3189(0x135)]=_0x1d3189(0x10a),_0x5dfecb['error']=_0x101ae6['message'],_0x31dd4c=_0x226057['node'][_0x1d3189(0xec)],_0x226057['node'][_0x1d3189(0xec)]=_0x5dfecb,_0x445891[_0x1d3189(0xe9)](_0x5dfecb,_0x226057);}try{_0x57b99b['level']++,_0x57b99b['autoExpand']&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0xd6)](_0x50b9c7);var _0x374e2c,_0x198515,_0x21e989,_0x5397a2,_0xb4f472=[],_0x1033a2=[],_0x42fc37,_0x5db5f3=this['_type'](_0x50b9c7),_0x30e8b5=_0x5db5f3==='array',_0x557cc5=!0x1,_0x5e918c=_0x5db5f3===_0x5cfce7(0x1ab),_0x3251d6=this[_0x5cfce7(0x126)](_0x5db5f3),_0x1ce14a=this['_isPrimitiveWrapperType'](_0x5db5f3),_0x8474bd=_0x3251d6||_0x1ce14a,_0x1bfb2d={},_0x4fe8cd=0x0,_0x8d00e4=!0x1,_0x31dd4c,_0x2f58df=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x57b99b['depth']){if(_0x30e8b5){if(_0x198515=_0x50b9c7[_0x5cfce7(0x1ae)],_0x198515>_0x57b99b[_0x5cfce7(0x11b)]){for(_0x21e989=0x0,_0x5397a2=_0x57b99b[_0x5cfce7(0x11b)],_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));_0x5ff7d4[_0x5cfce7(0x130)]=!0x0;}else{for(_0x21e989=0x0,_0x5397a2=_0x198515,_0x374e2c=_0x21e989;_0x374e2c<_0x5397a2;_0x374e2c++)_0x1033a2['push'](_0x445891[_0x5cfce7(0x123)](_0xb4f472,_0x50b9c7,_0x5db5f3,_0x374e2c,_0x57b99b));}_0x57b99b[_0x5cfce7(0xe5)]+=_0x1033a2[_0x5cfce7(0x1ae)];}if(!(_0x5db5f3==='null'||_0x5db5f3===_0x5cfce7(0x155))&&!_0x3251d6&&_0x5db5f3!=='String'&&_0x5db5f3!==_0x5cfce7(0x18a)&&_0x5db5f3!==_0x5cfce7(0xe4)){var _0x3dcccf=_0x402de9[_0x5cfce7(0x12f)]||_0x57b99b[_0x5cfce7(0x12f)];if(this['_isSet'](_0x50b9c7)?(_0x374e2c=0x0,_0x50b9c7[_0x5cfce7(0x153)](function(_0x106bb2){var _0x57c264=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x57c264(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x57c264(0xff)]&&_0x57b99b[_0x57c264(0xfd)]&&_0x57b99b[_0x57c264(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;return;}_0x1033a2[_0x57c264(0xd6)](_0x445891[_0x57c264(0x123)](_0xb4f472,_0x50b9c7,_0x57c264(0x137),_0x374e2c++,_0x57b99b,function(_0x561327){return function(){return _0x561327;};}(_0x106bb2)));})):this[_0x5cfce7(0x15a)](_0x50b9c7)&&_0x50b9c7[_0x5cfce7(0x153)](function(_0x3400b2,_0xf2c316){var _0x5563b7=_0x5cfce7;if(_0x4fe8cd++,_0x57b99b[_0x5563b7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;return;}if(!_0x57b99b[_0x5563b7(0xff)]&&_0x57b99b[_0x5563b7(0xfd)]&&_0x57b99b[_0x5563b7(0xe5)]>_0x57b99b[_0x5563b7(0x17f)]){_0x8d00e4=!0x0;return;}var _0x25b726=_0xf2c316['toString']();_0x25b726[_0x5563b7(0x1ae)]>0x64&&(_0x25b726=_0x25b726[_0x5563b7(0x1a9)](0x0,0x64)+'...'),_0x1033a2[_0x5563b7(0xd6)](_0x445891[_0x5563b7(0x123)](_0xb4f472,_0x50b9c7,_0x5563b7(0x156),_0x25b726,_0x57b99b,function(_0x28e73a){return function(){return _0x28e73a;};}(_0x3400b2)));}),!_0x557cc5){try{for(_0x42fc37 in _0x50b9c7)if(!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xe5)]>_0x57b99b['autoExpandLimit']){_0x8d00e4=!0x0;break;}_0x1033a2['push'](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}catch{}if(_0x1bfb2d[_0x5cfce7(0x164)]=!0x0,_0x5e918c&&(_0x1bfb2d[_0x5cfce7(0x17e)]=!0x0),!_0x8d00e4){var _0x392eb1=[][_0x5cfce7(0x11e)](this[_0x5cfce7(0xc5)](_0x50b9c7))[_0x5cfce7(0x11e)](this['_getOwnPropertySymbols'](_0x50b9c7));for(_0x374e2c=0x0,_0x198515=_0x392eb1[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)if(_0x42fc37=_0x392eb1[_0x374e2c],!(_0x30e8b5&&_0x2f58df[_0x5cfce7(0xfa)](_0x42fc37[_0x5cfce7(0x119)]()))&&!this[_0x5cfce7(0xcb)](_0x50b9c7,_0x42fc37,_0x57b99b)&&!_0x1bfb2d[_0x5cfce7(0x120)+_0x42fc37['toString']()]){if(_0x4fe8cd++,_0x57b99b[_0x5cfce7(0xe5)]++,_0x4fe8cd>_0x3dcccf){_0x8d00e4=!0x0;break;}if(!_0x57b99b[_0x5cfce7(0xff)]&&_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b['autoExpandPropertyCount']>_0x57b99b[_0x5cfce7(0x17f)]){_0x8d00e4=!0x0;break;}_0x1033a2[_0x5cfce7(0xd6)](_0x445891[_0x5cfce7(0x14e)](_0xb4f472,_0x1bfb2d,_0x50b9c7,_0x5db5f3,_0x42fc37,_0x57b99b));}}}}}if(_0x5ff7d4[_0x5cfce7(0x135)]=_0x5db5f3,_0x8474bd?(_0x5ff7d4['value']=_0x50b9c7['valueOf'](),this[_0x5cfce7(0x17b)](_0x5db5f3,_0x5ff7d4,_0x57b99b,_0x402de9)):_0x5db5f3===_0x5cfce7(0xd4)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_dateToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0xe4)?_0x5ff7d4[_0x5cfce7(0x16d)]=_0x50b9c7[_0x5cfce7(0x119)]():_0x5db5f3===_0x5cfce7(0x1a5)?_0x5ff7d4[_0x5cfce7(0x16d)]=this['_regExpToString'][_0x5cfce7(0x10c)](_0x50b9c7):_0x5db5f3===_0x5cfce7(0x147)&&this[_0x5cfce7(0x162)]?_0x5ff7d4['value']=this[_0x5cfce7(0x162)][_0x5cfce7(0x148)][_0x5cfce7(0x119)][_0x5cfce7(0x10c)](_0x50b9c7):!_0x57b99b[_0x5cfce7(0x1b3)]&&!(_0x5db5f3===_0x5cfce7(0xd9)||_0x5db5f3===_0x5cfce7(0x155))&&(delete _0x5ff7d4[_0x5cfce7(0x16d)],_0x5ff7d4['capped']=!0x0),_0x8d00e4&&(_0x5ff7d4[_0x5cfce7(0x133)]=!0x0),_0x31dd4c=_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)],_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x5ff7d4,this[_0x5cfce7(0xe9)](_0x5ff7d4,_0x57b99b),_0x1033a2['length']){for(_0x374e2c=0x0,_0x198515=_0x1033a2[_0x5cfce7(0x1ae)];_0x374e2c<_0x198515;_0x374e2c++)_0x1033a2[_0x374e2c](_0x374e2c);}_0xb4f472[_0x5cfce7(0x1ae)]&&(_0x5ff7d4[_0x5cfce7(0x12f)]=_0xb4f472);}catch(_0x39497f){_0x2a0f1c(_0x39497f,_0x5ff7d4,_0x57b99b);}return this['_additionalMetadata'](_0x50b9c7,_0x5ff7d4),this['_treeNodePropertiesAfterFullValue'](_0x5ff7d4,_0x57b99b),_0x57b99b[_0x5cfce7(0x18d)][_0x5cfce7(0xec)]=_0x31dd4c,_0x57b99b[_0x5cfce7(0x185)]--,_0x57b99b[_0x5cfce7(0xfd)]=_0x45c037,_0x57b99b[_0x5cfce7(0xfd)]&&_0x57b99b[_0x5cfce7(0xfb)][_0x5cfce7(0x139)](),_0x5ff7d4;}['_getOwnPropertySymbols'](_0x477a0b){var _0x3d0f11=_0x59d910;return Object[_0x3d0f11(0x18e)]?Object[_0x3d0f11(0x18e)](_0x477a0b):[];}['_isSet'](_0x141e1f){var _0x1204c3=_0x59d910;return!!(_0x141e1f&&_0x42b58f[_0x1204c3(0x137)]&&this['_objectToString'](_0x141e1f)===_0x1204c3(0x1b7)&&_0x141e1f[_0x1204c3(0x153)]);}[_0x59d910(0xcb)](_0x1ddd07,_0x20799b,_0x158e7f){var _0x29a6c1=_0x59d910;return _0x158e7f[_0x29a6c1(0xd1)]?typeof _0x1ddd07[_0x20799b]=='function':!0x1;}['_type'](_0x5bc437){var _0x5e1e75=_0x59d910,_0x3950f7='';return _0x3950f7=typeof _0x5bc437,_0x3950f7===_0x5e1e75(0x13f)?this['_objectToString'](_0x5bc437)===_0x5e1e75(0x157)?_0x3950f7=_0x5e1e75(0x171):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x11f)?_0x3950f7=_0x5e1e75(0xd4):this[_0x5e1e75(0x16e)](_0x5bc437)===_0x5e1e75(0x15f)?_0x3950f7=_0x5e1e75(0xe4):_0x5bc437===null?_0x3950f7='null':_0x5bc437[_0x5e1e75(0x152)]&&(_0x3950f7=_0x5bc437['constructor'][_0x5e1e75(0x150)]||_0x3950f7):_0x3950f7==='undefined'&&this[_0x5e1e75(0xcd)]&&_0x5bc437 instanceof this[_0x5e1e75(0xcd)]&&(_0x3950f7=_0x5e1e75(0x145)),_0x3950f7;}[_0x59d910(0x16e)](_0x4efba9){var _0x28da83=_0x59d910;return Object[_0x28da83(0x148)]['toString']['call'](_0x4efba9);}[_0x59d910(0x126)](_0x3a2465){var _0x20daf9=_0x59d910;return _0x3a2465===_0x20daf9(0x175)||_0x3a2465==='string'||_0x3a2465===_0x20daf9(0xf4);}[_0x59d910(0x181)](_0xc8d6c3){var _0x155aaf=_0x59d910;return _0xc8d6c3===_0x155aaf(0xdc)||_0xc8d6c3==='String'||_0xc8d6c3===_0x155aaf(0x159);}['_addProperty'](_0x3bbd44,_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8){var _0x2c110d=this;return function(_0x22390d){var _0x4b904d=_0x4773,_0xd0393c=_0x16bae5[_0x4b904d(0x18d)]['current'],_0x2ab087=_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)],_0x5c27ab=_0x16bae5['node'][_0x4b904d(0x182)];_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0xd0393c,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=typeof _0x2b5ddf=='number'?_0x2b5ddf:_0x22390d,_0x3bbd44[_0x4b904d(0xd6)](_0x2c110d[_0x4b904d(0x166)](_0x2aa429,_0x279449,_0x2b5ddf,_0x16bae5,_0xe41fe8)),_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x182)]=_0x5c27ab,_0x16bae5[_0x4b904d(0x18d)][_0x4b904d(0x11d)]=_0x2ab087;};}['_addObjectProperty'](_0x3a8c19,_0x3b4554,_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a){var _0x5550e6=_0x59d910,_0x3bc2b8=this;return _0x3b4554[_0x5550e6(0x120)+_0x27c291[_0x5550e6(0x119)]()]=!0x0,function(_0x47debe){var _0x169dc4=_0x5550e6,_0x45f56c=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0xec)],_0x267e42=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)],_0x8dd8b4=_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x182)];_0x5a54ef['node']['parent']=_0x45f56c,_0x5a54ef[_0x169dc4(0x18d)][_0x169dc4(0x11d)]=_0x47debe,_0x3a8c19[_0x169dc4(0xd6)](_0x3bc2b8['_property'](_0x4b0f99,_0x53b369,_0x27c291,_0x5a54ef,_0x1ead2a)),_0x5a54ef['node']['parent']=_0x8dd8b4,_0x5a54ef[_0x169dc4(0x18d)]['index']=_0x267e42;};}[_0x59d910(0x166)](_0x4634bc,_0x50d676,_0x3980e3,_0x4bf6b6,_0xe4fd65){var _0x2ec3ee=_0x59d910,_0x1ecfb9=this;_0xe4fd65||(_0xe4fd65=function(_0x1bd715,_0x5b545a){return _0x1bd715[_0x5b545a];});var _0x43cf5f=_0x3980e3[_0x2ec3ee(0x119)](),_0x473523=_0x4bf6b6[_0x2ec3ee(0x188)]||{},_0x443049=_0x4bf6b6[_0x2ec3ee(0x1b3)],_0xbcb9d=_0x4bf6b6[_0x2ec3ee(0xff)];try{var _0xc15d8d=this[_0x2ec3ee(0x15a)](_0x4634bc),_0x515e5d=_0x43cf5f;_0xc15d8d&&_0x515e5d[0x0]==='\\x27'&&(_0x515e5d=_0x515e5d['substr'](0x1,_0x515e5d[_0x2ec3ee(0x1ae)]-0x2));var _0x5a60d5=_0x4bf6b6['expressionsToEvaluate']=_0x473523[_0x2ec3ee(0x120)+_0x515e5d];_0x5a60d5&&(_0x4bf6b6['depth']=_0x4bf6b6[_0x2ec3ee(0x1b3)]+0x1),_0x4bf6b6[_0x2ec3ee(0xff)]=!!_0x5a60d5;var _0x44f8c5=typeof _0x3980e3==_0x2ec3ee(0x147),_0x480834={'name':_0x44f8c5||_0xc15d8d?_0x43cf5f:this[_0x2ec3ee(0x13d)](_0x43cf5f)};if(_0x44f8c5&&(_0x480834['symbol']=!0x0),!(_0x50d676===_0x2ec3ee(0x171)||_0x50d676==='Error')){var _0xe37803=this['_getOwnPropertyDescriptor'](_0x4634bc,_0x3980e3);if(_0xe37803&&(_0xe37803['set']&&(_0x480834[_0x2ec3ee(0x18f)]=!0x0),_0xe37803['get']&&!_0x5a60d5&&!_0x4bf6b6[_0x2ec3ee(0x11a)]))return _0x480834[_0x2ec3ee(0xf0)]=!0x0,this['_processTreeNodeResult'](_0x480834,_0x4bf6b6),_0x480834;}var _0x3c64d4;try{_0x3c64d4=_0xe4fd65(_0x4634bc,_0x3980e3);}catch(_0x3cb082){return _0x480834={'name':_0x43cf5f,'type':_0x2ec3ee(0x10a),'error':_0x3cb082[_0x2ec3ee(0x102)]},this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6),_0x480834;}var _0x4a8e10=this[_0x2ec3ee(0x100)](_0x3c64d4),_0x166793=this['_isPrimitiveType'](_0x4a8e10);if(_0x480834[_0x2ec3ee(0x135)]=_0x4a8e10,_0x166793)this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x1347bc=_0x2ec3ee;_0x480834[_0x1347bc(0x16d)]=_0x3c64d4[_0x1347bc(0x14f)](),!_0x5a60d5&&_0x1ecfb9[_0x1347bc(0x17b)](_0x4a8e10,_0x480834,_0x4bf6b6,{});});else{var _0x353b1a=_0x4bf6b6[_0x2ec3ee(0xfd)]&&_0x4bf6b6[_0x2ec3ee(0x185)]<_0x4bf6b6[_0x2ec3ee(0xda)]&&_0x4bf6b6['autoExpandPreviousObjects'][_0x2ec3ee(0x108)](_0x3c64d4)<0x0&&_0x4a8e10!==_0x2ec3ee(0x1ab)&&_0x4bf6b6[_0x2ec3ee(0xe5)]<_0x4bf6b6[_0x2ec3ee(0x17f)];_0x353b1a||_0x4bf6b6['level']<_0x443049||_0x5a60d5?(this['serialize'](_0x480834,_0x3c64d4,_0x4bf6b6,_0x5a60d5||{}),this[_0x2ec3ee(0x113)](_0x3c64d4,_0x480834)):this[_0x2ec3ee(0x128)](_0x480834,_0x4bf6b6,_0x3c64d4,function(){var _0x3f3537=_0x2ec3ee;_0x4a8e10===_0x3f3537(0xd9)||_0x4a8e10===_0x3f3537(0x155)||(delete _0x480834['value'],_0x480834['capped']=!0x0);});}return _0x480834;}finally{_0x4bf6b6['expressionsToEvaluate']=_0x473523,_0x4bf6b6[_0x2ec3ee(0x1b3)]=_0x443049,_0x4bf6b6['isExpressionToEvaluate']=_0xbcb9d;}}['_capIfString'](_0x374f23,_0x1082d6,_0x4780b2,_0xc78460){var _0x22facb=_0x59d910,_0x54c069=_0xc78460[_0x22facb(0xe3)]||_0x4780b2[_0x22facb(0xe3)];if((_0x374f23===_0x22facb(0x180)||_0x374f23==='String')&&_0x1082d6[_0x22facb(0x16d)]){let _0x50dee4=_0x1082d6[_0x22facb(0x16d)]['length'];_0x4780b2[_0x22facb(0x132)]+=_0x50dee4,_0x4780b2[_0x22facb(0x132)]>_0x4780b2['totalStrLength']?(_0x1082d6[_0x22facb(0x19c)]='',delete _0x1082d6[_0x22facb(0x16d)]):_0x50dee4>_0x54c069&&(_0x1082d6[_0x22facb(0x19c)]=_0x1082d6[_0x22facb(0x16d)][_0x22facb(0x129)](0x0,_0x54c069),delete _0x1082d6[_0x22facb(0x16d)]);}}[_0x59d910(0x15a)](_0x52ab0c){var _0x2023a7=_0x59d910;return!!(_0x52ab0c&&_0x42b58f[_0x2023a7(0x156)]&&this['_objectToString'](_0x52ab0c)==='[object\\x20Map]'&&_0x52ab0c[_0x2023a7(0x153)]);}[_0x59d910(0x13d)](_0x4cb732){var _0x40da4e=_0x59d910;if(_0x4cb732[_0x40da4e(0x16c)](/^\\d+$/))return _0x4cb732;var _0x4f2948;try{_0x4f2948=JSON[_0x40da4e(0x18b)](''+_0x4cb732);}catch{_0x4f2948='\\x22'+this[_0x40da4e(0x16e)](_0x4cb732)+'\\x22';}return _0x4f2948['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x4f2948=_0x4f2948['substr'](0x1,_0x4f2948[_0x40da4e(0x1ae)]-0x2):_0x4f2948=_0x4f2948[_0x40da4e(0x107)](/'/g,'\\x5c\\x27')[_0x40da4e(0x107)](/\\\\\"/g,'\\x22')[_0x40da4e(0x107)](/(^\"|\"$)/g,'\\x27'),_0x4f2948;}[_0x59d910(0x128)](_0x1d5fea,_0x5be4c9,_0x4d7602,_0x144e6a){var _0x127d32=_0x59d910;this[_0x127d32(0xe9)](_0x1d5fea,_0x5be4c9),_0x144e6a&&_0x144e6a(),this['_additionalMetadata'](_0x4d7602,_0x1d5fea),this[_0x127d32(0xcf)](_0x1d5fea,_0x5be4c9);}['_treeNodePropertiesBeforeFullValue'](_0x1e69b9,_0x9763d9){var _0x19d496=_0x59d910;this[_0x19d496(0x194)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x169)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x151)](_0x1e69b9,_0x9763d9),this[_0x19d496(0x140)](_0x1e69b9,_0x9763d9);}[_0x59d910(0x194)](_0x490095,_0x2bbcf7){}['_setNodeQueryPath'](_0x5e063c,_0x16566d){}['_setNodeLabel'](_0x46851d,_0x310978){}[_0x59d910(0x138)](_0x4034ca){var _0x543b1b=_0x59d910;return _0x4034ca===this[_0x543b1b(0x15e)];}[_0x59d910(0xcf)](_0x54fc25,_0x515034){var _0x1e6ee5=_0x59d910;this['_setNodeLabel'](_0x54fc25,_0x515034),this[_0x1e6ee5(0x197)](_0x54fc25),_0x515034['sortProps']&&this[_0x1e6ee5(0x121)](_0x54fc25),this[_0x1e6ee5(0xd5)](_0x54fc25,_0x515034),this[_0x1e6ee5(0x142)](_0x54fc25,_0x515034),this['_cleanNode'](_0x54fc25);}[_0x59d910(0x113)](_0x32cb62,_0x5e6d71){var _0x5b5079=_0x59d910;let _0x2376e2;try{_0x42b58f['console']&&(_0x2376e2=_0x42b58f['console'][_0x5b5079(0x19b)],_0x42b58f['console'][_0x5b5079(0x19b)]=function(){}),_0x32cb62&&typeof _0x32cb62[_0x5b5079(0x1ae)]=='number'&&(_0x5e6d71[_0x5b5079(0x1ae)]=_0x32cb62[_0x5b5079(0x1ae)]);}catch{}finally{_0x2376e2&&(_0x42b58f[_0x5b5079(0x179)][_0x5b5079(0x19b)]=_0x2376e2);}if(_0x5e6d71[_0x5b5079(0x135)]==='number'||_0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x159)){if(isNaN(_0x5e6d71[_0x5b5079(0x16d)]))_0x5e6d71[_0x5b5079(0xfc)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];else switch(_0x5e6d71[_0x5b5079(0x16d)]){case Number[_0x5b5079(0x14a)]:_0x5e6d71[_0x5b5079(0x1a1)]=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case Number[_0x5b5079(0x14b)]:_0x5e6d71['negativeInfinity']=!0x0,delete _0x5e6d71[_0x5b5079(0x16d)];break;case 0x0:this[_0x5b5079(0xf8)](_0x5e6d71[_0x5b5079(0x16d)])&&(_0x5e6d71[_0x5b5079(0x191)]=!0x0);break;}}else _0x5e6d71[_0x5b5079(0x135)]===_0x5b5079(0x1ab)&&typeof _0x32cb62['name']=='string'&&_0x32cb62[_0x5b5079(0x150)]&&_0x5e6d71[_0x5b5079(0x150)]&&_0x32cb62['name']!==_0x5e6d71[_0x5b5079(0x150)]&&(_0x5e6d71['funcName']=_0x32cb62['name']);}[_0x59d910(0xf8)](_0x34f93d){var _0x1528b8=_0x59d910;return 0x1/_0x34f93d===Number[_0x1528b8(0x14b)];}[_0x59d910(0x121)](_0x111632){var _0x308a43=_0x59d910;!_0x111632[_0x308a43(0x12f)]||!_0x111632[_0x308a43(0x12f)][_0x308a43(0x1ae)]||_0x111632[_0x308a43(0x135)]==='array'||_0x111632[_0x308a43(0x135)]===_0x308a43(0x156)||_0x111632[_0x308a43(0x135)]===_0x308a43(0x137)||_0x111632[_0x308a43(0x12f)][_0x308a43(0x1a4)](function(_0x191f07,_0x5c36ed){var _0x4c8048=_0x308a43,_0x17e8b9=_0x191f07[_0x4c8048(0x150)][_0x4c8048(0x15b)](),_0x4c46a3=_0x5c36ed[_0x4c8048(0x150)][_0x4c8048(0x15b)]();return _0x17e8b9<_0x4c46a3?-0x1:_0x17e8b9>_0x4c46a3?0x1:0x0;});}[_0x59d910(0xd5)](_0x23b5e1,_0xc0339f){var _0x1dd9a0=_0x59d910;if(!(_0xc0339f[_0x1dd9a0(0xd1)]||!_0x23b5e1[_0x1dd9a0(0x12f)]||!_0x23b5e1[_0x1dd9a0(0x12f)]['length'])){for(var _0x4e618e=[],_0x43d757=[],_0x58332c=0x0,_0x423385=_0x23b5e1['props']['length'];_0x58332c<_0x423385;_0x58332c++){var _0xc362d8=_0x23b5e1['props'][_0x58332c];_0xc362d8[_0x1dd9a0(0x135)]===_0x1dd9a0(0x1ab)?_0x4e618e[_0x1dd9a0(0xd6)](_0xc362d8):_0x43d757[_0x1dd9a0(0xd6)](_0xc362d8);}if(!(!_0x43d757[_0x1dd9a0(0x1ae)]||_0x4e618e[_0x1dd9a0(0x1ae)]<=0x1)){_0x23b5e1['props']=_0x43d757;var _0x2a836a={'functionsNode':!0x0,'props':_0x4e618e};this['_setNodeId'](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0xf5)](_0x2a836a,_0xc0339f),this[_0x1dd9a0(0x197)](_0x2a836a),this[_0x1dd9a0(0x140)](_0x2a836a,_0xc0339f),_0x2a836a['id']+='\\x20f',_0x23b5e1[_0x1dd9a0(0x12f)][_0x1dd9a0(0x174)](_0x2a836a);}}}['_addLoadNode'](_0x2794a5,_0x4e8a8b){}['_setNodeExpandableState'](_0x530ed3){}[_0x59d910(0xe8)](_0x133a13){var _0x2a2e61=_0x59d910;return Array[_0x2a2e61(0x192)](_0x133a13)||typeof _0x133a13==_0x2a2e61(0x13f)&&this['_objectToString'](_0x133a13)===_0x2a2e61(0x157);}['_setNodePermissions'](_0x18954f,_0x46f40f){}['_cleanNode'](_0x5c208d){var _0xf00978=_0x59d910;delete _0x5c208d['_hasSymbolPropertyOnItsPath'],delete _0x5c208d[_0xf00978(0x176)],delete _0x5c208d[_0xf00978(0x15d)];}['_setNodeExpressionPath'](_0x2e8d98,_0x41dee0){}}let _0x4519b0=new _0x19c1a8(),_0x40f60c={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x12c5e7={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x2867e6(_0x4e0c7c,_0x1e03f8,_0x499c82,_0x5aa8c5,_0x3e32f4,_0xb5a717){var _0x3f40bd=_0x59d910;let _0x230712,_0xc3da0a;try{_0xc3da0a=_0x2e20c8(),_0x230712=_0xf8645b[_0x1e03f8],!_0x230712||_0xc3da0a-_0x230712['ts']>0x1f4&&_0x230712[_0x3f40bd(0x14c)]&&_0x230712[_0x3f40bd(0xf3)]/_0x230712[_0x3f40bd(0x14c)]<0x64?(_0xf8645b[_0x1e03f8]=_0x230712={'count':0x0,'time':0x0,'ts':_0xc3da0a},_0xf8645b[_0x3f40bd(0x134)]={}):_0xc3da0a-_0xf8645b['hits']['ts']>0x32&&_0xf8645b[_0x3f40bd(0x134)]['count']&&_0xf8645b['hits'][_0x3f40bd(0xf3)]/_0xf8645b[_0x3f40bd(0x134)]['count']<0x64&&(_0xf8645b[_0x3f40bd(0x134)]={});let _0x18333f=[],_0x178c3=_0x230712[_0x3f40bd(0x154)]||_0xf8645b[_0x3f40bd(0x134)]['reduceLimits']?_0x12c5e7:_0x40f60c,_0xe4c0b=_0x2f2881=>{var _0x11bdda=_0x3f40bd;let _0x494983={};return _0x494983[_0x11bdda(0x12f)]=_0x2f2881[_0x11bdda(0x12f)],_0x494983[_0x11bdda(0x11b)]=_0x2f2881[_0x11bdda(0x11b)],_0x494983['strLength']=_0x2f2881[_0x11bdda(0xe3)],_0x494983[_0x11bdda(0xea)]=_0x2f2881['totalStrLength'],_0x494983[_0x11bdda(0x17f)]=_0x2f2881['autoExpandLimit'],_0x494983[_0x11bdda(0xda)]=_0x2f2881[_0x11bdda(0xda)],_0x494983[_0x11bdda(0x167)]=!0x1,_0x494983[_0x11bdda(0xd1)]=!_0x129228,_0x494983['depth']=0x1,_0x494983[_0x11bdda(0x185)]=0x0,_0x494983[_0x11bdda(0x109)]=_0x11bdda(0xe7),_0x494983[_0x11bdda(0xfe)]='root_exp',_0x494983[_0x11bdda(0xfd)]=!0x0,_0x494983[_0x11bdda(0xfb)]=[],_0x494983[_0x11bdda(0xe5)]=0x0,_0x494983['resolveGetters']=!0x0,_0x494983[_0x11bdda(0x132)]=0x0,_0x494983[_0x11bdda(0x18d)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x494983;};for(var _0x327fd1=0x0;_0x327fd1<_0x3e32f4[_0x3f40bd(0x1ae)];_0x327fd1++)_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'timeNode':_0x4e0c7c==='time'||void 0x0},_0x3e32f4[_0x327fd1],_0xe4c0b(_0x178c3),{}));if(_0x4e0c7c===_0x3f40bd(0x111)||_0x4e0c7c==='error'){let _0x1fda32=Error[_0x3f40bd(0x178)];try{Error['stackTraceLimit']=0x1/0x0,_0x18333f[_0x3f40bd(0xd6)](_0x4519b0[_0x3f40bd(0x170)]({'stackNode':!0x0},new Error()[_0x3f40bd(0xed)],_0xe4c0b(_0x178c3),{'strLength':0x1/0x0}));}finally{Error[_0x3f40bd(0x178)]=_0x1fda32;}}return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':_0x18333f,'id':_0x1e03f8,'context':_0xb5a717}]};}catch(_0x147097){return{'method':_0x3f40bd(0x19f),'version':_0xe2403,'args':[{'ts':_0x499c82,'session':_0x5aa8c5,'args':[{'type':_0x3f40bd(0x10a),'error':_0x147097&&_0x147097['message']}],'id':_0x1e03f8,'context':_0xb5a717}]};}finally{try{if(_0x230712&&_0xc3da0a){let _0x3a9447=_0x2e20c8();_0x230712[_0x3f40bd(0x14c)]++,_0x230712[_0x3f40bd(0xf3)]+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0x230712['ts']=_0x3a9447,_0xf8645b[_0x3f40bd(0x134)]['count']++,_0xf8645b[_0x3f40bd(0x134)]['time']+=_0x2c3b6(_0xc3da0a,_0x3a9447),_0xf8645b[_0x3f40bd(0x134)]['ts']=_0x3a9447,(_0x230712['count']>0x32||_0x230712['time']>0x64)&&(_0x230712[_0x3f40bd(0x154)]=!0x0),(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x14c)]>0x3e8||_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0xf3)]>0x12c)&&(_0xf8645b[_0x3f40bd(0x134)][_0x3f40bd(0x154)]=!0x0);}}catch{}}}return _0x2867e6;}((_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x34dad2,_0x1940de,_0x3185f6,_0x38d54d,_0x1ad063,_0x501193)=>{var _0x2ad7ff=_0x2bca12;if(_0x260c40[_0x2ad7ff(0x13a)])return _0x260c40[_0x2ad7ff(0x13a)];if(!H(_0x260c40,_0x3185f6,_0x456a08))return _0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x260c40[_0x2ad7ff(0x13a)];let _0x57ceed=B(_0x260c40),_0x469973=_0x57ceed[_0x2ad7ff(0x1b4)],_0x86bf78=_0x57ceed[_0x2ad7ff(0x1a6)],_0x52fd71=_0x57ceed[_0x2ad7ff(0x141)],_0x3d20d7={'hits':{},'ts':{}},_0x1ce957=X(_0x260c40,_0x38d54d,_0x3d20d7,_0x34dad2),_0x244a7c=_0x17eff2=>{_0x3d20d7['ts'][_0x17eff2]=_0x86bf78();},_0x531d83=(_0x446482,_0x4eea60)=>{var _0xea7eef=_0x2ad7ff;let _0x5bd83d=_0x3d20d7['ts'][_0x4eea60];if(delete _0x3d20d7['ts'][_0x4eea60],_0x5bd83d){let _0x482988=_0x469973(_0x5bd83d,_0x86bf78());_0x24a62f(_0x1ce957(_0xea7eef(0xf3),_0x446482,_0x52fd71(),_0x542ed2,[_0x482988],_0x4eea60));}},_0x4fccac=_0x484167=>{var _0x11268e=_0x2ad7ff,_0x291c2d;return _0x456a08===_0x11268e(0x1ac)&&_0x260c40[_0x11268e(0xef)]&&((_0x291c2d=_0x484167==null?void 0x0:_0x484167['args'])==null?void 0x0:_0x291c2d['length'])&&(_0x484167[_0x11268e(0x12e)][0x0][_0x11268e(0xef)]=_0x260c40[_0x11268e(0xef)]),_0x484167;};_0x260c40[_0x2ad7ff(0x13a)]={'consoleLog':(_0x177581,_0x21b08d)=>{var _0x203820=_0x2ad7ff;_0x260c40[_0x203820(0x179)][_0x203820(0x19f)][_0x203820(0x150)]!=='disabledLog'&&_0x24a62f(_0x1ce957('log',_0x177581,_0x52fd71(),_0x542ed2,_0x21b08d));},'consoleTrace':(_0x37cd17,_0x1913f4)=>{var _0x59a05f=_0x2ad7ff,_0x2b73e2,_0x5001bc;_0x260c40[_0x59a05f(0x179)][_0x59a05f(0x19f)][_0x59a05f(0x150)]!=='disabledTrace'&&((_0x5001bc=(_0x2b73e2=_0x260c40[_0x59a05f(0xdd)])==null?void 0x0:_0x2b73e2[_0x59a05f(0xce)])!=null&&_0x5001bc[_0x59a05f(0x18d)]&&(_0x260c40[_0x59a05f(0xe6)]=!0x0),_0x24a62f(_0x4fccac(_0x1ce957(_0x59a05f(0x111),_0x37cd17,_0x52fd71(),_0x542ed2,_0x1913f4))));},'consoleError':(_0x1ffea1,_0x3e397d)=>{var _0xbee322=_0x2ad7ff;_0x260c40['_ninjaIgnoreNextError']=!0x0,_0x24a62f(_0x4fccac(_0x1ce957(_0xbee322(0x19b),_0x1ffea1,_0x52fd71(),_0x542ed2,_0x3e397d)));},'consoleTime':_0xe378bd=>{_0x244a7c(_0xe378bd);},'consoleTimeEnd':(_0x29ec8c,_0x5ab5cf)=>{_0x531d83(_0x5ab5cf,_0x29ec8c);},'autoLog':(_0x2e2f49,_0x2c91b1)=>{_0x24a62f(_0x1ce957('log',_0x2c91b1,_0x52fd71(),_0x542ed2,[_0x2e2f49]));},'autoLogMany':(_0x5d0f4b,_0x32c620)=>{var _0xce0ca4=_0x2ad7ff;_0x24a62f(_0x1ce957(_0xce0ca4(0x19f),_0x5d0f4b,_0x52fd71(),_0x542ed2,_0x32c620));},'autoTrace':(_0x5a5842,_0x423721)=>{var _0x9c9b29=_0x2ad7ff;_0x24a62f(_0x4fccac(_0x1ce957(_0x9c9b29(0x111),_0x423721,_0x52fd71(),_0x542ed2,[_0x5a5842])));},'autoTraceMany':(_0x21f018,_0x538423)=>{_0x24a62f(_0x4fccac(_0x1ce957('trace',_0x21f018,_0x52fd71(),_0x542ed2,_0x538423)));},'autoTime':(_0x41c572,_0x4433e7,_0x5aa06b)=>{_0x244a7c(_0x5aa06b);},'autoTimeEnd':(_0x33d2ab,_0x4d3cfc,_0x196869)=>{_0x531d83(_0x4d3cfc,_0x196869);},'coverage':_0xbc4dc7=>{var _0x56c058=_0x2ad7ff;_0x24a62f({'method':_0x56c058(0x10f),'version':_0x34dad2,'args':[{'id':_0xbc4dc7}]});}};let _0x24a62f=q(_0x260c40,_0x36ba27,_0xd0e3a4,_0x59e50e,_0x456a08,_0x1ad063,_0x501193),_0x542ed2=_0x260c40[_0x2ad7ff(0x12d)];return _0x260c40[_0x2ad7ff(0x13a)];})(globalThis,_0x2bca12(0x195),'60591',_0x2bca12(0x104),_0x2bca12(0x105),'1.0.0','1728289414055',_0x2bca12(0x103),'',_0x2bca12(0xd2),_0x2bca12(0xd0));")}catch(e){}}function r(e,...t){try{c().consoleLog(e,t)}catch(e){}return t}function d(e,...t){try{c().consoleError(e,t)}catch(e){}return t}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,