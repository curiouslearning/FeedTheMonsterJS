/*! For license information please see feedTheMonster.js.LICENSE.txt */
(()=>{"use strict";var e={"./node_modules/@firebase/util/dist/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{CONSTANTS:()=>a,DecodeBase64StringError:()=>o,Deferred:()=>v,ErrorFactory:()=>z,FirebaseError:()=>M,MAX_VALUE_MILLIS:()=>pe,RANDOM_FACTOR:()=>ge,Sha1:()=>xe,areCookiesEnabled:()=>B,assert:()=>i,assertionError:()=>s,async:()=>se,base64:()=>n,base64Decode:()=>c,base64Encode:()=>r,base64urlEncodeWithoutPadding:()=>d,calculateBackoffMillis:()=>me,contains:()=>Y,createMockUserToken:()=>w,createSubscribe:()=>ae,decode:()=>U,deepCopy:()=>l,deepEqual:()=>q,deepExtend:()=>h,errorPrefix:()=>oe,extractQuerystring:()=>te,getDefaultAppConfig:()=>g,getDefaultEmulatorHost:()=>u,getDefaultEmulatorHostnameAndPort:()=>p,getDefaults:()=>f,getExperimentalSetting:()=>m,getGlobal:()=>b,getModularInstance:()=>we,getUA:()=>S,isAdmin:()=>V,isBrowser:()=>I,isBrowserExtension:()=>T,isElectron:()=>L,isEmpty:()=>$,isIE:()=>C,isIndexedDBAvailable:()=>D,isMobileCordova:()=>y,isNode:()=>E,isNodeSdk:()=>k,isReactNative:()=>P,isSafari:()=>N,isUWP:()=>A,isValidFormat:()=>W,isValidTimestamp:()=>H,issuedAtTime:()=>G,jsonEval:()=>R,map:()=>K,ordinal:()=>ve,promiseWithTimeout:()=>Q,querystring:()=>J,querystringDecode:()=>ee,safeGet:()=>X,stringLength:()=>he,stringToByteArray:()=>le,stringify:()=>F,uuidv4:()=>be,validateArgCount:()=>ne,validateCallback:()=>de,validateContextObject:()=>ce,validateIndexedDBOpenable:()=>O,validateNamespace:()=>re});const a={NODE_CLIENT:!1,NODE_ADMIN:!1,SDK_VERSION:"${JSCORE_VERSION}"},i=function(e,t){if(!e)throw s(t)},s=function(e){return new Error("Firebase Database ("+a.SDK_VERSION+") INTERNAL ASSERT FAILED: "+e)},_=function(e){const t=[];let x=0;for(let a=0;a<e.length;a++){let i=e.charCodeAt(a);i<128?t[x++]=i:i<2048?(t[x++]=i>>6|192,t[x++]=63&i|128):55296==(64512&i)&&a+1<e.length&&56320==(64512&e.charCodeAt(a+1))?(i=65536+((1023&i)<<10)+(1023&e.charCodeAt(++a)),t[x++]=i>>18|240,t[x++]=i>>12&63|128,t[x++]=i>>6&63|128,t[x++]=63&i|128):(t[x++]=i>>12|224,t[x++]=i>>6&63|128,t[x++]=63&i|128)}return t},n={byteToCharMap_:null,charToByteMap_:null,byteToCharMapWebSafe_:null,charToByteMapWebSafe_:null,ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},HAS_NATIVE_SUPPORT:"function"==typeof atob,encodeByteArray(e,t){if(!Array.isArray(e))throw Error("encodeByteArray takes an array as a parameter");this.init_();const x=t?this.byteToCharMapWebSafe_:this.byteToCharMap_,a=[];for(let t=0;t<e.length;t+=3){const i=e[t],s=t+1<e.length,_=s?e[t+1]:0,n=t+2<e.length,o=n?e[t+2]:0,r=i>>2,d=(3&i)<<4|_>>4;let c=(15&_)<<2|o>>6,l=63&o;n||(l=64,s||(c=64)),a.push(x[r],x[d],x[c],x[l])}return a.join("")},encodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?btoa(e):this.encodeByteArray(_(e),t)},decodeString(e,t){return this.HAS_NATIVE_SUPPORT&&!t?atob(e):function(e){const t=[];let x=0,a=0;for(;x<e.length;){const i=e[x++];if(i<128)t[a++]=String.fromCharCode(i);else if(i>191&&i<224){const s=e[x++];t[a++]=String.fromCharCode((31&i)<<6|63&s)}else if(i>239&&i<365){const s=((7&i)<<18|(63&e[x++])<<12|(63&e[x++])<<6|63&e[x++])-65536;t[a++]=String.fromCharCode(55296+(s>>10)),t[a++]=String.fromCharCode(56320+(1023&s))}else{const s=e[x++],_=e[x++];t[a++]=String.fromCharCode((15&i)<<12|(63&s)<<6|63&_)}}return t.join("")}(this.decodeStringToByteArray(e,t))},decodeStringToByteArray(e,t){this.init_();const x=t?this.charToByteMapWebSafe_:this.charToByteMap_,a=[];for(let t=0;t<e.length;){const i=x[e.charAt(t++)],s=t<e.length?x[e.charAt(t)]:0;++t;const _=t<e.length?x[e.charAt(t)]:64;++t;const n=t<e.length?x[e.charAt(t)]:64;if(++t,null==i||null==s||null==_||null==n)throw new o;const r=i<<2|s>>4;if(a.push(r),64!==_){const e=s<<4&240|_>>2;if(a.push(e),64!==n){const e=_<<6&192|n;a.push(e)}}}return a},init_(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};for(let e=0;e<this.ENCODED_VALS.length;e++)this.byteToCharMap_[e]=this.ENCODED_VALS.charAt(e),this.charToByteMap_[this.byteToCharMap_[e]]=e,this.byteToCharMapWebSafe_[e]=this.ENCODED_VALS_WEBSAFE.charAt(e),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[e]]=e,e>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(e)]=e,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(e)]=e)}}};class o extends Error{constructor(){super(...arguments),this.name="DecodeBase64StringError"}}const r=function(e){const t=_(e);return n.encodeByteArray(t,!0)},d=function(e){return r(e).replace(/\./g,"")},c=function(e){try{return n.decodeString(e,!0)}catch(e){console.error("base64Decode failed: ",e)}return null};function l(e){return h(void 0,e)}function h(e,t){if(!(t instanceof Object))return t;switch(t.constructor){case Date:return new Date(t.getTime());case Object:void 0===e&&(e={});break;case Array:e=[];break;default:return t}for(const x in t)t.hasOwnProperty(x)&&"__proto__"!==x&&(e[x]=h(e[x],t[x]));return e}function b(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==x.g)return x.g;throw new Error("Unable to locate global object.")}const f=()=>{try{return b().__FIREBASE_DEFAULTS__||(()=>{if("undefined"==typeof process||void 0===process.env)return;const e=process.env.__FIREBASE_DEFAULTS__;return e?JSON.parse(e):void 0})()||(()=>{if("undefined"==typeof document)return;let e;try{e=document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/)}catch(e){return}const t=e&&c(e[1]);return t&&JSON.parse(t)})()}catch(e){return void console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`)}},u=e=>{var t,x;return null===(x=null===(t=f())||void 0===t?void 0:t.emulatorHosts)||void 0===x?void 0:x[e]},p=e=>{const t=u(e);if(!t)return;const x=t.lastIndexOf(":");if(x<=0||x+1===t.length)throw new Error(`Invalid host ${t} with no separate hostname and port!`);const a=parseInt(t.substring(x+1),10);return"["===t[0]?[t.substring(1,x-1),a]:[t.substring(0,x),a]},g=()=>{var e;return null===(e=f())||void 0===e?void 0:e.config},m=e=>{var t;return null===(t=f())||void 0===t?void 0:t[`_${e}`]};class v{constructor(){this.reject=()=>{},this.resolve=()=>{},this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}wrapCallback(e){return(t,x)=>{t?this.reject(t):this.resolve(x),"function"==typeof e&&(this.promise.catch((()=>{})),1===e.length?e(t):e(t,x))}}}function w(e,t){if(e.uid)throw new Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');const x=t||"demo-project",a=e.iat||0,i=e.sub||e.user_id;if(!i)throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");const s=Object.assign({iss:`https://securetoken.google.com/${x}`,aud:x,iat:a,exp:a+3600,auth_time:a,sub:i,user_id:i,firebase:{sign_in_provider:"custom",identities:{}}},e);return[d(JSON.stringify({alg:"none",type:"JWT"})),d(JSON.stringify(s)),""].join(".")}function S(){return"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:""}function y(){return"undefined"!=typeof window&&!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(S())}function E(){var e;const t=null===(e=f())||void 0===e?void 0:e.forceEnvironment;if("node"===t)return!0;if("browser"===t)return!1;try{return"[object process]"===Object.prototype.toString.call(x.g.process)}catch(e){return!1}}function I(){return"object"==typeof self&&self.self===self}function T(){const e="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof e&&void 0!==e.id}function P(){return"object"==typeof navigator&&"ReactNative"===navigator.product}function L(){return S().indexOf("Electron/")>=0}function C(){const e=S();return e.indexOf("MSIE ")>=0||e.indexOf("Trident/")>=0}function A(){return S().indexOf("MSAppHost/")>=0}function k(){return!0===a.NODE_CLIENT||!0===a.NODE_ADMIN}function N(){return!E()&&navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome")}function D(){try{return"object"==typeof indexedDB}catch(e){return!1}}function O(){return new Promise(((e,t)=>{try{let x=!0;const a="validate-browser-context-for-indexeddb-analytics-module",i=self.indexedDB.open(a);i.onsuccess=()=>{i.result.close(),x||self.indexedDB.deleteDatabase(a),e(!0)},i.onupgradeneeded=()=>{x=!1},i.onerror=()=>{var e;t((null===(e=i.error)||void 0===e?void 0:e.message)||"")}}catch(e){t(e)}}))}function B(){return!("undefined"==typeof navigator||!navigator.cookieEnabled)}class M extends Error{constructor(e,t,x){super(t),this.code=e,this.customData=x,this.name="FirebaseError",Object.setPrototypeOf(this,M.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,z.prototype.create)}}class z{constructor(e,t,x){this.service=e,this.serviceName=t,this.errors=x}create(e,...t){const x=t[0]||{},a=`${this.service}/${e}`,i=this.errors[e],s=i?function(e,t){return e.replace(j,((e,x)=>{const a=t[x];return null!=a?String(a):`<${x}?>`}))}(i,x):"Error",_=`${this.serviceName}: ${s} (${a}).`;return new M(a,_,x)}}const j=/\{\$([^}]+)}/g;function R(e){return JSON.parse(e)}function F(e){return JSON.stringify(e)}const U=function(e){let t={},x={},a={},i="";try{const s=e.split(".");t=R(c(s[0])||""),x=R(c(s[1])||""),i=s[2],a=x.d||{},delete x.d}catch(e){}return{header:t,claims:x,data:a,signature:i}},H=function(e){const t=U(e).claims,x=Math.floor((new Date).getTime()/1e3);let a=0,i=0;return"object"==typeof t&&(t.hasOwnProperty("nbf")?a=t.nbf:t.hasOwnProperty("iat")&&(a=t.iat),i=t.hasOwnProperty("exp")?t.exp:a+86400),!!x&&!!a&&!!i&&x>=a&&x<=i},G=function(e){const t=U(e).claims;return"object"==typeof t&&t.hasOwnProperty("iat")?t.iat:null},W=function(e){const t=U(e).claims;return!!t&&"object"==typeof t&&t.hasOwnProperty("iat")},V=function(e){const t=U(e).claims;return"object"==typeof t&&!0===t.admin};function Y(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function X(e,t){return Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0}function $(e){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}function K(e,t,x){const a={};for(const i in e)Object.prototype.hasOwnProperty.call(e,i)&&(a[i]=t.call(x,e[i],i,e));return a}function q(e,t){if(e===t)return!0;const x=Object.keys(e),a=Object.keys(t);for(const i of x){if(!a.includes(i))return!1;const x=e[i],s=t[i];if(Z(x)&&Z(s)){if(!q(x,s))return!1}else if(x!==s)return!1}for(const e of a)if(!x.includes(e))return!1;return!0}function Z(e){return null!==e&&"object"==typeof e}function Q(e,t=2e3){const x=new v;return setTimeout((()=>x.reject("timeout!")),t),e.then(x.resolve,x.reject),x.promise}function J(e){const t=[];for(const[x,a]of Object.entries(e))Array.isArray(a)?a.forEach((e=>{t.push(encodeURIComponent(x)+"="+encodeURIComponent(e))})):t.push(encodeURIComponent(x)+"="+encodeURIComponent(a));return t.length?"&"+t.join("&"):""}function ee(e){const t={};return e.replace(/^\?/,"").split("&").forEach((e=>{if(e){const[x,a]=e.split("=");t[decodeURIComponent(x)]=decodeURIComponent(a)}})),t}function te(e){const t=e.indexOf("?");if(!t)return"";const x=e.indexOf("#",t);return e.substring(t,x>0?x:void 0)}class xe{constructor(){this.chain_=[],this.buf_=[],this.W_=[],this.pad_=[],this.inbuf_=0,this.total_=0,this.blockSize=64,this.pad_[0]=128;for(let e=1;e<this.blockSize;++e)this.pad_[e]=0;this.reset()}reset(){this.chain_[0]=1732584193,this.chain_[1]=4023233417,this.chain_[2]=2562383102,this.chain_[3]=271733878,this.chain_[4]=3285377520,this.inbuf_=0,this.total_=0}compress_(e,t){t||(t=0);const x=this.W_;if("string"==typeof e)for(let a=0;a<16;a++)x[a]=e.charCodeAt(t)<<24|e.charCodeAt(t+1)<<16|e.charCodeAt(t+2)<<8|e.charCodeAt(t+3),t+=4;else for(let a=0;a<16;a++)x[a]=e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3],t+=4;for(let e=16;e<80;e++){const t=x[e-3]^x[e-8]^x[e-14]^x[e-16];x[e]=4294967295&(t<<1|t>>>31)}let a,i,s=this.chain_[0],_=this.chain_[1],n=this.chain_[2],o=this.chain_[3],r=this.chain_[4];for(let e=0;e<80;e++){e<40?e<20?(a=o^_&(n^o),i=1518500249):(a=_^n^o,i=1859775393):e<60?(a=_&n|o&(_|n),i=2400959708):(a=_^n^o,i=3395469782);const t=(s<<5|s>>>27)+a+r+i+x[e]&4294967295;r=o,o=n,n=4294967295&(_<<30|_>>>2),_=s,s=t}this.chain_[0]=this.chain_[0]+s&4294967295,this.chain_[1]=this.chain_[1]+_&4294967295,this.chain_[2]=this.chain_[2]+n&4294967295,this.chain_[3]=this.chain_[3]+o&4294967295,this.chain_[4]=this.chain_[4]+r&4294967295}update(e,t){if(null==e)return;void 0===t&&(t=e.length);const x=t-this.blockSize;let a=0;const i=this.buf_;let s=this.inbuf_;for(;a<t;){if(0===s)for(;a<=x;)this.compress_(e,a),a+=this.blockSize;if("string"==typeof e){for(;a<t;)if(i[s]=e.charCodeAt(a),++s,++a,s===this.blockSize){this.compress_(i),s=0;break}}else for(;a<t;)if(i[s]=e[a],++s,++a,s===this.blockSize){this.compress_(i),s=0;break}}this.inbuf_=s,this.total_+=t}digest(){const e=[];let t=8*this.total_;this.inbuf_<56?this.update(this.pad_,56-this.inbuf_):this.update(this.pad_,this.blockSize-(this.inbuf_-56));for(let e=this.blockSize-1;e>=56;e--)this.buf_[e]=255&t,t/=256;this.compress_(this.buf_);let x=0;for(let t=0;t<5;t++)for(let a=24;a>=0;a-=8)e[x]=this.chain_[t]>>a&255,++x;return e}}function ae(e,t){const x=new ie(e,t);return x.subscribe.bind(x)}class ie{constructor(e,t){this.observers=[],this.unsubscribes=[],this.observerCount=0,this.task=Promise.resolve(),this.finalized=!1,this.onNoObservers=t,this.task.then((()=>{e(this)})).catch((e=>{this.error(e)}))}next(e){this.forEachObserver((t=>{t.next(e)}))}error(e){this.forEachObserver((t=>{t.error(e)})),this.close(e)}complete(){this.forEachObserver((e=>{e.complete()})),this.close()}subscribe(e,t,x){let a;if(void 0===e&&void 0===t&&void 0===x)throw new Error("Missing Observer.");a=function(e,t){if("object"!=typeof e||null===e)return!1;for(const x of t)if(x in e&&"function"==typeof e[x])return!0;return!1}(e,["next","error","complete"])?e:{next:e,error:t,complete:x},void 0===a.next&&(a.next=_e),void 0===a.error&&(a.error=_e),void 0===a.complete&&(a.complete=_e);const i=this.unsubscribeOne.bind(this,this.observers.length);return this.finalized&&this.task.then((()=>{try{this.finalError?a.error(this.finalError):a.complete()}catch(e){}})),this.observers.push(a),i}unsubscribeOne(e){void 0!==this.observers&&void 0!==this.observers[e]&&(delete this.observers[e],this.observerCount-=1,0===this.observerCount&&void 0!==this.onNoObservers&&this.onNoObservers(this))}forEachObserver(e){if(!this.finalized)for(let t=0;t<this.observers.length;t++)this.sendOne(t,e)}sendOne(e,t){this.task.then((()=>{if(void 0!==this.observers&&void 0!==this.observers[e])try{t(this.observers[e])}catch(e){"undefined"!=typeof console&&console.error&&console.error(e)}}))}close(e){this.finalized||(this.finalized=!0,void 0!==e&&(this.finalError=e),this.task.then((()=>{this.observers=void 0,this.onNoObservers=void 0})))}}function se(e,t){return(...x)=>{Promise.resolve(!0).then((()=>{e(...x)})).catch((e=>{t&&t(e)}))}}function _e(){}const ne=function(e,t,x,a){let i;if(a<t?i="at least "+t:a>x&&(i=0===x?"none":"no more than "+x),i){throw new Error(e+" failed: Was called with "+a+(1===a?" argument.":" arguments.")+" Expects "+i+".")}};function oe(e,t){return`${e} failed: ${t} argument `}function re(e,t,x){if((!x||t)&&"string"!=typeof t)throw new Error(oe(e,"namespace")+"must be a valid firebase namespace.")}function de(e,t,x,a){if((!a||x)&&"function"!=typeof x)throw new Error(oe(e,t)+"must be a valid function.")}function ce(e,t,x,a){if((!a||x)&&("object"!=typeof x||null===x))throw new Error(oe(e,t)+"must be a valid context object.")}const le=function(e){const t=[];let x=0;for(let a=0;a<e.length;a++){let s=e.charCodeAt(a);if(s>=55296&&s<=56319){const t=s-55296;a++,i(a<e.length,"Surrogate pair missing trail surrogate.");s=65536+(t<<10)+(e.charCodeAt(a)-56320)}s<128?t[x++]=s:s<2048?(t[x++]=s>>6|192,t[x++]=63&s|128):s<65536?(t[x++]=s>>12|224,t[x++]=s>>6&63|128,t[x++]=63&s|128):(t[x++]=s>>18|240,t[x++]=s>>12&63|128,t[x++]=s>>6&63|128,t[x++]=63&s|128)}return t},he=function(e){let t=0;for(let x=0;x<e.length;x++){const a=e.charCodeAt(x);a<128?t++:a<2048?t+=2:a>=55296&&a<=56319?(t+=4,x++):t+=3}return t},be=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))},fe=1e3,ue=2,pe=144e5,ge=.5;function me(e,t=fe,x=ue){const a=t*Math.pow(x,e),i=Math.round(ge*a*(Math.random()-.5)*2);return Math.min(pe,a+i)}function ve(e){return Number.isFinite(e)?e+function(e){e=Math.abs(e);const t=e%100;if(t>=10&&t<=20)return"th";const x=e%10;if(1===x)return"st";if(2===x)return"nd";if(3===x)return"rd";return"th"}(e):`${e}`}function we(e){return e&&e._delegate?e._delegate:e}},"./src/Firebase/base-firebase-integration.ts":(e,t,x)=>{x.r(t),x.d(t,{BaseFirebaseIntegration:()=>_});var a=x("./node_modules/firebase/app/dist/esm/index.esm.js"),i=x("./node_modules/firebase/analytics/dist/esm/index.esm.js"),s=x("./src/Firebase/firebase-config.ts");class _{firebaseApp;analytics;constructor(){this.initializeFirebase()}customEvents(e,t){try{(0,i.logEvent)(this.analytics,e,t)}catch(e){console.error(...o("1966754438_15_12_15_69_11","Error while logging custom event:",e))}}sessionEnd(){try{navigator.onLine&&void 0!==this.analytics&&(0,i.logEvent)(this.analytics,"session_end")}catch(e){console.error(...o("1966754438_24_12_24_74_11","Error while logging session_end event:",e))}}initializeFirebase(){try{this.firebaseApp=(0,a.initializeApp)(s.firebaseConfig),this.analytics=(0,i.getAnalytics)(this.firebaseApp)}catch(e){console.error(...o("1966754438_32_12_32_70_11","Error while initializing Firebase:",e))}}}function n(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729176059707','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function o(e,...t){try{n().consoleError(e,t)}catch(e){}return t}},"./src/Firebase/firebase-config.ts":(e,t,x)=>{x.r(t),x.d(t,{firebaseConfig:()=>a});const a={apiKey:"AIzaSyB8c2lBVi26u7YRL9sxOP97Uaq3yN8hTl4",authDomain:"ftm-b9d99.firebaseapp.com",databaseURL:"https://ftm-b9d99.firebaseio.com",projectId:"ftm-b9d99",storageBucket:"ftm-b9d99.appspot.com",messagingSenderId:"602402387941",appId:"1:602402387941:web:a63f4eaddc949f539de10c",measurementId:"G-FVLSN7D7NM"}},"./src/Firebase/firebase-integration.ts":(e,t,x)=>{x.r(t),x.d(t,{FirebaseIntegration:()=>i});var a=x("./src/Firebase/base-firebase-integration.ts");class i extends a.BaseFirebaseIntegration{static instance;constructor(){super()}static getInstance(){return i.instance||(i.instance=new i),i.instance}sendSessionStartEvent(e){this.customEvents("session_start",e)}sendSessionEndEvent(e){this.customEvents("session_end",e)}sendSelectedLevelEvent(e){this.customEvents("selected_level",e)}sendTappedStartEvent(e){this.customEvents("tapped_start",e)}sendPuzzleCompletedEvent(e){this.customEvents("puzzle_completed",e)}sendLevelCompletedEvent(e){this.customEvents("level_completed",e)}sendUserClickedOnPlayEvent(){this.customEvents("user_clicked",{click:"Click"})}sendDownloadCompletedEvent(e){this.customEvents("download_completed",e)}}},"./src/common/event-names.ts":(e,t,x)=>{x.r(t),x.d(t,{CLICK:()=>c,LOADPUZZLE:()=>a,MOUSEDOWN:()=>_,MOUSEMOVE:()=>s,MOUSEUP:()=>n,STONEDROP:()=>i,TOUCHEND:()=>d,TOUCHMOVE:()=>r,TOUCHSTART:()=>o,VISIBILITY_CHANGE:()=>l});const a="loadpuzzle",i="stonesdropped",s="mousemove",_="mousedown",n="mouseup",o="touchstart",r="touchmove",d="touchend",c="click",l="visibilitychange"},"./src/common/global-variables.ts":(e,t,x)=>{x.r(t),x.d(t,{Debugger:()=>r,font:()=>o,lang:()=>n,pseudoId:()=>_});var a=x("./src/constants/index.ts"),i=x("./src/common/index.ts");const s=new URLSearchParams(window.location.search);var _=s.get("cr_user_id"),n=null==s.get("cr_lang")?"english":s.get("cr_lang");const o=i.Utils.getLanguageSpecificFont(n),r={DevelopmentLink:!!window.location.href.includes(a.DevelopmentServer),DebugMode:!1}},"./src/common/index.ts":(e,t,x)=>{x.r(t),x.d(t,{CLICK:()=>_.CLICK,Debugger:()=>s.Debugger,LOADPUZZLE:()=>_.LOADPUZZLE,MOUSEDOWN:()=>_.MOUSEDOWN,MOUSEMOVE:()=>_.MOUSEMOVE,MOUSEUP:()=>_.MOUSEUP,STONEDROP:()=>_.STONEDROP,StoneConfig:()=>a.StoneConfig,TOUCHEND:()=>_.TOUCHEND,TOUCHMOVE:()=>_.TOUCHMOVE,TOUCHSTART:()=>_.TOUCHSTART,Utils:()=>i.Utils,VISIBILITY_CHANGE:()=>_.VISIBILITY_CHANGE,createRippleEffect:()=>i.createRippleEffect,font:()=>s.font,hideElement:()=>i.hideElement,isClickInsideButton:()=>i.isClickInsideButton,isDocumentVisible:()=>i.isDocumentVisible,lang:()=>s.lang,loadImages:()=>i.loadImages,pseudoId:()=>s.pseudoId,syncLoadingImages:()=>i.syncLoadingImages,toggleDebugMode:()=>i.toggleDebugMode});var a=x("./src/common/stone-config.ts"),i=x("./src/common/utils.ts"),s=x("./src/common/global-variables.ts"),_=x("./src/common/event-names.ts")},"./src/common/stone-config.ts":(e,t,x)=>{x.r(t),x.d(t,{StoneConfig:()=>i});var a=x("./src/common/index.ts");class i{x;y;origx;origy;text;img;imageSize;textFontSize;canvasWidth;canvasHeight;imageCenterOffsetX;imageCenterOffsetY;context;tutorialInstance;timerTickingInstance;frame=0;constructor(e,t,x,a,i,s,_,n,o){this.x=i,this.y=s,this.origx=i,this.origy=s,this.canvasWidth=t,this.canvasHeight=x,this.tutorialInstance=o,this.text=a,this.img=_,this.context=e,this.calculateImageAndFontSize(),this.imageCenterOffsetX=this.imageSize/2.3,this.imageCenterOffsetY=this.imageSize/1.5,this.timerTickingInstance=n}calculateImageAndFontSize(){1.4*this.context.measureText(this.text).width>this.canvasHeight/9.5?(this.imageSize=1.1*this.context.measureText(this.text).width,this.textFontSize=this.canvasHeight/25,this.text.length>=3&&this.origx<50&&this.origx<this.canvasWidth/2&&(this.x=this.origx+21)):(this.imageSize=this.canvasHeight/9.5,this.textFontSize=this.canvasHeight/20)}getEase=(e,t,x,a)=>-x/2*(Math.cos(Math.PI*e/a)-1)+t;getX=()=>this.frame>=100?this.x:this.getEase(this.frame,0,this.x,100);getY=()=>this.frame>=100?this.y:this.getEase(this.frame,0,this.y,100);adjustSize(e,t){return e?1.25*t:t}draw(e,t=!1){const x=this.getX()-this.adjustSize(t,this.imageCenterOffsetX),i=this.getY()-this.adjustSize(t,this.imageCenterOffsetY);this.context.fillStyle="red",this.context.shadowColor="rgba(255, 255, 255, 1)",this.context.shadowBlur=12,this.context.shadowOffsetX=0,this.context.shadowOffsetY=0,this.context.drawImage(this.img,x,i,this.adjustSize(t,this.imageSize),this.adjustSize(t,this.imageSize)),this.context.fillStyle="white",this.context.font=this.textFontSize+`px ${a.font}, monospace`,this.context.textAlign="center",this.context.shadowOffsetX=0,this.context.shadowOffsetY=0,this.context.shadowBlur=0,this.context.shadowColor="transparent ",this.context.fillText(this.text,this.getX(),this.getY()),this.frame<100?this.frame=this.frame+1:null==this.tutorialInstance&&null==this.tutorialInstance||this.tutorialInstance.draw(e,this.img,this.imageSize)}}},"./src/common/utils.ts":(e,t,x)=>{x.r(t),x.d(t,{Utils:()=>s,createRippleEffect:()=>_,hideElement:()=>l,isClickInsideButton:()=>r,isDocumentVisible:()=>d,loadImages:()=>n,syncLoadingImages:()=>o,toggleDebugMode:()=>c});var a=x("./src/common/index.ts"),i=x("./src/data/i18-font-mapping.ts");class s{static UrlSubstring="/feedthemonster";static getConvertedDevProdURL(e){return a.Debugger.DevelopmentLink?e.slice(0,e.indexOf(this.UrlSubstring)+this.UrlSubstring.length)+"dev"+e.slice(e.indexOf(this.UrlSubstring)+this.UrlSubstring.length):e}static getLanguageSpecificFont(e){const t=e.toLowerCase();for(const e in i.languageFontMapping)if(e.toLowerCase()===t)return i.languageFontMapping[e];return console.log(...b("2724076817_26_4_26_59_4",`Font not found for language: ${e}`)),"NotoSans-Regular"}static getRandomNumber(e,t){return Math.floor(Math.random()*(t-e+1))+e}static getExcludedCoordinates(e,t){return{excludeX:e.width*(t/100),excludeY:e.height*(t/100)}}}function _(e){const t=e;if(!t)throw new Error("Canvas context is null");let x=0,a=0;let i=10,s=10;return function(e,_,n){n&&(i=0,s=0),x=e,a=_,t.beginPath(),t.arc(x,a,i,0,2*Math.PI),t.strokeStyle="white",t.lineWidth=2,t.stroke(),t.closePath(),t.beginPath(),t.arc(x,a,s,0,2*Math.PI),t.strokeStyle="white",t.lineWidth=2,t.stroke(),t.closePath(),i+=.5,s+=.5,(i>=60||s>=60)&&(i=10,s=10)}}function n(e,t){const x={};let a=0;const i=Object.keys(e).length;for(let s in e)x[s]=new Image,x[s].onload=function(){++a>=i&&t(x)},x[s].src=e[s]}const o=async e=>{const t=Object.keys(e).map((async t=>{const x=await(async e=>{const t=new Image;return new Promise((x=>{t.onload=()=>x(t),t.src=e}))})(e[t]);return{[t]:x}}));return(await Promise.all(t)).reduce(((e,t)=>({...e,...t})),{})};function r(e,t,x,a,i,s,_=!1){if(_){return Math.sqrt((e-(x+i/2))**2+(t-(a+s/2))**2)<i/2}return e>=x&&e<=x+i&&t>=a&&t<=a+s}const d=()=>"visible"===document.visibilityState,c=e=>{e.classList.toggle("on");const t=e.classList.contains("on");a.Debugger.DebugMode=t,e.innerText="Dev"},l=(e=!1,t)=>{e?t.classList.remove("show"):t.classList.add("show")};function h(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729176059707','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function b(e,...t){try{h().consoleLog(e,t)}catch(e){}return t}},"./src/components/audio-player.ts":(e,t,x)=>{x.r(t),x.d(t,{AudioPlayer:()=>i});var a=x("./src/constants/index.ts");class i{audioContext;sourceNode;audioQueue;promptAudioBuffer;clickSoundBuffer;static audioBuffers=new Map;audioSourcs=[];isClickSoundLoaded;constructor(){this.audioContext=s.getAudioContext(),this.sourceNode=null,this.audioQueue=[],this.clickSoundBuffer=null,this.isClickSoundLoaded=!1}async playButtonClickSound(){const e=a.AUDIO_PATH_BTN_CLICK;if(!this.isClickSoundLoaded)try{this.clickSoundBuffer=await this.loadAndDecodeAudio(e),i.audioBuffers.set(e,this.clickSoundBuffer),this.isClickSoundLoaded=!0}catch(e){return void console.error(...n("2928562115_33_8_33_70_11","Error loading or decoding click sound:",e))}if(this.clickSoundBuffer){const e=this.audioContext.createBufferSource();e.buffer=this.clickSoundBuffer,e.connect(this.audioContext.destination),e.start()}else console.error(...n("2928562115_45_6_45_59_11","Click sound buffer is not available."))}async loadAndDecodeAudio(e){return new Promise((async(t,x)=>{try{const x=await fetch(e),a=await x.arrayBuffer();t(await this.audioContext.decodeAudioData(a))}catch(e){console.error(...n("2928562115_59_8_59_64_11","Error loading or decoding audio:",e)),x(e)}}))}async preloadPromptAudio(e){const t=await this.loadAndDecodeAudio(e);t&&(this.promptAudioBuffer=t)}async preloadGameAudio(e){if(i.audioBuffers.has(e))return;const t=await this.loadAndDecodeAudio(e);t&&i.audioBuffers.set(e,t)}playAudio(e){const t=i.audioBuffers.get(e);if(t){const e=this.audioContext.createBufferSource();e.buffer=t,e.connect(this.audioContext.destination),this.audioSourcs.push(e),e.start()}}playFeedbackAudios=(e=!1,...t)=>{t.length>0&&(this.audioQueue=t,this.playFetch(0,e))};playPromptAudio=e=>{if(this.promptAudioBuffer){const e=this.audioContext.createBufferSource();e.buffer=this.promptAudioBuffer,e.connect(this.audioContext.destination),this.audioSourcs.push(e),e.start()}};stopFeedbackAudio=()=>{this.sourceNode&&(this.sourceNode.stop(),this.sourceNode=null),this.audioQueue=[]};stopAllAudios=()=>{this.sourceNode&&(this.sourceNode.stop(),this.sourceNode=null),this.audioQueue=[],this.audioSourcs.forEach((e=>{e.stop()})),this.audioSourcs=[]};playFetch=(e,t)=>{e>=this.audioQueue.length?this.stopFeedbackAudio():this.audioQueue[e]&&fetch(this.audioQueue[e]).then((e=>e.arrayBuffer())).then((x=>{this.audioContext?.decodeAudioData(x,(x=>{this.sourceNode=this.audioContext?.createBufferSource(),this.sourceNode.buffer=x,this.sourceNode.connect(this.audioContext?.destination),this.sourceNode.loop=t,this.sourceNode.onended=()=>this.handleAudioEnded(e,t),this.sourceNode.start()}))}))};handleAudioEnded=(e,t)=>{this.sourceNode&&(this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.disconnect(),this.sourceNode=null),this.playFetch(e+1,t)}}class s{static instance=null;static getAudioContext(){return s.instance||(s.instance=new(window.AudioContext||window.webkitAudioContext)),s.instance}}function _(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729176059707','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function n(e,...t){try{_().consoleError(e,t)}catch(e){}return t}},"./src/components/background.ts":(e,t,x)=>{x.r(t),x.d(t,{Background:()=>_});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts"),s={bgImg:i.DEFAULT_BACKGROUND_1,hillImg:i.ASSETS_PATH_HILL,pillerImg:i.ASSETS_PATH_TOTEM,fenchImg:i.ASSETS_PATH_FENCE,autumnBgImg:i.AUTUMN_BACKGROUND_1,autumnHillImg:i.AUTUMN_HILL_1,autumnPillerImg:i.AUTUMN_PILLAR_1,autumnSignImg:i.AUTUMN_SIGN_1,autumnFenceImg:i.AUTUMN_FENCE_1,winterBgImg:i.WINTER_BACKGROUND_1,winterHillImg:i.WINTER_HILL_1,winterSignImg:i.WINTER_SIGN_1,winterFenceImg:i.WINTER_FENCE_1,winterPillerImg:i.WINTER_PILLAR_1};class _{width;height;context;imagesLoaded=!1;loadedImages;levelNumber;availableBackgroundTypes=["Summer","Autumn","Winter"];backgroundType;constructor(e,t,x,i){this.width=t,this.height=x,this.context=e,this.levelNumber=i,this.backgroundType=Math.floor(this.levelNumber/10)%this.availableBackgroundTypes.length,this.levelNumber>=30&&(this.backgroundType=this.backgroundType%3),(0,a.loadImages)(s,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}draw(){if(this.imagesLoaded)switch(this.availableBackgroundTypes[this.backgroundType]){case"Winter":this.context.drawImage(this.loadedImages.winterBgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.winterPillerImg,.38*this.width,this.height/6,this.width/1.2,this.height/2),this.context.drawImage(this.loadedImages.winterFenceImg,.4*-this.width,this.height/4,this.width,this.height/2),this.context.drawImage(this.loadedImages.winterHillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2);break;case"Autumn":this.context.drawImage(this.loadedImages.autumnBgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.autumnPillerImg,.38*this.width,this.height/6,this.width/1.2,this.height/2),this.context.drawImage(this.loadedImages.autumnFenceImg,.4*-this.width,this.height/4,this.width,this.height/2),this.context.drawImage(this.loadedImages.autumnHillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2);break;default:this.context.drawImage(this.loadedImages.bgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.pillerImg,.6*this.width,this.height/6,this.width,this.height/2),this.context.drawImage(this.loadedImages.fenchImg,.4*-this.width,this.height/3,this.width,this.height/3),this.context.drawImage(this.loadedImages.hillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2)}}}},"./src/components/buttons/cancel-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;cancel_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t){this.posX=.1*t.width+.15*t.width/2,this.posY=.2*t.height,this.context=e,this.canvas=t,(0,a.loadImages)({cancel_button_image:i.CANCEL_BTN_IMG},(e=>{this.cancel_button_image=e.cancel_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.15,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.cancel_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.15?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.14,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/close-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;close_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({close_button_image:i.MAP_BTN_IMG},(e=>{this.close_button_image=e.close_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x,y:s}}draw(){this.imagesLoaded&&(this.context.drawImage(this.close_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/index.ts":(e,t,x)=>{x.r(t),x.d(t,{CancelButton:()=>i.default,CloseButton:()=>a.default,LevelBloonButton:()=>c.default,NextButton:()=>s.default,NoButton:()=>_.default,PauseButton:()=>n.default,PlayButton:()=>d.default,RetryButton:()=>o.default,YesButton:()=>r.default});var a=x("./src/components/buttons/close-button.ts"),i=x("./src/components/buttons/cancel-button.ts"),s=x("./src/components/buttons/next-button.ts"),_=x("./src/components/buttons/no-button.ts"),n=x("./src/components/buttons/pause-button.ts"),o=x("./src/components/buttons/retry-button.ts"),r=x("./src/components/buttons/yes-button.ts"),d=x("./src/components/buttons/play-button.ts"),c=x("./src/components/buttons/level-button.ts")},"./src/components/buttons/level-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{context;levelData;posX;posY;originalPosX;originalPosY;size;radiusOffSet;bloonSize;btnSize;lockSize;textFontSize;constructor(e,t,x){this.context=t,this.levelData=x,this.posX=this.levelData.x,this.posY=this.levelData.y,this.originalPosX=this.posX,this.originalPosY=this.posY,this.size=e.height/5,this.radiusOffSet=e.height/20,this.bloonSize=this.isLevelSpecial(this.size),this.btnSize=this.bloonSize,this.lockSize=e.height/13,this.textFontSize=this.size/6}isSpecialLevel(e){return i.SPECIAL_LEVELS.includes(e)}isLevelSpecial(e){return this.levelData?.isSpecial?.9*e:e}draw(e,t,x,i){this.context.drawImage(this.levelData?.balloonImg,this.posX,this.posY,this.btnSize,this.btnSize),this.context.fillStyle="white",this.context.font=this.textFontSize+`px ${a.font}, monospace`,this.context.textAlign="center",this.context.fillText(`${this.levelData.index+e}`,this.levelData.x+this.size/3.5,this.levelData.y+this.size/3),this.context.font=this.textFontSize-this.size/30+`px ${a.font}, monospace`,this.btnSize<this.bloonSize?this.btnSize=this.btnSize+.5:(this.btnSize=this.bloonSize,this.posX=this.levelData.x,this.posY=this.levelData.y),this.drawIcons(e,t,x,i)}applyPulseEffect(){const e=.7,t=Date.now()%1500/1500,x=t<=e,a=x?t/e:(t-e)/(x?e:.30000000000000004),i=x?15*a:15+45*a,s=x?.5*(1-a):0;if(s<=0)return;const{x:_,y:n,radius:o}=this.levelData?.isSpecial?{x:3,y:2.5,radius:2.2}:{x:3.4,y:3.8,radius:3.2},r=this.posX+this.btnSize/_,d=this.posY+this.btnSize/n,c=this.btnSize/o+i;this.context.save(),this.context.beginPath(),this.context.arc(r,d,c,0,2*Math.PI),this.context.fillStyle=`rgba(255, 255, 255, ${s})`,this.context.fill(),this.context.restore()}drawIcons(e,t,x,i){const s=this.levelData.index;if(a.Debugger.DebugMode||s+e-1>t+1&&this.drawLock(),x.length&&s+e<=i)for(let t=0;t<x.length;t++)if(s-1+e===parseInt(x[t].levelNumber)){this.checkStars(x[t].starCount);break}}drawLock(){this.context.drawImage(this.levelData?.lockImg,this.levelData.x,this.levelData.y,this.lockSize,this.lockSize)}checkStars(e){const t=this.levelData.x,x=this.levelData.y,a=this.size;e>=1&&this.drawStar(t,x-.01*a),e>1&&this.drawStar(t+a/2.5,x-.01*a),3===e&&this.drawStar(t+a/5,x-.1*a)}drawStar(e,t){this.context.drawImage(this.levelData?.starImg,e,t,this.size/5,this.size/5)}onClick(e,t,x,i,s){Math.sqrt((e-this.levelData.x-this.radiusOffSet)*(e-this.levelData.x-this.radiusOffSet)+(t-this.levelData.y-this.radiusOffSet)*(t-this.levelData.y-this.radiusOffSet))<45&&(a.Debugger.DebugMode||this.levelData.index+x<=i)&&(this.btnSize=this.bloonSize-4,this.posX=this.originalPosX+.5,this.posY=this.originalPosY+1,s(this.levelData.index))}}},"./src/components/buttons/next-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;width;height;imagesLoaded=!1;next_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s,_){this.posX=s,this.posY=_,this.context=e,this.width=t,this.height=x,(0,a.loadImages)({next_button_image:i.NEXT_BTN_IMG},(e=>{this.next_button_image=e.next_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.next_button_image,this.posX,this.posY,this.width*this.btnSizeAnimation,this.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.width*this.btnOriginalSize,this.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/no-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;no_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x+5,this.posY=s+10,this.context=e,this.canvas=t,(0,a.loadImages)({no_button_image:i.CANCEL_BTN_IMG},(e=>{this.no_button_image=e.no_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.18,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.no_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.18?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.17,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/pause-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;pause_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t){this.posX=t.width-.09*t.height,this.posY=0,this.context=e,this.canvas=t,(0,a.loadImages)({pause_button_image:i.PAUSE_BTN_IMG},(e=>{this.pause_button_image=e.pause_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.09,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.pause_button_image,this.posX,this.posY,this.canvas.height*this.btnSizeAnimation,this.canvas.height*this.btnSizeAnimation),this.btnSizeAnimation<.09?this.btnSizeAnimation=this.btnSizeAnimation+25e-5:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.height*this.btnOriginalSize,this.canvas.height*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.085,this.posX=this.posX+.9,this.posY=this.posY+.9),x}}},"./src/components/buttons/play-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>n});var a=x("./src/constants/index.ts"),i=x("./src/Firebase/firebase-integration.ts"),s=x("./src/common/index.ts"),_=x("./src/data/index.ts");class n{posX;posY;context;canvas;images;loadedImages;imagesLoaded=!1;majVersion;minVersion;firebaseIntegration;constructor(e,t,x,_){this.posX=x,this.posY=_,this.context=e,this.canvas=t,this.firebaseIntegration=new i.FirebaseIntegration,this.init(),this.images={pause_button_image:a.PLAY_BTN_IMG},(0,s.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}async init(){const e=await(0,_.getData)();this.majVersion=e.majversion,this.minVersion=e.minversion}draw(){this.imagesLoaded&&this.context.drawImage(this.loadedImages.pause_button_image,this.posX,this.posY,this.canvas.width/3,this.canvas.width/3)}onClick(e,t){const x=Math.sqrt((e-this.posX-this.canvas.width/6)*(e-this.posX-this.canvas.width/6)+(t-this.posY-this.canvas.width/6)*(t-this.posY-this.canvas.width/6));if(this.logTappedStartFirebaseEvent(),x<this.canvas.width/8)return!0}logTappedStartFirebaseEvent(){Date.now();const e={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():""};this.firebaseIntegration.sendTappedStartEvent(e)}}},"./src/components/buttons/retry-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;retry_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({retry_button_image:i.RETRY_BTN_IMG},(e=>{this.retry_button_image=e.retry_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.19,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x,y:s}}draw(){this.imagesLoaded&&(this.context.drawImage(this.retry_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.19?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.18,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/buttons/yes-button.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{posX;posY;context;canvas;imagesLoaded=!1;yes_button_image;btnSizeAnimation;btnOriginalSize;orignalPos;constructor(e,t,x,s){this.posX=x-5,this.posY=s,this.context=e,this.canvas=t,(0,a.loadImages)({yes_button_image:i.YES_BTN_IMG},(e=>{this.yes_button_image=e.yes_button_image,this.imagesLoaded=!0})),this.btnSizeAnimation=.205,this.btnOriginalSize=this.btnSizeAnimation,this.orignalPos={x:this.posX,y:this.posY}}draw(){this.imagesLoaded&&(this.context.drawImage(this.yes_button_image,this.posX,this.posY,this.canvas.width*this.btnSizeAnimation,this.canvas.width*this.btnSizeAnimation),this.btnSizeAnimation<.205?this.btnSizeAnimation=this.btnSizeAnimation+5e-4:(this.posX=this.orignalPos.x,this.posY=this.orignalPos.y))}onClick(e,t){const x=(0,a.isClickInsideButton)(e,t,this.posX,this.posY,this.canvas.width*this.btnOriginalSize,this.canvas.width*this.btnOriginalSize,!0);return x&&(this.btnSizeAnimation=.19,this.posX=this.posX+1,this.posY=this.posY+1),x}}},"./src/components/feedback-text/index.ts":(e,t,x)=>{x.r(t),x.d(t,{FeedbackTextEffects:()=>i});var a=x("./src/common/index.ts");class i{feedbackTextElement;hideTimeoutId;constructor(){this.feedbackTextElement=document.getElementById("feedback-text"),this.hideTimeoutId=null,this.initialize()}initialize(){this.isFeedbackElementAvailable()}isFeedbackElementAvailable(){return!!this.feedbackTextElement}wrapText(e){this.isFeedbackElementAvailable()&&(this.feedbackTextElement.textContent=e,(0,a.hideElement)(!1,this.feedbackTextElement),this.setHideTimeout())}setHideTimeout(){this.hideTimeoutId&&clearTimeout(this.hideTimeoutId),this.hideTimeoutId=window.setTimeout((()=>{(0,a.hideElement)(!0,this.feedbackTextElement),this.hideTimeoutId=null}),4e3)}}},"./src/components/index.ts":(e,t,x)=>{x.r(t),x.d(t,{AudioPlayer:()=>l.AudioPlayer,Background:()=>d.Background,FeedbackTextEffects:()=>c.FeedbackTextEffects,LevelIndicators:()=>i.LevelIndicators,Monster:()=>o.Monster,PauseButton:()=>a.default,PromptText:()=>s.PromptText,StoneHandler:()=>_.default,TimerTicking:()=>r.TimerTicking,TrailEffect:()=>h.default,Tutorial:()=>n.Tutorial});var a=x("./src/components/buttons/pause-button.ts"),i=x("./src/components/level-indicator.ts"),s=x("./src/components/prompt-text.ts"),_=x("./src/components/stone-handler.ts"),n=x("./src/components/tutorial.ts"),o=x("./src/components/monster.ts"),r=x("./src/components/timer-ticking.ts"),d=x("./src/components/background.ts"),c=x("./src/components/feedback-text/index.ts"),l=x("./src/components/audio-player.ts"),h=x("./src/components/trail-particles.ts")},"./src/components/level-indicator.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelIndicators:()=>_});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts"),s=x("./src/events/index.ts");class _ extends s.EventManager{context;canvas;activeIndicators;images;loadedImages;imagesLoaded=!1;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.context=e,this.canvas=t,this.activeIndicators=x,this.images={level_indicator:i.LEVEL_INDICATOR,bar_empty:i.BAR_EMPTY,bar_full:i.BAR_FULL},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}setIndicators(e){this.activeIndicators=e}addDropStoneEvent(){document.addEventListener("dropstone",(e=>{this.setIndicators(2)}))}draw(){if(this.imagesLoaded){this.context.drawImage(this.loadedImages.level_indicator,.15*this.canvas.width,0,.35*this.canvas.width,.09*this.canvas.height);for(var e=0;e<5;e++)this.context.drawImage(this.loadedImages.bar_empty,.35*this.canvas.width/7*(e+1)+.15*this.canvas.width,.09*this.canvas.height/2-.09*this.canvas.height/6,.35*this.canvas.width/10,.09*this.canvas.height/3);for(e=0;e<this.activeIndicators;e++)this.context.drawImage(this.loadedImages.bar_full,.35*this.canvas.width/7*(e+1)+.15*this.canvas.width,.09*this.canvas.height/2-.09*this.canvas.height/6,.35*this.canvas.width/10,.09*this.canvas.height/3)}}dispose(){this.unregisterEventListener()}handleStoneDrop(e){}handleLoadPuzzle(e){this.setIndicators(e.detail.counter)}}},"./src/components/monster.ts":(e,t,x)=>{x.r(t),x.d(t,{Monster:()=>s});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts");class s extends i.EventManager{zindex;width;height;image;frameX;frameY;maxFrame;x;y;fps;countFrame;frameInterval;frameTimer;canvasStack;canavsElement;context;game;images;loadedImages;imagesLoaded=!1;monsterPhase;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.game=e,this.monsterPhase=t,this.width=this.game.width,this.height=this.game.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.image=document.getElementById("monster"),this.frameX=0,this.frameY=0,this.maxFrame=6,this.x=this.game.width/2-.243*this.game.width,this.y=this.game.width/3,this.fps=10,this.countFrame=0,this.frameInterval=1e3/this.fps,this.frameTimer=0,this.images={eatImg:"./assets/images/eat1"+this.monsterPhase+".png",idleImg:"./assets/images/idle1"+this.monsterPhase+".png",spitImg:"./assets/images/spit1"+this.monsterPhase+".png",dragImg:"./assets/images/drag1"+this.monsterPhase+".png"},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.changeToIdleAnimation(),this.imagesLoaded=!0,x&&x()}))}update(e){this.frameTimer>=this.frameInterval?(this.frameTimer=0,this.frameX<this.maxFrame?this.frameX++:this.frameX=0):this.frameTimer+=e,this.draw()}draw(){this.imagesLoaded&&this.context.drawImage(this.image,770*this.frameX,1386*this.frameY,768,1386,.5*this.x,.1*this.y,this.width/2*1.5,this.height/1.5*1.5)}changeImage(e){this.image.src=e}changeToDragAnimation(){this.maxFrame=6,this.image=this.loadedImages.dragImg}changeToEatAnimation(){this.maxFrame=12,this.image=this.loadedImages.eatImg}changeToIdleAnimation(){this.maxFrame=6,this.image=this.loadedImages.idleImg}changeToSpitAnimation(){this.maxFrame=12,this.image=this.loadedImages.spitImg}handleStoneDrop(e){e.detail.isCorrect?this.changeToEatAnimation():this.changeToSpitAnimation()}handleLoadPuzzle(e){this.changeToIdleAnimation()}dispose(){this.unregisterEventListener()}onClick(e,t){if(Math.sqrt((e-this.x-this.width/4)*(e-this.x-this.width/4)+(t-this.y-this.height/2.2)*(t-this.y-this.height/2.2))<=100)return!0}}},"./src/components/popups/pause-popup.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>o});var a=x("./src/components/buttons/index.ts"),i=x("./src/common/index.ts"),s=x("./src/components/index.ts"),_=x("./src/components/popups/sure-popup.ts"),n=x("./src/constants/index.ts");class o{canvas;context;cancelButton;retryButton;closeButton;imagesLoaded=!1;pop_up_image;callback;switchToLevelSelection;reloadScene;gameplayData;audioPlayer;retrySurePopup;CloseSurePopup;isRetryButtonClicked=!1;isCloseButtonClicked=!1;constructor(e,t,x,o,r){this.canvas=e,this.callback=t,this.gameplayData=r,this.switchToLevelSelection=x,this.reloadScene=o;const d=document.getElementById("canvas");this.context=d.getContext("2d"),this.audioPlayer=new s.AudioPlayer,this.cancelButton=new a.CancelButton(this.context,this.canvas),this.retryButton=new a.RetryButton(this.context,this.canvas,.55*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.19*this.canvas.width/2),this.closeButton=new a.CloseButton(this.context,this.canvas,.25*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.19*this.canvas.width/2),(0,i.loadImages)({pop_up_image:n.POPUP_BG_IMG},(e=>{this.pop_up_image=e.pop_up_image,this.imagesLoaded=!0})),this.retrySurePopup=new _.default(this.canvas,this.yesRetryCallback,this.noRetryCallback),this.CloseSurePopup=new _.default(this.canvas,this.switchToLevelSelection,this.noCloseCallback)}yesRetryCallback=()=>{this.playClickSound(),this.reloadScene(this.gameplayData,"GamePlay")};noRetryCallback=()=>{this.isRetryButtonClicked&&(this.isRetryButtonClicked=!1,this.callback())};noCloseCallback=()=>{this.isCloseButtonClicked&&(this.isCloseButtonClicked=!1,this.callback())};addListner=()=>{document.getElementById("canvas").addEventListener(i.CLICK,this.handleMouseClick,!1)};handleMouseClick=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,s=e.clientY-x.top;this.cancelButton.onClick(a,s)&&(this.playClickSound(),this.callback()),this.retryButton.onClick(a,s)&&("english"==i.lang?(this.playClickSound(),this.dispose(),this.isRetryButtonClicked=!0,this.retrySurePopup.addListner(),this.playAreYouSureSound()):(this.playClickSound(),this.dispose(),this.reloadScene(this.gameplayData,"GamePlay"))),this.closeButton.onClick(a,s)&&("english"==i.lang?(this.playClickSound(),this.dispose(),this.isCloseButtonClicked=!0,this.CloseSurePopup.addListner(),this.playAreYouSureSound()):(this.playClickSound(),this.dispose(),this.switchToLevelSelection("GamePlay")))};draw(){this.imagesLoaded&&(this.context.fillStyle="rgba(0,0,0,0.5)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.drawImage(this.pop_up_image,.1*this.canvas.width,.2*this.canvas.height,.8*this.canvas.width,.8*this.canvas.width),this.cancelButton.draw(),this.retryButton.draw(),this.closeButton.draw(),1==this.isRetryButtonClicked&&"english"==i.lang&&this.retrySurePopup.draw(),1==this.isCloseButtonClicked&&"english"==i.lang&&this.CloseSurePopup.draw())}playClickSound=()=>{this.audioPlayer.playButtonClickSound()};playAreYouSureSound=()=>{this.audioPlayer.playAudio(n.AUDIO_ARE_YOU_SURE)};dispose=()=>{document.getElementById("canvas").removeEventListener(i.CLICK,this.handleMouseClick,!1)}}},"./src/components/popups/sure-popup.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>n});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/constants/index.ts");class n{canvas;context;yesButton;noButton;imagesLoaded=!1;pop_up_image;yesCallback;noCallback;audioPlayer;constructor(e,t,x){this.canvas=e,this.yesCallback=t,this.noCallback=x,this.context=this.canvas.getContext("2d"),this.audioPlayer=new i.AudioPlayer,this.yesButton=new s.YesButton(this.context,this.canvas,.55*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.15*this.canvas.width/2),this.noButton=new s.NoButton(this.context,this.canvas,.25*this.canvas.width,.2*this.canvas.height+.4*this.canvas.width-.15*this.canvas.width/2),(0,a.loadImages)({pop_up_image:_.POPUP_BG_IMG},(e=>{this.pop_up_image=e.pop_up_image,this.imagesLoaded=!0}))}addListner=()=>{this.canvas.addEventListener(a.CLICK,this.handleMouseClick,!1)};handleMouseClick=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;this.yesButton.onClick(a,i)&&(this.playClickSound(),this.dispose(),this.yesCallback()),this.noButton.onClick(a,i)&&(this.playClickSound(),this.dispose(),this.noCallback())};draw(){if(this.imagesLoaded){this.context.fillStyle="rgba(0,0,0,0.5)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.drawImage(this.pop_up_image,.1*this.canvas.width,.2*this.canvas.height,.8*this.canvas.width,.8*this.canvas.width);this.canvas.height;this.context.fillStyle="white",this.context.font="24px Arial",this.context.fillText("Are you sure?",this.canvas.width/2,this.canvas.height/2.8),this.yesButton.draw(),this.noButton.draw()}}playClickSound=()=>{this.audioPlayer.playButtonClickSound()};dispose=()=>{this.canvas.removeEventListener(a.CLICK,this.handleMouseClick,!1)}}},"./src/components/prompt-text.ts":(e,t,x)=>{x.r(t),x.d(t,{PromptText:()=>n});var a=x("./src/events/index.ts"),i=x("./src/common/index.ts"),s=x("./src/components/index.ts"),_=x("./src/constants/index.ts");class n extends a.EventManager{width;height;levelData;currentPromptText;currentPuzzleData;canavsElement;context;prompt_image;targetStones;rightToLeft;imagesLoaded=!1;audioPlayer;isStoneDropped=!1;droppedStones=0;droppedStoneCount=0;time=0;promptImageWidth=0;isAppForeground=!0;scale=1;isScalingUp=!0;scaleFactor=5e-4;promptImageHeight=0;promptPlayButton;constructor(e,t,x,a,_){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.width=e,this.height=t,this.levelData=a,this.rightToLeft=_,this.currentPromptText=x.prompt.promptText,this.currentPuzzleData=x,this.targetStones=this.currentPuzzleData.targetStones,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.audioPlayer=new s.AudioPlayer,this.audioPlayer.preloadPromptAudio(this.getPromptAudioUrl()),this.prompt_image=new Image,this.promptPlayButton=new Image,this.loadImages(),this.time=0,this.promptImageWidth=.65*this.width,this.promptImageHeight=.3*this.height,document.addEventListener(i.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}handleMouseDown=e=>{const t=document.getElementById("canvas");e.preventDefault();var x=t.getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;this.onClick(a,i)&&this.playSound()};getPromptAudioUrl=()=>i.Utils.getConvertedDevProdURL(this.currentPuzzleData.prompt.promptAudio);playSound=()=>{this.isAppForeground&&this.audioPlayer.playPromptAudio(i.Utils.getConvertedDevProdURL(this.currentPuzzleData.prompt.promptAudio))};onClick(e,t){return Math.sqrt(e-this.width/3)<12&&Math.sqrt(t-this.height/5.5)<10}setCurrrentPuzzleData(e){this.currentPuzzleData=e,this.currentPromptText=e.prompt.promptText,this.targetStones=this.currentPuzzleData.targetStones}drawRTLLang(){var e=this.width/2;const t=.26*this.height;this.context.textAlign="center";var x=this.calculateFont();const a=this.promptImageWidth,s=this.promptImageHeight;if(this.context.font=`${x}px ${i.font}, monospace`,"LetterInWord"==this.levelData.levelMeta.levelType)if("Visible"==this.levelData.levelMeta.protoType){var _=this.currentPromptText.replace(new RegExp(this.currentPuzzleData.targetStones[0],"g"),"");this.context.fillStyle="red",this.context.fillText(this.targetStones[0],e+this.context.measureText(_).width/2,t),this.context.fillStyle="black",this.context.fillText(_,e-this.context.measureText(this.targetStones[0]).width/2,t)}else this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4);else if("Word"==this.levelData.levelMeta.levelType)if("Visible"==this.levelData.levelMeta.protoType){e-=.5*this.context.measureText(this.currentPromptText).width;for(let x=this.targetStones.length-1;x>=0;x--)this.droppedStones>x||null==this.droppedStones?(this.context.fillStyle="black",this.context.fillText(this.targetStones[x],e,t)):(this.context.fillStyle="red",this.context.fillText(this.targetStones[x],e,t)),e=e+this.context.measureText(this.targetStones[x]).width+5}else this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4);else if("audioPlayerWord"==this.levelData.levelMeta.levelType){const e=1.25*(this.width-a),t=.33*(this.height-s);this.context.drawImage(this.promptPlayButton,e,t,a/4,s/4)}else"Visible"==this.levelData.levelMeta.protoType?(this.context.fillStyle="black",this.context.fillText(this.currentPromptText,e,t)):this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.15,a/4,s/4)}drawOthers(){const e=this.currentPromptText.split(""),t=(this.width,.28*this.height),x=this.promptImageWidth,a=this.promptImageHeight;var s=this.calculateFont();this.context.font=`${s}px ${i.font}, monospace`;let _=this.width/2-this.context.measureText(this.currentPromptText).width/2,n=0;var o=this.currentPuzzleData.targetStones[0].split("");for(let i=0;i<e.length;i++){switch(this.levelData.levelMeta.levelType){case"LetterInWord":if("Visible"==this.levelData.levelMeta.protoType){o.includes(e[i])?(o=o.slice(1,o.length),this.context.fillStyle="red",this.context.fillText(e[i],_,t)):(this.context.fillStyle="black",this.context.fillText(e[i],_,t));break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);case"Word":if("Visible"==this.levelData.levelMeta.protoType){if(this.targetStones.length!=this.currentPromptText.length){this.targetStones.length>i&&(this.context.fillStyle=this.droppedStoneCount>i||null==this.droppedStoneCount?"black":"red",this.context.fillText(this.targetStones[i],_+_/10,t));break}this.context.fillStyle=this.droppedStones>i||null==this.droppedStones?"black":"red",this.context.fillText(e[i],_,t);break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);case"SoundWord":this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4);break;default:if("Visible"==this.levelData.levelMeta.protoType){this.context.fillStyle="black",this.context.fillText(this.currentPromptText,this.width/2.1,t);break}this.context.drawImage(this.promptPlayButton,this.width/2.4,t/1.25,x/4,a/4)}n=(this.context.measureText(e[i]).width+this.context.measureText(e[i+1]).width)/2,_+=n}}draw(e){if(this.updateScaling(),this.time=e<17?this.time+Math.floor(e):this.time+16,Math.floor(this.time)>=1910&&Math.floor(this.time)<=1926&&this.playSound(),!this.isStoneDropped){const e=this.promptImageWidth*this.scale,t=this.promptImageHeight*this.scale,x=(this.width-e)/2,a=(this.height-t)/5;this.context.drawImage(this.prompt_image,x,a,e,t),this.context.fillStyle="black",this.rightToLeft?this.drawRTLLang():this.drawOthers()}}handleStoneDrop(e){this.isStoneDropped=!0}handleLoadPuzzle(e){this.droppedStones=0,this.droppedStoneCount=0,this.currentPuzzleData=this.levelData.puzzles[e.detail.counter],this.currentPromptText=this.currentPuzzleData.prompt.promptText,this.targetStones=this.currentPuzzleData.targetStones,this.audioPlayer.preloadPromptAudio(this.getPromptAudioUrl()),this.isStoneDropped=!1,this.time=0}dispose(){document.removeEventListener(i.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.unregisterEventListener()}droppedStoneIndex(e){this.droppedStones=e,this.droppedStoneCount++}calculateFont(){return this.promptImageWidth/this.currentPromptText.length>35?35:.65*this.width/this.currentPromptText.length}updateScaling(){this.isScalingUp?(this.scale+=this.scaleFactor,this.scale>=1.05&&(this.isScalingUp=!1)):(this.scale-=this.scaleFactor,this.scale<=1&&(this.scale=1,this.isScalingUp=!0))}handleVisibilityChange=()=>{"hidden"==document.visibilityState&&(this.audioPlayer.stopAllAudios(),this.isAppForeground=!1),"visible"==document.visibilityState&&(this.isAppForeground=!0)};async loadImages(){const e=this.loadImage(this.prompt_image,_.PROMPT_TEXT_BG),t=this.loadImage(this.promptPlayButton,_.PROMPT_PLAY_BUTTON);await Promise.all([e,t]),this.imagesLoaded=!0}loadImage(e,t){return new Promise(((x,a)=>{e.onload=()=>{x()},e.src=t,e.onerror=e=>{a(e)}}))}}},"./src/components/stone-handler.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>o});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts"),s=x("./src/components/index.ts"),_=x("./src/data/index.ts"),n=x("./src/constants/index.ts");class o extends i.EventManager{context;canvas;currentPuzzleData;targetStones;stonePos;pickedStone;foilStones=new Array;answer="";puzzleNumber;levelData;correctAnswer;puzzleStartTime;showTutorial=null==_.GameScore.getDatafromStorage().length;correctStoneAudio;tutorial;correctTargetStone;stonebg;audioPlayer;feedbackAudios;timerTickingInstance;isGamePaused=!1;constructor(e,t,x,i,_,o){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.context=e,this.canvas=t,this.puzzleNumber=x,this.levelData=i,this.setTargetStone(this.puzzleNumber),this.initializeStonePos(),this.correctStoneAudio=new Audio(n.AUDIO_PATH_CORRECT_STONE),this.correctStoneAudio.loop=!1,this.feedbackAudios=this.convertFeedBackAudiosToList(_),this.puzzleStartTime=new Date,this.tutorial=new s.Tutorial(e,t.width,t.height,x),this.stonebg=new Image,this.stonebg.src=n.ASSETS_PATH_STONE_PINK_BG,this.audioPlayer=new s.AudioPlayer,this.stonebg.onload=e=>{this.createStones(this.stonebg)},this.audioPlayer=new s.AudioPlayer,this.timerTickingInstance=o,document.addEventListener(a.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}createStones(e){const t=this.getFoilStones();for(let x=0;x<t.length;x++)t[x]==this.correctTargetStone&&this.tutorial.updateTargetStonePositions(this.stonePos[x]),this.foilStones.push(new a.StoneConfig(this.context,this.canvas.width,this.canvas.height,t[x],this.stonePos[x][0],this.stonePos[x][1],e,this.timerTickingInstance,x==t.length-1?this.tutorial:null))}draw(e){this.foilStones.length>0&&(this.foilStones.forEach((t=>{t&&void 0!==t.frame&&t.draw(e)})),this.foilStones[this.foilStones.length-1].frame>=100&&!this.isGamePaused&&this.timerTickingInstance.update(e))}drawWordPuzzleLetters(e,t,x){for(let a=0;a<this.foilStones.length;a++)t(a)&&this.foilStones[a].draw(e,Object.keys(x).length>1&&void 0!==x[a]);this.foilStones[this.foilStones.length-1].frame>=100&&!this.isGamePaused&&this.timerTickingInstance.update(e)}initializeStonePos(){let e=32;this.stonePos=[[this.canvas.width/5-e,this.canvas.height/1.9-e],[this.canvas.width/2-e,this.canvas.height/1.15-e],[this.canvas.width/3.5+this.canvas.width/2-e,this.canvas.height/1.2-e],[this.canvas.width/4-e,this.canvas.height/1.28-e],[this.canvas.width/7-e,this.canvas.height/1.5-e],[this.canvas.width/2.3+this.canvas.width/2.1-e,this.canvas.height/1.9-e],[this.canvas.width/2.3+this.canvas.width/2.1-e,this.canvas.height/1.42-e],[this.canvas.width/6-e,this.canvas.height/1.1-e]],this.stonePos=this.stonePos.sort((()=>Math.random()-.5))}setTargetStone(e){this.currentPuzzleData=this.levelData.puzzles[e],this.targetStones=[...this.currentPuzzleData.targetStones],this.correctTargetStone=this.targetStones.join("")}handleStoneDrop(e){this.foilStones=[]}handleLoadPuzzle(e){this.foilStones=[],this.tutorial.setPuzzleNumber(e.detail.counter),this.puzzleNumber=e.detail.counter,this.setTargetStone(this.puzzleNumber),this.initializeStonePos(),this.createStones(this.stonebg)}dispose(){document.removeEventListener(a.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.unregisterEventListener()}isStoneLetterDropCorrect(e,t,x=!1){const a=x?e==this.correctTargetStone.substring(0,e.length):e==this.correctTargetStone;return this.processLetterDropFeedbackAudio(t,a,x,e),a}processLetterDropFeedbackAudio(e,t,x,a){if(t){(x?a===this.getCorrectTargetStone():t)?this.playCorrectAnswerFeedbackSound(e):this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,(0,n.AUDIO_PATH_CHEERING_FUNC)(2))}else this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,n.AUDIO_PATH_MONSTER_SPIT,Math.round(Math.random())>0?n.AUDIO_PATH_MONSTER_DISSAPOINTED:null)}getCorrectTargetStone(){return this.correctTargetStone}getFoilStones(){this.currentPuzzleData.targetStones.forEach((e=>{const t=this.currentPuzzleData.foilStones.indexOf(e);-1!==t&&this.currentPuzzleData.foilStones.splice(t,1)}));const e=this.currentPuzzleData.targetStones.length+this.currentPuzzleData.foilStones.length;if(e>8){const t=e-8;this.currentPuzzleData.foilStones.splice(0,t)}return this.currentPuzzleData.targetStones.forEach((e=>{this.currentPuzzleData.foilStones.push(e)})),this.currentPuzzleData.foilStones.sort((()=>Math.random()-.5))}handleVisibilityChange=()=>{this.audioPlayer.stopAllAudios(),this.correctStoneAudio.pause()};convertFeedBackAudiosToList(e){return[e.fantastic,e.great,e.amazing]}setGamePause(e){this.isGamePaused=e}playCorrectAnswerFeedbackSound(e){const t=a.Utils.getRandomNumber(1,3).toString();this.audioPlayer.playFeedbackAudios(!1,n.AUDIO_PATH_EATS,(0,n.AUDIO_PATH_CHEERING_FUNC)(t),n.AUDIO_PATH_POINTS_ADD,a.Utils.getConvertedDevProdURL(this.feedbackAudios[e])),this.correctStoneAudio.play()}resetStonePosition(e,t,x){const a=t,i=x;if(a&&i&&a.text&&"number"==typeof i.origx&&"number"==typeof i.origy){const t=50,x=e/2;a.x=a.text.length<=3&&i.origx<t&&i.origx<x?i.origx+25:i.origx,a.y=i.origy}return a}computeCursorDistance(e,t,x){return Math.sqrt((e-x.x)**2+(t-x.y)**2)}handlePickStoneUp(e,t){let x=null,a=0;for(let i of this.foilStones){if(this.computeCursorDistance(e,t,i)<=40){x=i,x.foilStoneIndex=a;break}a++}return x}handleHoveringToAnotherStone(e,t,x){let a=null,i=0;for(let s of this.foilStones){if(this.computeCursorDistance(e,t,s)<=40&&x(s.text,i)){a=s,a.foilStoneIndex=i;break}i++}return a}handleMovingStoneLetter(e,t,x){const a=e,i=this.canvas.getBoundingClientRect();return a.x=t-i.left,a.y=x-i.top,a}}},"./src/components/timer-ticking.ts":(e,t,x)=>{x.r(t),x.d(t,{TimerTicking:()=>n});var a=x("./src/common/index.ts"),i=x("./src/events/index.ts"),s=x("./src/components/index.ts"),_=x("./src/constants/index.ts");class n extends i.EventManager{width;height;timerWidth;timerHeight;widthToClear;timer;isTimerStarted;isTimerEnded;isTimerRunningOut;canavsElement;context;timer_full;pauseButtonClicked;images;loadedImages;callback;imagesLoaded=!1;startMyTimer=!0;isMyTimerOver=!1;isStoneDropped=!1;audioPlayer;playLevelEndAudioOnce=!0;constructor(e,t,x){super({stoneDropCallbackHandler:e=>this.handleStoneDrop(e),loadPuzzleCallbackHandler:e=>this.handleLoadPuzzle(e)}),this.width=e,this.height=t,this.widthToClear=this.width/3.4,this.timerHeight=112,this.timerWidth=888,this.callback=x,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.timer=0,this.isTimerStarted=!1,this.isTimerEnded=!1,this.isTimerRunningOut=!1,this.audioPlayer=new s.AudioPlayer,this.playLevelEndAudioOnce=!0,this.images={timer_empty:_.TIMER_EMPTY,rotating_clock:_.ROTATING_CLOCK,timer_full:_.TIMER_FULL},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}startTimer(){this.readyTimer(),this.startMyTimer=!0,this.isMyTimerOver=!1}readyTimer(){this.timer=0}update(e){this.startMyTimer&&!this.isStoneDropped&&(this.timer+=.008*e),40!=Math.floor(.87*this.width-.87*this.width*this.timer*.01)||this.isMyTimerOver||(this.playLevelEndAudioOnce&&this.audioPlayer.playAudio(_.AUDIO_TIMEOUT),this.playLevelEndAudioOnce=!1),.87*this.width-.87*this.width*this.timer*.01<0&&!this.isMyTimerOver&&(this.isMyTimerOver=!0,this.callback(!0))}draw(){this.imagesLoaded&&(this.context.drawImage(this.loadedImages.timer_empty,0,.1*this.height,this.width,.05*this.height),this.context.drawImage(this.loadedImages.rotating_clock,0,.09*this.height,.14*this.width,.065*this.height),this.context.drawImage(this.loadedImages.timer_full,0,0,this.timerWidth-this.timerWidth*this.timer*.01,this.timerHeight,.14*this.width,.099*this.height,.87*this.width-.87*this.width*this.timer*.01,.05*this.height))}handleStoneDrop(e){this.isStoneDropped=!0}handleLoadPuzzle(e){this.playLevelEndAudioOnce=!0,this.isStoneDropped=!1,this.startTimer()}dispose(){this.unregisterEventListener()}}},"./src/components/trail-particles.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>a});class a{ctx;particles;mouse;isDiamond;constructor(e){this.ctx=e.getContext("2d"),this.particles=[],this.mouse={x:void 0,y:void 0},this.isDiamond=!1}init(){this.draw()}draw(){this.drawTrail();let e=[];for(let t=0;t<this.particles.length;t++)this.particles[t].time<=this.particles[t].ttl&&e.push(this.particles[t]);this.particles=e}drawTrail(){for(let e=0;e<this.particles.length;e++)this.particles[e].update(),this.isDiamond=!this.isDiamond,this.particles[e].draw(this.isDiamond)}addTrailParticlesOnMove(e,t){this.mouse.x=e,this.mouse.y=t,this.particles.push(new i(this.ctx,this.mouse))}resetParticles(){this.mouse.x=void 0,this.mouse.y=void 0}}class i{ctx;start;end;size;style;time;ttl;x;y;rgb;hyp;starX;starY;starAngle;constructor(e,t){const x=this.determineValueByScreenWidth(30,15),a=this.determineValueByScreenWidth(30,15),i=this.determineValueByScreenWidth(3,.5),s=this.determineValueByScreenWidth(2,.5);this.ctx=e,this.rgb=["rgb(255,255,255)","rgb(249,217,170)","rgb(244,182,81)","rgb(244,159,34)"],this.start={x:t.x+this.getRandomInt(-x,x),y:t.y+this.getRandomInt(-a,a),size:this.determineValueByScreenWidth(3,2)},this.end={x:this.start.x+this.getRandomInt(-i,i),y:this.start.y+this.getRandomInt(-s,s)},this.x=this.start.x,this.y=this.start.y,this.size=this.start.size,this.style=this.rgb[this.getRandomInt(0,this.rgb.length-1)],this.time=0,this.ttl=75,this.hyp=0,this.starX=0,this.starY=0,this.starAngle=0}determineValueByScreenWidth(e,t){return window.screen.width>768?e:t}update(){if(this.time<=this.ttl){const e=1-(this.ttl-this.time)/this.ttl;this.size=this.start.size*(1-this.easeOutQuart(e)),this.x=this.x+.01*(this.end.x-this.x),this.y=this.y+.01*(this.end.y-this.y)}this.time++}draw(e){e?this.starParticle():this.circleParticle()}circleParticle(){this.ctx.fillStyle=this.style,this.ctx.beginPath(),this.ctx.arc(this.x,this.y,this.size,0,2*Math.PI),this.ctx.closePath(),this.ctx.fill()}starParticle(){this.ctx.fillStyle=this.style,this.ctx.beginPath(),this.ctx.moveTo(this.x,this.y-this.size),this.ctx.lineTo(this.x+this.size,this.y),this.ctx.lineTo(this.x,this.y+this.size),this.ctx.lineTo(this.x-this.size,this.y),this.ctx.closePath(),this.ctx.fill()}getRandomInt(e,t){return Math.round(Math.random()*(t-e))+e}easeOutQuart(e){return 1-Math.pow(1-e,4)}}},"./src/components/tutorial.ts":(e,t,x)=>{x.r(t),x.d(t,{Tutorial:()=>_});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts"),s=x("./src/data/index.ts");class _{width;height;context;tutorialImg;imagesLoaded=!1;targetStonePositions;startx;starty;endx;endy;endTutorial=!1;puzzleNumber;playMnstrClkTtrlAnim=!0;totalTime=0;monsterStoneDifference=0;x;y;dx;dy;absdx;absdy;startRipple=!1;drawRipple;constructor(e,t,x,s){this.width=t,this.height=x,this.context=e,this.startx=0,this.starty=0,this.endx=this.width/2,this.endy=this.height/2,this.puzzleNumber=s>=0?s:null,this.tutorialImg=new Image,this.tutorialImg.src=i.TUTORIAL_HAND,this.drawRipple=(0,a.createRippleEffect)(this.context),this.tutorialImg.onload=()=>{this.imagesLoaded=!0}}updateTargetStonePositions(e){this.startx=e[0]-22,this.starty=e[1]-50,this.monsterStoneDifference=Math.sqrt((this.startx-this.endx)*(this.startx-this.endx)+(this.starty-this.endy)*(this.starty-this.endy)),this.animateImage()}isMobile(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}setTutorialEnd(e){this.endTutorial=e}animateImage(){this.x=this.startx,this.y=this.starty,this.dx=(this.endx-this.startx)/5e3,this.dy=(this.endy-this.starty)/5e3,this.absdx=this.isMobile()?3*Math.abs(this.dx):Math.abs(this.dx),this.absdy=this.isMobile()?3*Math.abs(this.dy):Math.abs(this.dy),this.setTutorialEnd(!1)}draw(e,t,x){if(this.imagesLoaded&&!this.endTutorial&&this.shouldPlayTutorial()){this.x=this.dx>=0?this.x+this.absdx*e:this.x-this.absdx*e,this.y=this.dy>=0?this.y+this.absdy*e:this.y-this.absdy*e;const a=this.x-this.endx+this.absdx,i=this.y-this.endy+this.absdy;let s=100*Math.sqrt(a*a+i*i)/this.monsterStoneDifference;if(s<15)s>1?this.createHandScaleAnimation(e,this.endx,this.endy+30,!0):(this.x=this.startx,this.y=this.starty);else if(s>80)this.createHandScaleAnimation(e,this.startx+15,this.starty+10,!1);else{let e=this.context.globalAlpha;this.context.globalAlpha=.4,this.context.drawImage(t,this.x,this.y+20,x,x),this.context.globalAlpha=e,this.context.drawImage(this.tutorialImg,this.x+15,this.y+10)}}}createHandScaleAnimation(e,t,x,a){this.totalTime+=Math.floor(e);const i=this.sinusoidalInterpolation(this.totalTime,1,1.5,500),s=this.tutorialImg.width*i,_=this.tutorialImg.height*i;this.context.drawImage(this.tutorialImg,t,x,s,_),!a&&this.drawRipple(t+.02*this.width,x+this.tutorialImg.height/2,!1)}sinusoidalInterpolation(e,t,x,a){const i=(x-t)/2,s=Math.PI/a;return t+i*Math.sin(s*e)}clickOnMonsterTutorial(e){if(this.shouldPlayMonsterClickTutorialAnimation()){const t=2e3,x=this.height/1.9+this.tutorialImg.height/.8,a=this.height/1.9+this.tutorialImg.height/.8-this.tutorialImg.height;let i;const s=this.endx;this.totalTime<t/2?(i=a+this.totalTime/(t/2)*(x-a),this.drawRipple(s,this.height/1.9+this.tutorialImg.height/1.5,!0)):(i=x-(this.totalTime-t/2)/(t/2)*(x-a),this.drawRipple(s,this.height/1.9+this.tutorialImg.height/1.2+this.tutorialImg.height)),this.context.drawImage(this.tutorialImg,s,i,this.tutorialImg.width,this.tutorialImg.height),i<=a&&(this.totalTime=0),this.totalTime+=e}}shouldPlayTutorial(){return s.GameScore.getAllGameLevelInfo().length<=0&&0==this.puzzleNumber}shouldPlayMonsterClickTutorialAnimation(){return s.GameScore.getAllGameLevelInfo().length<=0&&this.playMnstrClkTtrlAnim}setPuzzleNumber(e){this.puzzleNumber=e}setPlayMonsterClickAnimation(e){this.playMnstrClkTtrlAnim=e}}},"./src/compositions/background.ts":(e,t,x)=>{x.r(t),x.d(t,{BACKGROUND_ASSET_LIST:()=>s,autumBgDrawing:()=>r,createBackground:()=>_,defaultBgDrawing:()=>o,levelSelectBgDrawing:()=>c,loadDynamicBgAssets:()=>n,winterBgDrawing:()=>d});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");const s={summer:{BG_GROUP_IMGS:i.DEFAULT_BG_GROUP_IMGS,draw:o},autumn:{BG_GROUP_IMGS:i.AUTUMN_BG_GROUP_IMGS,draw:r},winter:{BG_GROUP_IMGS:i.WINTER_BG_GROUP_IMGS,draw:d}};async function _(e,t,x,i,s){return{...{...s(e,t,x,{...await(0,a.syncLoadingImages)(i)})}}}const n=(e,t)=>{const x=Object.keys(t);let a=Math.floor(e/10)%x.length;return e>=30&&(a%=3),{...t[x[a]]}};function o(e,t,x,a){return{draw:()=>{e.drawImage(a?.DEFAULT_BACKGROUND_1,0,0,t,x),e.drawImage(a?.ASSETS_PATH_TOTEM,.6*t,x/6,t,x/2),e.drawImage(a?.ASSETS_PATH_FENCE,.4*-t,x/3,t,x/3),e.drawImage(a?.ASSETS_PATH_HILL,.25*-t,x/2,1.5*t,x/2)}}}function r(e,t,x,a){return{draw:()=>{e.drawImage(a.AUTUMN_BACKGROUND_1,0,0,t,x),e.drawImage(a.AUTUMN_PILLAR_1,.38*t,x/6,t/1.2,x/2),e.drawImage(a.AUTUMN_FENCE_1,.4*-t,x/4,t,x/2),e.drawImage(a.AUTUMN_HILL_1,.25*-t,x/2,1.5*t,x/2)}}}function d(e,t,x,a){return{draw:()=>{e.drawImage(a.WINTER_BACKGROUND_1,0,0,t,x),e.drawImage(a.WINTER_PILLAR_1,.38*t,x/6,t/1.2,x/2),e.drawImage(a.WINTER_FENCE_1,.4*-t,x/4,t,x/2),e.drawImage(a.WINTER_HILL_1,.25*-t,x/2,1.5*t,x/2)}}}function c(e,t,x,a){return{draw:()=>{e.drawImage(a?.LEVEL_SELECTION_BACKGROUND,0,0,t,x)}}}},"./src/compositions/index.ts":(e,t,x)=>{x.r(t),x.d(t,{BACKGROUND_ASSET_LIST:()=>a.BACKGROUND_ASSET_LIST,autumBgDrawing:()=>a.autumBgDrawing,createBackground:()=>a.createBackground,createLevelObject:()=>i.createLevelObject,defaultBgDrawing:()=>a.defaultBgDrawing,getdefaultCloudBtnsPos:()=>i.getdefaultCloudBtnsPos,levelSelectBgDrawing:()=>a.levelSelectBgDrawing,loadDynamicBgAssets:()=>a.loadDynamicBgAssets,loadLevelImages:()=>i.loadLevelImages,winterBgDrawing:()=>a.winterBgDrawing});var a=x("./src/compositions/background.ts"),i=x("./src/compositions/level-config.ts")},"./src/compositions/level-config.ts":(e,t,x)=>{x.r(t),x.d(t,{createLevelObject:()=>o,getdefaultCloudBtnsPos:()=>_,loadLevelImages:()=>n});var a=x("./src/constants/index.ts"),i=x("./src/common/index.ts");const s=e=>a.SPECIAL_LEVELS.includes(e),_=e=>[[[e.width/10,e.height/10],[e.width/2.5,e.height/10],[e.width/3+e.width/2.8,e.height/10],[e.width/10,e.height/3],[e.width/2.5,e.height/3],[e.width/3+e.width/2.8,e.height/3],[e.width/10,e.height/1.8],[e.width/2.5,e.height/1.8],[e.width/3+e.width/2.8,e.height/1.8],[e.width/2.5,e.height/1.3]]],n=()=>(0,i.syncLoadingImages)({balloonImg:a.MAP_ICON_IMG,specialBloonImg:a.MAP_ICON_SPECIAL_IMG,lockImg:a.MAP_LOCK_IMG,starImg:a.STAR_IMG});async function o(e,t,x,a){const i=s(x);return{...{x:e,y:t,index:x,isSpecial:i,...a,balloonImg:i?a?.specialBloonImg:a?.balloonImg}}}},"./src/constants/index.ts":(e,t,x)=>{x.r(t),x.d(t,{ASSETS_PATH_BG_01:()=>G,ASSETS_PATH_FENCE:()=>V,ASSETS_PATH_HILL:()=>W,ASSETS_PATH_MONSTER_IDLE:()=>Y,ASSETS_PATH_STONE_PINK_BG:()=>U,ASSETS_PATH_TOTEM:()=>H,AUDIO_ARE_YOU_SURE:()=>B,AUDIO_INTRO:()=>z,AUDIO_LEVEL_LOSE:()=>j,AUDIO_LEVEL_WIN:()=>R,AUDIO_PATH_BTN_CLICK:()=>D,AUDIO_PATH_CHEERING_FUNC:()=>N,AUDIO_PATH_CORRECT_STONE:()=>k,AUDIO_PATH_EATS:()=>P,AUDIO_PATH_MONSTER_DISSAPOINTED:()=>C,AUDIO_PATH_MONSTER_SPIT:()=>L,AUDIO_PATH_ON_DRAG:()=>O,AUDIO_PATH_POINTS_ADD:()=>A,AUDIO_TIMEOUT:()=>M,AUDIO_URL_PRELOAD:()=>F,AUTUMN_BACKGROUND_1:()=>$,AUTUMN_BG_GROUP_IMGS:()=>Me,AUTUMN_FENCE_1:()=>Q,AUTUMN_HILL_1:()=>K,AUTUMN_PILLAR_1:()=>q,AUTUMN_SIGN_1:()=>Z,BACK_BTN_IMG:()=>Ce,BAR_EMPTY:()=>oe,BAR_FULL:()=>re,ButtonClick:()=>f,CANCEL_BTN_IMG:()=>ke,CLOUD_6:()=>ge,CLOUD_7:()=>me,CLOUD_8:()=>ve,DEFAULT_BACKGROUND_1:()=>X,DEFAULT_BG_GROUP_IMGS:()=>Be,DevelopmentServer:()=>w,EndScene1:()=>I,FONT_BASE_PATH:()=>T,FeedbackAudio:()=>l,FirebaseUserClicked:()=>a,FirebaseUserInstall:()=>i,GAMEPLAY_BG_GROUP_IMGS:()=>Oe,GameScene1:()=>E,IntroMusic:()=>h,IsCached:()=>d,LEVEL_INDICATOR:()=>ne,LEVEL_SELECTION_BACKGROUND:()=>ie,LevelEndAudio:()=>m,LevelSelection1:()=>y,MAP_BTN_IMG:()=>ye,MAP_ICON_IMG:()=>Ee,MAP_ICON_SPECIAL_IMG:()=>Ie,MAP_LOCK_IMG:()=>Te,MonsterAudio:()=>c,NEXT_BTN_IMG:()=>Le,NativePlayButton:()=>n,PAUSE_BTN_IMG:()=>Se,PIN_STAR_1:()=>fe,PIN_STAR_2:()=>ue,PIN_STAR_3:()=>pe,PLAY_BTN_IMG:()=>we,POPUP_BG_IMG:()=>De,PROMPT_PLAY_BUTTON:()=>_e,PROMPT_TEXT_BG:()=>se,PWAInstallStatus:()=>s,PhraseAudio:()=>g,PreviousPlayedLevel:()=>o,PromptAudio:()=>b,RETRY_BTN_IMG:()=>Ae,ROTATING_CLOCK:()=>ce,SCENE_NAME_GAME_PLAY:()=>Fe,SCENE_NAME_LEVEL_END:()=>Ue,SCENE_NAME_LEVEL_SELECT:()=>Re,SCENE_NAME_START:()=>je,SPECIAL_LEVELS:()=>He,STAR_IMG:()=>Pe,StartScene1:()=>S,StoneMusic:()=>p,StoreMonsterPhaseNumber:()=>r,TIMER_EMPTY:()=>de,TIMER_FULL:()=>le,TUTORIAL_HAND:()=>he,TimeOver:()=>u,UrlSubstring:()=>v,UserCancelled:()=>_,WINTER_BACKGROUND_1:()=>J,WINTER_BG_GROUP_IMGS:()=>ze,WINTER_FENCE_1:()=>xe,WINTER_HILL_1:()=>ee,WINTER_PILLAR_1:()=>ae,WINTER_SIGN_1:()=>te,WIN_BG:()=>be,YES_BTN_IMG:()=>Ne});const a="user_clicked",i="user_installed",s="pwa_installed_status",_="user_cancel_installation",n="native_playbutton_clicked",o="storePreviousPlayedLevel",r="storeMonsterPhaseNumber",d="is_cached",c="monster_audio",l="feedback_audio",h="intro_music",b="prompt_audio",f="button_click",u="time_over",p="stone_music",g="phrase_audio",m="level_end_audio",v="/feedthemonster",w="https://feedthemonsterdev.curiouscontent.org",S="StartScene1",y="LevelSelection1",E="GameScene1",I="EndScene1",T="./assets/fonts/",P="./assets/audios/Eat.mp3",L="./assets/audios/MonsterSpit.mp3",C="./assets/audios/Disapointed-05.mp3",A="assets/audios/PointsAdd.wav",k="assets/audios/CorrectStoneFinal.mp3",N=e=>`./assets/audios/Cheering-0${e}.mp3`,D="./assets/audios/ButtonClick.mp3",O="./assets/audios/onDrag.mp3",B="./assets/audios/are-you-sure.mp3",M="./assets/audios/timeout.mp3",z="./assets/audios/intro.mp3",j="./assets/audios/LevelLoseFanfare.mp3",R="./assets/audios/LevelWinFanfare.mp3",F=["./assets/audios/intro.mp3","./assets/audios/Cheering-02.mp3","./assets/audios/Cheering-03.mp3","./assets/audios/Cheering-01.mp3","./assets/audios/onDrag.mp3","./assets/audios/timeout.mp3","./assets/audios/LevelWinFanfare.mp3","./assets/audios/LevelLoseFanfare.mp3","./assets/audios/ButtonClick.mp3","./assets/audios/Monster Spits wrong stones-01.mp3","./assets/audios/Disapointed-05.mp3","./assets/audios/MonsterSpit.mp3","./assets/audios/Eat.mp3","./assets/audios/PointsAdd.wav","./assets/audios/are-you-sure.mp3"],U="./assets/images/stone_pink.webp",H="./assets/images/Totem_v02_v01.webp",G="./assets/images/bg_v01.webp",W="./assets/images/hill_v01.webp",V="./assets/images/fence_v01.webp",Y="./assets/images/idle4.png",X="./assets/images/bg_v01.webp",$="./assets/images/Autumn_bg_v01.webp",K="./assets/images/Autumn_hill_v01.webp",q="./assets/images/Autumn_sign_v01.webp",Z="./assets/images/Autumn_sign_v01.webp",Q="./assets/images/Autumn_fence_v01.webp",J="./assets/images/Winter_bg_01.webp",ee="./assets/images/Winter_hill_v01.webp",te="./assets/images/Winter_sign_v01.webp",xe="./assets/images/Winter_fence_v01.webp",ae="./assets/images/Winter_sign_v01.webp",ie="./assets/images/map.webp",se="./assets/images/promptTextBg.webp",_e="./assets/images/promptPlayButton.webp",ne="./assets/images/levels_v01.webp",oe="./assets/images/bar_empty_v01.webp",re="./assets/images/bar_full_v01.webp",de="./assets/images/timer_empty.webp",ce="./assets/images/timer.webp",le="./assets/images/timer_full.png",he="./assets/images/tutorial_hand.webp",be="./assets/images/WIN_screen_bg.webp",fe="./assets/images/pinStar1.webp",ue="./assets/images/pinStar2.webp",pe="./assets/images/pinStar3.webp",ge="./assets/images/cloud_01.png",me="./assets/images/cloud_02.png",ve="./assets/images/cloud_03.png",we="./assets/images/Play_button.webp",Se="./assets/images/pause_v01.webp",ye="./assets/images/map_btn.webp",Ee="./assets/images/mapIcon.webp",Ie="./assets/images/map_icon_monster_level_v01.webp",Te="./assets/images/mapLock.webp",Pe="./assets/images/star.webp",Le="./assets/images/next_btn.webp",Ce="./assets/images/back_btn.webp",Ae="./assets/images/retry_btn.webp",ke="./assets/images/close_btn.webp",Ne="./assets/images/confirm_btn.webp",De="./assets/images/popup_bg_v01.webp",Oe={ASSETS_PATH_TOTEM:H,DEFAULT_BACKGROUND_1:X,ASSETS_PATH_HILL:W,ASSETS_PATH_FENCE:V,ASSETS_PATH_MONSTER_IDLE:Y},Be={DEFAULT_BACKGROUND_1:X,ASSETS_PATH_HILL:W,ASSETS_PATH_TOTEM:H,ASSETS_PATH_FENCE:V},Me={AUTUMN_BACKGROUND_1:$,AUTUMN_HILL_1:K,AUTUMN_PILLAR_1:q,AUTUMN_SIGN_1:Z,AUTUMN_FENCE_1:Q},ze={WINTER_BACKGROUND_1:J,WINTER_HILL_1:ee,WINTER_SIGN_1:te,WINTER_FENCE_1:xe,WINTER_PILLAR_1:ae},je="StartScene",Re="LevelSelection",Fe="GamePlay",Ue="LevelEnd",He=[5,13,20,30,42]},"./src/data/api-data.ts":(e,t,x)=>{x.r(t),x.d(t,{URL:()=>i,getData:()=>_,getFtmData:()=>s});var a=x("./src/common/index.ts");const i="./lang/"+a.lang+"/ftm_"+a.lang+".json";function s(){return fetch(i,{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>e.json().then((e=>e))))}async function _(){return await s()}},"./src/data/custom-fonts.ts":(e,t,x)=>{x.r(t),x.d(t,{customFonts:()=>a});const a={default:"Atma-SemiBold",english:"Atma-SemiBold",swahili:"Atma-SemiBold",wolof:"Atma-SemiBold",tajik:"Atma-SemiBold",marathi:"Atma-SemiBold",amharic:"Atma-SemiBold",punjabi:"Atma-SemiBold",tamil:"Atma-SemiBold",sepedi:"Atma-SemiBold",gujarati:"Atma-SemiBold",telugu:"Atma-SemiBold",tsonga:"Atma-SemiBold",malay:"Atma-SemiBold",ndebele:"Atma-SemiBold",venda:"Atma-SemiBold",siswati:"Atma-SemiBold",tswana:"Atma-SemiBold",thai:"Atma-SemiBold",fula:"Atma-SemiBold",farsi:"Atma-SemiBold",burmese:"Atma-SemiBold",bengali:"Atma-SemiBold",Azerbaijani:"Atma-SemiBold",Sesotho:"Atma-SemiBold",Georgian:"Atma-SemiBold",BrazilianPortuguese:"Atma-SemiBold",Somali:"Atma-SemiBold",Hausa:"Atma-SemiBold",Igbo:"Atma-SemiBold",HatianCreole:"Atma-SemiBold",Oromo:"Atma-SemiBold",Luganda:"Atma-SemiBold",Yoruba:"Atma-SemiBold",Khmer:"Atma-SemiBold",Javanese:"Atma-SemiBold",Urdu:"Atma-SemiBold",Kinyarwanda:"Atma-SemiBold",Shona:"Atma-SemiBold",Kurdish:"Atma-SemiBold",French:"Atma-SemiBold",isiXhosa:"Atma-SemiBold",Afrikaans:"Atma-SemiBold",Nepali:"Atma-SemiBold",Ukrainian:"Atma-SemiBold",Hindi:"Atma-SemiBold",Tagalog:"Atma-SemiBold",Vietnamese:"Atma-SemiBold",Pashto:"Atma-SemiBold",Twi:"Atma-SemiBold",Arabic:"Atma-SemiBold"}},"./src/data/data-modal.ts":(e,t,x)=>{x.r(t),x.d(t,{DataModal:()=>a,FeedbackAudios:()=>_,FeedbackTexts:()=>s,FoilStone:()=>r,LevelMeta:()=>l,Levels:()=>n,OtherAudios:()=>i,Prompt:()=>c,Puzzles:()=>o,TargetStone:()=>d});class a{title;otherAudios;levels;FeedbackTexts;FeedbackAudios;rightToLeft;majVersion;minVersion;version;constructor(e,t,x,a,n,o,r,d,c){this.title=e,this.otherAudios=new i(t),this.levels=this.getLevels(x),this.FeedbackTexts=new s(a),this.FeedbackAudios=new _(o),this.rightToLeft=n,this.majVersion=r,this.minVersion=d,this.version=c}getLevels(e){let t=[];for(let x=0;x<e.length;x++)t.push(new n(e[x]));return t}}class i{selctYourPlayer;watchMeGrow;areYouSure;constructor(e){this.selctYourPlayer=e["Select your player"],this.watchMeGrow=e["Watch me grow"],this.areYouSure=e["Are you sure"]}}class s{fantastic;great;amazing;constructor(e){e.length>=1&&(this.fantastic=e[0]),e.length>=2&&(this.great=e[1]),e.length>=3&&(this.amazing=e[2])}}class _{fantastic;great;amazing;constructor(e){e.length>=1&&(this.fantastic=e[0]),e.length>=2&&(this.great=e[1]),e.length>=3&&(this.amazing=e[2])}}class n{puzzles;levelMeta;levelNumber;constructor(e){this.puzzles=this.getPuzzleData(e),this.levelMeta=new l(e.LevelMeta),this.levelNumber=e.LevelNumber}getPuzzleData(e){let t=[];return e.Puzzles.map(((e,x)=>{t.push(new o(e))})),t}}class o{segmentNumber;prompt;foilStones;targetStones;constructor(e){this.segmentNumber=e.SegmentNumber,this.prompt=new c(e.prompt),this.foilStones=this.getFoilStones(e),this.targetStones=this.getTargetStones(e)}getFoilStones(e){let t=[];return e.foilstones.map(((e,x)=>{t.push(e.StoneText)})),t}getTargetStones(e){let t=[];return e.targetstones.map(((e,x)=>{t.push(e.StoneText)})),t}}class r{stoneText;constructor(e){this.stoneText=e}}class d{stoneText;constructor(){this.stoneText}}class c{promptText;promptAudio;constructor(e){this.promptText=e.PromptText,this.promptAudio=e.PromptAudio}}class l{promptFadeOut;letterGroup;levelNumber;protoType;levelType;constructor(e){this.promptFadeOut=e.PromptFadeout,this.letterGroup=e.LetterGroup,this.levelNumber=e.LevelNumber,this.protoType=e.PromptType,this.levelType=e.LevelType}}},"./src/data/game-score.ts":(e,t,x)=>{x.r(t),x.d(t,{GameScore:()=>i});var a=x("./src/common/index.ts");class i{static currentlanguage=a.lang;static setGameLevelScore(e,t){let x=this.calculateStarCount(t),a={levelName:e.levelMeta.levelType,levelNumber:e.levelMeta.levelNumber,score:t,starCount:x};this.setTotalStarCount(x);let i=this.getAllGameLevelInfo(),s=-1;for(let e=0;e<i.length;e++)if(i[e].levelNumber===a.levelNumber){s=e;break}-1!==s&&a.score>i[s].score?i[s]=a:i.push(a),localStorage.setItem(this.currentlanguage+"gamePlayedInfo",JSON.stringify(i))}static getAllGameLevelInfo(){const e=localStorage.getItem(this.currentlanguage+"gamePlayedInfo");return null==e?[]:JSON.parse(e)}static setTotalStarCount(e){let t=this.getTotalStarCount()+e;localStorage.setItem(this.currentlanguage+"totalStarCount",t)}static getTotalStarCount(){const e=localStorage.getItem(this.currentlanguage+"totalStarCount");return null==e?0:parseInt(e)}static calculateStarCount(e){return 200==e?1:300==e||400==e?2:500==e?3:0}static getDatafromStorage(){return a.Debugger.DebugMode?JSON.parse(localStorage.getItem(a.lang+"ProfileDebug")||"{}"):JSON.parse(localStorage.getItem(a.lang+"Profile")||"{}")}}},"./src/data/i18-font-mapping.ts":(e,t,x)=>{x.r(t),x.d(t,{languageFontMapping:()=>a});const a={english:"Consolas",swahili:"Consolas",wolof:"Consolas",tajik:"Consolas",marathi:"Consolas",amharic:"Consolas",punjabi:"Consolas",tamil:"Consolas",sepedi:"Consolas",gujarati:"Consolas",telugu:"Consolas",tsonga:"Consolas",malay:"Consolas",ndebele:"Consolas",venda:"NotoSans-Regular",siswati:"Consolas",tswana:"Consolas",thai:"Consolas",fula:"Consolas",farsi:"Consolas",burmese:"Consolas",bengali:"Consolas",Azerbaijani:"NotoSans-Regular",Sesotho:"Consolas",Georgian:"Consolas",BrazilianPortuguese:"Consolas",Somali:"Consolas",Hausa:"NotoSans-Regular",Igbo:"Consolas",HatianCreole:"Consolas",Oromo:"Consolas",Luganda:"Consolas",Yoruba:"Consolas",Khmer:"Consolas",Javanese:"Consolas",Urdu:"Consolas",Kinyarwanda:"Consolas",Shona:"Consolas",Kurdish:"Consolas",French:"Consolas",isiXhosa:"Consolas",Afrikaans:"Consolas",Nepali:"Consolas",Ukrainian:"Consolas",Hindi:"Consolas",Tagalog:"Consolas",Vietnamese:"NotoSans-Regular",Pashto:"Consolas",Twi:"NotoSans-Regular",Arabic:"Adobe-Arabic-Bold"}},"./src/data/index.ts":(e,t,x)=>{x.r(t),x.d(t,{DataModal:()=>i.DataModal,FeedbackAudios:()=>i.FeedbackAudios,FeedbackTexts:()=>i.FeedbackTexts,FoilStone:()=>i.FoilStone,GameScore:()=>s.GameScore,LevelMeta:()=>i.LevelMeta,Levels:()=>i.Levels,OtherAudios:()=>i.OtherAudios,Prompt:()=>i.Prompt,Puzzles:()=>i.Puzzles,TargetStone:()=>i.TargetStone,URL:()=>a.URL,customFonts:()=>n.customFonts,getData:()=>a.getData,getFtmData:()=>a.getFtmData,languageFontMapping:()=>_.languageFontMapping});var a=x("./src/data/api-data.ts"),i=x("./src/data/data-modal.ts"),s=x("./src/data/game-score.ts"),_=x("./src/data/i18-font-mapping.ts"),n=x("./src/data/custom-fonts.ts")},"./src/events/index.ts":(e,t,x)=>{x.r(t),x.d(t,{EventManager:()=>i});var a=x("./src/common/index.ts");class i{handler;stoneDropCallbackHandler;loadPuzzleCallbackHandler;constructor(e){this.handler=e,this.stoneDropCallbackHandler=e.stoneDropCallbackHandler,this.loadPuzzleCallbackHandler=e.loadPuzzleCallbackHandler,document.addEventListener(a.STONEDROP,this.handleStoneDroppedEvent,!1),document.addEventListener(a.LOADPUZZLE,this.handleLoadPuzzleEvent,!1)}handleStoneDroppedEvent=e=>{this.stoneDropCallbackHandler(e)};handleLoadPuzzleEvent=e=>{this.loadPuzzleCallbackHandler(e)};unregisterEventListener=()=>{document.removeEventListener(a.STONEDROP,this.handleStoneDroppedEvent,!1),document.removeEventListener(a.LOADPUZZLE,this.handleLoadPuzzleEvent,!1)}}},"./src/gamepuzzles/index.ts":(e,t,x)=>{x.r(t),x.d(t,{WordPuzzleLogic:()=>a.default});var a=x("./src/gamepuzzles/wordPuzzleLogic.ts")},"./src/gamepuzzles/wordPuzzleLogic.ts":(e,t,x)=>{x.r(t),x.d(t,{default:()=>a});class a{levelData;puzzleNumber;groupedLetters;droppedLetters;groupedObj;droppedHistory;hideListObj;constructor(e,t){this.levelData=e,this.puzzleNumber=t,this.groupedLetters="",this.droppedLetters="",this.groupedObj={},this.droppedHistory={},this.hideListObj={}}getTargetWord(){return this.levelData.puzzles[this.puzzleNumber]?.prompt?.promptText}getValues(){return{groupedLetters:this.groupedLetters,droppedLetters:this.droppedLetters,groupedObj:{...this.groupedObj},droppedHistory:{...this.droppedHistory},hideListObj:{...this.hideListObj}}}checkIsWordPuzzle(){return"Word"===this.levelData?.levelMeta?.levelType}updatePuzzleLevel(e){this.clearAllValues(),this.puzzleNumber=e}clearPickedUp(){this.groupedLetters="",this.groupedObj={},this.hideListObj={...this.droppedHistory}}clearAllValues(){this.groupedLetters="",this.droppedLetters="",this.groupedObj={},this.droppedHistory={},this.hideListObj={},this.puzzleNumber=0}validateShouldHideLetter(e){return!this.hideListObj[e]}handleCheckHoveredStone(e,t){const x=this.groupedLetters,a=this.getTargetWord();if(!this.droppedLetters.length&&a[0]!==x[0])return!1;const i=!x.includes(e),s=!this.groupedObj[t];return a.includes(`${this.droppedLetters}${x}${e}`)&&(i||s)}validateFedLetters(){const e=this.getTargetWord();return this.droppedLetters===e.substring(0,this.droppedLetters.length)}validateWordPuzzle(){const e=this.getTargetWord();return this.droppedLetters===e}setGroupToDropped(){this.droppedLetters=`${this.droppedLetters}${this.groupedLetters}`,this.droppedHistory={...this.droppedHistory,...this.groupedObj}}setPickUpLetter(e,t){this.hideListObj={...this.hideListObj,...this.groupedObj},this.groupedLetters=`${this.groupedLetters}${e}`,this.groupedObj[t]=e}}},"./src/sceneHandler/index.ts":(e,t,x)=>{x.r(t),x.d(t,{SceneHandler:()=>n});var a=x("./src/scenes/index.ts"),i=x("./src/data/index.ts"),s=x("./src/common/index.ts"),_=x("./src/constants/index.ts");class n{canvas;data;width;height;startScene;levelSelectionScene;gameplayScene;levelEndScene;canavsElement;context;static SceneName;loadingScreen;loading=!1;lastTime=0;toggleBtn;titleTextElement;constructor(e,t){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.toggleBtn=document.getElementById("toggle-btn"),this.titleTextElement=document.getElementById("title"),window.addEventListener("beforeinstallprompt",this.handleInstallPrompt),this.context=this.canavsElement.getContext("2d"),this.startScene=new a.StartScene(e,t,this.switchSceneToLevelSelection),n.SceneName=_.StartScene1,this.loadingScreen=new a.LoadingScene(this.width,this.height,this.removeLoading),this.startAnimationLoop()}startAnimationLoop(){const e=t=>{this.animation(t),requestAnimationFrame(e)};requestAnimationFrame(e)}devToggle(){this.toggleBtn.addEventListener("click",(()=>{this.toggleBtn.classList.toggle("on"),this.toggleBtn.classList.contains("on")?(s.Debugger.DebugMode=!0,this.toggleBtn.innerText="Dev"):(s.Debugger.DebugMode=!1,this.toggleBtn.innerText="Dev")}))}checkMonsterPhaseUpdation(){let e=i.GameScore.getTotalStarCount(),t=Math.floor(e/12)+1||1;return t<=4?t:4}animation=e=>{let t=e-this.lastTime;this.lastTime=e,this.context.clearRect(0,0,this.width,this.height),this.loading&&this.loadingScreen.draw(t),n.SceneName===_.StartScene1?this.startScene.animation(t):n.SceneName===_.LevelSelection1?this.levelSelectionScene.drawLevelSelection():n.SceneName===_.GameScene1?this.gameplayScene.draw(t):n.SceneName===_.EndScene1&&this.levelEndScene.draw(t)};switchSceneToGameplay=(e,t)=>{this.showLoading(),this.dispose(t);let x=this.data.majVersion&&this.data.minVersion?this.data.majVersion.toString()+"."+this.data.minVersion.toString():"";setTimeout((()=>{this.gameplayScene=new a.GameplayScene(this.canvas,e.currentLevelData,this.checkMonsterPhaseUpdation(),this.data.FeedbackTexts,this.data.rightToLeft,this.switchSceneToEndLevel,e.selectedLevelNumber,(()=>{this.switchSceneToLevelSelection(_.SCENE_NAME_GAME_PLAY)}),this.switchSceneToGameplay,x,this.data.FeedbackAudios),n.SceneName=_.GameScene1}),800)};switchSceneToEndLevel=(e,t,x,i)=>{this.loadingScreen.initCloud(),setTimeout((()=>{this.dispose(_.SCENE_NAME_GAME_PLAY),this.levelEndScene=new a.LevelEndScene(this.canvas,this.height,this.width,this.context,e,x,this.switchSceneToGameplay,this.switchSceneToLevelSelection,this.data,t),n.SceneName=_.EndScene1}),i?0:4e3)};switchSceneToLevelSelection=e=>{this.showLoading(),this.dispose(e),setTimeout((()=>{this.levelSelectionScene=new a.LevelSelectionScreen(this.canvas,this.data,this.switchSceneToGameplay),n.SceneName=_.LevelSelection1,this.titleTextElement.style.display="none"}),800)};dispose=e=>{e==_.SCENE_NAME_LEVEL_SELECT?this.levelSelectionScene.dispose():e===_.SCENE_NAME_GAME_PLAY?this.gameplayScene.dispose():e===_.SCENE_NAME_START?this.startScene.dispose():e==_.SCENE_NAME_LEVEL_END&&this.levelEndScene.dispose()};showLoading=()=>{this.loadingScreen.initCloud(),this.loading=!0,document.getElementById("loading").style.zIndex="3"};removeLoading=()=>{document.getElementById("loading").style.zIndex="-1",this.loading=!1};handleInstallPrompt=e=>{e.preventDefault(),localStorage.setItem(_.PWAInstallStatus,"false")}}},"./src/scenes/gameplay-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{GameplayScene:()=>c});var a=x("./src/components/index.ts"),i=x("./src/components/popups/pause-popup.ts"),s=x("./src/common/index.ts"),_=x("./src/data/index.ts"),n=x("./src/Firebase/firebase-integration.ts"),o=x("./src/constants/index.ts"),r=x("./src/compositions/index.ts"),d=x("./src/gamepuzzles/index.ts");class c{width;height;monster;jsonVersionNumber;canvas;levelData;timerTicking;promptText;pauseButton;tutorial;puzzleData;id;context;levelIndicators;stonesCount=1;monsterPhaseNumber;pickedStone;puzzleStartTime;showTutorial;feedBackTexts;isPuzzleCompleted;rightToLeft;imagesLoaded=!1;switchSceneToEnd;levelNumber;loadedImages;stoneHandler;counter=0;images;handler;pickedStoneObject;pausePopup;isPauseButtonClicked=!1;background;feedBackTextCanavsElement;feedbackTextEffects;isGameStarted=!1;time=0;score=0;switchToLevelSelection;reloadScene;audioPlayer;firebaseIntegration;startTime;puzzleTime;isDisposing;resetAnimationID;trailParticles;clickTrailToggle;hasFed;wordPuzzleLogic;constructor(e,t,x,_,r,c,l,h,b,f,u){this.width=e.width,this.height=e.height,this.rightToLeft=r,this.canvas=e,this.context=this.canvas.getContext("2d",{willReadFrequently:!0}),this.trailParticles=new a.TrailEffect(e),this.monsterPhaseNumber=x||1,this.levelData=t,this.switchSceneToEnd=c,this.levelNumber=l,this.switchToLevelSelection=h,this.reloadScene=b,this.jsonVersionNumber=f,this.startGameTime(),this.startPuzzleTime(),this.isDisposing=!1,this.pauseButton=new a.PauseButton(this.context,this.canvas),this.timerTicking=new a.TimerTicking(this.width,this.height,this.loadPuzzle),this.stoneHandler=new a.StoneHandler(this.context,this.canvas,this.counter,this.levelData,u,this.timerTicking),this.tutorial=new a.Tutorial(this.context,e.width,e.height),this.promptText=new a.PromptText(this.width,this.height,this.levelData.puzzles[this.counter],this.levelData,this.rightToLeft),this.levelIndicators=new a.LevelIndicators(this.context,this.canvas,0),this.levelIndicators.setIndicators(this.counter),this.monster=new a.Monster(this.canvas,this.monsterPhaseNumber),this.pausePopup=new i.default(this.canvas,this.resumeGame,this.switchToLevelSelection,this.reloadScene,{currentLevelData:t,selectedLevelNumber:l}),this.firebaseIntegration=new n.FirebaseIntegration,this.feedbackTextEffects=new a.FeedbackTextEffects,this.audioPlayer=new a.AudioPlayer,this.handler=document.getElementById("canvas"),this.puzzleData=t.puzzles,this.feedBackTexts=_,this.images={profileMonster:o.ASSETS_PATH_MONSTER_IDLE},(0,s.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}));var p=this.levelData.levelMeta.levelNumber;s.Debugger.DebugMode?localStorage.setItem(o.PreviousPlayedLevel+s.lang+"Debug",p):localStorage.setItem(o.PreviousPlayedLevel+s.lang,p),this.addEventListeners(),this.resetAnimationID=0,this.setupBg(),this.trailParticles?.init(),this.clickTrailToggle=!1,this.hasFed=!1,this.wordPuzzleLogic=new d.WordPuzzleLogic(t,this.counter)}setupBg=async()=>{const{BG_GROUP_IMGS:e,draw:t}=(0,r.loadDynamicBgAssets)(this.levelData.levelNumber,r.BACKGROUND_ASSET_LIST);this.background=await(0,r.createBackground)(this.context,this.width,this.height,e,t)};resumeGame=()=>{this.addEventListeners(),this.isPauseButtonClicked=!1,this.stoneHandler.setGamePause(!1),this.pausePopup.dispose()};getRandomFeedBackText(e){const t=Object.keys(this.feedBackTexts)[e];return this.feedBackTexts[t]}getRandomInt(e,t){const x=Object.values(this.feedBackTexts).filter((e=>null!=e)).length-1;return Math.floor(Math.random()*(x-e+1))+e}handleMouseUp=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(Math.sqrt((x-this.monster.x-this.canvas.width/4)**2+(a-this.monster.y-this.canvas.height/2.2)**2)<=100&&this.pickedStone){const{text:e}=this.pickedStone;switch(this.levelData.levelMeta.levelType){case"LetterOnly":case"LetterInWord":this.letterPuzzle(e);break;case"Word":case"SoundWord":this.wordPuzzle(this.pickedStone)}}else if(this.pickedStone&&this.pickedStoneObject&&this.pickedStone.text&&"number"==typeof this.pickedStoneObject.origx&&"number"==typeof this.pickedStoneObject.origy){const e=50,t=this.width/2;this.pickedStone.x=this.pickedStone.text.length<=3&&this.pickedStoneObject.origx<e&&this.pickedStoneObject.origx<t?this.pickedStoneObject.origx+25:this.pickedStoneObject.origx,this.pickedStone.y=this.pickedStoneObject.origy}this.pickedStone=null,this.wordPuzzleLogic.clearPickedUp(),this.clickTrailToggle=!1};handleMouseDown=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(this.wordPuzzleLogic.checkIsWordPuzzle())this.setPickedUp(x,a);else for(let e of this.stoneHandler.foilStones){if(Math.sqrt((x-e.x)**2+(a-e.y)**2)<=40){this.pickedStoneObject=e,this.pickedStone=e,this.audioPlayer.playAudio(o.AUDIO_PATH_ON_DRAG);break}}this.clickTrailToggle=!0};setPickedUp(e,t){const x=this.stoneHandler.handlePickStoneUp(e,t);x&&(this.pickedStoneObject=x,this.pickedStone=x,this.audioPlayer.playAudio(o.AUDIO_PATH_ON_DRAG),"Word"===this.levelData?.levelMeta?.levelType&&this.wordPuzzleLogic.setPickUpLetter(x?.text,x?.foilStoneIndex))}handleMouseMove=e=>{if(this.pickedStone&&this.pickedStone.frame<=99)return;let t=e.clientX,x=e.clientY;if(this.pickedStone){if(this.wordPuzzleLogic.checkIsWordPuzzle()){const a=this.stoneHandler.handleMovingStoneLetter(this.pickedStone,e.clientX,e.clientY);if(this.pickedStone=a,t=a.x,x=a.y,this.wordPuzzleLogic.checkIsWordPuzzle()){const e=this.stoneHandler.handleHoveringToAnotherStone(t,x,((e,t)=>this.wordPuzzleLogic.handleCheckHoveredStone(e,t)));e&&(this.wordPuzzleLogic.setPickUpLetter(e?.text,e?.foilStoneIndex),this.pickedStone=this.stoneHandler.resetStonePosition(this.width,this.pickedStone,this.pickedStoneObject),this.pickedStoneObject=e,this.pickedStone=e)}}else{let a=this.canvas.getBoundingClientRect();const i=e.clientX-a.left,s=e.clientY-a.top;this.monster.changeToDragAnimation(),this.pickedStone.x=i,this.pickedStone.y=s,t=i,x=s}this.monster.changeToDragAnimation()}this.clickTrailToggle&&this.trailParticles?.addTrailParticlesOnMove(t,x)};handleMouseClick=e=>{let t=this.canvas.getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;this.monster.onClick(x,a)&&(this.isGameStarted=!0,this.time=0,this.tutorial.setPlayMonsterClickAnimation(!1)),this.pauseButton.onClick(x,a)&&(this.audioPlayer.playButtonClickSound(),this.pauseGamePlay()),this.promptText.onClick(x,a)&&this.promptText.playSound()};handleTouchStart=e=>{const t=e.touches[0];this.handleMouseDown({clientX:t.clientX,clientY:t.clientY}),this.trailParticles?.resetParticles()};handleTouchMove=e=>{const t=e.touches[0];this.handleMouseMove({clientX:t.clientX,clientY:t.clientY}),this.trailParticles?.addTrailParticlesOnMove(t.clientX,t.clientY)};handleTouchEnd=e=>{const t=e.changedTouches[0];this.handleMouseUp({clientX:t.clientX,clientY:t.clientY}),this.hasFed||this.monster.changeToIdleAnimation(),this.trailParticles?.resetParticles()};draw(e){this.isGameStarted||this.isPauseButtonClicked||(this.time=this.time+e,this.time>=5e3&&(this.isGameStarted=!0,this.time=0,this.tutorial.setPlayMonsterClickAnimation(!1))),this.imagesLoaded&&this.background?.draw(),this.pauseButton.draw(),this.levelIndicators.draw(),this.promptText.draw(e),this.monster.update(e),this.timerTicking.draw(),this.trailParticles?.draw(),this.isPauseButtonClicked&&this.isGameStarted&&(this.handleStoneLetterDrawing(e),this.pausePopup.draw()),this.isPauseButtonClicked||this.isGameStarted||0==this.counter&&this.tutorial.clickOnMonsterTutorial(e),this.isPauseButtonClicked&&!this.isGameStarted&&this.pausePopup.draw(),!this.isPauseButtonClicked&&this.isGameStarted&&this.handleStoneLetterDrawing(e)}handleStoneLetterDrawing(e){if(this.wordPuzzleLogic.checkIsWordPuzzle()){const{groupedObj:t}=this.wordPuzzleLogic.getValues();this.stoneHandler.drawWordPuzzleLetters(e,(e=>this.wordPuzzleLogic.validateShouldHideLetter(e)),t)}else this.stoneHandler.draw(e)}addEventListeners(){this.handler.addEventListener(s.MOUSEUP,this.handleMouseUp,!1),this.handler.addEventListener(s.MOUSEDOWN,this.handleMouseDown,!1),this.handler.addEventListener(s.MOUSEMOVE,this.handleMouseMove,!1),this.handler.addEventListener(s.TOUCHMOVE,this.handleTouchMove,!1),this.handler.addEventListener(s.TOUCHSTART,this.handleTouchStart,!1),this.handler.addEventListener(s.TOUCHEND,this.handleTouchEnd,!1),this.handler.addEventListener(s.CLICK,this.handleMouseClick,!1),document.addEventListener(s.VISIBILITY_CHANGE,this.handleVisibilityChange,!1)}removeEventListeners(){this.handler.removeEventListener(s.CLICK,this.handleMouseClick,!1),this.handler.removeEventListener("mouseup",this.handleMouseUp,!1),this.handler.removeEventListener("mousemove",this.handleMouseMove,!1),this.handler.removeEventListener("mousedown",this.handleMouseDown,!1),this.handler.removeEventListener("touchstart",this.handleTouchStart,!1),this.handler.removeEventListener("touchmove",this.handleTouchMove,!1),this.handler.removeEventListener("touchend",this.handleTouchEnd,!1)}loadPuzzle=e=>{this.removeEventListeners(),this.stonesCount=1;const t=Boolean(e);if(t&&this.logPuzzleEndFirebaseEvent(!1),this.counter+=1,this.isGameStarted=!1,this.counter===this.levelData.puzzles.length)this.levelIndicators.setIndicators(this.counter),this.logLevelEndFirebaseEvent(),_.GameScore.setGameLevelScore(this.levelData,this.score),this.switchSceneToEnd(_.GameScore.calculateStarCount(this.score),this.monsterPhaseNumber,this.levelNumber,t);else{const e=new CustomEvent(s.LOADPUZZLE,{detail:{counter:this.counter}});setTimeout((()=>{this.isDisposing||this.initNewPuzzle(e)}),t?0:4500)}};dispose=()=>{this.isDisposing=!0,this.audioPlayer.stopAllAudios(),this.monster.dispose(),this.timerTicking.dispose(),this.levelIndicators.dispose(),this.stoneHandler.dispose(),this.promptText.dispose(),document.removeEventListener(s.VISIBILITY_CHANGE,this.handleVisibilityChange,!1),this.removeEventListeners()};checkStoneDropped(e,t,x=!1){return this.hasFed=!0,this.stoneHandler.isStoneLetterDropCorrect(e,t,x)}letterPuzzle(e){if(this.pickedStone.frame<=99)return;const t=this.getRandomInt(0,1),x=this.checkStoneDropped(e,t);x&&this.handleCorrectStoneDrop(t),this.handleStoneDropEnd(x)}wordPuzzle(e){if(e.frame<=99)return;this.audioPlayer.stopFeedbackAudio(),e.x=-999,e.y=-999;const t=this.getRandomInt(0,1);this.hasFed=!0,this.wordPuzzleLogic.setGroupToDropped();const{droppedLetters:x}=this.wordPuzzleLogic.getValues(),a=this.wordPuzzleLogic.validateFedLetters();if(this.stoneHandler.processLetterDropFeedbackAudio(t,a,!0,x),a){if(this.wordPuzzleLogic.validateWordPuzzle())return this.handleCorrectStoneDrop(t),this.handleStoneDropEnd(a,"Word"),void(this.stonesCount=1);this.timerTicking.startTimer(),this.monster.changeToEatAnimation(),this.promptText.droppedStoneIndex("arabic"==s.lang?this.stonesCount:x.length),this.stonesCount++,this.resetToIdleAnimation((()=>{this.monster.changeToIdleAnimation(),this.hasFed=!1}),2e3)}else this.handleStoneDropEnd(a,"Word"),this.stonesCount=1}resetToIdleAnimation(e,t){void 0!==this.resetAnimationID&&clearTimeout(this.resetAnimationID),this.resetAnimationID=setTimeout(e,t)}handleStoneDropEnd(e,t=null){this.logPuzzleEndFirebaseEvent(e,t),this.dispatchStoneDropEvent(e),this.loadPuzzle()}handleCorrectStoneDrop=e=>{this.score+=100,this.feedbackTextEffects.wrapText(this.getRandomFeedBackText(e))};dispatchStoneDropEvent(e){const t=new CustomEvent(s.STONEDROP,{detail:{isCorrect:e}});document.dispatchEvent(t)}initNewPuzzle(e){this.removeEventListeners(),this.isGameStarted=!1,this.time=0,this.wordPuzzleLogic.updatePuzzleLevel(e?.detail?.counter),this.pickedStone=null,document.dispatchEvent(e),this.addEventListeners(),this.audioPlayer.stopAllAudios(),this.startPuzzleTime(),this.hasFed=!1}logPuzzleEndFirebaseEvent(e,t){let x=Date.now();const{droppedLetters:a}=this.wordPuzzleLogic.getValues(),i={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.jsonVersionNumber,success_or_failure:e?"success":"failure",level_number:this.levelData.levelMeta.levelNumber,puzzle_number:this.counter,item_selected:"Word"==t?null==a||null==a?"TIMEOUT":a:null==this.pickedStone||null==this.pickedStone?"TIMEOUT":this.pickedStone?.text,target:this.stoneHandler.getCorrectTargetStone(),foils:this.stoneHandler.getFoilStones(),response_time:(x-this.puzzleTime)/1e3};this.firebaseIntegration.sendPuzzleCompletedEvent(i)}logLevelEndFirebaseEvent(){let e=Date.now();const t={cr_user_id:s.pseudoId,ftm_language:s.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.jsonVersionNumber,success_or_failure:_.GameScore.calculateStarCount(this.score)>=3?"success":"failure",number_of_successful_puzzles:this.score/100,level_number:this.levelData.levelMeta.levelNumber,duration:(e-this.startTime)/1e3};this.firebaseIntegration.sendLevelCompletedEvent(t)}startGameTime(){this.startTime=Date.now()}startPuzzleTime(){this.puzzleTime=Date.now()}pauseGamePlay=()=>{this.removeEventListeners(),this.isPauseButtonClicked=!0,this.stoneHandler.setGamePause(!0),this.pausePopup.addListner(),this.audioPlayer.stopAllAudios()};handleVisibilityChange=()=>{this.audioPlayer.stopAllAudios(),this.pauseGamePlay()}}},"./src/scenes/index.ts":(e,t,x)=>{x.r(t),x.d(t,{GameplayScene:()=>a.GameplayScene,LevelEndScene:()=>s.LevelEndScene,LevelSelectionScreen:()=>i.LevelSelectionScreen,LoadingScene:()=>_.LoadingScene,StartScene:()=>n.StartScene,TestGameplayScene:()=>o.TestGameplayScene});var a=x("./src/scenes/gameplay-scene.ts"),i=x("./src/scenes/level-selection-scene.ts"),s=x("./src/scenes/levelend-scene.ts"),_=x("./src/scenes/loading-scene.ts"),n=x("./src/scenes/start-scene.ts"),o=x("./src/scenes/test-gameplay-scene.ts")},"./src/scenes/level-selection-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelSelectionScreen:()=>d});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/data/index.ts"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/compositions/index.ts"),o=x("./src/constants/index.ts"),r=x("./src/components/buttons/index.ts");class d{canvas;data;width;height;canvasElement;context;levels;gameLevelData;callBack;audioPlayer;images;loadedImages;imagesLoaded=!1;xDown;yDown;previousPlayedLevelNumber;levelSelectionPageIndex=0;levelNumber;levelsSectionCount;unlockLevelIndex;majVersion;minVersion;firebaseIntegration;background;rightBtnSize;rightBtnX;rightBtnY;leftBtnSize;leftBtnX;leftBtnY;levelButtons;constructor(e,t,x){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height;let n=this;this.callBack=x,this.levelsSectionCount=n.data.levels.length/10>Math.floor(n.data.levels.length/10)?Math.floor(n.data.levels.length/10)+1:Math.floor(n.data.levels.length/10),this.levels=[],this.firebaseIntegration=new _.FirebaseIntegration,this.init(),this.canvasElement=document.getElementById("canvas"),this.context=this.canvasElement.getContext("2d"),this.createLevelButtons(),this.gameLevelData=s.GameScore.getAllGameLevelInfo(),this.audioPlayer=new i.AudioPlayer,this.unlockLevelIndex=-1,this.previousPlayedLevelNumber=0|parseInt(a.Debugger.DebugMode?localStorage.getItem(o.PreviousPlayedLevel+a.lang+"Debug"):localStorage.getItem(o.PreviousPlayedLevel+a.lang)),null!=this.previousPlayedLevelNumber&&(this.levelSelectionPageIndex=10*Math.floor(this.previousPlayedLevelNumber/10)),this.setupBg(),this.images={nextbtn:o.NEXT_BTN_IMG,backbtn:o.BACK_BTN_IMG},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0,"visible"===document.visibilityState&&this.audioPlayer.playAudio(o.AUDIO_INTRO)})),this.addListeners(),this.rightBtnSize=10,this.rightBtnX=.73,this.rightBtnY=1.3,this.leftBtnSize=10,this.leftBtnX=10,this.leftBtnY=1.3}async init(){const e=await(0,s.getData)();this.majVersion=e.majversion,this.minVersion=e.minversion}setupBg=async()=>{this.background=await(0,n.createBackground)(this.context,this.width,this.height,{LEVEL_SELECTION_BACKGROUND:o.LEVEL_SELECTION_BACKGROUND},n.levelSelectBgDrawing)};async createLevelButtons(){const e=await(0,n.loadLevelImages)(),t=(0,n.getdefaultCloudBtnsPos)(this.canvas)[0].map(((t,x)=>(0,n.createLevelObject)(t[0],t[1],x+1,e)));this.levels=await Promise.all(t),this.levelButtons=this.levels.map((e=>new r.LevelBloonButton(this.canvas,this.context,{...e})))}addListeners(){document.getElementById("canvas").addEventListener("mousedown",this.handleMouseDown,!1),document.addEventListener("visibilitychange",this.pausePlayAudios,!1),document.getElementById("canvas").addEventListener("touchstart",this.handleTouchStart,!1),document.getElementById("canvas").addEventListener("touchmove",this.handleTouchMove,!1)}pausePlayAudios=()=>{"visible"===document.visibilityState?this.audioPlayer.playAudio(o.AUDIO_INTRO):this.audioPlayer.stopAllAudios()};getTouches(e){return e.touches||e.originalEvent.touches}handleTouchStart=e=>{const t=this.getTouches(e)[0];this.xDown=t.clientX,this.yDown=t.clientY};handleTouchMove=e=>{if(!this.xDown||!this.yDown)return;let t=e.touches[0].clientX,x=e.touches[0].clientY,a=this.xDown-t,i=this.yDown-x;Math.abs(a)>Math.abs(i)&&(a>0?this.levelSelectionPageIndex!=10*this.levelsSectionCount-10&&(this.levelSelectionPageIndex=this.levelSelectionPageIndex+10,this.downButton(this.levelSelectionPageIndex)):(0!=this.levelSelectionPageIndex&&(this.levelSelectionPageIndex=this.levelSelectionPageIndex-10),this.downButton(this.levelSelectionPageIndex))),this.xDown=null,this.yDown=null};handleMouseDown=e=>{e.preventDefault();let t=document.getElementById("canvas").getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top,i=(e,t=1.3)=>x>=e&&x<e+this.canvas.height/10&&a>this.canvas.height/t&&a<this.canvas.height/t+this.canvas.height/10,s=i(.7*this.canvas.width),_=i(this.canvas.width/10);if(_||s){const e=this.levelSelectionPageIndex;s&&e!=10*this.levelsSectionCount-10?(this.audioPlayer.playButtonClickSound(),this.levelSelectionPageIndex=e+10,this.rightBtnSize=10.5,this.rightBtnY=1.299):_&&0!=e&&(this.audioPlayer.playButtonClickSound(),this.levelSelectionPageIndex=e-10,this.leftBtnSize=10.3,this.leftBtnY=1.299),this.downButton(this.levelSelectionPageIndex)}for(let e of this.levelButtons)e.onClick(x,a,this.levelSelectionPageIndex-1,this.unlockLevelIndex+1,(e=>{this.audioPlayer.playButtonClickSound(),this.levelNumber=e+this.levelSelectionPageIndex-1,this.startGame(this.levelNumber)}))};drawLevel(e,t){const x=e.levelData.index+this.levelSelectionPageIndex,i=x-1;this.unlockLevelIndex+1===i&&e.applyPulseEffect(),x<=this.data.levels.length&&(this.checkUnlockedLevel(t),e.draw(this.levelSelectionPageIndex,this.unlockLevelIndex,t,this.data.levels.length),a.Debugger.DebugMode&&this.context.fillText(this.data.levels[x-1].levelMeta.levelType,e.levelData.x+e.btnSize/3.5,e.levelData.y+e.btnSize/1.3))}draw(){for(let e of this.levelButtons)this.drawLevel(e,this.gameLevelData)}downButton(e){e!=10*this.levelsSectionCount-10?(this.context.drawImage(this.loadedImages.nextbtn,this.canvas.width*this.rightBtnX,this.canvas.height/this.rightBtnY,this.canvas.height/this.rightBtnSize,this.canvas.height/this.rightBtnSize),this.rightBtnSize>10&&(this.rightBtnSize=this.rightBtnSize-.025),this.rightBtnY=this.rightBtnSize>10?1.299:1.3):(this.rightBtnSize=10,this.rightBtnX=.7,this.rightBtnY=1.3),0!=e?(this.context.drawImage(this.loadedImages.backbtn,this.canvas.width/this.leftBtnX,this.canvas.height/this.leftBtnY,this.canvas.height/this.leftBtnSize,this.canvas.height/this.leftBtnSize),this.leftBtnSize>10&&(this.leftBtnSize=this.leftBtnSize-.025),this.leftBtnY=this.leftBtnSize>10?1.299:1.3):(this.leftBtnSize=10,this.leftBtnX=10,this.leftBtnY=1.3)}checkUnlockedLevel(e){if(null!=e.length)for(let t of e)this.unlockLevelIndex<parseInt(t.levelNumber)&&t.starCount>=2&&(this.unlockLevelIndex=parseInt(t.levelNumber))}startGame(e){this.dispose(),this.audioPlayer.stopAllAudios();const t={currentLevelData:{...this.data.levels[e],levelNumber:e},selectedLevelNumber:e};this.logSelectedLevelEvent(),this.callBack(t,"LevelSelection")}logSelectedLevelEvent(){const e={cr_user_id:a.pseudoId,ftm_language:a.lang,profile_number:0,version_number:document.getElementById("version-info-id").innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",level_selected:this.levelNumber};this.firebaseIntegration.sendSelectedLevelEvent(e)}drawLevelSelection(){this.imagesLoaded&&(this.background?.draw(),this.draw(),this.downButton(this.levelSelectionPageIndex))}dispose(){this.audioPlayer.stopAllAudios(),document.getElementById("canvas").removeEventListener("mousedown",this.handleMouseDown,!1),document.removeEventListener("visibilitychange",this.pausePlayAudios,!1),document.getElementById("canvas").removeEventListener("touchstart",this.handleTouchStart,!1),document.getElementById("canvas").removeEventListener("touchmove",this.handleTouchMove,!1)}}},"./src/scenes/levelend-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LevelEndScene:()=>o});var a=x("./src/common/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/compositions/index.ts"),n=x("./src/constants/index.ts");class o{canvas;height;width;images;loadedImages;imagesLoaded;id;context;monster;closeButton;retryButton;nextButton;starCount;currentLevel;switchToGameplayCB;switchToLevelSelectionCB;data;background;audioPlayer;timeouts;starDrawnCount;isLastLevel;constructor(e,t,x,_,o,r,d,c,l,h){this.canvas=e,this.height=t,this.width=x,this.context=_,this.monster=new i.Monster(this.canvas,h,this.switchToReactionAnimation),this.switchToGameplayCB=d,this.switchToLevelSelectionCB=c,this.data=l,this.starDrawnCount=0,this.closeButton=new s.CloseButton(_,e,.2*this.width-.19*this.width/2,this.height/1.25),this.retryButton=new s.RetryButton(this.context,this.canvas,.5*this.width-.19*this.width/2,this.height/1.25),this.nextButton=new s.NextButton(this.context,this.width,this.height,.8*this.width-.19*this.width/2,this.height/1.25),this.audioPlayer=new i.AudioPlayer,this.starCount=o,this.currentLevel=r,this.images={backgroundImg:n.WIN_BG,star1Img:n.PIN_STAR_1,star2Img:n.PIN_STAR_2,star3Img:n.PIN_STAR_3,winBackgroundImg:n.DEFAULT_BACKGROUND_1},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0,this.starAnimation()})),this.addEventListener(),this.audioPlayer=new i.AudioPlayer,this.setupBg(),this.isLastLevel=this.currentLevel!==this.data.levels[this.data.levels.length-1].levelMeta.levelNumber&&this.starCount>=2}setupBg=async()=>{const{BG_GROUP_IMGS:e,draw:t}=(0,_.loadDynamicBgAssets)(this.currentLevel,_.BACKGROUND_ASSET_LIST);this.background=await(0,_.createBackground)(this.context,this.width,this.height,e,t)};switchToReactionAnimation=()=>{this.starCount<=1?((0,a.isDocumentVisible)()&&this.audioPlayer.playAudio(n.AUDIO_LEVEL_LOSE),this.monster.changeToSpitAnimation()):((0,a.isDocumentVisible)()&&(this.audioPlayer.playAudio(n.AUDIO_LEVEL_WIN),this.audioPlayer.playAudio(n.AUDIO_INTRO)),this.monster.changeToEatAnimation())};draw(e){this.background?.draw(),this.imagesLoaded&&(this.context.drawImage(this.loadedImages.backgroundImg,0,0,this.width,this.height+.12*this.height),this.drawStars(),this.monster.update(e),this.closeButton.draw(),this.retryButton.draw(),this.isLastLevel&&this.nextButton.draw())}starAnimation(){this.timeouts=[{delay:500,count:1},{delay:1e3,count:2},{delay:1500,count:3}].map((e=>setTimeout((()=>{this.starDrawnCount=e.count}),e.delay)))}drawStars(){this.starCount>=1&&this.starDrawnCount>=1&&(this.context.drawImage(this.loadedImages.star1Img,.2*this.width-.19*this.width/2,.2*this.height,.19*this.width,.19*this.width),this.starCount<=3&&this.starCount>1&&this.starDrawnCount<=3&&this.starDrawnCount>1&&(this.context.drawImage(this.loadedImages.star2Img,.5*this.width-.19*this.width/2,.15*this.height,.19*this.width,.19*this.width),this.starCount>=3&&this.starDrawnCount>=3&&this.context.drawImage(this.loadedImages.star3Img,.82*this.width-.19*this.width/2,.2*this.height,.19*this.width,.19*this.width)))}addEventListener(){document.getElementById("canvas").addEventListener(a.CLICK,this.handleMouseClick,!1),document.addEventListener("visibilitychange",this.pauseAudios,!1)}handleMouseClick=e=>{var t=document.getElementById("canvas").getBoundingClientRect();const x=e.clientX-t.left,a=e.clientY-t.top;if(this.closeButton.onClick(x,a)&&(this.audioPlayer.playButtonClickSound(),this.switchToLevelSelectionCB("LevelEnd")),this.retryButton.onClick(x,a)){this.audioPlayer.playButtonClickSound();let e={currentLevelData:{...this.data.levels[this.currentLevel],levelNumber:this.currentLevel},selectedLevelNumber:this.currentLevel};this.switchToGameplayCB(e,"LevelEnd")}if(this.isLastLevel&&this.nextButton.onClick(x,a)){this.audioPlayer.playButtonClickSound();let e=Number(this.currentLevel)+1,t={currentLevelData:{...this.data.levels[e],levelNumber:e},selectedLevelNumber:e};this.switchToGameplayCB(t,"LevelEnd")}};pauseAudios=()=>{(0,a.isDocumentVisible)()?this.starCount>=2&&this.audioPlayer.playAudio(n.AUDIO_INTRO):this.audioPlayer.stopAllAudios()};dispose=()=>{this.monster.dispose(),this.audioPlayer.stopAllAudios(),this.timeouts.forEach((e=>clearTimeout(e))),document.getElementById("canvas").removeEventListener(a.CLICK,this.handleMouseClick,!1),document.removeEventListener("visibilitychange",this.pauseAudios,!1)}}},"./src/scenes/loading-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{LoadingScene:()=>s});var a=x("./src/common/index.ts"),i=x("./src/constants/index.ts");class s{canvas;height;width;context;images;loadedImages;imagesLoaded;cloudXPosition=-500;stopCloudMoving=!1;cloudMovingTimeOut=0;removeLoading;constructor(e,t,x){this.canvas=document.getElementById("loading"),this.canvas.height=t,this.canvas.width=e,this.height=t,this.width=e,this.removeLoading=x,this.context=this.canvas.getContext("2d"),this.images={cloud6:i.CLOUD_6,cloud7:i.CLOUD_7,cloud8:i.CLOUD_8},(0,a.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}draw(e){this.context.clearRect(0,0,this.width,this.height),this.cloudXPosition+=.75*e,this.cloudMovingTimeOut+=e,this.cloudMovingTimeOut>2983&&this.removeLoading(),this.cloudXPosition>=.5*this.width&&!this.stopCloudMoving&&(this.cloudMovingTimeOut+=e,this.cloudMovingTimeOut>2e3&&(this.stopCloudMoving=!0,this.cloudXPosition=0)),this.imagesLoaded&&(this.stopCloudMoving?(this.context.drawImage(this.loadedImages.cloud6,0+this.cloudXPosition,.6*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,.4*this.width+this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,0+this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*-this.width+this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*this.width+this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.05*this.width+this.cloudXPosition,.2*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.6*-this.width+this.cloudXPosition,.3*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,.5*this.width+this.cloudXPosition,.4*this.height,this.width,.4*this.height),this.context.drawImage(this.loadedImages.cloud7,.4*-this.width+this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,.4*this.width+this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,.2*-this.width+this.cloudXPosition,.2*this.height,this.width,.5*this.height)):(this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=0?0:this.cloudXPosition,.6*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=0?0:this.cloudXPosition,.15*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*-this.width?.4*-this.width:this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.15*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.05*this.width?.05*this.width:this.cloudXPosition,.2*-this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.6*-this.width?.6*-this.width:this.cloudXPosition,.3*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=.5*this.width?.5*this.width:this.cloudXPosition,.4*this.height,this.width,.4*this.height),this.context.drawImage(this.loadedImages.cloud7,this.cloudXPosition>=.4*-this.width?.4*-this.width:this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud8,this.cloudXPosition>=.4*this.width?.4*this.width:this.cloudXPosition,.7*this.height,this.width,.5*this.height),this.context.drawImage(this.loadedImages.cloud6,this.cloudXPosition>=.2*-this.width?.2*-this.width:this.cloudXPosition,.2*this.height,this.width,.5*this.height)))}initCloud=()=>{this.cloudXPosition=-500,this.stopCloudMoving=!1,this.cloudMovingTimeOut=0}}},"./src/scenes/start-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{StartScene:()=>r});var a=x("./src/components/index.ts"),i=x("./src/components/buttons/index.ts"),s=x("./src/common/index.ts"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/compositions/index.ts"),o=x("./src/constants/index.ts");class r{canvas;data;width;height;monster;pickedStone;pwa_status;firebase_analytics;id;canavsElement;context;buttonContext;playButton;images;loadedImages;imagesLoaded=!1;handler;static SceneName;switchSceneToLevelSelection;background;audioPlayer;toggleBtn;pwa_install_status;titleTextElement;constructor(e,t,x){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.toggleBtn=document.getElementById("toggle-btn"),this.monster=new a.Monster(this.canvas,4),this.switchSceneToLevelSelection=x,this.audioPlayer=new a.AudioPlayer,this.pwa_status=localStorage.getItem(o.PWAInstallStatus),this.handler=document.getElementById("canvas"),this.devToggle(),this.createPlayButton(),window.addEventListener("beforeinstallprompt",this.handlerInstallPrompt),this.setupBg(),this.titleTextElement=document.getElementById("title"),this.generateGameTitle()}setupBg=async()=>{this.background=await(0,n.createBackground)(this.context,this.width,this.height,o.DEFAULT_BG_GROUP_IMGS,n.defaultBgDrawing)};devToggle=()=>{this.toggleBtn.addEventListener("click",(()=>(0,s.toggleDebugMode)(this.toggleBtn)))};generateGameTitle=()=>{this.titleTextElement.textContent=this.data.title};animation=e=>{this.context.clearRect(0,0,this.width,this.height),this.background?.draw(),this.monster.update(e),this.playButton.draw()};createPlayButton(){this.playButton=new i.PlayButton(this.context,this.canvas,.35*this.canvas.width,this.canvas.height/7),document.addEventListener("selectstart",(function(e){e.preventDefault()})),this.handler.addEventListener("click",this.handleMouseClick,!1)}handleMouseClick=e=>{let t=this;const x=document.getElementById("canvas");e.preventDefault();var a=x.getBoundingClientRect();const i=e.clientX-a.left,n=e.clientY-a.top,{excludeX:r,excludeY:d}=s.Utils.getExcludedCoordinates(x,15);i<r&&n<d||(_.FirebaseIntegration.getInstance().sendUserClickedOnPlayEvent(),fbq("trackCustom",o.FirebaseUserClicked,{event:"click"}),this.toggleBtn.style.display="none",this.audioPlayer.playButtonClickSound(),t.switchSceneToLevelSelection("StartScene"))};dispose(){this.monster.dispose(),this.audioPlayer.stopAllAudios(),this.handler.removeEventListener("click",this.handleMouseClick,!1),window.removeEventListener("beforeinstallprompt",this.handlerInstallPrompt,!1)}handlerInstallPrompt=e=>{e.preventDefault(),this.pwa_install_status=e,localStorage.setItem(o.PWAInstallStatus,"false")}}},"./src/scenes/test-gameplay-scene.ts":(e,t,x)=>{x.r(t),x.d(t,{TestGameplayScene:()=>o});var a=x("./src/constants/index.ts"),i=x("./src/components/index.ts"),s=x("./src/components/buttons/index.ts"),_=x("./src/common/index.ts");const n=document.getElementById("toggle-btn");window.addEventListener("beforeinstallprompt",(e=>{e.preventDefault(),localStorage.setItem(a.PWAInstallStatus,"false")}));class o{canvas;data;width;height;monster;levelIndicator;promptText;timerTicking;stoneHandler;pickedStone;pwa_status;firebase_analytics;id;canavsElement;context;buttonContext;outcome;playButton;levelSelectionScene;images;loadedImages;imagesLoaded=!1;handler;static SceneName;switchSceneToLevelSelection;counter=0;tutorial;constructor(e,t,x,s){this.canvas=e,this.data=t,this.width=e.width,this.height=e.height,this.canavsElement=document.getElementById("canvas"),this.context=this.canavsElement.getContext("2d"),this.monster=new i.Monster(this.canvas,0),console.log(...d("2510688200_69_4_69_51_4",Date.now," ::: ",performance.now)),this.switchSceneToLevelSelection=s,this.stoneHandler=new i.StoneHandler(this.context,this.canvas,2,this.data.levels[92],this.data.feedbackAudios,this.timerTicking),this.promptText=new i.PromptText(this.width,this.height,this.data.levels[92].puzzles[2],this.data.levels[92],!1),this.timerTicking=new i.TimerTicking(this.width,this.height,this.timeOverCallback),this.levelIndicator=new i.LevelIndicators(this.context,this.canvas,0),this.levelIndicator.setIndicators(3),this.tutorial.updateTargetStonePositions([100,100]),this.pwa_status=localStorage.getItem(a.PWAInstallStatus),this.handler=document.getElementById("canvas"),this.devToggle(),this.createPlayButton(),this.firebase_analytics=x,this.animation(0),this.images={pillerImg:a.ASSETS_PATH_TOTEM,bgImg:a.DEFAULT_BACKGROUND_1,hillImg:a.ASSETS_PATH_HILL,fenchImg:a.ASSETS_PATH_FENCE,profileMonster:a.ASSETS_PATH_MONSTER_IDLE},(0,_.loadImages)(this.images,(e=>{this.loadedImages=Object.assign({},e),this.imagesLoaded=!0}))}timeOverCallback=()=>{this.timerTicking.readyTimer(),this.timerTicking.startTimer(),this.timerTicking.isMyTimerOver=!1,5==this.counter&&(this.counter=0),this.levelIndicator.setIndicators(this.counter++)};devToggle=()=>{n.addEventListener("click",(()=>(0,_.toggleDebugMode)(n)))};handleMouseUp=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;Math.sqrt((a-t.monster.x-t.canvas.width/4)*(a-t.monster.x-t.canvas.width/4)+(i-t.monster.y-t.canvas.height/2.7)*(i-t.monster.y-t.canvas.height/2.7))<=60||t.monster.changeToIdleAnimation(),t.pickedStone=null};handleMouseDown=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;for(let e of t.stoneHandler.foilStones)Math.sqrt((a-e.x)*(a-e.x)+(i-e.y)*(i-e.y))<=40&&(this.pickedStone=e)};handleMouseMove=e=>{let t=this;var x=document.getElementById("canvas").getBoundingClientRect();const a=e.clientX-x.left,i=e.clientY-x.top;t.pickedStone&&(t.monster.changeToDragAnimation(),t.pickedStone.x=a,t.pickedStone.y=i)};animation=e=>{this.imagesLoaded&&(this.context.drawImage(this.loadedImages.bgImg,0,0,this.width,this.height),this.context.drawImage(this.loadedImages.pillerImg,.6*this.width,this.height/6,this.width,this.height/2),this.context.drawImage(this.loadedImages.fenchImg,.4*-this.width,this.height/3,this.width,this.height/3),this.context.drawImage(this.loadedImages.hillImg,.25*-this.width,this.height/2,1.5*this.width,this.height/2),this.context.font="bold 40px Arial",this.context.fillStyle="white",this.context.textAlign="center",this.context.fillText("Testing Gameplay",.5*this.width,this.height/10),this.monster.update(e),this.promptText.draw(e),this.stoneHandler.draw(e),this.levelIndicator.draw(),this.timerTicking.update(e))};draw(){}createPlayButton=()=>{this.playButton=new s.PlayButton(this.context,this.canvas,.35*this.canvas.width,this.canvas.height/7),this.handler.addEventListener("mouseup",this.handleMouseUp,!1),this.handler.addEventListener("mousemove",this.handleMouseMove,!1),this.handler.addEventListener("mousedown",this.handleMouseDown,!1),this.handler.addEventListener("touchstart",(function(e){var t=e.touches[0],x=new MouseEvent("mousedown",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1),this.handler.addEventListener("touchmove",(function(e){var t=e.touches[0],x=new MouseEvent("mousemove",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1),this.handler.addEventListener("touchend",(function(e){var t=e.changedTouches[0],x=new MouseEvent("mouseup",{clientX:t.clientX,clientY:t.clientY});document.getElementById("canvas").dispatchEvent(x)}),!1)};handleMouseClick=e=>{let t=this;const x=document.getElementById("canvas");e.preventDefault();var i=x.getBoundingClientRect();const s=e.clientX-i.left,_=e.clientY-i.top;t.playButton.onClick(s,_)&&(t.firebase_analytics&&t.firebase_analytics.logEvent(a.FirebaseUserClicked,"click"),fbq("trackCustom",a.FirebaseUserClicked,{event:"click"}),n.style.display="none",t.switchSceneToLevelSelection())};dispose(){this.handler.removeEventListener("click",this.handleMouseClick,!1)}}function r(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729176059707','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function d(e,...t){try{r().consoleLog(e,t)}catch(e){}return t}},"./node_modules/@firebase/analytics/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{getAnalytics:()=>H,getGoogleAnalyticsClientId:()=>Y,initializeAnalytics:()=>G,isSupported:()=>W,logEvent:()=>Z,setAnalyticsCollectionEnabled:()=>K,setConsent:()=>Q,setCurrentScreen:()=>V,setDefaultEventParameters:()=>q,setUserId:()=>X,setUserProperties:()=>$,settings:()=>F});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/logger/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js");x("./node_modules/@firebase/installations/dist/esm/index.esm2017.js");const n="analytics",o="firebase_id",r="origin",d=6e4,c="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",l="https://www.googletagmanager.com/gtag/js",h=new i.Logger("@firebase/analytics"),b={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."},f=new s.ErrorFactory("analytics","Analytics",b);function u(e){if(!e.startsWith(l)){const t=f.create("invalid-gtag-resource",{gtagURL:e});return h.warn(t.message),""}return e}function p(e){return Promise.all(e.map((e=>e.catch((e=>e)))))}function g(e,t){const x=function(e,t){let x;return window.trustedTypes&&(x=window.trustedTypes.createPolicy(e,t)),x}("firebase-js-sdk-policy",{createScriptURL:u}),a=document.createElement("script"),i=`${l}?l=${e}&id=${t}`;a.src=x?null==x?void 0:x.createScriptURL(i):i,a.async=!0,document.head.appendChild(a)}function m(e,t,x,a){return async function(i,...s){try{if("event"===i){const[a,i]=s;await async function(e,t,x,a,i){try{let s=[];if(i&&i.send_to){let e=i.send_to;Array.isArray(e)||(e=[e]);const a=await p(x);for(const x of e){const e=a.find((e=>e.measurementId===x)),i=e&&t[e.appId];if(!i){s=[];break}s.push(i)}}0===s.length&&(s=Object.values(t)),await Promise.all(s),e("event",a,i||{})}catch(e){h.error(e)}}(e,t,x,a,i)}else if("config"===i){const[i,_]=s;await async function(e,t,x,a,i,s){const _=a[i];try{if(_)await t[_];else{const e=(await p(x)).find((e=>e.measurementId===i));e&&await t[e.appId]}}catch(e){h.error(e)}e("config",i,s)}(e,t,x,a,i,_)}else if("consent"===i){const[t]=s;e("consent","update",t)}else if("get"===i){const[t,x,a]=s;e("get",t,x,a)}else if("set"===i){const[t]=s;e("set",t)}else e(i,...s)}catch(e){h.error(e)}}}const v=30;const w=new class{constructor(e={},t=1e3){this.throttleMetadata=e,this.intervalMillis=t}getThrottleMetadata(e){return this.throttleMetadata[e]}setThrottleMetadata(e,t){this.throttleMetadata[e]=t}deleteThrottleMetadata(e){delete this.throttleMetadata[e]}};function S(e){return new Headers({Accept:"application/json","x-goog-api-key":e})}async function y(e,t=w,x){const{appId:a,apiKey:i,measurementId:s}=e.options;if(!a)throw f.create("no-app-id");if(!i){if(s)return{measurementId:s,appId:a};throw f.create("no-api-key")}const _=t.getThrottleMetadata(a)||{backoffCount:0,throttleEndTimeMillis:Date.now()},n=new I;return setTimeout((async()=>{n.abort()}),void 0!==x?x:d),E({appId:a,apiKey:i,measurementId:s},_,n,t)}async function E(e,{throttleEndTimeMillis:t,backoffCount:x},a,i=w){var _;const{appId:n,measurementId:o}=e;try{await function(e,t){return new Promise(((x,a)=>{const i=Math.max(t-Date.now(),0),s=setTimeout(x,i);e.addEventListener((()=>{clearTimeout(s),a(f.create("fetch-throttle",{throttleEndTimeMillis:t}))}))}))}(a,t)}catch(e){if(o)return h.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${null==e?void 0:e.message}]`),{appId:n,measurementId:o};throw e}try{const t=await async function(e){var t;const{appId:x,apiKey:a}=e,i={method:"GET",headers:S(a)},s=c.replace("{app-id}",x),_=await fetch(s,i);if(200!==_.status&&304!==_.status){let e="";try{const x=await _.json();(null===(t=x.error)||void 0===t?void 0:t.message)&&(e=x.error.message)}catch(e){}throw f.create("config-fetch-failed",{httpStatus:_.status,responseMessage:e})}return _.json()}(e);return i.deleteThrottleMetadata(n),t}catch(t){const r=t;if(!function(e){if(!(e instanceof s.FirebaseError&&e.customData))return!1;const t=Number(e.customData.httpStatus);return 429===t||500===t||503===t||504===t}(r)){if(i.deleteThrottleMetadata(n),o)return h.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${null==r?void 0:r.message}]`),{appId:n,measurementId:o};throw t}const d=503===Number(null===(_=null==r?void 0:r.customData)||void 0===_?void 0:_.httpStatus)?(0,s.calculateBackoffMillis)(x,i.intervalMillis,v):(0,s.calculateBackoffMillis)(x,i.intervalMillis),c={throttleEndTimeMillis:Date.now()+d,backoffCount:x+1};return i.setThrottleMetadata(n,c),h.debug(`Calling attemptFetch again in ${d} millis`),E(e,c,a,i)}}class I{constructor(){this.listeners=[]}addEventListener(e){this.listeners.push(e)}abort(){this.listeners.forEach((e=>e()))}}let T,P;function L(e){P=e}function C(e){T=e}async function A(e,t,x,a,i,_,n){var d;const c=y(e);c.then((t=>{x[t.measurementId]=t.appId,e.options.measurementId&&t.measurementId!==e.options.measurementId&&h.warn(`The measurement ID in the local Firebase config (${e.options.measurementId}) does not match the measurement ID fetched from the server (${t.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)})).catch((e=>h.error(e))),t.push(c);const b=async function(){if(!(0,s.isIndexedDBAvailable)())return h.warn(f.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await(0,s.validateIndexedDBOpenable)()}catch(e){return h.warn(f.create("indexeddb-unavailable",{errorInfo:null==e?void 0:e.toString()}).message),!1}return!0}().then((e=>e?a.getId():void 0)),[u,p]=await Promise.all([c,b]);(function(e){const t=window.document.getElementsByTagName("script");for(const x of Object.values(t))if(x.src&&x.src.includes(l)&&x.src.includes(e))return x;return null})(_)||g(_,u.measurementId),P&&(i("consent","default",P),L(void 0)),i("js",new Date);const m=null!==(d=null==n?void 0:n.config)&&void 0!==d?d:{};return m[r]="firebase",m.update=!0,null!=p&&(m[o]=p),i("config",u.measurementId,m),T&&(i("set",T),C(void 0)),u.measurementId}class k{constructor(e){this.app=e}_delete(){return delete N[this.app.options.appId],Promise.resolve()}}let N={},D=[];const O={};let B,M,z="dataLayer",j="gtag",R=!1;function F(e){if(R)throw f.create("already-initialized");e.dataLayerName&&(z=e.dataLayerName),e.gtagName&&(j=e.gtagName)}function U(e,t,x){!function(){const e=[];if((0,s.isBrowserExtension)()&&e.push("This is a browser extension environment."),(0,s.areCookiesEnabled)()||e.push("Cookies are not available."),e.length>0){const t=e.map(((e,t)=>`(${t+1}) ${e}`)).join(" "),x=f.create("invalid-analytics-context",{errorInfo:t});h.warn(x.message)}}();const a=e.options.appId;if(!a)throw f.create("no-app-id");if(!e.options.apiKey){if(!e.options.measurementId)throw f.create("no-api-key");h.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId} provided in the "measurementId" field in the local Firebase config.`)}if(null!=N[a])throw f.create("already-exists",{id:a});if(!R){!function(e){let t=[];Array.isArray(window[e])?t=window[e]:window[e]=t}(z);const{wrappedGtag:e,gtagCore:t}=function(e,t,x,a,i){let s=function(...e){window[a].push(arguments)};return window[i]&&"function"==typeof window[i]&&(s=window[i]),window[i]=m(s,e,t,x),{gtagCore:s,wrappedGtag:window[i]}}(N,D,O,z,j);M=e,B=t,R=!0}N[a]=A(e,D,O,t,B,z,x);return new k(e)}function H(e=(0,a.getApp)()){e=(0,s.getModularInstance)(e);const t=(0,a._getProvider)(e,n);return t.isInitialized()?t.getImmediate():G(e)}function G(e,t={}){const x=(0,a._getProvider)(e,n);if(x.isInitialized()){const e=x.getImmediate();if((0,s.deepEqual)(t,x.getOptions()))return e;throw f.create("already-initialized")}return x.initialize({options:t})}async function W(){if((0,s.isBrowserExtension)())return!1;if(!(0,s.areCookiesEnabled)())return!1;if(!(0,s.isIndexedDBAvailable)())return!1;try{return await(0,s.validateIndexedDBOpenable)()}catch(e){return!1}}function V(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global)return e("set",{screen_name:x}),Promise.resolve();e("config",await t,{update:!0,screen_name:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}async function Y(e){return e=(0,s.getModularInstance)(e),async function(e,t){const x=await t;return new Promise(((t,a)=>{e("get",x,"client_id",(e=>{e||a(f.create("no-client-id")),t(e)}))}))}(M,N[e.app.options.appId])}function X(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global)return e("set",{user_id:x}),Promise.resolve();e("config",await t,{update:!0,user_id:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}function $(e,t,x){e=(0,s.getModularInstance)(e),async function(e,t,x,a){if(a&&a.global){const t={};for(const e of Object.keys(x))t[`user_properties.${e}`]=x[e];return e("set",t),Promise.resolve()}e("config",await t,{update:!0,user_properties:x})}(M,N[e.app.options.appId],t,x).catch((e=>h.error(e)))}function K(e,t){e=(0,s.getModularInstance)(e),async function(e,t){const x=await e;window[`ga-disable-${x}`]=!t}(N[e.app.options.appId],t).catch((e=>h.error(e)))}function q(e){M?M("set",e):C(e)}function Z(e,t,x,a){e=(0,s.getModularInstance)(e),async function(e,t,x,a,i){if(i&&i.global)e("event",x,a);else{const i=await t;e("event",x,Object.assign(Object.assign({},a),{send_to:i}))}}(M,N[e.app.options.appId],t,x,a).catch((e=>h.error(e)))}function Q(e){M?M("consent","update",e):L(e)}const J="@firebase/analytics",ee="0.10.0";(0,a._registerComponent)(new _.Component(n,((e,{options:t})=>U(e.getProvider("app").getImmediate(),e.getProvider("installations-internal").getImmediate(),t)),"PUBLIC")),(0,a._registerComponent)(new _.Component("analytics-internal",(function(e){try{const t=e.getProvider(n).getImmediate();return{logEvent:(e,x,a)=>Z(t,e,x,a)}}catch(e){throw f.create("interop-component-reg-failed",{reason:e})}}),"PRIVATE")),(0,a.registerVersion)(J,ee),(0,a.registerVersion)(J,ee,"esm2017")},"./node_modules/@firebase/app/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{FirebaseError:()=>s.FirebaseError,SDK_VERSION:()=>$,_DEFAULT_ENTRY_NAME:()=>B,_addComponent:()=>R,_addOrOverwriteComponent:()=>F,_apps:()=>z,_clearComponents:()=>W,_components:()=>j,_getProvider:()=>H,_registerComponent:()=>U,_removeServiceInstance:()=>G,deleteApp:()=>Q,getApp:()=>q,getApps:()=>Z,initializeApp:()=>K,onLog:()=>ee,registerVersion:()=>J,setLogLevel:()=>te});var a=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/logger/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/idb/build/index.js");class n{constructor(e){this.container=e}getPlatformInfoString(){return this.container.getProviders().map((e=>{if(function(e){const t=e.getComponent();return"VERSION"===(null==t?void 0:t.type)}(e)){const t=e.getImmediate();return`${t.library}/${t.version}`}return null})).filter((e=>e)).join(" ")}}const o="@firebase/app",r="0.9.15",d=new i.Logger("@firebase/app"),c="@firebase/app-compat",l="@firebase/analytics-compat",h="@firebase/analytics",b="@firebase/app-check-compat",f="@firebase/app-check",u="@firebase/auth",p="@firebase/auth-compat",g="@firebase/database",m="@firebase/database-compat",v="@firebase/functions",w="@firebase/functions-compat",S="@firebase/installations",y="@firebase/installations-compat",E="@firebase/messaging",I="@firebase/messaging-compat",T="@firebase/performance",P="@firebase/performance-compat",L="@firebase/remote-config",C="@firebase/remote-config-compat",A="@firebase/storage",k="@firebase/storage-compat",N="@firebase/firestore",D="@firebase/firestore-compat",O="firebase",B="[DEFAULT]",M={[o]:"fire-core",[c]:"fire-core-compat",[h]:"fire-analytics",[l]:"fire-analytics-compat",[f]:"fire-app-check",[b]:"fire-app-check-compat",[u]:"fire-auth",[p]:"fire-auth-compat",[g]:"fire-rtdb",[m]:"fire-rtdb-compat",[v]:"fire-fn",[w]:"fire-fn-compat",[S]:"fire-iid",[y]:"fire-iid-compat",[E]:"fire-fcm",[I]:"fire-fcm-compat",[T]:"fire-perf",[P]:"fire-perf-compat",[L]:"fire-rc",[C]:"fire-rc-compat",[A]:"fire-gcs",[k]:"fire-gcs-compat",[N]:"fire-fst",[D]:"fire-fst-compat","fire-js":"fire-js",[O]:"fire-js-all"},z=new Map,j=new Map;function R(e,t){try{e.container.addComponent(t)}catch(x){d.debug(`Component ${t.name} failed to register with FirebaseApp ${e.name}`,x)}}function F(e,t){e.container.addOrOverwriteComponent(t)}function U(e){const t=e.name;if(j.has(t))return d.debug(`There were multiple attempts to register component ${t}.`),!1;j.set(t,e);for(const t of z.values())R(t,e);return!0}function H(e,t){const x=e.container.getProvider("heartbeat").getImmediate({optional:!0});return x&&x.triggerHeartbeat(),e.container.getProvider(t)}function G(e,t,x=B){H(e,t).clearInstance(x)}function W(){j.clear()}const V={"no-app":"No Firebase App '{$appName}' has been created - call initializeApp() first","bad-app-name":"Illegal App name: '{$appName}","duplicate-app":"Firebase App named '{$appName}' already exists with different options or config","app-deleted":"Firebase App named '{$appName}' already deleted","no-options":"Need to provide options, when not being deployed to hosting via source.","invalid-app-argument":"firebase.{$appName}() takes either no argument or a Firebase App instance.","invalid-log-argument":"First argument to `onLog` must be null or a function.","idb-open":"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.","idb-get":"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.","idb-set":"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.","idb-delete":"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}."},Y=new s.ErrorFactory("app","Firebase",V);class X{constructor(e,t,x){this._isDeleted=!1,this._options=Object.assign({},e),this._config=Object.assign({},t),this._name=t.name,this._automaticDataCollectionEnabled=t.automaticDataCollectionEnabled,this._container=x,this.container.addComponent(new a.Component("app",(()=>this),"PUBLIC"))}get automaticDataCollectionEnabled(){return this.checkDestroyed(),this._automaticDataCollectionEnabled}set automaticDataCollectionEnabled(e){this.checkDestroyed(),this._automaticDataCollectionEnabled=e}get name(){return this.checkDestroyed(),this._name}get options(){return this.checkDestroyed(),this._options}get config(){return this.checkDestroyed(),this._config}get container(){return this._container}get isDeleted(){return this._isDeleted}set isDeleted(e){this._isDeleted=e}checkDestroyed(){if(this.isDeleted)throw Y.create("app-deleted",{appName:this._name})}}const $="10.1.0";function K(e,t={}){let x=e;if("object"!=typeof t){t={name:t}}const i=Object.assign({name:B,automaticDataCollectionEnabled:!1},t),_=i.name;if("string"!=typeof _||!_)throw Y.create("bad-app-name",{appName:String(_)});if(x||(x=(0,s.getDefaultAppConfig)()),!x)throw Y.create("no-options");const n=z.get(_);if(n){if((0,s.deepEqual)(x,n.options)&&(0,s.deepEqual)(i,n.config))return n;throw Y.create("duplicate-app",{appName:_})}const o=new a.ComponentContainer(_);for(const e of j.values())o.addComponent(e);const r=new X(x,i,o);return z.set(_,r),r}function q(e=B){const t=z.get(e);if(!t&&e===B&&(0,s.getDefaultAppConfig)())return K();if(!t)throw Y.create("no-app",{appName:e});return t}function Z(){return Array.from(z.values())}async function Q(e){const t=e.name;z.has(t)&&(z.delete(t),await Promise.all(e.container.getProviders().map((e=>e.delete()))),e.isDeleted=!0)}function J(e,t,x){var i;let s=null!==(i=M[e])&&void 0!==i?i:e;x&&(s+=`-${x}`);const _=s.match(/\s|\//),n=t.match(/\s|\//);if(_||n){const e=[`Unable to register library "${s}" with version "${t}":`];return _&&e.push(`library name "${s}" contains illegal characters (whitespace or "/")`),_&&n&&e.push("and"),n&&e.push(`version name "${t}" contains illegal characters (whitespace or "/")`),void d.warn(e.join(" "))}U(new a.Component(`${s}-version`,(()=>({library:s,version:t})),"VERSION"))}function ee(e,t){if(null!==e&&"function"!=typeof e)throw Y.create("invalid-log-argument");(0,i.setUserLogHandler)(e,t)}function te(e){(0,i.setLogLevel)(e)}const xe="firebase-heartbeat-database",ae=1,ie="firebase-heartbeat-store";let se=null;function _e(){return se||(se=(0,_.openDB)(xe,ae,{upgrade:(e,t)=>{if(0===t)e.createObjectStore(ie)}}).catch((e=>{throw Y.create("idb-open",{originalErrorMessage:e.message})}))),se}async function ne(e,t){try{const x=(await _e()).transaction(ie,"readwrite"),a=x.objectStore(ie);await a.put(t,oe(e)),await x.done}catch(e){if(e instanceof s.FirebaseError)d.warn(e.message);else{const t=Y.create("idb-set",{originalErrorMessage:null==e?void 0:e.message});d.warn(t.message)}}}function oe(e){return`${e.name}!${e.options.appId}`}class re{constructor(e){this.container=e,this._heartbeatsCache=null;const t=this.container.getProvider("app").getImmediate();this._storage=new ce(t),this._heartbeatsCachePromise=this._storage.read().then((e=>(this._heartbeatsCache=e,e)))}async triggerHeartbeat(){const e=this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(),t=de();if(null===this._heartbeatsCache&&(this._heartbeatsCache=await this._heartbeatsCachePromise),this._heartbeatsCache.lastSentHeartbeatDate!==t&&!this._heartbeatsCache.heartbeats.some((e=>e.date===t)))return this._heartbeatsCache.heartbeats.push({date:t,agent:e}),this._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter((e=>{const t=new Date(e.date).valueOf();return Date.now()-t<=2592e6})),this._storage.overwrite(this._heartbeatsCache)}async getHeartbeatsHeader(){if(null===this._heartbeatsCache&&await this._heartbeatsCachePromise,null===this._heartbeatsCache||0===this._heartbeatsCache.heartbeats.length)return"";const e=de(),{heartbeatsToSend:t,unsentEntries:x}=function(e,t=1024){const x=[];let a=e.slice();for(const i of e){const e=x.find((e=>e.agent===i.agent));if(e){if(e.dates.push(i.date),le(x)>t){e.dates.pop();break}}else if(x.push({agent:i.agent,dates:[i.date]}),le(x)>t){x.pop();break}a=a.slice(1)}return{heartbeatsToSend:x,unsentEntries:a}}(this._heartbeatsCache.heartbeats),a=(0,s.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:t}));return this._heartbeatsCache.lastSentHeartbeatDate=e,x.length>0?(this._heartbeatsCache.heartbeats=x,await this._storage.overwrite(this._heartbeatsCache)):(this._heartbeatsCache.heartbeats=[],this._storage.overwrite(this._heartbeatsCache)),a}}function de(){return(new Date).toISOString().substring(0,10)}class ce{constructor(e){this.app=e,this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}async runIndexedDBEnvironmentCheck(){return!!(0,s.isIndexedDBAvailable)()&&(0,s.validateIndexedDBOpenable)().then((()=>!0)).catch((()=>!1))}async read(){if(await this._canUseIndexedDBPromise){return await async function(e){try{const t=await _e();return await t.transaction(ie).objectStore(ie).get(oe(e))}catch(e){if(e instanceof s.FirebaseError)d.warn(e.message);else{const t=Y.create("idb-get",{originalErrorMessage:null==e?void 0:e.message});d.warn(t.message)}}}(this.app)||{heartbeats:[]}}return{heartbeats:[]}}async overwrite(e){var t;if(await this._canUseIndexedDBPromise){const x=await this.read();return ne(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:x.lastSentHeartbeatDate,heartbeats:e.heartbeats})}}async add(e){var t;if(await this._canUseIndexedDBPromise){const x=await this.read();return ne(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:x.lastSentHeartbeatDate,heartbeats:[...x.heartbeats,...e.heartbeats]})}}}function le(e){return(0,s.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:e})).length}var he;he="",U(new a.Component("platform-logger",(e=>new n(e)),"PRIVATE")),U(new a.Component("heartbeat",(e=>new re(e)),"PRIVATE")),J(o,r,he),J(o,r,"esm2017"),J("fire-js","")},"./node_modules/@firebase/component/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{Component:()=>i,ComponentContainer:()=>n,Provider:()=>_});var a=x("./node_modules/@firebase/util/dist/index.esm2017.js");class i{constructor(e,t,x){this.name=e,this.instanceFactory=t,this.type=x,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(e){return this.instantiationMode=e,this}setMultipleInstances(e){return this.multipleInstances=e,this}setServiceProps(e){return this.serviceProps=e,this}setInstanceCreatedCallback(e){return this.onInstanceCreated=e,this}}const s="[DEFAULT]";class _{constructor(e,t){this.name=e,this.container=t,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}get(e){const t=this.normalizeInstanceIdentifier(e);if(!this.instancesDeferred.has(t)){const e=new a.Deferred;if(this.instancesDeferred.set(t,e),this.isInitialized(t)||this.shouldAutoInitialize())try{const x=this.getOrInitializeService({instanceIdentifier:t});x&&e.resolve(x)}catch(e){}}return this.instancesDeferred.get(t).promise}getImmediate(e){var t;const x=this.normalizeInstanceIdentifier(null==e?void 0:e.identifier),a=null!==(t=null==e?void 0:e.optional)&&void 0!==t&&t;if(!this.isInitialized(x)&&!this.shouldAutoInitialize()){if(a)return null;throw Error(`Service ${this.name} is not available`)}try{return this.getOrInitializeService({instanceIdentifier:x})}catch(e){if(a)return null;throw e}}getComponent(){return this.component}setComponent(e){if(e.name!==this.name)throw Error(`Mismatching Component ${e.name} for Provider ${this.name}.`);if(this.component)throw Error(`Component for ${this.name} has already been provided`);if(this.component=e,this.shouldAutoInitialize()){if(function(e){return"EAGER"===e.instantiationMode}(e))try{this.getOrInitializeService({instanceIdentifier:s})}catch(e){}for(const[e,t]of this.instancesDeferred.entries()){const x=this.normalizeInstanceIdentifier(e);try{const e=this.getOrInitializeService({instanceIdentifier:x});t.resolve(e)}catch(e){}}}}clearInstance(e=s){this.instancesDeferred.delete(e),this.instancesOptions.delete(e),this.instances.delete(e)}async delete(){const e=Array.from(this.instances.values());await Promise.all([...e.filter((e=>"INTERNAL"in e)).map((e=>e.INTERNAL.delete())),...e.filter((e=>"_delete"in e)).map((e=>e._delete()))])}isComponentSet(){return null!=this.component}isInitialized(e=s){return this.instances.has(e)}getOptions(e=s){return this.instancesOptions.get(e)||{}}initialize(e={}){const{options:t={}}=e,x=this.normalizeInstanceIdentifier(e.instanceIdentifier);if(this.isInitialized(x))throw Error(`${this.name}(${x}) has already been initialized`);if(!this.isComponentSet())throw Error(`Component ${this.name} has not been registered yet`);const a=this.getOrInitializeService({instanceIdentifier:x,options:t});for(const[e,t]of this.instancesDeferred.entries()){x===this.normalizeInstanceIdentifier(e)&&t.resolve(a)}return a}onInit(e,t){var x;const a=this.normalizeInstanceIdentifier(t),i=null!==(x=this.onInitCallbacks.get(a))&&void 0!==x?x:new Set;i.add(e),this.onInitCallbacks.set(a,i);const s=this.instances.get(a);return s&&e(s,a),()=>{i.delete(e)}}invokeOnInitCallbacks(e,t){const x=this.onInitCallbacks.get(t);if(x)for(const a of x)try{a(e,t)}catch(e){}}getOrInitializeService({instanceIdentifier:e,options:t={}}){let x=this.instances.get(e);if(!x&&this.component&&(x=this.component.instanceFactory(this.container,{instanceIdentifier:(a=e,a===s?void 0:a),options:t}),this.instances.set(e,x),this.instancesOptions.set(e,t),this.invokeOnInitCallbacks(x,e),this.component.onInstanceCreated))try{this.component.onInstanceCreated(this.container,e,x)}catch(e){}var a;return x||null}normalizeInstanceIdentifier(e=s){return this.component?this.component.multipleInstances?e:s:e}shouldAutoInitialize(){return!!this.component&&"EXPLICIT"!==this.component.instantiationMode}}class n{constructor(e){this.name=e,this.providers=new Map}addComponent(e){const t=this.getProvider(e.name);if(t.isComponentSet())throw new Error(`Component ${e.name} has already been registered with ${this.name}`);t.setComponent(e)}addOrOverwriteComponent(e){this.getProvider(e.name).isComponentSet()&&this.providers.delete(e.name),this.addComponent(e)}getProvider(e){if(this.providers.has(e))return this.providers.get(e);const t=new _(e,this);return this.providers.set(e,t),t}getProviders(){return Array.from(this.providers.values())}}},"./node_modules/@firebase/installations/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{deleteInstallations:()=>J,getId:()=>q,getInstallations:()=>te,getToken:()=>Z,onIdChange:()=>ee});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js"),i=x("./node_modules/@firebase/component/dist/esm/index.esm2017.js"),s=x("./node_modules/@firebase/util/dist/index.esm2017.js"),_=x("./node_modules/@firebase/installations/node_modules/idb/build/index.js");const n="@firebase/installations",o="0.6.4",r=1e4,d=`w:${o}`,c="FIS_v2",l="https://firebaseinstallations.googleapis.com/v1",h=36e5,b={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},f=new s.ErrorFactory("installations","Installations",b);function u(e){return e instanceof s.FirebaseError&&e.code.includes("request-failed")}function p({projectId:e}){return`${l}/projects/${e}/installations`}function g(e){return{token:e.token,requestStatus:2,expiresIn:(t=e.expiresIn,Number(t.replace("s","000"))),creationTime:Date.now()};var t}async function m(e,t){const x=(await t.json()).error;return f.create("request-failed",{requestName:e,serverCode:x.code,serverMessage:x.message,serverStatus:x.status})}function v({apiKey:e}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}function w(e,{refreshToken:t}){const x=v(e);return x.append("Authorization",function(e){return`${c} ${e}`}(t)),x}async function S(e){const t=await e();return t.status>=500&&t.status<600?e():t}function y(e){return new Promise((t=>{setTimeout(t,e)}))}const E=/^[cdef][\w-]{21}$/,I="";function T(){try{const e=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(e),e[0]=112+e[0]%16;const t=function(e){const t=(x=e,btoa(String.fromCharCode(...x)).replace(/\+/g,"-").replace(/\//g,"_"));var x;return t.substr(0,22)}(e);return E.test(t)?t:I}catch(e){return I}}function P(e){return`${e.appName}!${e.appId}`}const L=new Map;function C(e,t){const x=P(e);A(x,t),function(e,t){const x=N();x&&x.postMessage({key:e,fid:t});D()}(x,t)}function A(e,t){const x=L.get(e);if(x)for(const e of x)e(t)}let k=null;function N(){return!k&&"BroadcastChannel"in self&&(k=new BroadcastChannel("[Firebase] FID Change"),k.onmessage=e=>{A(e.data.key,e.data.fid)}),k}function D(){0===L.size&&k&&(k.close(),k=null)}const O="firebase-installations-database",B=1,M="firebase-installations-store";let z=null;function j(){return z||(z=(0,_.openDB)(O,B,{upgrade:(e,t)=>{if(0===t)e.createObjectStore(M)}})),z}async function R(e,t){const x=P(e),a=(await j()).transaction(M,"readwrite"),i=a.objectStore(M),s=await i.get(x);return await i.put(t,x),await a.done,s&&s.fid===t.fid||C(e,t.fid),t}async function F(e){const t=P(e),x=(await j()).transaction(M,"readwrite");await x.objectStore(M).delete(t),await x.done}async function U(e,t){const x=P(e),a=(await j()).transaction(M,"readwrite"),i=a.objectStore(M),s=await i.get(x),_=t(s);return void 0===_?await i.delete(x):await i.put(_,x),await a.done,!_||s&&s.fid===_.fid||C(e,_.fid),_}async function H(e){let t;const x=await U(e.appConfig,(x=>{const a=function(e){const t=e||{fid:T(),registrationStatus:0};return V(t)}(x),i=function(e,t){if(0===t.registrationStatus){if(!navigator.onLine){return{installationEntry:t,registrationPromise:Promise.reject(f.create("app-offline"))}}const x={fid:t.fid,registrationStatus:1,registrationTime:Date.now()},a=async function(e,t){try{const x=await async function({appConfig:e,heartbeatServiceProvider:t},{fid:x}){const a=p(e),i=v(e),s=t.getImmediate({optional:!0});if(s){const e=await s.getHeartbeatsHeader();e&&i.append("x-firebase-client",e)}const _={fid:x,authVersion:c,appId:e.appId,sdkVersion:d},n={method:"POST",headers:i,body:JSON.stringify(_)},o=await S((()=>fetch(a,n)));if(o.ok){const e=await o.json();return{fid:e.fid||x,registrationStatus:2,refreshToken:e.refreshToken,authToken:g(e.authToken)}}throw await m("Create Installation",o)}(e,t);return R(e.appConfig,x)}catch(x){throw u(x)&&409===x.customData.serverCode?await F(e.appConfig):await R(e.appConfig,{fid:t.fid,registrationStatus:0}),x}}(e,x);return{installationEntry:x,registrationPromise:a}}return 1===t.registrationStatus?{installationEntry:t,registrationPromise:G(e)}:{installationEntry:t}}(e,a);return t=i.registrationPromise,i.installationEntry}));return x.fid===I?{installationEntry:await t}:{installationEntry:x,registrationPromise:t}}async function G(e){let t=await W(e.appConfig);for(;1===t.registrationStatus;)await y(100),t=await W(e.appConfig);if(0===t.registrationStatus){const{installationEntry:t,registrationPromise:x}=await H(e);return x||t}return t}function W(e){return U(e,(e=>{if(!e)throw f.create("installation-not-found");return V(e)}))}function V(e){return 1===(t=e).registrationStatus&&t.registrationTime+r<Date.now()?{fid:e.fid,registrationStatus:0}:e;var t}async function Y({appConfig:e,heartbeatServiceProvider:t},x){const a=function(e,{fid:t}){return`${p(e)}/${t}/authTokens:generate`}(e,x),i=w(e,x),s=t.getImmediate({optional:!0});if(s){const e=await s.getHeartbeatsHeader();e&&i.append("x-firebase-client",e)}const _={installation:{sdkVersion:d,appId:e.appId}},n={method:"POST",headers:i,body:JSON.stringify(_)},o=await S((()=>fetch(a,n)));if(o.ok){return g(await o.json())}throw await m("Generate Auth Token",o)}async function X(e,t=!1){let x;const a=await U(e.appConfig,(a=>{if(!K(a))throw f.create("not-registered");const i=a.authToken;if(!t&&function(e){return 2===e.requestStatus&&!function(e){const t=Date.now();return t<e.creationTime||e.creationTime+e.expiresIn<t+h}(e)}(i))return a;if(1===i.requestStatus)return x=async function(e,t){let x=await $(e.appConfig);for(;1===x.authToken.requestStatus;)await y(100),x=await $(e.appConfig);const a=x.authToken;return 0===a.requestStatus?X(e,t):a}(e,t),a;{if(!navigator.onLine)throw f.create("app-offline");const t=function(e){const t={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},e),{authToken:t})}(a);return x=async function(e,t){try{const x=await Y(e,t),a=Object.assign(Object.assign({},t),{authToken:x});return await R(e.appConfig,a),x}catch(x){if(!u(x)||401!==x.customData.serverCode&&404!==x.customData.serverCode){const x=Object.assign(Object.assign({},t),{authToken:{requestStatus:0}});await R(e.appConfig,x)}else await F(e.appConfig);throw x}}(e,t),t}}));return x?await x:a.authToken}function $(e){return U(e,(e=>{if(!K(e))throw f.create("not-registered");const t=e.authToken;return 1===(x=t).requestStatus&&x.requestTime+r<Date.now()?Object.assign(Object.assign({},e),{authToken:{requestStatus:0}}):e;var x}))}function K(e){return void 0!==e&&2===e.registrationStatus}async function q(e){const t=e,{installationEntry:x,registrationPromise:a}=await H(t);return a?a.catch(console.error):X(t).catch(console.error),x.fid}async function Z(e,t=!1){const x=e;await async function(e){const{registrationPromise:t}=await H(e);t&&await t}(x);return(await X(x,t)).token}async function Q(e,t){const x=function(e,{fid:t}){return`${p(e)}/${t}`}(e,t),a={method:"DELETE",headers:w(e,t)},i=await S((()=>fetch(x,a)));if(!i.ok)throw await m("Delete Installation",i)}async function J(e){const{appConfig:t}=e,x=await U(t,(e=>{if(!e||0!==e.registrationStatus)return e}));if(x){if(1===x.registrationStatus)throw f.create("delete-pending-registration");if(2===x.registrationStatus){if(!navigator.onLine)throw f.create("app-offline");await Q(t,x),await F(t)}}}function ee(e,t){const{appConfig:x}=e;return function(e,t){N();const x=P(e);let a=L.get(x);a||(a=new Set,L.set(x,a)),a.add(t)}(x,t),()=>{!function(e,t){const x=P(e),a=L.get(x);a&&(a.delete(t),0===a.size&&L.delete(x),D())}(x,t)}}function te(e=(0,a.getApp)()){return(0,a._getProvider)(e,"installations").getImmediate()}function xe(e){return f.create("missing-app-config-values",{valueName:e})}const ae="installations",ie=e=>{const t=e.getProvider("app").getImmediate(),x=function(e){if(!e||!e.options)throw xe("App Configuration");if(!e.name)throw xe("App Name");const t=["projectId","apiKey","appId"];for(const x of t)if(!e.options[x])throw xe(x);return{appName:e.name,projectId:e.options.projectId,apiKey:e.options.apiKey,appId:e.options.appId}}(t);return{app:t,appConfig:x,heartbeatServiceProvider:(0,a._getProvider)(t,"heartbeat"),_delete:()=>Promise.resolve()}},se=e=>{const t=e.getProvider("app").getImmediate(),x=(0,a._getProvider)(t,ae).getImmediate();return{getId:()=>q(x),getToken:e=>Z(x,e)}};(0,a._registerComponent)(new i.Component(ae,ie,"PUBLIC")),(0,a._registerComponent)(new i.Component("installations-internal",se,"PRIVATE")),(0,a.registerVersion)(n,o),(0,a.registerVersion)(n,o,"esm2017")},"./node_modules/@firebase/installations/node_modules/idb/build/index.js":(e,t,x)=>{x.r(t),x.d(t,{deleteDB:()=>s,openDB:()=>i,unwrap:()=>a.u,wrap:()=>a.w});var a=x("./node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js");function i(e,t,{blocked:x,upgrade:i,blocking:s,terminated:_}={}){const n=indexedDB.open(e,t),o=(0,a.w)(n);return i&&n.addEventListener("upgradeneeded",(e=>{i((0,a.w)(n.result),e.oldVersion,e.newVersion,(0,a.w)(n.transaction))})),x&&n.addEventListener("blocked",(()=>x())),o.then((e=>{_&&e.addEventListener("close",(()=>_())),s&&e.addEventListener("versionchange",(()=>s()))})).catch((()=>{})),o}function s(e,{blocked:t}={}){const x=indexedDB.deleteDatabase(e);return t&&x.addEventListener("blocked",(()=>t())),(0,a.w)(x).then((()=>{}))}const _=["get","getKey","getAll","getAllKeys","count"],n=["put","add","delete","clear"],o=new Map;function r(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(o.get(t))return o.get(t);const x=t.replace(/FromIndex$/,""),a=t!==x,i=n.includes(x);if(!(x in(a?IDBIndex:IDBObjectStore).prototype)||!i&&!_.includes(x))return;const s=async function(e,...t){const s=this.transaction(e,i?"readwrite":"readonly");let _=s.store;return a&&(_=_.index(t.shift())),(await Promise.all([_[x](...t),i&&s.done]))[0]};return o.set(t,s),s}(0,a.r)((e=>({...e,get:(t,x,a)=>r(t,x)||e.get(t,x,a),has:(t,x)=>!!r(t,x)||e.has(t,x)})))},"./node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js":(e,t,x)=>{x.r(t),x.d(t,{a:()=>d,i:()=>a,r:()=>l,u:()=>u,w:()=>f});const a=(e,t)=>t.some((t=>e instanceof t));let i,s;const _=new WeakMap,n=new WeakMap,o=new WeakMap,r=new WeakMap,d=new WeakMap;let c={get(e,t,x){if(e instanceof IDBTransaction){if("done"===t)return n.get(e);if("objectStoreNames"===t)return e.objectStoreNames||o.get(e);if("store"===t)return x.objectStoreNames[1]?void 0:x.objectStore(x.objectStoreNames[0])}return f(e[t])},set:(e,t,x)=>(e[t]=x,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function l(e){c=e(c)}function h(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(s||(s=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(u(this),t),f(_.get(this))}:function(...t){return f(e.apply(u(this),t))}:function(t,...x){const a=e.call(u(this),t,...x);return o.set(a,t.sort?t.sort():[t]),f(a)}}function b(e){return"function"==typeof e?h(e):(e instanceof IDBTransaction&&function(e){if(n.has(e))return;const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",s),e.removeEventListener("abort",s)},i=()=>{t(),a()},s=()=>{x(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",i),e.addEventListener("error",s),e.addEventListener("abort",s)}));n.set(e,t)}(e),a(e,i||(i=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,c):e)}function f(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("success",i),e.removeEventListener("error",s)},i=()=>{t(f(e.result)),a()},s=()=>{x(e.error),a()};e.addEventListener("success",i),e.addEventListener("error",s)}));return t.then((t=>{t instanceof IDBCursor&&_.set(t,e)})).catch((()=>{})),d.set(t,e),t}(e);if(r.has(e))return r.get(e);const t=b(e);return t!==e&&(r.set(e,t),d.set(t,e)),t}const u=e=>d.get(e)},"./node_modules/@firebase/logger/dist/esm/index.esm2017.js":(e,t,x)=>{x.r(t),x.d(t,{LogLevel:()=>i,Logger:()=>r,setLogLevel:()=>d,setUserLogHandler:()=>c});const a=[];var i;!function(e){e[e.DEBUG=0]="DEBUG",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.SILENT=5]="SILENT"}(i||(i={}));const s={debug:i.DEBUG,verbose:i.VERBOSE,info:i.INFO,warn:i.WARN,error:i.ERROR,silent:i.SILENT},_=i.INFO,n={[i.DEBUG]:"log",[i.VERBOSE]:"log",[i.INFO]:"info",[i.WARN]:"warn",[i.ERROR]:"error"},o=(e,t,...x)=>{if(t<e.logLevel)return;const a=(new Date).toISOString(),i=n[t];if(!i)throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`);console[i](`[${a}]  ${e.name}:`,...x)};class r{constructor(e){this.name=e,this._logLevel=_,this._logHandler=o,this._userLogHandler=null,a.push(this)}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in i))throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);this._logLevel=e}setLogLevel(e){this._logLevel="string"==typeof e?s[e]:e}get logHandler(){return this._logHandler}set logHandler(e){if("function"!=typeof e)throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=e}get userLogHandler(){return this._userLogHandler}set userLogHandler(e){this._userLogHandler=e}debug(...e){this._userLogHandler&&this._userLogHandler(this,i.DEBUG,...e),this._logHandler(this,i.DEBUG,...e)}log(...e){this._userLogHandler&&this._userLogHandler(this,i.VERBOSE,...e),this._logHandler(this,i.VERBOSE,...e)}info(...e){this._userLogHandler&&this._userLogHandler(this,i.INFO,...e),this._logHandler(this,i.INFO,...e)}warn(...e){this._userLogHandler&&this._userLogHandler(this,i.WARN,...e),this._logHandler(this,i.WARN,...e)}error(...e){this._userLogHandler&&this._userLogHandler(this,i.ERROR,...e),this._logHandler(this,i.ERROR,...e)}}function d(e){a.forEach((t=>{t.setLogLevel(e)}))}function c(e,t){for(const x of a){let a=null;t&&t.level&&(a=s[t.level]),x.userLogHandler=null===e?null:(t,x,...s)=>{const _=s.map((e=>{if(null==e)return null;if("string"==typeof e)return e;if("number"==typeof e||"boolean"==typeof e)return e.toString();if(e instanceof Error)return e.message;try{return JSON.stringify(e)}catch(e){return null}})).filter((e=>e)).join(" ");x>=(null!=a?a:t.logLevel)&&e({level:i[x].toLowerCase(),message:_,args:s,type:t.name})}}}},"./node_modules/firebase/analytics/dist/esm/index.esm.js":(e,t,x)=>{x.r(t),x.d(t,{getAnalytics:()=>a.getAnalytics,getGoogleAnalyticsClientId:()=>a.getGoogleAnalyticsClientId,initializeAnalytics:()=>a.initializeAnalytics,isSupported:()=>a.isSupported,logEvent:()=>a.logEvent,setAnalyticsCollectionEnabled:()=>a.setAnalyticsCollectionEnabled,setConsent:()=>a.setConsent,setCurrentScreen:()=>a.setCurrentScreen,setDefaultEventParameters:()=>a.setDefaultEventParameters,setUserId:()=>a.setUserId,setUserProperties:()=>a.setUserProperties,settings:()=>a.settings});var a=x("./node_modules/@firebase/analytics/dist/esm/index.esm2017.js")},"./node_modules/firebase/app/dist/esm/index.esm.js":(e,t,x)=>{x.r(t),x.d(t,{FirebaseError:()=>a.FirebaseError,SDK_VERSION:()=>a.SDK_VERSION,_DEFAULT_ENTRY_NAME:()=>a._DEFAULT_ENTRY_NAME,_addComponent:()=>a._addComponent,_addOrOverwriteComponent:()=>a._addOrOverwriteComponent,_apps:()=>a._apps,_clearComponents:()=>a._clearComponents,_components:()=>a._components,_getProvider:()=>a._getProvider,_registerComponent:()=>a._registerComponent,_removeServiceInstance:()=>a._removeServiceInstance,deleteApp:()=>a.deleteApp,getApp:()=>a.getApp,getApps:()=>a.getApps,initializeApp:()=>a.initializeApp,onLog:()=>a.onLog,registerVersion:()=>a.registerVersion,setLogLevel:()=>a.setLogLevel});var a=x("./node_modules/@firebase/app/dist/esm/index.esm2017.js");(0,a.registerVersion)("firebase","10.1.0","app")},"./node_modules/idb/build/index.js":(e,t,x)=>{x.r(t),x.d(t,{deleteDB:()=>s,openDB:()=>i,unwrap:()=>a.u,wrap:()=>a.w});var a=x("./node_modules/idb/build/wrap-idb-value.js");function i(e,t,{blocked:x,upgrade:i,blocking:s,terminated:_}={}){const n=indexedDB.open(e,t),o=(0,a.w)(n);return i&&n.addEventListener("upgradeneeded",(e=>{i((0,a.w)(n.result),e.oldVersion,e.newVersion,(0,a.w)(n.transaction),e)})),x&&n.addEventListener("blocked",(e=>x(e.oldVersion,e.newVersion,e))),o.then((e=>{_&&e.addEventListener("close",(()=>_())),s&&e.addEventListener("versionchange",(e=>s(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}function s(e,{blocked:t}={}){const x=indexedDB.deleteDatabase(e);return t&&x.addEventListener("blocked",(e=>t(e.oldVersion,e))),(0,a.w)(x).then((()=>{}))}const _=["get","getKey","getAll","getAllKeys","count"],n=["put","add","delete","clear"],o=new Map;function r(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(o.get(t))return o.get(t);const x=t.replace(/FromIndex$/,""),a=t!==x,i=n.includes(x);if(!(x in(a?IDBIndex:IDBObjectStore).prototype)||!i&&!_.includes(x))return;const s=async function(e,...t){const s=this.transaction(e,i?"readwrite":"readonly");let _=s.store;return a&&(_=_.index(t.shift())),(await Promise.all([_[x](...t),i&&s.done]))[0]};return o.set(t,s),s}(0,a.r)((e=>({...e,get:(t,x,a)=>r(t,x)||e.get(t,x,a),has:(t,x)=>!!r(t,x)||e.has(t,x)})))},"./node_modules/idb/build/wrap-idb-value.js":(e,t,x)=>{x.r(t),x.d(t,{a:()=>d,i:()=>a,r:()=>l,u:()=>u,w:()=>f});const a=(e,t)=>t.some((t=>e instanceof t));let i,s;const _=new WeakMap,n=new WeakMap,o=new WeakMap,r=new WeakMap,d=new WeakMap;let c={get(e,t,x){if(e instanceof IDBTransaction){if("done"===t)return n.get(e);if("objectStoreNames"===t)return e.objectStoreNames||o.get(e);if("store"===t)return x.objectStoreNames[1]?void 0:x.objectStore(x.objectStoreNames[0])}return f(e[t])},set:(e,t,x)=>(e[t]=x,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function l(e){c=e(c)}function h(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(s||(s=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(u(this),t),f(_.get(this))}:function(...t){return f(e.apply(u(this),t))}:function(t,...x){const a=e.call(u(this),t,...x);return o.set(a,t.sort?t.sort():[t]),f(a)}}function b(e){return"function"==typeof e?h(e):(e instanceof IDBTransaction&&function(e){if(n.has(e))return;const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("complete",i),e.removeEventListener("error",s),e.removeEventListener("abort",s)},i=()=>{t(),a()},s=()=>{x(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",i),e.addEventListener("error",s),e.addEventListener("abort",s)}));n.set(e,t)}(e),a(e,i||(i=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,c):e)}function f(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,x)=>{const a=()=>{e.removeEventListener("success",i),e.removeEventListener("error",s)},i=()=>{t(f(e.result)),a()},s=()=>{x(e.error),a()};e.addEventListener("success",i),e.addEventListener("error",s)}));return t.then((t=>{t instanceof IDBCursor&&_.set(t,e)})).catch((()=>{})),d.set(t,e),t}(e);if(r.has(e))return r.get(e);const t=b(e);return t!==e&&(r.set(e,t),d.set(t,e)),t}const u=e=>d.get(e)},"./node_modules/workbox-window/build/workbox-window.prod.es5.mjs":(e,t,x)=>{x.r(t),x.d(t,{Workbox:()=>h,messageSW:()=>a});try{self["workbox:window:4.3.1"]&&_()}catch(a){}var a=function(e,t){return new Promise((function(x){var a=new MessageChannel;a.port1.onmessage=function(e){return x(e.data)},e.postMessage(t,[a.port2])}))};function i(e,t){for(var x=0;x<t.length;x++){var a=t[x];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}try{self["workbox:core:4.3.1"]&&_()}catch(a){}var n=function(){var e=this;this.promise=new Promise((function(t,x){e.resolve=t,e.reject=x}))},o=function(e,t){return new URL(e,location).href===new URL(t,location).href},r=function(e,t){Object.assign(this,t,{type:e})};function d(e){return function(){for(var t=[],x=0;x<arguments.length;x++)t[x]=arguments[x];try{return Promise.resolve(e.apply(this,t))}catch(e){return Promise.reject(e)}}}function c(e,t,x){return x?t?t(e):e:(e&&e.then||(e=Promise.resolve(e)),t?e.then(t):e)}function l(){}var h=function(e){var t,x;function _(t,x){var a;return void 0===x&&(x={}),(a=e.call(this)||this).t=t,a.i=x,a.o=0,a.u=new n,a.s=new n,a.h=new n,a.v=a.v.bind(s(s(a))),a.l=a.l.bind(s(s(a))),a.g=a.g.bind(s(s(a))),a.m=a.m.bind(s(s(a))),a}x=e,(t=_).prototype=Object.create(x.prototype),t.prototype.constructor=t,t.__proto__=x;var h,b,f=_.prototype;return f.register=d((function(e){var t,x,a=this,i=(void 0===e?{}:e).immediate,s=void 0!==i&&i;return t=function(){return a.p=Boolean(navigator.serviceWorker.controller),a.P=a.R(),c(a.k(),(function(e){a.B=e,a.P&&(a.O=a.P,a.s.resolve(a.P),a.h.resolve(a.P),a.j(a.P),a.P.addEventListener("statechange",a.l,{once:!0}));var t=a.B.waiting;return t&&o(t.scriptURL,a.t)&&(a.O=t,Promise.resolve().then((function(){a.dispatchEvent(new r("waiting",{sw:t,wasWaitingBeforeRegister:!0}))}))),a.O&&a.u.resolve(a.O),a.B.addEventListener("updatefound",a.g),navigator.serviceWorker.addEventListener("controllerchange",a.m,{once:!0}),"BroadcastChannel"in self&&(a.C=new BroadcastChannel("workbox"),a.C.addEventListener("message",a.v)),navigator.serviceWorker.addEventListener("message",a.v),a.B}))},(x=function(){if(!s&&"complete"!==document.readyState)return function(e,t){return e&&e.then?e.then(l):Promise.resolve()}(new Promise((function(e){return addEventListener("load",e)})))}())&&x.then?x.then(t):t()})),f.getSW=d((function(){return this.O||this.u.promise})),f.messageSW=d((function(e){return c(this.getSW(),(function(t){return a(t,e)}))})),f.R=function(){var e=navigator.serviceWorker.controller;if(e&&o(e.scriptURL,this.t))return e},f.k=d((function(){var e=this;return function(e,t){try{var x=e()}catch(e){return t(e)}return x&&x.then?x.then(void 0,t):x}((function(){return c(navigator.serviceWorker.register(e.t,e.i),(function(t){return e.L=performance.now(),t}))}),(function(e){throw e}))})),f.j=function(e){a(e,{type:"WINDOW_READY",meta:"workbox-window"})},f.g=function(){var e=this.B.installing;this.o>0||!o(e.scriptURL,this.t)||performance.now()>this.L+6e4?(this.W=e,this.B.removeEventListener("updatefound",this.g)):(this.O=e,this.u.resolve(e)),++this.o,e.addEventListener("statechange",this.l)},f.l=function(e){var t=this,x=e.target,a=x.state,i=x===this.W,s=i?"external":"",_={sw:x,originalEvent:e};!i&&this.p&&(_.isUpdate=!0),this.dispatchEvent(new r(s+a,_)),"installed"===a?this._=setTimeout((function(){"installed"===a&&t.B.waiting===x&&t.dispatchEvent(new r(s+"waiting",_))}),200):"activating"===a&&(clearTimeout(this._),i||this.s.resolve(x))},f.m=function(e){var t=this.O;t===navigator.serviceWorker.controller&&(this.dispatchEvent(new r("controlling",{sw:t,originalEvent:e})),this.h.resolve(t))},f.v=function(e){var t=e.data;this.dispatchEvent(new r("message",{data:t,originalEvent:e}))},h=_,(b=[{key:"active",get:function(){return this.s.promise}},{key:"controlling",get:function(){return this.h.promise}}])&&i(h.prototype,b),_}(function(){function e(){this.D={}}var t=e.prototype;return t.addEventListener=function(e,t){this.T(e).add(t)},t.removeEventListener=function(e,t){this.T(e).delete(t)},t.dispatchEvent=function(e){e.target=this,this.T(e.type).forEach((function(t){return t(e)}))},t.T=function(e){return this.D[e]=this.D[e]||new Set},e}())}},t={};function x(a){var i=t[a];if(void 0!==i)return i.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,x),s.exports}x.d=(e,t)=>{for(var a in t)x.o(t,a)&&!x.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},x.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),x.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),x.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};(()=>{x.r(a);var e=x("./src/data/index.ts"),t=x("./src/sceneHandler/index.ts"),i=x("./src/constants/index.ts"),s=x("./node_modules/workbox-window/build/workbox-window.prod.es5.mjs"),_=x("./src/Firebase/firebase-integration.ts"),n=x("./src/common/index.ts"),o=x("./src/components/index.ts");new class{canvas;versionInfoElement;lang;is_cached;progressBar;progressBarContainer;channel;sceneHandler;loadingElement;majVersion;minVersion;dataModal;startSessionTime;titleTextElement;feedBackTextElement;currentProgress;firebaseIntegration;constructor(e){this.lang=e,this.currentProgress=10,this.canvas=document.getElementById("canvas"),this.channel=new BroadcastChannel("my-channel"),this.progressBar=document.getElementById("progress-bar"),this.titleTextElement=document.getElementById("title"),this.feedBackTextElement=document.getElementById("feedback-text"),this.progressBarContainer=document.getElementById("progress-bar-container"),this.versionInfoElement=document.getElementById("version-info-id"),this.loadingElement=document.getElementById("loading-screen"),this.is_cached=this.initializeCachedData(),this.firebaseIntegration=new _.FirebaseIntegration,this.startSessionTime=0,this.init(),this.channel.addEventListener("message",this.handleServiceWorkerMessage),window.addEventListener("beforeunload",this.handleBeforeUnload),document.addEventListener(n.VISIBILITY_CHANGE,this.handleVisibilityChange),window.addEventListener("resize",this.handleResize.bind(this))}async init(){const t=await n.Utils.getLanguageSpecificFont(this.lang);await this.loadAndCacheFont(t,`./assets/fonts/${t}.ttf`),await this.loadTitleFeedbackCustomFont(),await this.preloadGameAudios(),this.handleLoadingScreen(),this.setupCanvas();const x=await(0,e.getData)();this.majVersion=x.majversion,this.minVersion=x.minversion,this.dataModal=this.createDataModal(x),this.globalInitialization(x),this.logSessionStartFirebaseEvent(),window.addEventListener("resize",(async()=>{this.handleResize(this.dataModal)}));const a=localStorage.getItem(this.lang+"gamePlayedInfo"),s=a?JSON.parse(a).length-1:0,_=n.Debugger.DebugMode?i.PreviousPlayedLevel+this.lang+"Debug":i.PreviousPlayedLevel+this.lang;localStorage.setItem(_,s.toString()),this.is_cached.has(this.lang)&&this.handleCachedScenario(this.dataModal),this.registerWorkbox()}async loadTitleFeedbackCustomFont(){const t=e.customFonts[this.lang]||e.customFonts.default,x=`'${t}', sans-serif`;await this.loadAndCacheFont(t,`./assets/fonts/${t}.ttf`),[this.titleTextElement,this.feedBackTextElement].forEach((e=>{e&&(e.style.fontFamily=x)}))}logSessionStartFirebaseEvent(){let e=localStorage.getItem("lastSessionEndTime"),t=0;if(this.startSessionTime=(new Date).getTime(),e){let x=parseInt(e);isNaN(x)||(t=Math.abs((new Date).getTime()-x))}const x=parseFloat((t?t/864e5:0).toFixed(3)),a={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",days_since_last:x};this.firebaseIntegration.sendSessionStartEvent(a)}logSessionEndFirebaseEvent(){const e={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.majVersion&&this.minVersion?this.majVersion.toString()+"."+this.minVersion.toString():"",duration:((new Date).getTime()-this.startSessionTime)/1e3};localStorage.setItem("lastSessionEndTime",(new Date).getTime().toString()),this.firebaseIntegration.sendSessionEndEvent(e)}initializeCachedData(){const e=localStorage.getItem(i.IsCached);return e?new Map(JSON.parse(e)):new Map}async loadAndCacheFont(e,t){try{const x=await caches.open("fontCache");if(!await x.match(t)){const e=await fetch(t),a=await e.blob();await x.put(t,new Response(a))}const a=new FontFace(e,`url(${t}) format('truetype')`);await a.load(),document.fonts.add(a)}catch(e){console.error(...c("1603038447_175_6_175_62_11",`Failed to load and cache font: ${e}`))}}handleLoadingScreen=()=>{this.is_cached.get(n.lang)?(this.loadingElement.style.zIndex="-1",this.loadingElement.style.display="none",this.progressBarContainer.style.display="none",this.progressBar.style.display="none"):(this.progressBarContainer.style.display="flex",this.progressBar.style.display="flex",this.progressBar.style.width="10%")};async registerWorkbox(){if("serviceWorker"in navigator)try{const t=new s.Workbox("./sw.js",{});await t.register(),await navigator.serviceWorker.ready,this.is_cached.has(this.lang)?fetch(e.URL+"?cache-bust="+(new Date).getTime(),{method:"GET",headers:{"Content-Type":"application/json","Cache-Control":"no-store"},cache:"no-store"}).then((async e=>{if(!e.ok)return void console.error(...c("1603038447_212_16_214_17_11","Failed to fetch the content file from the server!"));const t=await e.json(),x=t.majversion+"."+t.minversion,a=localStorage.getItem("version"+n.lang.toLowerCase());if(x&&a!=x){console.log(...d("1603038447_229_16_229_69_4","Content version mismatch! Reloading..."));var s=JSON.parse(localStorage.getItem("is_cached"));console.log(...d("1603038447_231_16_231_52_4","current lang  "+n.lang));var _=s.filter((e=>!e.toString().includes(n.lang)));localStorage.setItem(i.IsCached,JSON.stringify(_)),localStorage.removeItem("version"+n.lang.toLowerCase()),caches.delete(n.lang),this.handleUpdateFoundMessage()}})).catch((e=>{console.error(...c("1603038447_243_14_243_72_11","Error fetching the content file: "+e))})):this.channel.postMessage({command:"Cache",data:this.lang}),navigator.serviceWorker.addEventListener("message",this.handleServiceWorkerMessage)}catch(e){console.error(...c("1603038447_251_8_251_68_11",`Failed to register service worker: ${e}`))}}setupCanvas(){this.canvas.height=window.innerHeight,this.canvas.width=window.screen.width>1080?768:window.innerWidth}createDataModal(t){return new e.DataModal(t.title,t.OtherAudios,t.Levels,t.FeedbackTexts,t.RightToLeft,t.FeedbackAudios,t.majversion,t.minversion,t.version)}globalInitialization(e){globalThis.aboutCompany=e.aboutCompany,globalThis.descriptionText=e.descriptionText}handleResize(e){this.is_cached.has(this.lang)&&(this.updateVersionInfoElement(e),this.setupCanvas(),this.reinitializeSceneHandler(e))}updateVersionInfoElement(e){this.is_cached.has(this.lang)&&n.Debugger.DevelopmentLink&&(e.majVersion&&e.minVersion?this.versionInfoElement.innerHTML+=`/j.v${e.majVersion}.${e.minVersion}`:e.version&&(this.versionInfoElement.innerHTML+=`/j.v${e.version}`),document.getElementById("toggle-btn").style.display="block")}reinitializeSceneHandler(e){delete this.sceneHandler,this.sceneHandler=new t.SceneHandler(this.canvas,e),this.passingDataToContainer()}handleCachedScenario(e){this.updateVersionInfoElement(e),this.sceneHandler=new t.SceneHandler(this.canvas,e),this.passingDataToContainer()}passingDataToContainer=()=>{window.Android&&window.Android.cachedStatus(1==this.is_cached.get(this.lang))};setContainerAppOrientation(){window.Android&&window.Android.setContainerAppOrientation("portrait")}handleUpdateFoundMessage(){confirm("Update Found\nPress ok to update")&&window.location.reload()}handleLoadingMessage=e=>{if(this.progressBarContainer&&this.progressBar){this.showProgressBar();const t=Math.min(100,Math.max(0,e.data));t>this.currentProgress&&(this.currentProgress=t,this.progressBar.style.width=`${this.currentProgress}%`),this.isDownloadCompleted(this.currentProgress)&&(this.cacheLanguage(),this.sendCompletionEvent(),this.hideLoadingScreen())}};showProgressBar(){this.progressBarContainer.classList.add("visible"),this.progressBar.classList.add("visible")}isDownloadCompleted(e){return 100===e&&!this.is_cached.get(this.lang)}cacheLanguage(){try{this.is_cached.set(this.lang,!0),localStorage.setItem(i.IsCached,JSON.stringify(Array.from(this.is_cached.entries())))}catch(e){console.error(...c("1603038447_371_6_371_53_11","Error caching language:",e))}}sendCompletionEvent(){const e={cr_user_id:n.pseudoId,ftm_language:n.lang,profile_number:0,version_number:this.versionInfoElement.innerHTML,json_version_number:this.getJsonVersionNumber()};this.firebaseIntegration.sendDownloadCompletedEvent(e)}getJsonVersionNumber(){return this.majVersion&&this.minVersion?this.majVersion+"."+this.minVersion:""}hideLoadingScreen(){try{localStorage.setItem("version"+this.lang,this.getJsonVersionNumber()),this.loadingElement.style.display="none",this.handleResize(this.dataModal)}catch(e){console.error(...c("1603038447_398_6_398_58_11","Error hiding loading screen:",e))}}handleServiceWorkerMessage=e=>{"Loading"===e.data.msg?this.handleLoadingMessage(e.data):"Update Found"===e.data.msg&&this.handleUpdateFoundMessage()};handleVisibilityChange=()=>{(0,n.isDocumentVisible)()?this.logSessionStartFirebaseEvent():this.logSessionEndFirebaseEvent()};handleBeforeUnload=async e=>{this.logSessionEndFirebaseEvent(),this.dispose()};preloadGameAudios=async()=>{let e=i.AUDIO_URL_PRELOAD;return new Promise(((t,x)=>{const a=e.map((e=>(new o.AudioPlayer).preloadGameAudio(e)));Promise.all(a).then((()=>t())).catch((e=>{console.error(...c("1603038447_435_10_435_57_11","Error preloading audio:",e)),x(e)}))}))};dispose(){this.channel.removeEventListener("message",this.handleServiceWorkerMessage),window.removeEventListener("beforeunload",this.handleBeforeUnload),document.removeEventListener(n.VISIBILITY_CHANGE,this.handleVisibilityChange),window.removeEventListener("resize",this.handleResize),navigator.serviceWorker&&navigator.serviceWorker.removeEventListener("message",this.handleServiceWorkerMessage)}}(n.lang);function r(){try{return(0,eval)("globalThis._console_ninja")||(0,eval)("/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0xfe5e44=_0x2800;(function(_0x215495,_0x54db3f){var _0x15a0c1=_0x2800,_0x56d85f=_0x215495();while(!![]){try{var _0x8589f5=parseInt(_0x15a0c1(0x1f3))/0x1*(parseInt(_0x15a0c1(0x1bf))/0x2)+parseInt(_0x15a0c1(0x1ec))/0x3+-parseInt(_0x15a0c1(0x28b))/0x4+parseInt(_0x15a0c1(0x22b))/0x5*(-parseInt(_0x15a0c1(0x1a4))/0x6)+-parseInt(_0x15a0c1(0x1ad))/0x7+parseInt(_0x15a0c1(0x1e8))/0x8*(parseInt(_0x15a0c1(0x294))/0x9)+-parseInt(_0x15a0c1(0x20d))/0xa;if(_0x8589f5===_0x54db3f)break;else _0x56d85f['push'](_0x56d85f['shift']());}catch(_0x128f40){_0x56d85f['push'](_0x56d85f['shift']());}}}(_0x4842,0xe3eb8));var K=Object['create'],Q=Object[_0xfe5e44(0x1bd)],G=Object['getOwnPropertyDescriptor'],ee=Object['getOwnPropertyNames'],te=Object[_0xfe5e44(0x248)],ne=Object['prototype'][_0xfe5e44(0x24a)],re=(_0x5b75c6,_0x3483b6,_0x592bfb,_0x35bd8b)=>{var _0x34c8f6=_0xfe5e44;if(_0x3483b6&&typeof _0x3483b6==_0x34c8f6(0x259)||typeof _0x3483b6==_0x34c8f6(0x254)){for(let _0x15cfbc of ee(_0x3483b6))!ne['call'](_0x5b75c6,_0x15cfbc)&&_0x15cfbc!==_0x592bfb&&Q(_0x5b75c6,_0x15cfbc,{'get':()=>_0x3483b6[_0x15cfbc],'enumerable':!(_0x35bd8b=G(_0x3483b6,_0x15cfbc))||_0x35bd8b['enumerable']});}return _0x5b75c6;},V=(_0x83a491,_0x1c7fab,_0x333922)=>(_0x333922=_0x83a491!=null?K(te(_0x83a491)):{},re(_0x1c7fab||!_0x83a491||!_0x83a491[_0xfe5e44(0x250)]?Q(_0x333922,_0xfe5e44(0x25e),{'value':_0x83a491,'enumerable':!0x0}):_0x333922,_0x83a491)),Z=class{constructor(_0x3b8201,_0x2edd2b,_0x14c251,_0x21a374,_0x2d7409,_0x485d26){var _0x3273eb=_0xfe5e44,_0x22070f,_0x1cdd3b,_0x55f9de,_0xce468f;this[_0x3273eb(0x291)]=_0x3b8201,this[_0x3273eb(0x270)]=_0x2edd2b,this[_0x3273eb(0x262)]=_0x14c251,this[_0x3273eb(0x1bc)]=_0x21a374,this[_0x3273eb(0x264)]=_0x2d7409,this[_0x3273eb(0x27c)]=_0x485d26,this['_allowedToSend']=!0x0,this[_0x3273eb(0x1ab)]=!0x0,this[_0x3273eb(0x203)]=!0x1,this[_0x3273eb(0x1c5)]=!0x1,this[_0x3273eb(0x221)]=((_0x1cdd3b=(_0x22070f=_0x3b8201[_0x3273eb(0x206)])==null?void 0x0:_0x22070f[_0x3273eb(0x1cc)])==null?void 0x0:_0x1cdd3b[_0x3273eb(0x1c3)])===_0x3273eb(0x1fd),this['_inBrowser']=!((_0xce468f=(_0x55f9de=this[_0x3273eb(0x291)][_0x3273eb(0x206)])==null?void 0x0:_0x55f9de[_0x3273eb(0x26f)])!=null&&_0xce468f[_0x3273eb(0x28c)])&&!this['_inNextEdge'],this['_WebSocketClass']=null,this[_0x3273eb(0x1a8)]=0x0,this[_0x3273eb(0x28f)]=0x14,this['_webSocketErrorDocsLink']=_0x3273eb(0x211),this[_0x3273eb(0x1ae)]=(this[_0x3273eb(0x23e)]?_0x3273eb(0x247):_0x3273eb(0x28a))+this[_0x3273eb(0x201)];}async[_0xfe5e44(0x272)](){var _0x2ec457=_0xfe5e44,_0x16b1f6,_0x46ae56;if(this[_0x2ec457(0x1d5)])return this[_0x2ec457(0x1d5)];let _0x420cd7;if(this['_inBrowser']||this[_0x2ec457(0x221)])_0x420cd7=this[_0x2ec457(0x291)]['WebSocket'];else{if((_0x16b1f6=this[_0x2ec457(0x291)][_0x2ec457(0x206)])!=null&&_0x16b1f6['_WebSocket'])_0x420cd7=(_0x46ae56=this[_0x2ec457(0x291)][_0x2ec457(0x206)])==null?void 0x0:_0x46ae56['_WebSocket'];else try{let _0x492511=await import(_0x2ec457(0x251));_0x420cd7=(await import((await import(_0x2ec457(0x245)))[_0x2ec457(0x1b3)](_0x492511['join'](this['nodeModules'],'ws/index.js'))[_0x2ec457(0x232)]()))[_0x2ec457(0x25e)];}catch{try{_0x420cd7=require(require(_0x2ec457(0x251))[_0x2ec457(0x23c)](this[_0x2ec457(0x1bc)],'ws'));}catch{throw new Error(_0x2ec457(0x27f));}}}return this[_0x2ec457(0x1d5)]=_0x420cd7,_0x420cd7;}['_connectToHostNow'](){var _0x311ae5=_0xfe5e44;this['_connecting']||this['_connected']||this['_connectAttemptCount']>=this['_maxConnectAttemptCount']||(this['_allowedToConnectOnSend']=!0x1,this[_0x311ae5(0x1c5)]=!0x0,this[_0x311ae5(0x1a8)]++,this[_0x311ae5(0x1e7)]=new Promise((_0x3f4e5c,_0x1b1d42)=>{var _0x1f6130=_0x311ae5;this['getWebSocketClass']()[_0x1f6130(0x1cf)](_0x1a8fc2=>{var _0x26657b=_0x1f6130;let _0x3f72a0=new _0x1a8fc2(_0x26657b(0x1c9)+(!this['_inBrowser']&&this[_0x26657b(0x264)]?_0x26657b(0x281):this[_0x26657b(0x270)])+':'+this[_0x26657b(0x262)]);_0x3f72a0[_0x26657b(0x274)]=()=>{var _0x5e4dcd=_0x26657b;this[_0x5e4dcd(0x1e2)]=!0x1,this[_0x5e4dcd(0x21d)](_0x3f72a0),this[_0x5e4dcd(0x24b)](),_0x1b1d42(new Error(_0x5e4dcd(0x20c)));},_0x3f72a0[_0x26657b(0x280)]=()=>{var _0x5da152=_0x26657b;this[_0x5da152(0x23e)]||_0x3f72a0[_0x5da152(0x1dd)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)]&&_0x3f72a0[_0x5da152(0x1dd)][_0x5da152(0x1b7)](),_0x3f4e5c(_0x3f72a0);},_0x3f72a0[_0x26657b(0x1ea)]=()=>{var _0x382c92=_0x26657b;this[_0x382c92(0x1ab)]=!0x0,this[_0x382c92(0x21d)](_0x3f72a0),this[_0x382c92(0x24b)]();},_0x3f72a0[_0x26657b(0x1df)]=_0x11fcab=>{var _0x5fd04d=_0x26657b;try{if(!(_0x11fcab!=null&&_0x11fcab[_0x5fd04d(0x1b9)])||!this['eventReceivedCallback'])return;let _0x4ff655=JSON[_0x5fd04d(0x234)](_0x11fcab[_0x5fd04d(0x1b9)]);this[_0x5fd04d(0x27c)](_0x4ff655[_0x5fd04d(0x1b4)],_0x4ff655['args'],this['global'],this[_0x5fd04d(0x23e)]);}catch{}};})[_0x1f6130(0x1cf)](_0x3ec18f=>(this[_0x1f6130(0x203)]=!0x0,this[_0x1f6130(0x1c5)]=!0x1,this[_0x1f6130(0x1ab)]=!0x1,this['_allowedToSend']=!0x0,this[_0x1f6130(0x1a8)]=0x0,_0x3ec18f))[_0x1f6130(0x260)](_0x4d0842=>(this[_0x1f6130(0x203)]=!0x1,this[_0x1f6130(0x1c5)]=!0x1,console[_0x1f6130(0x1f2)](_0x1f6130(0x1ca)+this[_0x1f6130(0x201)]),_0x1b1d42(new Error(_0x1f6130(0x266)+(_0x4d0842&&_0x4d0842['message'])))));}));}[_0xfe5e44(0x21d)](_0x200506){var _0x3828d3=_0xfe5e44;this[_0x3828d3(0x203)]=!0x1,this[_0x3828d3(0x1c5)]=!0x1;try{_0x200506[_0x3828d3(0x1ea)]=null,_0x200506[_0x3828d3(0x274)]=null,_0x200506[_0x3828d3(0x280)]=null;}catch{}try{_0x200506[_0x3828d3(0x1e5)]<0x2&&_0x200506['close']();}catch{}}['_attemptToReconnectShortly'](){var _0x2c9e50=_0xfe5e44;clearTimeout(this[_0x2c9e50(0x240)]),!(this[_0x2c9e50(0x1a8)]>=this[_0x2c9e50(0x28f)])&&(this[_0x2c9e50(0x240)]=setTimeout(()=>{var _0x26eb71=_0x2c9e50,_0x52968d;this[_0x26eb71(0x203)]||this[_0x26eb71(0x1c5)]||(this[_0x26eb71(0x284)](),(_0x52968d=this[_0x26eb71(0x1e7)])==null||_0x52968d[_0x26eb71(0x260)](()=>this[_0x26eb71(0x24b)]()));},0x1f4),this[_0x2c9e50(0x240)][_0x2c9e50(0x1b7)]&&this[_0x2c9e50(0x240)]['unref']());}async[_0xfe5e44(0x26e)](_0x254553){var _0x10e206=_0xfe5e44;try{if(!this[_0x10e206(0x1e2)])return;this['_allowedToConnectOnSend']&&this[_0x10e206(0x284)](),(await this[_0x10e206(0x1e7)])[_0x10e206(0x26e)](JSON['stringify'](_0x254553));}catch(_0x4fb68d){console[_0x10e206(0x1f2)](this[_0x10e206(0x1ae)]+':\\x20'+(_0x4fb68d&&_0x4fb68d[_0x10e206(0x222)])),this[_0x10e206(0x1e2)]=!0x1,this['_attemptToReconnectShortly']();}}};function q(_0x363e8b,_0x58bc11,_0x5a57be,_0x3c20e5,_0x3cdf4f,_0x2eec54,_0x377b83,_0x1b0bff=ie){var _0xc8f00e=_0xfe5e44;let _0xe24ba0=_0x5a57be[_0xc8f00e(0x1e4)](',')['map'](_0x46f2cf=>{var _0x14d705=_0xc8f00e,_0xdaec49,_0x3c920c,_0x205786,_0x14ba10;try{if(!_0x363e8b['_console_ninja_session']){let _0x38ad4a=((_0x3c920c=(_0xdaec49=_0x363e8b['process'])==null?void 0x0:_0xdaec49['versions'])==null?void 0x0:_0x3c920c[_0x14d705(0x28c)])||((_0x14ba10=(_0x205786=_0x363e8b[_0x14d705(0x206)])==null?void 0x0:_0x205786[_0x14d705(0x1cc)])==null?void 0x0:_0x14ba10[_0x14d705(0x1c3)])===_0x14d705(0x1fd);(_0x3cdf4f===_0x14d705(0x237)||_0x3cdf4f===_0x14d705(0x200)||_0x3cdf4f===_0x14d705(0x1a6)||_0x3cdf4f===_0x14d705(0x233))&&(_0x3cdf4f+=_0x38ad4a?_0x14d705(0x1f9):_0x14d705(0x1ee)),_0x363e8b[_0x14d705(0x288)]={'id':+new Date(),'tool':_0x3cdf4f},_0x377b83&&_0x3cdf4f&&!_0x38ad4a&&console['log'](_0x14d705(0x1c6)+(_0x3cdf4f[_0x14d705(0x26d)](0x0)[_0x14d705(0x1c7)]()+_0x3cdf4f[_0x14d705(0x1a9)](0x1))+',',_0x14d705(0x252),_0x14d705(0x246));}let _0x51b6a1=new Z(_0x363e8b,_0x58bc11,_0x46f2cf,_0x3c20e5,_0x2eec54,_0x1b0bff);return _0x51b6a1[_0x14d705(0x26e)][_0x14d705(0x21f)](_0x51b6a1);}catch(_0xe14f48){return console[_0x14d705(0x1f2)]('logger\\x20failed\\x20to\\x20connect\\x20to\\x20host',_0xe14f48&&_0xe14f48[_0x14d705(0x222)]),()=>{};}});return _0x10f04c=>_0xe24ba0['forEach'](_0x53fdd6=>_0x53fdd6(_0x10f04c));}function ie(_0x1e3a4e,_0x26e9b1,_0x45eb31,_0x5dd34b){var _0xa75978=_0xfe5e44;_0x5dd34b&&_0x1e3a4e===_0xa75978(0x263)&&_0x45eb31['location']['reload']();}function _0x4842(){var _0x55a193=['onmessage','Symbol','_ninjaIgnoreNextError','_allowedToSend','allStrLength','split','readyState','_getOwnPropertySymbols','_ws','2382480MpSNUG','props','onclose','count','1720296nDiCbK','...','\\x20browser','_isUndefined','number','autoExpandMaxDepth','warn','1qLarGK','value','getOwnPropertySymbols','args','location','Set','\\x20server','_numberRegExp','get','_hasSymbolPropertyOnItsPath','edge','_addObjectProperty','performance','remix','_webSocketErrorDocsLink','_getOwnPropertyNames','_connected','push','set','process','_regExpToString','isArray','time','_setNodeLabel','test','logger\\x20websocket\\x20error','2427080OyrYQm','[object\\x20Map]','undefined','capped','https://tinyurl.com/37x8b79t','timeStamp','_propertyName','cappedProps','negativeInfinity','constructor','null','fromCharCode','hrtime','_objectToString','name',[\"localhost\",\"127.0.0.1\",\"example.cypress.io\",\"CEB-LAPTOP-0006\",\"192.168.1.79\"],'_disposeWebsocket','isExpressionToEvaluate','bind','_consoleNinjaAllowedToStart','_inNextEdge','message','positiveInfinity','concat','Number','_sortProps','console','type','pop','error','13205BQaGVp','autoExpand','elements','autoExpandPreviousObjects','_isPrimitiveType','log','_treeNodePropertiesBeforeFullValue','toString','angular','parse','[object\\x20BigInt]','_additionalMetadata','next.js','_treeNodePropertiesAfterFullValue','HTMLAllCollection','reduceLimits','parent','join','serialize','_inBrowser','_isNegativeZero','_reconnectTimeout','autoExpandLimit','[object\\x20Set]','[object\\x20Date]','1','url','see\\x20https://tinyurl.com/2vt8jxzw\\x20for\\x20more\\x20info.','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20refreshing\\x20the\\x20page\\x20may\\x20help;\\x20also\\x20see\\x20','getPrototypeOf','now','hasOwnProperty','_attemptToReconnectShortly','_console_ninja','length','Error','array','__es'+'Module','path','background:\\x20rgb(30,30,30);\\x20color:\\x20rgb(255,213,92)','_cleanNode','function','root_exp_id','getOwnPropertyDescriptor','map','forEach','object','cappedElements','Buffer','_property','index','default','autoExpandPropertyCount','catch','NEGATIVE_INFINITY','port','reload','dockerizedApp','current','failed\\x20to\\x20connect\\x20to\\x20host:\\x20','funcName','strLength','bigint','match','stack','1.0.0','charAt','send','versions','host','_addLoadNode','getWebSocketClass','call','onerror','','_type','expressionsToEvaluate','stackTraceLimit','POSITIVE_INFINITY','disabledTrace','_undefined','eventReceivedCallback','disabledLog','replace','failed\\x20to\\x20find\\x20and\\x20load\\x20WebSocket','onopen','gateway.docker.internal','string','_isMap','_connectToHostNow','_HTMLAllCollection','1729176059707','_isSet','_console_ninja_session','getOwnPropertyNames','Console\\x20Ninja\\x20failed\\x20to\\x20send\\x20logs,\\x20restarting\\x20the\\x20process\\x20may\\x20help;\\x20also\\x20see\\x20','3799160JnHzpD','node','prototype','_setNodeId','_maxConnectAttemptCount','perf_hooks','global','_isPrimitiveWrapperType','String','54cKIlnc','endsWith','includes','hits','toLowerCase','trace','42SfmdiD','setter','astro','origin','_connectAttemptCount','substr','totalStrLength','_allowedToConnectOnSend','_p_length','9027438ugZkeV','_sendErrorMessage','_addFunctionsNode','_blacklistedProperty','elapsed','sort','pathToFileURL','method','_Symbol','noFunctions','unref','_addProperty','data','root_exp','_quotedRegExp','nodeModules','defineProperty','resolveGetters','2147774qrYQaz','_keyStrRegExp','_setNodeQueryPath','stringify','NEXT_RUNTIME','_capIfString','_connecting','%c\\x20Console\\x20Ninja\\x20extension\\x20is\\x20connected\\x20to\\x20','toUpperCase','unknown','ws://','logger\\x20failed\\x20to\\x20connect\\x20to\\x20host,\\x20see\\x20','_getOwnPropertyDescriptor','env','',\"c:\\\\Users\\\\sheerwoodc\\\\.vscode\\\\extensions\\\\wallabyjs.console-ninja-1.0.363\\\\node_modules\",'then','_setNodePermissions','depth','coverage','level','_p_name','_WebSocketClass','sortProps','_p_','date','symbol','_processTreeNodeResult','Map','slice','_socket','_isArray'];_0x4842=function(){return _0x55a193;};return _0x4842();}function B(_0x2e36ea){var _0x5eab18=_0xfe5e44,_0x57ceac,_0x1cd3ff;let _0x174e43=function(_0x2d5214,_0x4d7e82){return _0x4d7e82-_0x2d5214;},_0x355dd9;if(_0x2e36ea[_0x5eab18(0x1ff)])_0x355dd9=function(){return _0x2e36ea['performance']['now']();};else{if(_0x2e36ea[_0x5eab18(0x206)]&&_0x2e36ea[_0x5eab18(0x206)][_0x5eab18(0x219)]&&((_0x1cd3ff=(_0x57ceac=_0x2e36ea['process'])==null?void 0x0:_0x57ceac[_0x5eab18(0x1cc)])==null?void 0x0:_0x1cd3ff[_0x5eab18(0x1c3)])!==_0x5eab18(0x1fd))_0x355dd9=function(){var _0x2a5b23=_0x5eab18;return _0x2e36ea[_0x2a5b23(0x206)]['hrtime']();},_0x174e43=function(_0x37a19c,_0x13b965){return 0x3e8*(_0x13b965[0x0]-_0x37a19c[0x0])+(_0x13b965[0x1]-_0x37a19c[0x1])/0xf4240;};else try{let {performance:_0x2474a0}=require(_0x5eab18(0x290));_0x355dd9=function(){var _0x50de9c=_0x5eab18;return _0x2474a0[_0x50de9c(0x249)]();};}catch{_0x355dd9=function(){return+new Date();};}}return{'elapsed':_0x174e43,'timeStamp':_0x355dd9,'now':()=>Date['now']()};}function _0x2800(_0x20c316,_0x27e44d){var _0x4842d5=_0x4842();return _0x2800=function(_0x280079,_0x2b136d){_0x280079=_0x280079-0x1a1;var _0xf6dce9=_0x4842d5[_0x280079];return _0xf6dce9;},_0x2800(_0x20c316,_0x27e44d);}function H(_0x5f046d,_0xbfea67,_0x4c9847){var _0x42332c=_0xfe5e44,_0x4536df,_0x3e591b,_0x1c02fd,_0x5661b7,_0xda7882;if(_0x5f046d['_consoleNinjaAllowedToStart']!==void 0x0)return _0x5f046d[_0x42332c(0x220)];let _0x152a42=((_0x3e591b=(_0x4536df=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x4536df['versions'])==null?void 0x0:_0x3e591b[_0x42332c(0x28c)])||((_0x5661b7=(_0x1c02fd=_0x5f046d[_0x42332c(0x206)])==null?void 0x0:_0x1c02fd[_0x42332c(0x1cc)])==null?void 0x0:_0x5661b7[_0x42332c(0x1c3)])===_0x42332c(0x1fd);function _0x412595(_0x5027d4){var _0x5782b1=_0x42332c;if(_0x5027d4['startsWith']('/')&&_0x5027d4[_0x5782b1(0x295)]('/')){let _0x558f03=new RegExp(_0x5027d4[_0x5782b1(0x1dc)](0x1,-0x1));return _0x3d0d65=>_0x558f03['test'](_0x3d0d65);}else{if(_0x5027d4['includes']('*')||_0x5027d4[_0x5782b1(0x296)]('?')){let _0x51bebf=new RegExp('^'+_0x5027d4[_0x5782b1(0x27e)](/\\./g,String[_0x5782b1(0x218)](0x5c)+'.')[_0x5782b1(0x27e)](/\\*/g,'.*')[_0x5782b1(0x27e)](/\\?/g,'.')+String['fromCharCode'](0x24));return _0x24f699=>_0x51bebf[_0x5782b1(0x20b)](_0x24f699);}else return _0x207603=>_0x207603===_0x5027d4;}}let _0x275cea=_0xbfea67[_0x42332c(0x257)](_0x412595);return _0x5f046d[_0x42332c(0x220)]=_0x152a42||!_0xbfea67,!_0x5f046d[_0x42332c(0x220)]&&((_0xda7882=_0x5f046d[_0x42332c(0x1f7)])==null?void 0x0:_0xda7882['hostname'])&&(_0x5f046d[_0x42332c(0x220)]=_0x275cea['some'](_0x55b435=>_0x55b435(_0x5f046d['location']['hostname']))),_0x5f046d[_0x42332c(0x220)];}function X(_0x2f1a70,_0x5be072,_0x39be01,_0x5a5745){var _0x1ae9de=_0xfe5e44;_0x2f1a70=_0x2f1a70,_0x5be072=_0x5be072,_0x39be01=_0x39be01,_0x5a5745=_0x5a5745;let _0x45ad24=B(_0x2f1a70),_0x34913b=_0x45ad24[_0x1ae9de(0x1b1)],_0x5f4254=_0x45ad24[_0x1ae9de(0x212)];class _0x39aee3{constructor(){var _0x209462=_0x1ae9de;this[_0x209462(0x1c0)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/,this[_0x209462(0x1fa)]=/^(0|[1-9][0-9]*)$/,this[_0x209462(0x1bb)]=/'([^\\\\']|\\\\')*'/,this[_0x209462(0x27b)]=_0x2f1a70[_0x209462(0x20f)],this['_HTMLAllCollection']=_0x2f1a70[_0x209462(0x239)],this[_0x209462(0x1cb)]=Object[_0x209462(0x256)],this[_0x209462(0x202)]=Object[_0x209462(0x289)],this[_0x209462(0x1b5)]=_0x2f1a70[_0x209462(0x1e0)],this['_regExpToString']=RegExp['prototype'][_0x209462(0x232)],this['_dateToString']=Date[_0x209462(0x28d)][_0x209462(0x232)];}[_0x1ae9de(0x23d)](_0x24b7f3,_0x296f73,_0x46653d,_0x5bf9fd){var _0xda21b4=_0x1ae9de,_0x2a2fd0=this,_0x4dd6b0=_0x46653d[_0xda21b4(0x22c)];function _0x131eb6(_0x24c1df,_0x28bf57,_0x408d48){var _0x479131=_0xda21b4;_0x28bf57[_0x479131(0x228)]='unknown',_0x28bf57['error']=_0x24c1df[_0x479131(0x222)],_0x1f0d56=_0x408d48[_0x479131(0x28c)][_0x479131(0x265)],_0x408d48[_0x479131(0x28c)][_0x479131(0x265)]=_0x28bf57,_0x2a2fd0[_0x479131(0x231)](_0x28bf57,_0x408d48);}try{_0x46653d['level']++,_0x46653d['autoExpand']&&_0x46653d['autoExpandPreviousObjects'][_0xda21b4(0x204)](_0x296f73);var _0x1e2094,_0x16aefa,_0x542566,_0x42e28b,_0xce7f95=[],_0xe6f1c3=[],_0xf17c29,_0x207db8=this[_0xda21b4(0x276)](_0x296f73),_0x277de6=_0x207db8==='array',_0x5c426c=!0x1,_0x66fe1b=_0x207db8===_0xda21b4(0x254),_0xca6e64=this[_0xda21b4(0x22f)](_0x207db8),_0x2c405a=this[_0xda21b4(0x292)](_0x207db8),_0x4f5d62=_0xca6e64||_0x2c405a,_0x6961d3={},_0x1bc657=0x0,_0x201335=!0x1,_0x1f0d56,_0x46ae26=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x46653d[_0xda21b4(0x1d1)]){if(_0x277de6){if(_0x16aefa=_0x296f73[_0xda21b4(0x24d)],_0x16aefa>_0x46653d[_0xda21b4(0x22d)]){for(_0x542566=0x0,_0x42e28b=_0x46653d[_0xda21b4(0x22d)],_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0['_addProperty'](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));_0x24b7f3[_0xda21b4(0x25a)]=!0x0;}else{for(_0x542566=0x0,_0x42e28b=_0x16aefa,_0x1e2094=_0x542566;_0x1e2094<_0x42e28b;_0x1e2094++)_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1b8)](_0xce7f95,_0x296f73,_0x207db8,_0x1e2094,_0x46653d));}_0x46653d['autoExpandPropertyCount']+=_0xe6f1c3[_0xda21b4(0x24d)];}if(!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&!_0xca6e64&&_0x207db8!==_0xda21b4(0x293)&&_0x207db8!==_0xda21b4(0x25b)&&_0x207db8!==_0xda21b4(0x269)){var _0x56b380=_0x5bf9fd[_0xda21b4(0x1e9)]||_0x46653d[_0xda21b4(0x1e9)];if(this['_isSet'](_0x296f73)?(_0x1e2094=0x0,_0x296f73[_0xda21b4(0x258)](function(_0x365782){var _0x20415e=_0xda21b4;if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d['isExpressionToEvaluate']&&_0x46653d['autoExpand']&&_0x46653d[_0x20415e(0x25f)]>_0x46653d[_0x20415e(0x241)]){_0x201335=!0x0;return;}_0xe6f1c3['push'](_0x2a2fd0[_0x20415e(0x1b8)](_0xce7f95,_0x296f73,'Set',_0x1e2094++,_0x46653d,function(_0x464074){return function(){return _0x464074;};}(_0x365782)));})):this[_0xda21b4(0x283)](_0x296f73)&&_0x296f73[_0xda21b4(0x258)](function(_0x378430,_0x28b1c6){var _0x29ac38=_0xda21b4;if(_0x1bc657++,_0x46653d[_0x29ac38(0x25f)]++,_0x1bc657>_0x56b380){_0x201335=!0x0;return;}if(!_0x46653d[_0x29ac38(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0x29ac38(0x25f)]>_0x46653d[_0x29ac38(0x241)]){_0x201335=!0x0;return;}var _0x39ddf3=_0x28b1c6['toString']();_0x39ddf3[_0x29ac38(0x24d)]>0x64&&(_0x39ddf3=_0x39ddf3[_0x29ac38(0x1dc)](0x0,0x64)+_0x29ac38(0x1ed)),_0xe6f1c3[_0x29ac38(0x204)](_0x2a2fd0[_0x29ac38(0x1b8)](_0xce7f95,_0x296f73,_0x29ac38(0x1db),_0x39ddf3,_0x46653d,function(_0x46bd7a){return function(){return _0x46bd7a;};}(_0x378430)));}),!_0x5c426c){try{for(_0xf17c29 in _0x296f73)if(!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29))&&!this['_blacklistedProperty'](_0x296f73,_0xf17c29,_0x46653d)){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d['autoExpand']&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d[_0xda21b4(0x241)]){_0x201335=!0x0;break;}_0xe6f1c3[_0xda21b4(0x204)](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}catch{}if(_0x6961d3[_0xda21b4(0x1ac)]=!0x0,_0x66fe1b&&(_0x6961d3[_0xda21b4(0x1d4)]=!0x0),!_0x201335){var _0x2658ba=[][_0xda21b4(0x224)](this[_0xda21b4(0x202)](_0x296f73))[_0xda21b4(0x224)](this[_0xda21b4(0x1e6)](_0x296f73));for(_0x1e2094=0x0,_0x16aefa=_0x2658ba[_0xda21b4(0x24d)];_0x1e2094<_0x16aefa;_0x1e2094++)if(_0xf17c29=_0x2658ba[_0x1e2094],!(_0x277de6&&_0x46ae26[_0xda21b4(0x20b)](_0xf17c29[_0xda21b4(0x232)]()))&&!this[_0xda21b4(0x1b0)](_0x296f73,_0xf17c29,_0x46653d)&&!_0x6961d3[_0xda21b4(0x1d7)+_0xf17c29[_0xda21b4(0x232)]()]){if(_0x1bc657++,_0x46653d['autoExpandPropertyCount']++,_0x1bc657>_0x56b380){_0x201335=!0x0;break;}if(!_0x46653d[_0xda21b4(0x21e)]&&_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x25f)]>_0x46653d['autoExpandLimit']){_0x201335=!0x0;break;}_0xe6f1c3['push'](_0x2a2fd0[_0xda21b4(0x1fe)](_0xce7f95,_0x6961d3,_0x296f73,_0x207db8,_0xf17c29,_0x46653d));}}}}}if(_0x24b7f3[_0xda21b4(0x228)]=_0x207db8,_0x4f5d62?(_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73['valueOf'](),this['_capIfString'](_0x207db8,_0x24b7f3,_0x46653d,_0x5bf9fd)):_0x207db8==='date'?_0x24b7f3[_0xda21b4(0x1f4)]=this['_dateToString'][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x269)?_0x24b7f3[_0xda21b4(0x1f4)]=_0x296f73[_0xda21b4(0x232)]():_0x207db8==='RegExp'?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x207)][_0xda21b4(0x273)](_0x296f73):_0x207db8===_0xda21b4(0x1d9)&&this[_0xda21b4(0x1b5)]?_0x24b7f3[_0xda21b4(0x1f4)]=this[_0xda21b4(0x1b5)][_0xda21b4(0x28d)][_0xda21b4(0x232)][_0xda21b4(0x273)](_0x296f73):!_0x46653d[_0xda21b4(0x1d1)]&&!(_0x207db8===_0xda21b4(0x217)||_0x207db8===_0xda21b4(0x20f))&&(delete _0x24b7f3[_0xda21b4(0x1f4)],_0x24b7f3[_0xda21b4(0x210)]=!0x0),_0x201335&&(_0x24b7f3[_0xda21b4(0x214)]=!0x0),_0x1f0d56=_0x46653d['node'][_0xda21b4(0x265)],_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x24b7f3,this[_0xda21b4(0x231)](_0x24b7f3,_0x46653d),_0xe6f1c3[_0xda21b4(0x24d)]){for(_0x1e2094=0x0,_0x16aefa=_0xe6f1c3['length'];_0x1e2094<_0x16aefa;_0x1e2094++)_0xe6f1c3[_0x1e2094](_0x1e2094);}_0xce7f95[_0xda21b4(0x24d)]&&(_0x24b7f3[_0xda21b4(0x1e9)]=_0xce7f95);}catch(_0x38ef6d){_0x131eb6(_0x38ef6d,_0x24b7f3,_0x46653d);}return this[_0xda21b4(0x236)](_0x296f73,_0x24b7f3),this[_0xda21b4(0x238)](_0x24b7f3,_0x46653d),_0x46653d[_0xda21b4(0x28c)][_0xda21b4(0x265)]=_0x1f0d56,_0x46653d[_0xda21b4(0x1d3)]--,_0x46653d[_0xda21b4(0x22c)]=_0x4dd6b0,_0x46653d[_0xda21b4(0x22c)]&&_0x46653d[_0xda21b4(0x22e)][_0xda21b4(0x229)](),_0x24b7f3;}[_0x1ae9de(0x1e6)](_0xb74ebd){var _0x1753d6=_0x1ae9de;return Object[_0x1753d6(0x1f5)]?Object[_0x1753d6(0x1f5)](_0xb74ebd):[];}[_0x1ae9de(0x287)](_0x28d2ef){var _0x33e17f=_0x1ae9de;return!!(_0x28d2ef&&_0x2f1a70[_0x33e17f(0x1f8)]&&this[_0x33e17f(0x21a)](_0x28d2ef)===_0x33e17f(0x242)&&_0x28d2ef[_0x33e17f(0x258)]);}[_0x1ae9de(0x1b0)](_0x329b1b,_0x42292a,_0x37ab2c){var _0x453ac9=_0x1ae9de;return _0x37ab2c[_0x453ac9(0x1b6)]?typeof _0x329b1b[_0x42292a]=='function':!0x1;}[_0x1ae9de(0x276)](_0x22f058){var _0x241b7a=_0x1ae9de,_0x3d4e65='';return _0x3d4e65=typeof _0x22f058,_0x3d4e65==='object'?this['_objectToString'](_0x22f058)==='[object\\x20Array]'?_0x3d4e65='array':this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x243)?_0x3d4e65=_0x241b7a(0x1d8):this[_0x241b7a(0x21a)](_0x22f058)===_0x241b7a(0x235)?_0x3d4e65=_0x241b7a(0x269):_0x22f058===null?_0x3d4e65=_0x241b7a(0x217):_0x22f058[_0x241b7a(0x216)]&&(_0x3d4e65=_0x22f058[_0x241b7a(0x216)][_0x241b7a(0x21b)]||_0x3d4e65):_0x3d4e65===_0x241b7a(0x20f)&&this['_HTMLAllCollection']&&_0x22f058 instanceof this[_0x241b7a(0x285)]&&(_0x3d4e65=_0x241b7a(0x239)),_0x3d4e65;}[_0x1ae9de(0x21a)](_0x1de872){var _0x3570e9=_0x1ae9de;return Object[_0x3570e9(0x28d)][_0x3570e9(0x232)][_0x3570e9(0x273)](_0x1de872);}[_0x1ae9de(0x22f)](_0x42b981){var _0x1b4389=_0x1ae9de;return _0x42b981==='boolean'||_0x42b981==='string'||_0x42b981===_0x1b4389(0x1f0);}['_isPrimitiveWrapperType'](_0x57d12a){var _0x51fa40=_0x1ae9de;return _0x57d12a==='Boolean'||_0x57d12a==='String'||_0x57d12a===_0x51fa40(0x225);}[_0x1ae9de(0x1b8)](_0x3de90e,_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85){var _0x279d30=this;return function(_0x56c688){var _0x31cb49=_0x2800,_0x64fca0=_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x265)],_0x189cd8=_0x5bf061['node'][_0x31cb49(0x25d)],_0x5ea25f=_0x5bf061[_0x31cb49(0x28c)]['parent'];_0x5bf061['node'][_0x31cb49(0x23b)]=_0x64fca0,_0x5bf061['node'][_0x31cb49(0x25d)]=typeof _0x22b26e==_0x31cb49(0x1f0)?_0x22b26e:_0x56c688,_0x3de90e[_0x31cb49(0x204)](_0x279d30[_0x31cb49(0x25c)](_0x14b82f,_0x15885f,_0x22b26e,_0x5bf061,_0x2bae85)),_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x23b)]=_0x5ea25f,_0x5bf061[_0x31cb49(0x28c)][_0x31cb49(0x25d)]=_0x189cd8;};}['_addObjectProperty'](_0x8f1714,_0x46c19e,_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881){var _0x557444=_0x1ae9de,_0x58766c=this;return _0x46c19e[_0x557444(0x1d7)+_0x3c5712['toString']()]=!0x0,function(_0x494a74){var _0x3c739b=_0x557444,_0x38c099=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x265)],_0xea8865=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)],_0x1da583=_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)];_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x38c099,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0x494a74,_0x8f1714[_0x3c739b(0x204)](_0x58766c[_0x3c739b(0x25c)](_0x308793,_0x53bf13,_0x3c5712,_0x3eb7db,_0x4dd881)),_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x23b)]=_0x1da583,_0x3eb7db[_0x3c739b(0x28c)][_0x3c739b(0x25d)]=_0xea8865;};}[_0x1ae9de(0x25c)](_0xa26af7,_0xd1783c,_0x4c3410,_0xa3bf2,_0x9fad98){var _0xa63a4b=_0x1ae9de,_0x36eca9=this;_0x9fad98||(_0x9fad98=function(_0x4958a8,_0x41ca28){return _0x4958a8[_0x41ca28];});var _0x29cbb9=_0x4c3410[_0xa63a4b(0x232)](),_0x5cfb46=_0xa3bf2[_0xa63a4b(0x277)]||{},_0x445183=_0xa3bf2[_0xa63a4b(0x1d1)],_0x316f50=_0xa3bf2['isExpressionToEvaluate'];try{var _0x141d25=this['_isMap'](_0xa26af7),_0xfd5f67=_0x29cbb9;_0x141d25&&_0xfd5f67[0x0]==='\\x27'&&(_0xfd5f67=_0xfd5f67[_0xa63a4b(0x1a9)](0x1,_0xfd5f67[_0xa63a4b(0x24d)]-0x2));var _0x4fdb4d=_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46[_0xa63a4b(0x1d7)+_0xfd5f67];_0x4fdb4d&&(_0xa3bf2[_0xa63a4b(0x1d1)]=_0xa3bf2[_0xa63a4b(0x1d1)]+0x1),_0xa3bf2[_0xa63a4b(0x21e)]=!!_0x4fdb4d;var _0x475157=typeof _0x4c3410=='symbol',_0x29d85c={'name':_0x475157||_0x141d25?_0x29cbb9:this['_propertyName'](_0x29cbb9)};if(_0x475157&&(_0x29d85c[_0xa63a4b(0x1d9)]=!0x0),!(_0xd1783c===_0xa63a4b(0x24f)||_0xd1783c===_0xa63a4b(0x24e))){var _0x260b73=this[_0xa63a4b(0x1cb)](_0xa26af7,_0x4c3410);if(_0x260b73&&(_0x260b73[_0xa63a4b(0x205)]&&(_0x29d85c[_0xa63a4b(0x1a5)]=!0x0),_0x260b73[_0xa63a4b(0x1fb)]&&!_0x4fdb4d&&!_0xa3bf2[_0xa63a4b(0x1be)]))return _0x29d85c['getter']=!0x0,this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x194fa5;try{_0x194fa5=_0x9fad98(_0xa26af7,_0x4c3410);}catch(_0x2c3142){return _0x29d85c={'name':_0x29cbb9,'type':_0xa63a4b(0x1c8),'error':_0x2c3142[_0xa63a4b(0x222)]},this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2),_0x29d85c;}var _0x50852a=this[_0xa63a4b(0x276)](_0x194fa5),_0x3ab79e=this[_0xa63a4b(0x22f)](_0x50852a);if(_0x29d85c[_0xa63a4b(0x228)]=_0x50852a,_0x3ab79e)this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x30a33f=_0xa63a4b;_0x29d85c[_0x30a33f(0x1f4)]=_0x194fa5['valueOf'](),!_0x4fdb4d&&_0x36eca9[_0x30a33f(0x1c4)](_0x50852a,_0x29d85c,_0xa3bf2,{});});else{var _0x2eb8d1=_0xa3bf2[_0xa63a4b(0x22c)]&&_0xa3bf2[_0xa63a4b(0x1d3)]<_0xa3bf2['autoExpandMaxDepth']&&_0xa3bf2[_0xa63a4b(0x22e)]['indexOf'](_0x194fa5)<0x0&&_0x50852a!=='function'&&_0xa3bf2[_0xa63a4b(0x25f)]<_0xa3bf2['autoExpandLimit'];_0x2eb8d1||_0xa3bf2[_0xa63a4b(0x1d3)]<_0x445183||_0x4fdb4d?(this['serialize'](_0x29d85c,_0x194fa5,_0xa3bf2,_0x4fdb4d||{}),this[_0xa63a4b(0x236)](_0x194fa5,_0x29d85c)):this[_0xa63a4b(0x1da)](_0x29d85c,_0xa3bf2,_0x194fa5,function(){var _0x1ac2f4=_0xa63a4b;_0x50852a===_0x1ac2f4(0x217)||_0x50852a==='undefined'||(delete _0x29d85c['value'],_0x29d85c[_0x1ac2f4(0x210)]=!0x0);});}return _0x29d85c;}finally{_0xa3bf2[_0xa63a4b(0x277)]=_0x5cfb46,_0xa3bf2['depth']=_0x445183,_0xa3bf2[_0xa63a4b(0x21e)]=_0x316f50;}}['_capIfString'](_0x15a619,_0x2e9551,_0x2d0dc7,_0x3aa61d){var _0x1ccfd8=_0x1ae9de,_0x14e5ce=_0x3aa61d[_0x1ccfd8(0x268)]||_0x2d0dc7[_0x1ccfd8(0x268)];if((_0x15a619===_0x1ccfd8(0x282)||_0x15a619===_0x1ccfd8(0x293))&&_0x2e9551['value']){let _0x381743=_0x2e9551[_0x1ccfd8(0x1f4)]['length'];_0x2d0dc7['allStrLength']+=_0x381743,_0x2d0dc7['allStrLength']>_0x2d0dc7['totalStrLength']?(_0x2e9551[_0x1ccfd8(0x210)]='',delete _0x2e9551[_0x1ccfd8(0x1f4)]):_0x381743>_0x14e5ce&&(_0x2e9551[_0x1ccfd8(0x210)]=_0x2e9551[_0x1ccfd8(0x1f4)]['substr'](0x0,_0x14e5ce),delete _0x2e9551['value']);}}[_0x1ae9de(0x283)](_0x11ab3e){var _0x455bcd=_0x1ae9de;return!!(_0x11ab3e&&_0x2f1a70['Map']&&this[_0x455bcd(0x21a)](_0x11ab3e)===_0x455bcd(0x20e)&&_0x11ab3e[_0x455bcd(0x258)]);}[_0x1ae9de(0x213)](_0x59761d){var _0x205d94=_0x1ae9de;if(_0x59761d[_0x205d94(0x26a)](/^\\d+$/))return _0x59761d;var _0x283bad;try{_0x283bad=JSON[_0x205d94(0x1c2)](''+_0x59761d);}catch{_0x283bad='\\x22'+this[_0x205d94(0x21a)](_0x59761d)+'\\x22';}return _0x283bad['match'](/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?_0x283bad=_0x283bad[_0x205d94(0x1a9)](0x1,_0x283bad[_0x205d94(0x24d)]-0x2):_0x283bad=_0x283bad[_0x205d94(0x27e)](/'/g,'\\x5c\\x27')[_0x205d94(0x27e)](/\\\\\"/g,'\\x22')[_0x205d94(0x27e)](/(^\"|\"$)/g,'\\x27'),_0x283bad;}[_0x1ae9de(0x1da)](_0x55bb11,_0x1b3795,_0x48f261,_0x3e21aa){var _0x571adc=_0x1ae9de;this[_0x571adc(0x231)](_0x55bb11,_0x1b3795),_0x3e21aa&&_0x3e21aa(),this['_additionalMetadata'](_0x48f261,_0x55bb11),this[_0x571adc(0x238)](_0x55bb11,_0x1b3795);}[_0x1ae9de(0x231)](_0xe082ed,_0x50b700){var _0x489d9f=_0x1ae9de;this['_setNodeId'](_0xe082ed,_0x50b700),this[_0x489d9f(0x1c1)](_0xe082ed,_0x50b700),this['_setNodeExpressionPath'](_0xe082ed,_0x50b700),this['_setNodePermissions'](_0xe082ed,_0x50b700);}['_setNodeId'](_0x56e200,_0x453198){}['_setNodeQueryPath'](_0x40a95f,_0x1f617a){}[_0x1ae9de(0x20a)](_0x295c6a,_0x297bb4){}[_0x1ae9de(0x1ef)](_0x3f6925){return _0x3f6925===this['_undefined'];}[_0x1ae9de(0x238)](_0x215840,_0x2292fd){var _0x544c37=_0x1ae9de;this[_0x544c37(0x20a)](_0x215840,_0x2292fd),this['_setNodeExpandableState'](_0x215840),_0x2292fd[_0x544c37(0x1d6)]&&this['_sortProps'](_0x215840),this[_0x544c37(0x1af)](_0x215840,_0x2292fd),this[_0x544c37(0x271)](_0x215840,_0x2292fd),this[_0x544c37(0x253)](_0x215840);}[_0x1ae9de(0x236)](_0x90e37d,_0x2905ac){var _0x245bf4=_0x1ae9de;let _0x404a53;try{_0x2f1a70[_0x245bf4(0x227)]&&(_0x404a53=_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)],_0x2f1a70[_0x245bf4(0x227)][_0x245bf4(0x22a)]=function(){}),_0x90e37d&&typeof _0x90e37d[_0x245bf4(0x24d)]==_0x245bf4(0x1f0)&&(_0x2905ac[_0x245bf4(0x24d)]=_0x90e37d[_0x245bf4(0x24d)]);}catch{}finally{_0x404a53&&(_0x2f1a70['console'][_0x245bf4(0x22a)]=_0x404a53);}if(_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x1f0)||_0x2905ac[_0x245bf4(0x228)]===_0x245bf4(0x225)){if(isNaN(_0x2905ac[_0x245bf4(0x1f4)]))_0x2905ac['nan']=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];else switch(_0x2905ac[_0x245bf4(0x1f4)]){case Number[_0x245bf4(0x279)]:_0x2905ac[_0x245bf4(0x223)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case Number[_0x245bf4(0x261)]:_0x2905ac[_0x245bf4(0x215)]=!0x0,delete _0x2905ac[_0x245bf4(0x1f4)];break;case 0x0:this['_isNegativeZero'](_0x2905ac['value'])&&(_0x2905ac['negativeZero']=!0x0);break;}}else _0x2905ac['type']==='function'&&typeof _0x90e37d[_0x245bf4(0x21b)]==_0x245bf4(0x282)&&_0x90e37d[_0x245bf4(0x21b)]&&_0x2905ac['name']&&_0x90e37d[_0x245bf4(0x21b)]!==_0x2905ac[_0x245bf4(0x21b)]&&(_0x2905ac[_0x245bf4(0x267)]=_0x90e37d['name']);}[_0x1ae9de(0x23f)](_0x3603f9){return 0x1/_0x3603f9===Number['NEGATIVE_INFINITY'];}[_0x1ae9de(0x226)](_0x91135f){var _0x27bcc9=_0x1ae9de;!_0x91135f['props']||!_0x91135f['props'][_0x27bcc9(0x24d)]||_0x91135f[_0x27bcc9(0x228)]==='array'||_0x91135f[_0x27bcc9(0x228)]==='Map'||_0x91135f[_0x27bcc9(0x228)]===_0x27bcc9(0x1f8)||_0x91135f['props'][_0x27bcc9(0x1b2)](function(_0x2a2cdb,_0x49ee4b){var _0x5e76b3=_0x27bcc9,_0x19063e=_0x2a2cdb[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)](),_0x446003=_0x49ee4b[_0x5e76b3(0x21b)][_0x5e76b3(0x1a2)]();return _0x19063e<_0x446003?-0x1:_0x19063e>_0x446003?0x1:0x0;});}['_addFunctionsNode'](_0x2e8e4d,_0x199c30){var _0x3d3aa0=_0x1ae9de;if(!(_0x199c30[_0x3d3aa0(0x1b6)]||!_0x2e8e4d[_0x3d3aa0(0x1e9)]||!_0x2e8e4d['props']['length'])){for(var _0x435133=[],_0x2531e7=[],_0x4b5a61=0x0,_0x36d28b=_0x2e8e4d[_0x3d3aa0(0x1e9)]['length'];_0x4b5a61<_0x36d28b;_0x4b5a61++){var _0x10d795=_0x2e8e4d['props'][_0x4b5a61];_0x10d795[_0x3d3aa0(0x228)]===_0x3d3aa0(0x254)?_0x435133[_0x3d3aa0(0x204)](_0x10d795):_0x2531e7[_0x3d3aa0(0x204)](_0x10d795);}if(!(!_0x2531e7[_0x3d3aa0(0x24d)]||_0x435133['length']<=0x1)){_0x2e8e4d['props']=_0x2531e7;var _0x14dec4={'functionsNode':!0x0,'props':_0x435133};this[_0x3d3aa0(0x28e)](_0x14dec4,_0x199c30),this[_0x3d3aa0(0x20a)](_0x14dec4,_0x199c30),this['_setNodeExpandableState'](_0x14dec4),this['_setNodePermissions'](_0x14dec4,_0x199c30),_0x14dec4['id']+='\\x20f',_0x2e8e4d['props']['unshift'](_0x14dec4);}}}['_addLoadNode'](_0x4a8f7a,_0x346db0){}['_setNodeExpandableState'](_0x1c6fd1){}[_0x1ae9de(0x1de)](_0x1211e9){var _0x3903b5=_0x1ae9de;return Array[_0x3903b5(0x208)](_0x1211e9)||typeof _0x1211e9=='object'&&this[_0x3903b5(0x21a)](_0x1211e9)==='[object\\x20Array]';}[_0x1ae9de(0x1d0)](_0x311e8c,_0x69f8f0){}[_0x1ae9de(0x253)](_0x1fb5ad){var _0x4e516a=_0x1ae9de;delete _0x1fb5ad[_0x4e516a(0x1fc)],delete _0x1fb5ad['_hasSetOnItsPath'],delete _0x1fb5ad['_hasMapOnItsPath'];}['_setNodeExpressionPath'](_0x1f43f0,_0x5dc18c){}}let _0x44e097=new _0x39aee3(),_0x555933={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5ef4bb={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x47aee0(_0x5f519b,_0x36e1c2,_0x38a5b2,_0x245a33,_0x33842e,_0x47f99d){var _0x1b6dc9=_0x1ae9de;let _0x4e9097,_0x2d5f08;try{_0x2d5f08=_0x5f4254(),_0x4e9097=_0x39be01[_0x36e1c2],!_0x4e9097||_0x2d5f08-_0x4e9097['ts']>0x1f4&&_0x4e9097[_0x1b6dc9(0x1eb)]&&_0x4e9097[_0x1b6dc9(0x209)]/_0x4e9097[_0x1b6dc9(0x1eb)]<0x64?(_0x39be01[_0x36e1c2]=_0x4e9097={'count':0x0,'time':0x0,'ts':_0x2d5f08},_0x39be01[_0x1b6dc9(0x1a1)]={}):_0x2d5f08-_0x39be01[_0x1b6dc9(0x1a1)]['ts']>0x32&&_0x39be01[_0x1b6dc9(0x1a1)]['count']&&_0x39be01[_0x1b6dc9(0x1a1)]['time']/_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x1eb)]<0x64&&(_0x39be01[_0x1b6dc9(0x1a1)]={});let _0x321c5e=[],_0x103871=_0x4e9097['reduceLimits']||_0x39be01[_0x1b6dc9(0x1a1)]['reduceLimits']?_0x5ef4bb:_0x555933,_0x1e4aec=_0x11f00b=>{var _0x1d93c3=_0x1b6dc9;let _0x3970c5={};return _0x3970c5['props']=_0x11f00b[_0x1d93c3(0x1e9)],_0x3970c5[_0x1d93c3(0x22d)]=_0x11f00b[_0x1d93c3(0x22d)],_0x3970c5[_0x1d93c3(0x268)]=_0x11f00b[_0x1d93c3(0x268)],_0x3970c5[_0x1d93c3(0x1aa)]=_0x11f00b[_0x1d93c3(0x1aa)],_0x3970c5[_0x1d93c3(0x241)]=_0x11f00b['autoExpandLimit'],_0x3970c5[_0x1d93c3(0x1f1)]=_0x11f00b['autoExpandMaxDepth'],_0x3970c5[_0x1d93c3(0x1d6)]=!0x1,_0x3970c5['noFunctions']=!_0x5be072,_0x3970c5[_0x1d93c3(0x1d1)]=0x1,_0x3970c5[_0x1d93c3(0x1d3)]=0x0,_0x3970c5['expId']=_0x1d93c3(0x255),_0x3970c5['rootExpression']=_0x1d93c3(0x1ba),_0x3970c5[_0x1d93c3(0x22c)]=!0x0,_0x3970c5[_0x1d93c3(0x22e)]=[],_0x3970c5['autoExpandPropertyCount']=0x0,_0x3970c5[_0x1d93c3(0x1be)]=!0x0,_0x3970c5[_0x1d93c3(0x1e3)]=0x0,_0x3970c5[_0x1d93c3(0x28c)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x3970c5;};for(var _0x4e066e=0x0;_0x4e066e<_0x33842e[_0x1b6dc9(0x24d)];_0x4e066e++)_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'timeNode':_0x5f519b===_0x1b6dc9(0x209)||void 0x0},_0x33842e[_0x4e066e],_0x1e4aec(_0x103871),{}));if(_0x5f519b===_0x1b6dc9(0x1a3)||_0x5f519b===_0x1b6dc9(0x22a)){let _0x4223a0=Error['stackTraceLimit'];try{Error[_0x1b6dc9(0x278)]=0x1/0x0,_0x321c5e[_0x1b6dc9(0x204)](_0x44e097[_0x1b6dc9(0x23d)]({'stackNode':!0x0},new Error()[_0x1b6dc9(0x26b)],_0x1e4aec(_0x103871),{'strLength':0x1/0x0}));}finally{Error[_0x1b6dc9(0x278)]=_0x4223a0;}}return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':_0x321c5e,'id':_0x36e1c2,'context':_0x47f99d}]};}catch(_0x5b28ee){return{'method':_0x1b6dc9(0x230),'version':_0x5a5745,'args':[{'ts':_0x38a5b2,'session':_0x245a33,'args':[{'type':'unknown','error':_0x5b28ee&&_0x5b28ee[_0x1b6dc9(0x222)]}],'id':_0x36e1c2,'context':_0x47f99d}]};}finally{try{if(_0x4e9097&&_0x2d5f08){let _0x1d65c6=_0x5f4254();_0x4e9097['count']++,_0x4e9097[_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x4e9097['ts']=_0x1d65c6,_0x39be01[_0x1b6dc9(0x1a1)]['count']++,_0x39be01['hits'][_0x1b6dc9(0x209)]+=_0x34913b(_0x2d5f08,_0x1d65c6),_0x39be01['hits']['ts']=_0x1d65c6,(_0x4e9097[_0x1b6dc9(0x1eb)]>0x32||_0x4e9097[_0x1b6dc9(0x209)]>0x64)&&(_0x4e9097['reduceLimits']=!0x0),(_0x39be01['hits']['count']>0x3e8||_0x39be01[_0x1b6dc9(0x1a1)][_0x1b6dc9(0x209)]>0x12c)&&(_0x39be01['hits'][_0x1b6dc9(0x23a)]=!0x0);}}catch{}}}return _0x47aee0;}((_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x2de19f,_0x1e302a,_0x363b8d,_0xa0a303,_0x5e55f1,_0x306ab3)=>{var _0x313444=_0xfe5e44;if(_0x2abb00[_0x313444(0x24c)])return _0x2abb00[_0x313444(0x24c)];if(!H(_0x2abb00,_0x363b8d,_0x1722a1))return _0x2abb00[_0x313444(0x24c)]={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x2abb00[_0x313444(0x24c)];let _0x3b7d8d=B(_0x2abb00),_0x4d9f47=_0x3b7d8d[_0x313444(0x1b1)],_0xfc6f6c=_0x3b7d8d[_0x313444(0x212)],_0x175f2b=_0x3b7d8d[_0x313444(0x249)],_0x128725={'hits':{},'ts':{}},_0x42d6ce=X(_0x2abb00,_0xa0a303,_0x128725,_0x2de19f),_0x541b4e=_0x187c8d=>{_0x128725['ts'][_0x187c8d]=_0xfc6f6c();},_0x49ea08=(_0x2965f7,_0x54e0b4)=>{let _0xa3a7a1=_0x128725['ts'][_0x54e0b4];if(delete _0x128725['ts'][_0x54e0b4],_0xa3a7a1){let _0x3799a5=_0x4d9f47(_0xa3a7a1,_0xfc6f6c());_0x48a896(_0x42d6ce('time',_0x2965f7,_0x175f2b(),_0x1c96ca,[_0x3799a5],_0x54e0b4));}},_0x1ca95f=_0x556e2e=>{var _0x634c6d=_0x313444,_0x3a78f9;return _0x1722a1===_0x634c6d(0x237)&&_0x2abb00[_0x634c6d(0x1a7)]&&((_0x3a78f9=_0x556e2e==null?void 0x0:_0x556e2e[_0x634c6d(0x1f6)])==null?void 0x0:_0x3a78f9[_0x634c6d(0x24d)])&&(_0x556e2e['args'][0x0][_0x634c6d(0x1a7)]=_0x2abb00[_0x634c6d(0x1a7)]),_0x556e2e;};_0x2abb00[_0x313444(0x24c)]={'consoleLog':(_0x1d9044,_0x3da3ab)=>{var _0x578a1e=_0x313444;_0x2abb00[_0x578a1e(0x227)]['log'][_0x578a1e(0x21b)]!==_0x578a1e(0x27d)&&_0x48a896(_0x42d6ce('log',_0x1d9044,_0x175f2b(),_0x1c96ca,_0x3da3ab));},'consoleTrace':(_0x38468d,_0x50b548)=>{var _0x144123=_0x313444,_0x2c0a3b,_0x41bd30;_0x2abb00['console'][_0x144123(0x230)][_0x144123(0x21b)]!==_0x144123(0x27a)&&((_0x41bd30=(_0x2c0a3b=_0x2abb00[_0x144123(0x206)])==null?void 0x0:_0x2c0a3b[_0x144123(0x26f)])!=null&&_0x41bd30[_0x144123(0x28c)]&&(_0x2abb00[_0x144123(0x1e1)]=!0x0),_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x38468d,_0x175f2b(),_0x1c96ca,_0x50b548))));},'consoleError':(_0xe83c02,_0x52826e)=>{var _0x14dcca=_0x313444;_0x2abb00[_0x14dcca(0x1e1)]=!0x0,_0x48a896(_0x1ca95f(_0x42d6ce(_0x14dcca(0x22a),_0xe83c02,_0x175f2b(),_0x1c96ca,_0x52826e)));},'consoleTime':_0x5caf3f=>{_0x541b4e(_0x5caf3f);},'consoleTimeEnd':(_0x27d8c5,_0x417474)=>{_0x49ea08(_0x417474,_0x27d8c5);},'autoLog':(_0x85c6df,_0x7f39a2)=>{var _0x40bb49=_0x313444;_0x48a896(_0x42d6ce(_0x40bb49(0x230),_0x7f39a2,_0x175f2b(),_0x1c96ca,[_0x85c6df]));},'autoLogMany':(_0x5158c0,_0x7b99d2)=>{_0x48a896(_0x42d6ce('log',_0x5158c0,_0x175f2b(),_0x1c96ca,_0x7b99d2));},'autoTrace':(_0x1bc11d,_0x565cc9)=>{_0x48a896(_0x1ca95f(_0x42d6ce('trace',_0x565cc9,_0x175f2b(),_0x1c96ca,[_0x1bc11d])));},'autoTraceMany':(_0x352345,_0x4c7f95)=>{var _0x378e10=_0x313444;_0x48a896(_0x1ca95f(_0x42d6ce(_0x378e10(0x1a3),_0x352345,_0x175f2b(),_0x1c96ca,_0x4c7f95)));},'autoTime':(_0x5359fa,_0x25990a,_0x323d68)=>{_0x541b4e(_0x323d68);},'autoTimeEnd':(_0x5be9bc,_0x5dbe0a,_0xba445f)=>{_0x49ea08(_0x5dbe0a,_0xba445f);},'coverage':_0x27be41=>{var _0x20affe=_0x313444;_0x48a896({'method':_0x20affe(0x1d2),'version':_0x2de19f,'args':[{'id':_0x27be41}]});}};let _0x48a896=q(_0x2abb00,_0x741326,_0x268816,_0x831694,_0x1722a1,_0x5e55f1,_0x306ab3),_0x1c96ca=_0x2abb00['_console_ninja_session'];return _0x2abb00[_0x313444(0x24c)];})(globalThis,'127.0.0.1','60591',_0xfe5e44(0x1ce),'webpack',_0xfe5e44(0x26c),_0xfe5e44(0x286),_0xfe5e44(0x21c),_0xfe5e44(0x1cd),_0xfe5e44(0x275),_0xfe5e44(0x244));")}catch(e){}}function d(e,...t){try{r().consoleLog(e,t)}catch(e){}return t}function c(e,...t){try{r().consoleError(e,t)}catch(e){}return t}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,